;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2024 Hex-Rays, <support@hex-rays.com>           |
; |                            Freeware version                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : 89B5AA67DD921DA1FB437FC23EFE6F39B95CF48E1159C6C13C50C73AD3D1AD37
; Input MD5    : 834FA283D33FD57AD50C8252044A7E03
; Input CRC32  : BE181CAA
; Compiler     : Visual C++ (guessed)

; File Name   : C:\Users\kiennd19\Documents\code\devcore_learn\re\FileInfectingVirus\echo.exe
; Format      : Portable executable for AMD64 (PE)
; Imagebase   : 140000000
; Timestamp   : 67B5AA1B (Wed Feb 19 09:53:31 2025)
; Section 1. (virtual address 00001000)
; Virtual size                  : 0002B630 ( 177712.)
; Section size in file          : 0002B800 ( 178176.)
; Offset to raw data for section: 00000400
; Flags 60000020: Text Executable Readable
; Alignment     : default
; OS type         :  MS Windows
; Application type:  Executable

.686p
.mmx
.model flat


; Segment type: Pure code
; Segment permissions: Read/Execute
_text segment para public 'CODE' use64
assume cs:_text
;org 7FF6E3431000h
assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing



sub_7FF6E3431000 proc near
sub     rsp, 28h
xor     edx, edx
lea     rcx, unk_7FF6E346E278
call    unknown_libname_65 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
nop
add     rsp, 28h
retn
sub_7FF6E3431000 endp

algn_7FF6E3431018:
align 20h



sub_7FF6E3431020 proc near
sub     rsp, 28h
xor     edx, edx
lea     rcx, unk_7FF6E346E280
call    unknown_libname_65 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
nop
add     rsp, 28h
retn
sub_7FF6E3431020 endp




sub_7FF6E3431038 proc near
sub     rsp, 28h

loc_7FF6E343103C:       ; this
lea     rcx, unk_7FF6E346E2A0
call    ??0_Init_locks@std@@QEAA@XZ ; std::_Init_locks::_Init_locks(void)
lea     rcx, sub_7FF6E345C4D0 ; void (__cdecl *)()
add     rsp, 28h
jmp     atexit
sub_7FF6E3431038 endp

; [0000000C BYTES: COLLAPSED FUNCTION std::`dynamic initializer for 'classic_locale''(void)]



sub_7FF6E3431064 proc near
lea     rcx, unknown_libname_61 ; Microsoft VisualC v14 64bit runtime
jmp     atexit
sub_7FF6E3431064 endp




sub_7FF6E3431070 proc near
sub     rsp, 28h
mov     r9d, 1
lea     rdx, qword_7FF6E346E4E0
xor     r8d, r8d
lea     rcx, qword_7FF6E346E470
call    ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z ; std::ostream::ostream(std::streambuf *,bool)
lea     rcx, sub_7FF6E345C578 ; void (__cdecl *)()
add     rsp, 28h
jmp     atexit
sub_7FF6E3431070 endp

; [00000050 BYTES: COLLAPSED FUNCTION std::`dynamic initializer for 'fout''(void)]



sub_7FF6E34310F0 proc near
mov     rdx, cs:qword_7FF6E346E5A0
lea     r8, qword_7FF6E346E470
mov     cs:qword_7FF6E346E5A8, r8
test    rdx, rdx
jz      short loc_7FF6E343111D
mov     rax, [rdx]
movsxd  rcx, dword ptr [rax+4]
mov     [rcx+rdx+50h], r8
mov     r8, cs:qword_7FF6E346E5A8

loc_7FF6E343111D:
mov     rdx, cs:qword_7FF6E346E5B0
test    rdx, rdx
jz      short locret_7FF6E3431135
mov     rax, [rdx]
movsxd  rcx, dword ptr [rax+4]
mov     [rcx+rdx+50h], r8

locret_7FF6E3431135:
retn
sub_7FF6E34310F0 endp

align 8



sub_7FF6E3431138 proc near
sub     rsp, 28h
lea     rcx, unk_7FF6E346E460 ; this
call    ??0_Init_locks@std@@QEAA@XZ ; std::_Init_locks::_Init_locks(void)
lea     rcx, sub_7FF6E345C5D8 ; void (__cdecl *)()
add     rsp, 28h
jmp     atexit
sub_7FF6E3431138 endp




sub_7FF6E3431158 proc near
sub     rsp, 28h
lea     rcx, unk_7FF6E346E5E0 ; this
call    ??0_Init_locks@std@@QEAA@XZ ; std::_Init_locks::_Init_locks(void)
lea     rcx, sub_7FF6E345C624 ; void (__cdecl *)()
add     rsp, 28h
jmp     atexit
sub_7FF6E3431158 endp




sub_7FF6E3431178 proc near
lea     rcx, unknown_libname_62 ; void (__cdecl *)()
jmp     atexit
sub_7FF6E3431178 endp

align 10h



; int __fastcall main(int argc, const char **argv, const char **envp)
main proc near

arg_0= dword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], ecx
sub     rsp, 28h
cmp     [rsp+28h+arg_0], 2
jge     short loc_7FF6E34311B5
xor     edx, edx
lea     rcx, qword_7FF6E346E470
call    sub_7FF6E34342D0
nop
jmp     short loc_7FF6E34311D4

loc_7FF6E34311B5:
mov     eax, 8
imul    rax, 1
mov     rcx, [rsp+28h+arg_8]
mov     rdx, [rcx+rax]
lea     rcx, qword_7FF6E346E470
call    sub_7FF6E34312C0
nop

loc_7FF6E34311D4:
xor     eax, eax
add     rsp, 28h
retn
main endp

algn_7FF6E34311DB:
align 20h



sub_7FF6E34311E0 proc near

arg_0= qword ptr  8
arg_8= byte ptr  10h

mov     [rsp+arg_8], dl
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    sub_7FF6E3432FF0
nop
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E34311E0 endp

algn_7FF6E343120F:
align 10h



sub_7FF6E3431210 proc near

arg_0= qword ptr  8
arg_8= byte ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], dl
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_10]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+28h+arg_0]
mov     rax, [rax]
mov     [rcx], rax
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3431210 endp

algn_7FF6E3431241:
align 10h
; [00000030 BYTES: COLLAPSED FUNCTION std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>(std::_Facet_base *)]



sub_7FF6E3431280 proc near

arg_0= qword ptr  8
arg_8= byte ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], dl
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_10]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    sub_7FF6E3432FF0
nop
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3431280 endp

algn_7FF6E34312B4:
align 20h



sub_7FF6E34312C0 proc near

var_48= dword ptr -48h
var_44= byte ptr -44h
var_43= byte ptr -43h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

; __unwind { // __CxxFrameHandler4
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 68h
mov     [rsp+68h+var_48], 0
mov     rcx, [rsp+68h+arg_8]
call    sub_7FF6E34380E0
mov     [rsp+68h+var_38], rax
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax        ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
test    rax, rax
jle     short loc_7FF6E343135A
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax        ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
cmp     rax, [rsp+68h+var_38]
jle     short loc_7FF6E343135A
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax        ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
sub     rax, [rsp+68h+var_38]
mov     [rsp+68h+var_28], rax
jmp     short loc_7FF6E3431363

loc_7FF6E343135A:
mov     [rsp+68h+var_28], 0

loc_7FF6E3431363:
mov     rax, [rsp+68h+var_28]
mov     [rsp+68h+var_40], rax
mov     rdx, [rsp+68h+arg_0]
lea     rcx, [rsp+68h+var_18]
call    sub_7FF6E3433B70
nop
lea     rcx, [rsp+68h+var_18]
call    ??B?$optional@_K@std@@QEBA_NXZ ; std::optional<unsigned __int64>::operator bool(void)
movzx   eax, al
test    eax, eax
jnz     short loc_7FF6E343139E
mov     eax, [rsp+68h+var_48]
or      eax, 4
mov     [rsp+68h+var_48], eax
jmp     loc_7FF6E343156E

loc_7FF6E343139E:
;   try {
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 1C0h
cmp     eax, 40h ; '@'
jz      loc_7FF6E3431460
jmp     short loc_7FF6E34313DA

loc_7FF6E34313CD:
mov     rax, [rsp+68h+var_40]
dec     rax
mov     [rsp+68h+var_40], rax

loc_7FF6E34313DA:
cmp     [rsp+68h+var_40], 0
jle     short loc_7FF6E3431460
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::ios::fill(void)
mov     [rsp+68h+var_44], al
mov     rcx, [rsp+68h+arg_0]
mov     rcx, [rcx]
movsxd  rcx, dword ptr [rcx+4]
mov     rdx, [rsp+68h+arg_0]
add     rdx, rcx
mov     rcx, rdx
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
movzx   ecx, [rsp+68h+var_44]
movzx   edx, cl
mov     rcx, rax
call    sub_7FF6E3438450
mov     [rsp+68h+var_30], eax
call    sub_7FF6E3437CE0
mov     ecx, [rsp+68h+var_30]
mov     edx, ecx

loc_7FF6E3431440:
mov     ecx, eax
call    ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type(int,int)
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E343145B
mov     eax, [rsp+68h+var_48]
or      eax, 4
mov     [rsp+68h+var_48], eax
jmp     short loc_7FF6E3431460

loc_7FF6E343145B:
jmp     loc_7FF6E34313CD

loc_7FF6E3431460:
cmp     [rsp+68h+var_48], 0
jnz     short loc_7FF6E34314AA
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
mov     r8, [rsp+68h+var_38]
mov     rdx, [rsp+68h+arg_8]
mov     rcx, rax
call    sub_7FF6E34384C0
cmp     rax, [rsp+68h+var_38]
jz      short loc_7FF6E34314AA
mov     eax, [rsp+68h+var_48]
or      eax, 4
mov     [rsp+68h+var_48], eax

loc_7FF6E34314AA:
cmp     [rsp+68h+var_48], 0
jnz     loc_7FF6E343154A
jmp     short loc_7FF6E34314C4

loc_7FF6E34314B7:
mov     rax, [rsp+68h+var_40]
dec     rax
mov     [rsp+68h+var_40], rax

loc_7FF6E34314C4:
cmp     [rsp+68h+var_40], 0
jle     short loc_7FF6E343154A
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::ios::fill(void)
mov     [rsp+68h+var_43], al
mov     rcx, [rsp+68h+arg_0]
mov     rcx, [rcx]
movsxd  rcx, dword ptr [rcx+4]
mov     rdx, [rsp+68h+arg_0]
add     rdx, rcx
mov     rcx, rdx
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
movzx   ecx, [rsp+68h+var_43]
movzx   edx, cl
mov     rcx, rax
call    sub_7FF6E3438450
mov     [rsp+68h+var_2C], eax
call    sub_7FF6E3437CE0
mov     ecx, [rsp+68h+var_2C]
mov     edx, ecx
mov     ecx, eax
call    ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type(int,int)
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E3431545
mov     eax, [rsp+68h+var_48]
or      eax, 4
mov     [rsp+68h+var_48], eax
jmp     short loc_7FF6E343154A

loc_7FF6E3431545:
jmp     loc_7FF6E34314B7

loc_7FF6E343154A:
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
xor     edx, edx        ; __int64
mov     rcx, rax        ; this
call    ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width(__int64)
nop
;   } // starts at 7FF6E343139E
jmp     short $+2

loc_7FF6E343156E:
mov     rax, [rsp+68h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+68h+arg_0]
add     rcx, rax
mov     rax, rcx
xor     r8d, r8d
mov     edx, [rsp+68h+var_48]
mov     rcx, rax
call    sub_7FF6E3438400
nop
mov     rax, [rsp+68h+arg_0]
mov     [rsp+68h+var_20], rax
lea     rcx, [rsp+68h+var_18]
call    sub_7FF6E3434160
mov     rax, [rsp+68h+var_20]
add     rsp, 68h
retn
; } // starts at 7FF6E34312C0
sub_7FF6E34312C0 endp

algn_7FF6E34315B3:
align 20h
; [0000000B BYTES: COLLAPSED FUNCTION __crt_win32_buffer_no_resizing::deallocate(void * const,__crt_win32_buffer_empty_debug_info const &)]
align 10h



sub_7FF6E34315D0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
cmp     [rsp+28h+arg_0], 0
jnz     short loc_7FF6E34315E5
xor     eax, eax
jmp     short loc_7FF6E3431606

loc_7FF6E34315E5:
cmp     [rsp+28h+arg_0], 1000h
jb      short loc_7FF6E34315FC
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E34316A0
jmp     short loc_7FF6E3431606

loc_7FF6E34315FC:
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3434C80

loc_7FF6E3431606:
add     rsp, 28h
retn
sub_7FF6E34315D0 endp

algn_7FF6E343160B:
align 10h
; [00000025 BYTES: COLLAPSED FUNCTION std::_Allocate_at_least_helper<std::allocator<char>>(std::allocator<char> &,unsigned __int64 &)]
algn_7FF6E3431635:
align 20h



sub_7FF6E3431640 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_8]
mov     rax, [rax]
inc     rax
mov     rcx, [rsp+38h+arg_8]
mov     [rcx], rax
mov     [rsp+38h+var_18], 0
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z ; std::_Allocate_at_least_helper<std::allocator<char>>(std::allocator<char> &,unsigned __int64 &)
mov     [rsp+38h+var_18], rax
mov     rax, [rsp+38h+arg_8]
mov     rax, [rax]
dec     rax
mov     rcx, [rsp+38h+arg_8]
mov     [rcx], rax
mov     rax, [rsp+38h+var_18]
add     rsp, 38h
retn
sub_7FF6E3431640 endp

algn_7FF6E343169B:
align 20h



sub_7FF6E34316A0 proc near

var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 48h
mov     rax, [rsp+48h+arg_0]
add     rax, 27h ; '''
mov     [rsp+48h+var_20], rax
mov     rax, [rsp+48h+arg_0]
cmp     [rsp+48h+var_20], rax
ja      short loc_7FF6E34316C9
call    sub_7FF6E3436490
db 90h

loc_7FF6E34316C9:
mov     rcx, [rsp+48h+var_20]
call    sub_7FF6E3434C80
mov     [rsp+48h+var_28], rax

loc_7FF6E34316D8:
cmp     [rsp+48h+var_28], 0
jz      short loc_7FF6E34316E2
jmp     short loc_7FF6E34316EE

loc_7FF6E34316E2:
call    _invalid_parameter_noinfo_noreturn
align 8
xor     eax, eax
test    eax, eax
jnz     short loc_7FF6E34316E2

loc_7FF6E34316EE:
xor     eax, eax
test    eax, eax
jnz     short loc_7FF6E34316D8
mov     rax, [rsp+48h+var_28]
add     rax, 27h ; '''
and     rax, 0FFFFFFFFFFFFFFE0h
mov     [rsp+48h+var_18], rax
mov     eax, 8
imul    rax, -1
mov     rcx, [rsp+48h+var_18]
mov     rdx, [rsp+48h+var_28]
mov     [rcx+rax], rdx
mov     rax, [rsp+48h+var_18]
add     rsp, 48h
retn
sub_7FF6E34316A0 endp

algn_7FF6E3431727:
align 10h
; [0000001E BYTES: COLLAPSED FUNCTION std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>(std::error_category::_Addr_storage const &)]
algn_7FF6E343174E:
align 10h



sub_7FF6E3431750 proc near

var_38= byte ptr -38h
var_37= byte ptr -37h
var_36= byte ptr -36h
var_30= qword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 58h
mov     rax, [rsp+58h+arg_0]
mov     [rsp+58h+var_30], rax
mov     rcx, [rsp+58h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
cmp     [rsp+58h+arg_10], rax
jbe     short loc_7FF6E3431784
call    sub_7FF6E3436680
align 4

loc_7FF6E3431784:
mov     rcx, [rsp+58h+arg_0]
call    sub_7FF6E34350B0
mov     [rsp+58h+var_10], rax
lea     rax, unk_7FF6E345D3E0
mov     [rsp+58h+var_18], rax
mov     r8, [rsp+58h+var_30] ; struct std::_Container_base0 *
mov     rdx, [rsp+58h+var_18] ; struct std::_Fake_allocator *
lea     rcx, [rsp+58h+var_38] ; this
call    ??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl(std::_Fake_allocator const &,std::_Container_base0 const &)
nop
cmp     [rsp+58h+arg_10], 0Fh
ja      short loc_7FF6E3431822
mov     rax, [rsp+58h+var_30]
mov     rcx, [rsp+58h+arg_10]
mov     [rax+10h], rcx
mov     rax, [rsp+58h+var_30]
mov     qword ptr [rax+18h], 0Fh
mov     rax, [rsp+58h+var_30]
mov     r8, [rsp+58h+arg_10]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
mov     [rsp+58h+var_37], 0
mov     rax, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+var_30]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+58h+var_37]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
lea     rcx, [rsp+58h+var_38]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop
jmp     loc_7FF6E34318CF

loc_7FF6E3431822:
mov     rcx, [rsp+58h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
mov     r8, rax
mov     edx, 0Fh
mov     rcx, [rsp+58h+arg_10]
call    ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::string::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64)
mov     [rsp+58h+var_20], rax
lea     rdx, [rsp+58h+var_20]
mov     rcx, [rsp+58h+var_10]
call    sub_7FF6E3431640
mov     [rsp+58h+var_28], rax
mov     rax, [rsp+58h+var_30]
lea     rdx, [rsp+58h+var_28]
mov     rcx, rax
call    sub_7FF6E3431BE0
mov     rax, [rsp+58h+var_30]
mov     rcx, [rsp+58h+arg_10]
mov     [rax+10h], rcx
mov     rax, [rsp+58h+var_30]
mov     rcx, [rsp+58h+var_20]
mov     [rax+18h], rcx
mov     rcx, [rsp+58h+var_28]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     r8, [rsp+58h+arg_10]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
mov     [rsp+58h+var_36], 0
mov     rcx, [rsp+58h+var_28]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
add     rax, [rsp+58h+arg_10]
lea     rdx, [rsp+58h+var_36]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
lea     rcx, [rsp+58h+var_38]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop

loc_7FF6E34318CF:
add     rsp, 58h
retn
sub_7FF6E3431750 endp

algn_7FF6E34318D4:
align 20h



sub_7FF6E34318E0 proc near

var_48= byte ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 68h
mov     rax, [rsp+68h+arg_0]
mov     [rsp+68h+var_40], rax
mov     rcx, [rsp+68h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
cmp     [rsp+68h+arg_10], rax
jbe     short loc_7FF6E3431917
call    sub_7FF6E3436680
db 90h

loc_7FF6E3431917:
mov     rcx, [rsp+68h+arg_0]
call    sub_7FF6E34350B0
mov     [rsp+68h+var_20], rax
lea     rax, unk_7FF6E345D3E0
mov     [rsp+68h+var_28], rax
mov     r8, [rsp+68h+var_40] ; struct std::_Container_base0 *
mov     rdx, [rsp+68h+var_28] ; struct std::_Fake_allocator *
lea     rcx, [rsp+68h+var_48] ; this
call    ??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z ; std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl(std::_Fake_allocator const &,std::_Container_base0 const &)
nop
cmp     [rsp+68h+arg_10], 0Fh
ja      short loc_7FF6E3431999
mov     rax, [rsp+68h+var_40]
mov     rcx, [rsp+68h+arg_10]
mov     [rax+10h], rcx
mov     rax, [rsp+68h+var_40]
mov     qword ptr [rax+18h], 0Fh
mov     rax, [rsp+68h+var_40]
mov     r8d, 10h
mov     rdx, [rsp+68h+arg_8]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
lea     rcx, [rsp+68h+var_48]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop
jmp     loc_7FF6E3431A3D

loc_7FF6E3431999:
mov     rcx, [rsp+68h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
mov     r8, rax
mov     edx, 0Fh
mov     rcx, [rsp+68h+arg_10]
call    ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::string::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64)
mov     [rsp+68h+var_38], rax
lea     rdx, [rsp+68h+var_38]
mov     rcx, [rsp+68h+var_20]
call    sub_7FF6E3431640
mov     [rsp+68h+var_30], rax
mov     rax, [rsp+68h+var_40]
lea     rdx, [rsp+68h+var_30]
mov     rcx, rax
call    sub_7FF6E3431BE0
mov     rax, [rsp+68h+var_40]
mov     rcx, [rsp+68h+arg_10]
mov     [rax+10h], rcx
mov     rax, [rsp+68h+var_40]
mov     rcx, [rsp+68h+var_38]
mov     [rax+18h], rcx
mov     rax, [rsp+68h+arg_10]
inc     rax
mov     [rsp+68h+var_18], rax
mov     rcx, [rsp+68h+var_30]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+68h+var_18]
mov     r8, rcx
mov     rdx, [rsp+68h+arg_8]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
lea     rcx, [rsp+68h+var_48]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop

loc_7FF6E3431A3D:
add     rsp, 68h
retn
sub_7FF6E34318E0 endp

algn_7FF6E3431A42:
align 10h
; [00000185 BYTES: COLLAPSED FUNCTION std::string::_Construct<0,char>(char,unsigned __int64)]
algn_7FF6E3431BD5:
align 20h



sub_7FF6E3431BE0 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rcx, [rsp+38h+arg_0]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rdx, rax
mov     ecx, 8
call    ??R_lambda_7224c10e0d9cf27ffd5accaa7469d6af_@@QEBA@_K@Z ; Microsoft VisualC v14 64bit runtime
mov     [rsp+38h+var_18], rax
mov     rcx, [rsp+38h+arg_8]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+38h+var_18]
mov     rax, [rax]
mov     [rcx], rax
add     rsp, 38h
retn
sub_7FF6E3431BE0 endp

algn_7FF6E3431C24:
align 10h
; [0000000B BYTES: COLLAPSED FUNCTION unknown_libname_64]
align 20h



sub_7FF6E3431C40 proc near

Block= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+Block], rcx
sub     rsp, 28h
cmp     [rsp+28h+arg_8], 1000h
jb      short loc_7FF6E3431C69
lea     rdx, [rsp+28h+arg_8]
lea     rcx, [rsp+28h+Block]
call    sub_7FF6E3434BE0
nop

loc_7FF6E3431C69:
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop
add     rsp, 28h
retn
sub_7FF6E3431C40 endp

algn_7FF6E3431C7E:
align 20h
; [00000006 BYTES: COLLAPSED FUNCTION _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)]
align 10h
; [00000097 BYTES: COLLAPSED FUNCTION unknown_libname_3]
algn_7FF6E3431D27:
align 10h



sub_7FF6E3431D30 proc near

var_1D8= qword ptr -1D8h
var_1C8= byte ptr -1C8h
var_1C7= byte ptr -1C7h
var_1C0= qword ptr -1C0h
var_1B8= word ptr -1B8h
var_1B4= dword ptr -1B4h
var_1B0= qword ptr -1B0h
var_1A8= qword ptr -1A8h
var_1A0= qword ptr -1A0h
var_198= qword ptr -198h
var_190= qword ptr -190h
var_188= qword ptr -188h
var_180= qword ptr -180h
var_178= qword ptr -178h
var_170= qword ptr -170h
var_168= qword ptr -168h
var_160= qword ptr -160h
var_158= byte ptr -158h
var_148= byte ptr -148h
var_138= byte ptr -138h
var_128= byte ptr -128h
var_118= byte ptr -118h
var_108= byte ptr -108h
var_F8= byte ptr -0F8h
var_E8= byte ptr -0E8h
var_D8= byte ptr -0D8h
var_C8= byte ptr -0C8h
var_B8= byte ptr -0B8h
var_A8= byte ptr -0A8h
var_98= byte ptr -98h
var_88= byte ptr -88h
var_78= byte ptr -78h
var_68= byte ptr -68h
var_48= byte ptr -48h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= qword ptr  30h
arg_30= qword ptr  38h
arg_38= byte ptr  40h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 1E8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+1F8h+var_28], rax
cmp     [rsp+1F8h+arg_30], 0
jbe     short loc_7FF6E3431D95
mov     rax, [rsp+1F8h+arg_28]
movsx   eax, byte ptr [rax]
cmp     eax, 2Bh ; '+'
jz      short loc_7FF6E3431D8A
mov     rax, [rsp+1F8h+arg_28]
movsx   eax, byte ptr [rax]
cmp     eax, 2Dh ; '-'
jnz     short loc_7FF6E3431D95

loc_7FF6E3431D8A:
mov     [rsp+1F8h+var_188], 1
jmp     short loc_7FF6E3431D9E

loc_7FF6E3431D95:
mov     [rsp+1F8h+var_188], 0

loc_7FF6E3431D9E:
mov     rax, [rsp+1F8h+var_188]
mov     [rsp+1F8h+var_1C0], rax
mov     rcx, [rsp+1F8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 3000h
cmp     eax, 3000h
jz      short loc_7FF6E3431DD2
lea     rax, aEe        ; "eE"
mov     [rsp+1F8h+var_180], rax
jmp     loc_7FF6E3431E52

loc_7FF6E3431DD2:
lea     rax, aPp        ; "pP"
mov     [rsp+1F8h+var_180], rax
mov     rax, [rsp+1F8h+var_1C0]
add     rax, 2
cmp     rax, [rsp+1F8h+arg_30]
ja      short loc_7FF6E3431E52
mov     rax, [rsp+1F8h+var_1C0]
mov     rcx, [rsp+1F8h+arg_28]
add     rcx, rax
mov     rax, rcx
movsx   eax, byte ptr [rax]
cmp     eax, 30h ; '0'
jnz     short loc_7FF6E3431E52
mov     rax, [rsp+1F8h+var_1C0]
mov     rcx, [rsp+1F8h+arg_28]
add     rcx, rax
mov     rax, rcx
movsx   eax, byte ptr [rax+1]
cmp     eax, 78h ; 'x'
jz      short loc_7FF6E3431E44
mov     rax, [rsp+1F8h+var_1C0]
mov     rcx, [rsp+1F8h+arg_28]
add     rcx, rax
mov     rax, rcx
movsx   eax, byte ptr [rax+1]
cmp     eax, 58h ; 'X'
jnz     short loc_7FF6E3431E52

loc_7FF6E3431E44:
mov     rax, [rsp+1F8h+var_1C0]
add     rax, 2
mov     [rsp+1F8h+var_1C0], rax

loc_7FF6E3431E52:
mov     eax, 1
imul    rax, 0
mov     rcx, [rsp+1F8h+arg_28]
add     rcx, rax
mov     rax, rcx
mov     rdx, [rsp+1F8h+var_180]
mov     rcx, rax
call    sub_7FF6E3443500
mov     [rsp+1F8h+var_168], rax
movzx   eax, cs:word_7FF6E345D770
mov     [rsp+1F8h+var_1B8], ax
call    localeconv
mov     ecx, 1
imul    rcx, 0
mov     rax, [rax]
mov     edx, 1
imul    rdx, 0
movzx   eax, byte ptr [rcx+rax]
mov     byte ptr [rsp+rdx+1F8h+var_1B8], al
mov     eax, 1
imul    rax, 0
lea     rax, [rsp+rax+1F8h+var_1B8]
mov     ecx, 1
imul    rcx, 0
mov     rdx, [rsp+1F8h+arg_28]
add     rdx, rcx
mov     rcx, rdx
mov     rdx, rax
call    sub_7FF6E3443500
mov     [rsp+1F8h+var_1A0], rax
lea     rdx, [rsp+1F8h+var_158]
mov     rcx, [rsp+1F8h+arg_18]
call    ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
mov     rcx, rax
call    sub_7FF6E3432CF0
mov     [rsp+1F8h+var_170], rax
lea     rcx, [rsp+1F8h+var_158]
call    sub_7FF6E34340F0
nop
xor     r8d, r8d
mov     rdx, [rsp+1F8h+arg_30]
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E3433240
xor     edx, edx
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E34345D0
mov     rcx, [rsp+1F8h+arg_30]
mov     rdx, [rsp+1F8h+arg_28]
add     rdx, rcx
mov     rcx, rdx
mov     r9, rax
mov     r8, rcx
mov     rdx, [rsp+1F8h+arg_28]
mov     rcx, [rsp+1F8h+var_170]
call    sub_7FF6E34385C0
nop
lea     rdx, [rsp+1F8h+var_148]
mov     rcx, [rsp+1F8h+arg_18]
call    ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
mov     rcx, rax
call    sub_7FF6E3432EF0
mov     [rsp+1F8h+var_190], rax
lea     rcx, [rsp+1F8h+var_148]
call    sub_7FF6E34340F0
nop
lea     rdx, [rsp+1F8h+var_48]
mov     rcx, [rsp+1F8h+var_190]
call    sub_7FF6E3437F70
mov     rcx, [rsp+1F8h+var_190]
call    sub_7FF6E3438500
mov     [rsp+1F8h+var_1C7], al
mov     rax, [rsp+1F8h+arg_30]
cmp     [rsp+1F8h+var_1A0], rax
jz      short loc_7FF6E3431FF0
mov     rcx, [rsp+1F8h+var_190]
call    sub_7FF6E3436C20
mov     [rsp+1F8h+var_1C8], al
mov     rdx, [rsp+1F8h+var_1A0]
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E34345D0
movzx   ecx, [rsp+1F8h+var_1C8]
mov     [rax], cl

loc_7FF6E3431FF0:
movzx   eax, [rsp+1F8h+arg_38]
test    eax, eax
jz      loc_7FF6E34320EA
mov     rax, [rsp+1F8h+arg_30]
cmp     [rsp+1F8h+var_1A0], rax
jnz     short loc_7FF6E3432021
mov     rax, [rsp+1F8h+var_168]
mov     [rsp+1F8h+var_178], rax
jmp     short loc_7FF6E343202E

loc_7FF6E3432021:
mov     rax, [rsp+1F8h+var_1A0]
mov     [rsp+1F8h+var_178], rax

loc_7FF6E343202E:
mov     rax, [rsp+1F8h+var_178]
mov     [rsp+1F8h+var_198], rax
xor     edx, edx
lea     rcx, [rsp+1F8h+var_48]
call    sub_7FF6E34345D0
mov     [rsp+1F8h+var_1B0], rax

loc_7FF6E343204F:
mov     rax, [rsp+1F8h+var_1B0]
movsx   eax, byte ptr [rax]
cmp     eax, 7Fh
jz      loc_7FF6E34320EA
mov     rax, [rsp+1F8h+var_1B0]
movsx   eax, byte ptr [rax]
test    eax, eax
jle     short loc_7FF6E34320EA
mov     rax, [rsp+1F8h+var_1B0]
movsx   rax, byte ptr [rax]
mov     rcx, [rsp+1F8h+var_1C0]
mov     rdx, [rsp+1F8h+var_198]
sub     rdx, rcx
mov     rcx, rdx
cmp     rax, rcx
jnb     short loc_7FF6E34320EA
mov     rax, [rsp+1F8h+var_1B0]
movsx   rax, byte ptr [rax]
mov     rcx, [rsp+1F8h+var_198]
sub     rcx, rax
mov     rax, rcx
mov     [rsp+1F8h+var_198], rax
movzx   r9d, [rsp+1F8h+var_1C7]
mov     r8d, 1
mov     rdx, [rsp+1F8h+var_198]
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E3437FA0
nop
mov     eax, 1
imul    rax, 1
mov     rcx, [rsp+1F8h+var_1B0]
movsx   eax, byte ptr [rcx+rax]
test    eax, eax
jle     short loc_7FF6E34320E5
mov     rax, [rsp+1F8h+var_1B0]
inc     rax
mov     [rsp+1F8h+var_1B0], rax

loc_7FF6E34320E5:
jmp     loc_7FF6E343204F

loc_7FF6E34320EA:
lea     rcx, [rsp+1F8h+var_68]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+1F8h+arg_30], rax
mov     rcx, [rsp+1F8h+arg_18] ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
test    rax, rax
jle     short loc_7FF6E3432128
mov     rcx, [rsp+1F8h+arg_18] ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
cmp     rax, [rsp+1F8h+arg_30]
ja      short loc_7FF6E3432133

loc_7FF6E3432128:
mov     [rsp+1F8h+var_1A8], 0
jmp     short loc_7FF6E343214D

loc_7FF6E3432133:       ; this
mov     rcx, [rsp+1F8h+arg_18]
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
sub     rax, [rsp+1F8h+arg_30]
mov     [rsp+1F8h+var_1A8], rax

loc_7FF6E343214D:
mov     rcx, [rsp+1F8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 1C0h
mov     [rsp+1F8h+var_1B4], eax
cmp     [rsp+1F8h+var_1B4], 40h ; '@'
jz      loc_7FF6E343224B
cmp     [rsp+1F8h+var_1B4], 100h
jz      loc_7FF6E343224B
lea     rax, [rsp+1F8h+var_138]
mov     rdi, rax
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+1F8h+var_1A8]
mov     [rsp+1F8h+var_1D8], rax
movzx   r9d, [rsp+1F8h+arg_20]
lea     r8, [rsp+1F8h+var_138]
lea     rdx, [rsp+1F8h+var_C8]
mov     rcx, [rsp+1F8h+arg_0]
call    sub_7FF6E3436240
mov     rdi, [rsp+1F8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
mov     [rsp+1F8h+var_1A8], 0
xor     edx, edx
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1F8h+var_128]
mov     rdi, rcx
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1F8h+var_1C0]
mov     [rsp+1F8h+var_1D8], rcx
mov     r9, rax
lea     r8, [rsp+1F8h+var_128]
lea     rdx, [rsp+1F8h+var_B8]
mov     rcx, [rsp+1F8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1F8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
jmp     loc_7FF6E343238A

loc_7FF6E343224B:
cmp     [rsp+1F8h+var_1B4], 100h
jnz     loc_7FF6E3432325
xor     edx, edx
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1F8h+var_118]
mov     rdi, rcx
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1F8h+var_1C0]
mov     [rsp+1F8h+var_1D8], rcx
mov     r9, rax
lea     r8, [rsp+1F8h+var_118]
lea     rdx, [rsp+1F8h+var_A8]
mov     rcx, [rsp+1F8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1F8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
lea     rax, [rsp+1F8h+var_108]
mov     rdi, rax
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+1F8h+var_1A8]
mov     [rsp+1F8h+var_1D8], rax
movzx   r9d, [rsp+1F8h+arg_20]
lea     r8, [rsp+1F8h+var_108]
lea     rdx, [rsp+1F8h+var_98]
mov     rcx, [rsp+1F8h+arg_0]
call    sub_7FF6E3436240
mov     rdi, [rsp+1F8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
mov     [rsp+1F8h+var_1A8], 0
jmp     short loc_7FF6E343238A

loc_7FF6E3432325:
xor     edx, edx
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1F8h+var_F8]
mov     rdi, rcx
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1F8h+var_1C0]
mov     [rsp+1F8h+var_1D8], rcx
mov     r9, rax
lea     r8, [rsp+1F8h+var_F8]
lea     rdx, [rsp+1F8h+var_88]
mov     rcx, [rsp+1F8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1F8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb

loc_7FF6E343238A:
mov     rax, [rsp+1F8h+var_1C0]
mov     rcx, [rsp+1F8h+arg_30]
sub     rcx, rax
mov     rax, rcx
mov     [rsp+1F8h+var_160], rax
mov     rdx, [rsp+1F8h+var_1C0]
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1F8h+var_E8]
mov     rdi, rcx
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1F8h+var_160]
mov     [rsp+1F8h+var_1D8], rcx
mov     r9, rax
lea     r8, [rsp+1F8h+var_E8]
lea     rdx, [rsp+1F8h+var_78]
mov     rcx, [rsp+1F8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1F8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
xor     edx, edx        ; __int64
mov     rcx, [rsp+1F8h+arg_18] ; this
call    ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width(__int64)
lea     rax, [rsp+1F8h+var_D8]
mov     rdi, rax
mov     rsi, [rsp+1F8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+1F8h+var_1A8]
mov     [rsp+1F8h+var_1D8], rax
movzx   r9d, [rsp+1F8h+arg_20]
lea     r8, [rsp+1F8h+var_D8]
mov     rdx, [rsp+1F8h+arg_8]
mov     rcx, [rsp+1F8h+arg_0]
call    sub_7FF6E3436240
lea     rcx, [rsp+1F8h+var_48]
call    sub_7FF6E3433DB0
lea     rcx, [rsp+1F8h+var_68]
call    sub_7FF6E3433DB0
mov     rax, [rsp+1F8h+arg_8]
mov     rcx, [rsp+1F8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 1E8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3431D30
sub_7FF6E3431D30 endp

algn_7FF6E34324A5:
align 10h
; [00000017 BYTES: COLLAPSED FUNCTION std::_Get_size_of_n<1>(unsigned __int64)]
algn_7FF6E34324C7:
align 10h
; [0000006F BYTES: COLLAPSED FUNCTION std::numpunct<char>::_Getvals<char>(char,lconv const *,_Cvtvec)]
algn_7FF6E343253F:
align 20h



sub_7FF6E3432540 proc near
lea     rax, off_7FF6E346D000
retn
sub_7FF6E3432540 endp

align 10h
; [00000014 BYTES: COLLAPSED FUNCTION std::_Maklocchr<char>(char,char *,_Cvtvec const &)]
align 10h



sub_7FF6E3432570 proc near

Count= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
Str= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+Str], rcx
sub     rsp, 48h
mov     rcx, [rsp+48h+Str] ; Str
call    strlen
inc     rax
mov     [rsp+48h+Count], rax
mov     edx, 1          ; Size
mov     rcx, [rsp+48h+Count] ; Count
call    j__calloc_base
mov     [rsp+48h+var_18], rax
cmp     [rsp+48h+var_18], 0
jnz     short loc_7FF6E34325B7
call    sub_7FF6E3438A70
db 90h

loc_7FF6E34325B7:
mov     rax, [rsp+48h+var_18]
mov     [rsp+48h+var_20], rax
jmp     short loc_7FF6E34325EA

loc_7FF6E34325C3:
mov     rax, [rsp+48h+Count]
dec     rax
mov     [rsp+48h+Count], rax
mov     rax, [rsp+48h+var_20]
inc     rax
mov     [rsp+48h+var_20], rax
mov     rax, [rsp+48h+Str]
inc     rax
mov     [rsp+48h+Str], rax

loc_7FF6E34325EA:
cmp     [rsp+48h+Count], 0
jbe     short loc_7FF6E3432603
mov     rax, [rsp+48h+var_20]
mov     rcx, [rsp+48h+Str]
movzx   ecx, byte ptr [rcx]
mov     [rax], cl
jmp     short loc_7FF6E34325C3

loc_7FF6E3432603:
mov     rax, [rsp+48h+var_18]
add     rsp, 48h
retn
sub_7FF6E3432570 endp

algn_7FF6E343260D:
align 10h



sub_7FF6E3432610 proc near

var_18= qword ptr -18h

sub     rsp, 18h
mov     [rsp+18h+var_18], 0FFFFFFFFFFFFFFFFh
mov     rax, 7FFFFFFFFFFFFFFFh
add     rsp, 18h
retn
sub_7FF6E3432610 endp

algn_7FF6E343262B:
align 10h



sub_7FF6E3432630 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_8]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
nop
add     rsp, 28h
retn
sub_7FF6E3432630 endp

algn_7FF6E343264E:
align 10h



sub_7FF6E3432650 proc near

var_68= qword ptr -68h
var_60= qword ptr -60h
var_58= qword ptr -58h
var_50= qword ptr -50h
var_48= qword ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 88h
mov     rax, [rsp+88h+arg_0]
mov     [rsp+88h+var_58], rax
mov     rax, [rsp+88h+var_58]
mov     rax, [rax+10h]
mov     [rsp+88h+var_50], rax
mov     rcx, [rsp+88h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
sub     rax, [rsp+88h+var_50]
cmp     rax, [rsp+88h+arg_8]
jnb     short loc_7FF6E34326A8
call    sub_7FF6E3436680
align 8

loc_7FF6E34326A8:
mov     rax, [rsp+88h+arg_8]
mov     rcx, [rsp+88h+var_50]
add     rcx, rax
mov     rax, rcx
mov     [rsp+88h+var_40], rax
mov     rax, [rsp+88h+var_58]
mov     rax, [rax+18h]
mov     [rsp+88h+var_30], rax
mov     rdx, [rsp+88h+var_40]
mov     rcx, [rsp+88h+arg_0]
call    sub_7FF6E3434CF0
mov     [rsp+88h+var_38], rax
mov     rcx, [rsp+88h+arg_0]
call    sub_7FF6E34350B0
mov     [rsp+88h+var_20], rax
lea     rdx, [rsp+88h+var_38]
mov     rcx, [rsp+88h+var_20]
call    sub_7FF6E3431640
mov     [rsp+88h+var_48], rax
mov     rcx, [rsp+88h+var_58]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+var_40]
mov     [rax+10h], rcx
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+var_38]
mov     [rax+18h], rcx
mov     rcx, [rsp+88h+var_48]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+88h+var_18], rax
cmp     [rsp+88h+var_30], 0Fh
jbe     short loc_7FF6E34327B6
mov     rax, [rsp+88h+var_58]
mov     rax, [rax]
mov     [rsp+88h+var_28], rax
mov     rcx, [rsp+88h+var_28]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+88h+arg_20]
mov     [rsp+88h+var_60], rcx
mov     rcx, [rsp+88h+arg_18]
mov     [rsp+88h+var_68], rcx
mov     r9, [rsp+88h+var_50]
mov     r8, rax
mov     rdx, [rsp+88h+var_18]
lea     rcx, [rsp+88h+arg_10]
call    sub_7FF6E3434680
mov     r8, [rsp+88h+var_30]
mov     rdx, [rsp+88h+var_28]
mov     rcx, [rsp+88h+var_20]
call    sub_7FF6E3434E80
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+var_48]
mov     [rax], rcx
jmp     short loc_7FF6E3432802

loc_7FF6E34327B6:
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+arg_20]
mov     [rsp+88h+var_60], rcx
mov     rcx, [rsp+88h+arg_18]
mov     [rsp+88h+var_68], rcx
mov     r9, [rsp+88h+var_50]
mov     r8, rax
mov     rdx, [rsp+88h+var_18]
lea     rcx, [rsp+88h+arg_10]
call    sub_7FF6E3434680
mov     rax, [rsp+88h+var_58]
lea     rdx, [rsp+88h+var_48]
mov     rcx, rax
call    sub_7FF6E3431BE0
nop

loc_7FF6E3432802:
mov     rax, [rsp+88h+arg_0]
add     rsp, 88h
retn
sub_7FF6E3432650 endp

algn_7FF6E3432812:
align 20h



sub_7FF6E3432820 proc near

var_78= qword ptr -78h
var_70= qword ptr -70h
var_68= byte ptr -68h
var_58= qword ptr -58h
var_50= qword ptr -50h
var_48= qword ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h
arg_28= byte ptr  30h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 98h
mov     rax, [rsp+98h+arg_0]
mov     [rsp+98h+var_58], rax
mov     rax, [rsp+98h+var_58]
mov     rax, [rax+10h]
mov     [rsp+98h+var_50], rax
mov     rcx, [rsp+98h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
sub     rax, [rsp+98h+var_50]
cmp     rax, [rsp+98h+arg_8]
jnb     short loc_7FF6E3432878
call    sub_7FF6E3436680
align 8

loc_7FF6E3432878:
mov     rax, [rsp+98h+arg_8]
mov     rcx, [rsp+98h+var_50]
add     rcx, rax
mov     rax, rcx
mov     [rsp+98h+var_40], rax
mov     rax, [rsp+98h+var_58]
mov     rax, [rax+18h]
mov     [rsp+98h+var_30], rax
mov     rdx, [rsp+98h+var_40]
mov     rcx, [rsp+98h+arg_0]
call    sub_7FF6E3434CF0
mov     [rsp+98h+var_38], rax
mov     rcx, [rsp+98h+arg_0]
call    sub_7FF6E34350B0
mov     [rsp+98h+var_20], rax
lea     rdx, [rsp+98h+var_38]
mov     rcx, [rsp+98h+var_20]
call    sub_7FF6E3431640
mov     [rsp+98h+var_48], rax
mov     rcx, [rsp+98h+var_58]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
mov     rax, [rsp+98h+var_58]
mov     rcx, [rsp+98h+var_40]
mov     [rax+10h], rcx
mov     rax, [rsp+98h+var_58]
mov     rcx, [rsp+98h+var_38]
mov     [rax+18h], rcx
mov     rcx, [rsp+98h+var_48]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+98h+var_18], rax
cmp     [rsp+98h+var_30], 0Fh
jbe     short loc_7FF6E3432998
mov     rax, [rsp+98h+var_58]
mov     rax, [rax]
mov     [rsp+98h+var_28], rax
mov     rcx, [rsp+98h+var_28]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
movzx   ecx, [rsp+98h+arg_28]
mov     [rsp+98h+var_68], cl
mov     rcx, [rsp+98h+arg_20]
mov     [rsp+98h+var_70], rcx
mov     rcx, [rsp+98h+arg_18]
mov     [rsp+98h+var_78], rcx
mov     r9, [rsp+98h+var_50]
mov     r8, rax
mov     rdx, [rsp+98h+var_18]
lea     rcx, [rsp+98h+arg_10]
call    sub_7FF6E3434710
mov     r8, [rsp+98h+var_30]
mov     rdx, [rsp+98h+var_28]
mov     rcx, [rsp+98h+var_20]
call    sub_7FF6E3434E80
mov     rax, [rsp+98h+var_58]
mov     rcx, [rsp+98h+var_48]
mov     [rax], rcx
jmp     short loc_7FF6E34329F3

loc_7FF6E3432998:
mov     rax, [rsp+98h+var_58]
movzx   ecx, [rsp+98h+arg_28]
mov     [rsp+98h+var_68], cl
mov     rcx, [rsp+98h+arg_20]
mov     [rsp+98h+var_70], rcx
mov     rcx, [rsp+98h+arg_18]
mov     [rsp+98h+var_78], rcx
mov     r9, [rsp+98h+var_50]
mov     r8, rax
mov     rdx, [rsp+98h+var_18]
lea     rcx, [rsp+98h+arg_10]
call    sub_7FF6E3434710
mov     rax, [rsp+98h+var_58]
lea     rdx, [rsp+98h+var_48]
mov     rcx, rax
call    sub_7FF6E3431BE0
nop

loc_7FF6E34329F3:
mov     rax, [rsp+98h+arg_0]
add     rsp, 98h
retn
sub_7FF6E3432820 endp

algn_7FF6E3432A03:
align 10h



sub_7FF6E3432A10 proc near

var_68= qword ptr -68h
var_60= byte ptr -60h
var_58= qword ptr -58h
var_50= qword ptr -50h
var_48= qword ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 88h
mov     rax, [rsp+88h+arg_0]
mov     [rsp+88h+var_58], rax
mov     rax, [rsp+88h+var_58]
mov     rax, [rax+10h]
mov     [rsp+88h+var_50], rax
mov     rcx, [rsp+88h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
sub     rax, [rsp+88h+var_50]
cmp     rax, [rsp+88h+arg_8]
jnb     short loc_7FF6E3432A68
call    sub_7FF6E3436680
align 8

loc_7FF6E3432A68:
mov     rax, [rsp+88h+arg_8]
mov     rcx, [rsp+88h+var_50]
add     rcx, rax
mov     rax, rcx
mov     [rsp+88h+var_40], rax
mov     rax, [rsp+88h+var_58]
mov     rax, [rax+18h]
mov     [rsp+88h+var_30], rax
mov     rdx, [rsp+88h+var_40]
mov     rcx, [rsp+88h+arg_0]
call    sub_7FF6E3434CF0
mov     [rsp+88h+var_38], rax
mov     rcx, [rsp+88h+arg_0]
call    sub_7FF6E34350B0
mov     [rsp+88h+var_20], rax
lea     rdx, [rsp+88h+var_38]
mov     rcx, [rsp+88h+var_20]
call    sub_7FF6E3431640
mov     [rsp+88h+var_48], rax
mov     rcx, [rsp+88h+var_58]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+var_40]
mov     [rax+10h], rcx
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+var_38]
mov     [rax+18h], rcx
mov     rcx, [rsp+88h+var_48]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+88h+var_18], rax
cmp     [rsp+88h+var_30], 0Fh
jbe     short loc_7FF6E3432B75
mov     rax, [rsp+88h+var_58]
mov     rax, [rax]
mov     [rsp+88h+var_28], rax
mov     rcx, [rsp+88h+var_28]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
movzx   ecx, [rsp+88h+arg_20]
mov     [rsp+88h+var_60], cl
mov     rcx, [rsp+88h+arg_18]
mov     [rsp+88h+var_68], rcx
mov     r9, [rsp+88h+var_50]
mov     r8, rax
mov     rdx, [rsp+88h+var_18]
lea     rcx, [rsp+88h+arg_10]
call    sub_7FF6E34347C0
mov     r8, [rsp+88h+var_30]
mov     rdx, [rsp+88h+var_28]
mov     rcx, [rsp+88h+var_20]
call    sub_7FF6E3434E80
mov     rax, [rsp+88h+var_58]
mov     rcx, [rsp+88h+var_48]
mov     [rax], rcx
jmp     short loc_7FF6E3432BC0

loc_7FF6E3432B75:
mov     rax, [rsp+88h+var_58]
movzx   ecx, [rsp+88h+arg_20]
mov     [rsp+88h+var_60], cl
mov     rcx, [rsp+88h+arg_18]
mov     [rsp+88h+var_68], rcx
mov     r9, [rsp+88h+var_50]
mov     r8, rax
mov     rdx, [rsp+88h+var_18]
lea     rcx, [rsp+88h+arg_10]
call    sub_7FF6E34347C0
mov     rax, [rsp+88h+var_58]
lea     rdx, [rsp+88h+var_48]
mov     rcx, rax
call    sub_7FF6E3431BE0
nop

loc_7FF6E3432BC0:
mov     rax, [rsp+88h+arg_0]
add     rsp, 88h
retn
sub_7FF6E3432A10 endp

; [00000033 BYTES: COLLAPSED FUNCTION unknown_libname_4]
algn_7FF6E3432C03:
align 10h



sub_7FF6E3432C10 proc near

var_18= dword ptr -18h
arg_0= qword ptr  8

movsd   [rsp+arg_0], xmm0
sub     rsp, 38h
movsd   xmm0, [rsp+38h+arg_0]
call    sub_7FF6E3437EE0
test    eax, eax
jg      short loc_7FF6E3432C33
mov     [rsp+38h+var_18], 1
jmp     short loc_7FF6E3432C3B

loc_7FF6E3432C33:
mov     [rsp+38h+var_18], 0

loc_7FF6E3432C3B:
movzx   eax, byte ptr [rsp+38h+var_18]
add     rsp, 38h
retn
sub_7FF6E3432C10 endp

algn_7FF6E3432C45:
align 10h
; [00000047 BYTES: COLLAPSED FUNCTION unknown_libname_5]
algn_7FF6E3432C97:
align 20h
; [00000047 BYTES: COLLAPSED FUNCTION unknown_libname_6]
algn_7FF6E3432CE7:
align 10h



sub_7FF6E3432CF0 proc near

var_48= byte ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= byte ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 68h
xor     edx, edx        ; int
lea     rcx, [rsp+68h+var_48] ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
mov     rax, cs:qword_7FF6E346E288
mov     [rsp+68h+var_40], rax
lea     rcx, unk_7FF6E346E408
call    sub_7FF6E3434600
mov     [rsp+68h+var_20], rax
mov     rdx, [rsp+68h+var_20] ; unsigned __int64
mov     rcx, [rsp+68h+arg_0] ; this
call    ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet(unsigned __int64)
mov     [rsp+68h+var_30], rax
cmp     [rsp+68h+var_30], 0
jnz     loc_7FF6E3432DD1
cmp     [rsp+68h+var_40], 0
jz      short loc_7FF6E3432D56
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_30], rax
jmp     short loc_7FF6E3432DD1

loc_7FF6E3432D56:
mov     rdx, [rsp+68h+arg_0]
lea     rcx, [rsp+68h+var_40]
call    sub_7FF6E34350D0
cmp     rax, 0FFFFFFFFFFFFFFFFh
jnz     short loc_7FF6E3432D73
call    sub_7FF6E34364C0
db 90h
jmp     short loc_7FF6E3432DD1

loc_7FF6E3432D73:
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_38], rax
mov     rdx, [rsp+68h+var_38]
lea     rcx, [rsp+68h+var_28]
call    ??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>(std::_Facet_base *)
mov     rcx, [rsp+68h+var_38] ; struct std::_Facet_base *
call    ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register(std::_Facet_base *)
mov     rax, [rsp+68h+var_38]
mov     rax, [rax]
mov     rcx, [rsp+68h+var_38]
call    qword ptr [rax+8]
mov     rax, [rsp+68h+var_40]
mov     cs:qword_7FF6E346E288, rax
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_30], rax
lea     rcx, [rsp+68h+var_28]
call    sub_7FF6E3438350
lea     rcx, [rsp+68h+var_28]
call    sub_7FF6E3433E90
nop

loc_7FF6E3432DD1:
mov     rax, [rsp+68h+var_30]
mov     [rsp+68h+var_18], rax
lea     rcx, [rsp+68h+var_48] ; this
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
mov     rax, [rsp+68h+var_18]
add     rsp, 68h
retn
sub_7FF6E3432CF0 endp

algn_7FF6E3432DEF:
align 10h



sub_7FF6E3432DF0 proc near

var_48= byte ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= byte ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 68h
xor     edx, edx        ; int
lea     rcx, [rsp+68h+var_48] ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
mov     rax, cs:qword_7FF6E346E290
mov     [rsp+68h+var_40], rax
lea     rcx, unk_7FF6E346E278
call    sub_7FF6E3434600
mov     [rsp+68h+var_20], rax
mov     rdx, [rsp+68h+var_20] ; unsigned __int64
mov     rcx, [rsp+68h+arg_0] ; this
call    ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet(unsigned __int64)
mov     [rsp+68h+var_30], rax
cmp     [rsp+68h+var_30], 0
jnz     loc_7FF6E3432ED1
cmp     [rsp+68h+var_40], 0
jz      short loc_7FF6E3432E56
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_30], rax
jmp     short loc_7FF6E3432ED1

loc_7FF6E3432E56:
mov     rdx, [rsp+68h+arg_0]
lea     rcx, [rsp+68h+var_40]
call    sub_7FF6E34351A0
cmp     rax, 0FFFFFFFFFFFFFFFFh
jnz     short loc_7FF6E3432E73
call    sub_7FF6E34364C0
db 90h
jmp     short loc_7FF6E3432ED1

loc_7FF6E3432E73:
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_38], rax
mov     rdx, [rsp+68h+var_38]
lea     rcx, [rsp+68h+var_28]
call    ??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>(std::_Facet_base *)
mov     rcx, [rsp+68h+var_38] ; struct std::_Facet_base *
call    ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register(std::_Facet_base *)
mov     rax, [rsp+68h+var_38]
mov     rax, [rax]
mov     rcx, [rsp+68h+var_38]
call    qword ptr [rax+8]
mov     rax, [rsp+68h+var_40]
mov     cs:qword_7FF6E346E290, rax
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_30], rax
lea     rcx, [rsp+68h+var_28]
call    sub_7FF6E3438350
lea     rcx, [rsp+68h+var_28]
call    sub_7FF6E3433E90
nop

loc_7FF6E3432ED1:
mov     rax, [rsp+68h+var_30]
mov     [rsp+68h+var_18], rax
lea     rcx, [rsp+68h+var_48] ; this
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
mov     rax, [rsp+68h+var_18]
add     rsp, 68h
retn
sub_7FF6E3432DF0 endp

algn_7FF6E3432EEF:
align 10h



sub_7FF6E3432EF0 proc near

var_48= byte ptr -48h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= byte ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 68h
xor     edx, edx        ; int
lea     rcx, [rsp+68h+var_48] ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
mov     rax, cs:qword_7FF6E346E298
mov     [rsp+68h+var_40], rax
lea     rcx, unk_7FF6E346E280
call    sub_7FF6E3434600
mov     [rsp+68h+var_20], rax
mov     rdx, [rsp+68h+var_20] ; unsigned __int64
mov     rcx, [rsp+68h+arg_0] ; this
call    ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet(unsigned __int64)
mov     [rsp+68h+var_30], rax
cmp     [rsp+68h+var_30], 0
jnz     loc_7FF6E3432FD1
cmp     [rsp+68h+var_40], 0
jz      short loc_7FF6E3432F56
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_30], rax
jmp     short loc_7FF6E3432FD1

loc_7FF6E3432F56:
mov     rdx, [rsp+68h+arg_0]
lea     rcx, [rsp+68h+var_40]
call    sub_7FF6E3435270
cmp     rax, 0FFFFFFFFFFFFFFFFh
jnz     short loc_7FF6E3432F73
call    sub_7FF6E34364C0
db 90h
jmp     short loc_7FF6E3432FD1

loc_7FF6E3432F73:
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_38], rax
mov     rdx, [rsp+68h+var_38]
lea     rcx, [rsp+68h+var_28]
call    ??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>(std::_Facet_base *)
mov     rcx, [rsp+68h+var_38] ; struct std::_Facet_base *
call    ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register(std::_Facet_base *)
mov     rax, [rsp+68h+var_38]
mov     rax, [rax]
mov     rcx, [rsp+68h+var_38]
call    qword ptr [rax+8]
mov     rax, [rsp+68h+var_40]
mov     cs:qword_7FF6E346E298, rax
mov     rax, [rsp+68h+var_40]
mov     [rsp+68h+var_30], rax
lea     rcx, [rsp+68h+var_28]
call    sub_7FF6E3438350
lea     rcx, [rsp+68h+var_28]
call    sub_7FF6E3433E90
nop

loc_7FF6E3432FD1:
mov     rax, [rsp+68h+var_30]
mov     [rsp+68h+var_18], rax
lea     rcx, [rsp+68h+var_48] ; this
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
mov     rax, [rsp+68h+var_18]
add     rsp, 68h
retn
sub_7FF6E3432EF0 endp

algn_7FF6E3432FEF:
align 10h



sub_7FF6E3432FF0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    unknown_libname_9 ; Microsoft VisualC v14 64bit runtime
mov     rax, [rsp+28h+arg_0]
mov     qword ptr [rax+10h], 0
mov     rax, [rsp+28h+arg_0]
mov     qword ptr [rax+18h], 0
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3432FF0 endp

algn_7FF6E343302A:
align 10h
; [00000020 BYTES: COLLAPSED FUNCTION std::_Yarn<char>::_Yarn<char>(void)]
; [00000022 BYTES: COLLAPSED FUNCTION std::_Yarn<wchar_t>::_Yarn<wchar_t>(void)]
align 20h



sub_7FF6E3433080 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rcx, [rsp+38h+arg_8]
call    sub_7FF6E34350B0
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+38h+arg_0]
mov     r8, rax
movzx   edx, [rsp+38h+var_18]
call    sub_7FF6E3431280
nop
mov     rax, [rsp+38h+arg_0]
lea     rdx, unk_7FF6E345D3E0 ; struct __crt_win32_buffer_empty_debug_info *
mov     rcx, rax        ; void *
call    ?deallocate@__crt_win32_buffer_no_resizing@@SAXQEAXAEBV__crt_win32_buffer_empty_debug_info@@@Z ; Microsoft VisualC v14 64bit runtime
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E34362F0
nop
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E3433080 endp

algn_7FF6E34330E1:
align 10h
; [00000066 BYTES: COLLAPSED FUNCTION std::shared_ptr<__ExceptionPtr>::operator=(std::shared_ptr<__ExceptionPtr> &&)]
algn_7FF6E3433156:
align 20h



sub_7FF6E3433160 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
movzx   edx, [rsp+38h+var_18]
mov     rcx, rax
call    sub_7FF6E34311E0
nop
mov     rcx, [rsp+38h+arg_8]
call    sub_7FF6E34380E0
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     r8, rax
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3431750
nop
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E3433160 endp




sub_7FF6E34331B0 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
movzx   edx, [rsp+38h+var_18]
mov     rcx, rax
call    sub_7FF6E34311E0
nop
mov     r8, [rsp+38h+arg_10]
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3431750
nop
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E34331B0 endp

algn_7FF6E34331F5:
align 20h



sub_7FF6E3433200 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
movzx   edx, [rsp+38h+var_18]
mov     rcx, rax
call    sub_7FF6E34311E0
nop
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3434E00
nop
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E3433200 endp

algn_7FF6E3433231:
align 20h



sub_7FF6E3433240 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h

mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
movzx   edx, [rsp+38h+var_18]
mov     rcx, rax
call    sub_7FF6E34311E0
nop
mov     r8, [rsp+38h+arg_8]
movzx   edx, [rsp+38h+arg_10]
mov     rcx, [rsp+38h+arg_0]
call    ??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z ; std::string::_Construct<0,char>(char,unsigned __int64)
nop
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E3433240 endp

algn_7FF6E3433285:
align 10h
; [0000004B BYTES: COLLAPSED FUNCTION unknown_libname_7]
algn_7FF6E34332DB:
align 20h
; [0000004B BYTES: COLLAPSED FUNCTION unknown_libname_8]
algn_7FF6E343332B:
align 10h



sub_7FF6E3433330 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= byte ptr  20h

mov     [rsp+arg_18], r9b
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_10] ; unsigned __int64
mov     rcx, [rsp+28h+arg_0] ; this
call    ??0facet@locale@std@@IEAA@_K@Z ; std::locale::facet::facet(unsigned __int64)
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D710
mov     [rax], rcx
movzx   r8d, [rsp+28h+arg_18]
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3435700
nop
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433330 endp

algn_7FF6E3433386:
align 10h
; [00000026 BYTES: COLLAPSED FUNCTION std::ostreambuf_iterator<char>::ostreambuf_iterator<char>(std::streambuf *)]
align 20h
; [00000020 BYTES: COLLAPSED FUNCTION unknown_libname_9]



sub_7FF6E34333E0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
mov     rax, [rsp+arg_0]
lea     rcx, off_7FF6E345D550
mov     [rax], rcx
mov     rax, [rsp+arg_0]
retn
sub_7FF6E34333E0 endp

align 20h
; [00000015 BYTES: COLLAPSED FUNCTION std::_Fake_proxy_ptr_impl::_Fake_proxy_ptr_impl(std::_Fake_allocator const &,std::_Container_base0 const &)]
align 20h



sub_7FF6E3433420 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
xor     edx, edx        ; int
mov     rcx, rax        ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
mov     rax, [rsp+28h+arg_0]
add     rax, 8
mov     rcx, rax
call    ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>(void)
mov     rax, [rsp+28h+arg_0]
add     rax, 18h
mov     rcx, rax
call    ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>(void)
mov     rax, [rsp+28h+arg_0]
add     rax, 28h ; '('
mov     rcx, rax
call    ??0?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::_Yarn<wchar_t>(void)
mov     rax, [rsp+28h+arg_0]
add     rax, 38h ; '8'
mov     rcx, rax
call    ??0?$_Yarn@_W@std@@QEAA@XZ ; std::_Yarn<wchar_t>::_Yarn<wchar_t>(void)
mov     rax, [rsp+28h+arg_0]
add     rax, 48h ; 'H'
mov     rcx, rax
call    ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>(void)
mov     rax, [rsp+28h+arg_0]
add     rax, 58h ; 'X'
mov     rcx, rax
call    ??0?$_Yarn@D@std@@QEAA@XZ ; std::_Yarn<char>::_Yarn<char>(void)
nop
cmp     [rsp+28h+arg_8], 0
jz      short loc_7FF6E34334BE
mov     rdx, [rsp+28h+arg_8] ; char *
mov     rcx, [rsp+28h+arg_0] ; struct std::_Locinfo *
call    ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z ; std::_Locinfo::_Locinfo_ctor(std::_Locinfo *,char const *)
nop
jmp     short loc_7FF6E34334CB

loc_7FF6E34334BE:
lea     rcx, aBadLocaleName ; "bad locale name"
call    sub_7FF6E3438AD8
db 90h

loc_7FF6E34334CB:
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433420 endp

algn_7FF6E34334D5:
align 20h



sub_7FF6E34334E0 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rsp+38h+arg_8]
mov     [rax], rcx
mov     rax, [rsp+38h+arg_0]
mov     rax, [rax]
mov     [rsp+38h+var_10], rax
mov     rax, [rsp+38h+var_10]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+38h+var_10]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+38h+var_18], rax
cmp     [rsp+38h+var_18], 0
jz      short loc_7FF6E3433545
mov     rax, [rsp+38h+var_18]
mov     rax, [rax]
mov     rcx, [rsp+38h+var_18]
call    qword ptr [rax+8]
nop

loc_7FF6E3433545:
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E34334E0 endp

algn_7FF6E343354F:
align 10h



sub_7FF6E3433550 proc near

var_88= qword ptr -88h
var_78= byte ptr -78h
var_68= byte ptr -68h
var_48= byte ptr -48h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 98h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0A8h+var_28], rax
lea     rax, [rsp+0A8h+var_68]
mov     [rsp+0A8h+var_88], rax
mov     rdx, [rsp+0A8h+arg_10]
mov     rcx, [rsp+0A8h+var_88]
call    ??4?$shared_ptr@V__ExceptionPtr@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::shared_ptr<__ExceptionPtr>::operator=(std::shared_ptr<__ExceptionPtr> &&)
lea     rcx, [rsp+0A8h+var_78]
mov     rdi, rcx
mov     rsi, [rsp+0A8h+arg_8]
mov     ecx, 10h
rep movsb
mov     r8, rax
lea     rdx, [rsp+0A8h+var_78]
lea     rcx, [rsp+0A8h+var_48]
call    sub_7FF6E3435F80
mov     rdx, rax
mov     rcx, [rsp+0A8h+arg_0]
call    ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error(std::string const &)
lea     rcx, [rsp+0A8h+var_48]
call    sub_7FF6E3433DB0
nop
mov     rax, [rsp+0A8h+arg_0]
lea     rcx, off_7FF6E345D490
mov     [rax], rcx
mov     rax, [rsp+0A8h+arg_0]
lea     rdi, [rax+18h]
mov     rsi, [rsp+0A8h+arg_8]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+0A8h+arg_0]
mov     rcx, [rsp+0A8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 98h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3433550
sub_7FF6E3433550 endp

algn_7FF6E3433629:
align 10h



sub_7FF6E3433630 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 28h
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3433AF0
mov     rax, [rsp+38h+arg_0]
lea     rcx, off_7FF6E345D490
mov     [rax], rcx
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rsp+38h+arg_8]
lea     rdi, [rax+18h]
lea     rsi, [rcx+18h]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+38h+arg_0]
add     rsp, 28h
pop     rdi
pop     rsi
retn
sub_7FF6E3433630 endp

algn_7FF6E3433683:
align 10h
; [0000003C BYTES: COLLAPSED FUNCTION std::bad_alloc::bad_alloc(char const * const)]
algn_7FF6E34336CC:
align 10h



sub_7FF6E34336D0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8] ; struct std::exception *
mov     rcx, [rsp+28h+arg_0] ; this
call    ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception(std::exception const &)
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D420
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E34336D0 endp

algn_7FF6E3433706:
align 10h



sub_7FF6E3433710 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E34336D0
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D438
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433710 endp

algn_7FF6E3433746:
align 10h
; [00000033 BYTES: COLLAPSED FUNCTION std::bad_array_new_length::bad_array_new_length(void)]
algn_7FF6E3433783:
align 10h



sub_7FF6E3433790 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8] ; struct std::exception *
mov     rcx, [rsp+28h+arg_0] ; this
call    ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception(std::exception const &)
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D528
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433790 endp

algn_7FF6E34337C6:
align 10h



sub_7FF6E34337D0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     r8d, 1          ; int
lea     rdx, aBadCast   ; "bad cast"
mov     rcx, [rsp+28h+arg_0] ; this
call    ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception(char const * const,int)
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D528
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E34337D0 endp

algn_7FF6E3433809:
align 10h



sub_7FF6E3433810 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8] ; unsigned __int64
mov     rcx, [rsp+28h+arg_0] ; this
call    ??0facet@locale@std@@IEAA@_K@Z ; std::locale::facet::facet(unsigned __int64)
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D5B8
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433810 endp

algn_7FF6E3433846:
align 10h
; [0000002D BYTES: COLLAPSED FUNCTION unknown_libname_10]
align 20h
; [00000059 BYTES: COLLAPSED FUNCTION std::exception::exception(std::exception const &)]
algn_7FF6E34338D9:
align 20h
; [00000064 BYTES: COLLAPSED FUNCTION std::exception::exception(char const * const)]
algn_7FF6E3433944:
align 10h
; [00000049 BYTES: COLLAPSED FUNCTION std::exception::exception(char const * const,int)]
algn_7FF6E3433999:
align 20h
; [0000003D BYTES: COLLAPSED FUNCTION std::locale::facet::facet(unsigned __int64)]
algn_7FF6E34339DD:
align 20h



sub_7FF6E34339E0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3433C40
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D638
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E34339E0 endp

algn_7FF6E3433A16:
align 20h
; [00000058 BYTES: COLLAPSED FUNCTION std::ios_base::failure::failure(char const *,std::error_code const &)]
algn_7FF6E3433A78:
align 20h
; [0000001D BYTES: COLLAPSED FUNCTION unknown_libname_65]
align 20h



sub_7FF6E3433AA0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, [rsp+28h+arg_8]
mov     rcx, [rcx+8]
mov     [rax+8], rcx
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax+8]
mov     rcx, [rsp+28h+arg_0]
mov     rcx, [rcx+8]
mov     rax, [rax]
call    qword ptr [rax+8]
nop
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433AA0 endp

algn_7FF6E3433AE3:
align 10h



sub_7FF6E3433AF0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8] ; struct std::exception *
mov     rcx, [rsp+28h+arg_0] ; this
call    ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception(std::exception const &)
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D478
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433AF0 endp

algn_7FF6E3433B26:
align 10h
; [0000003E BYTES: COLLAPSED FUNCTION std::runtime_error::runtime_error(std::string const &)]
algn_7FF6E3433B6E:
align 10h



sub_7FF6E3433B70 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E34334E0
nop
mov     rax, [rsp+38h+arg_8]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    sub_7FF6E3437F30
movzx   eax, al
test    eax, eax
jnz     short loc_7FF6E3433BBF
mov     rax, [rsp+38h+arg_0]
mov     byte ptr [rax+8], 0
jmp     short loc_7FF6E3433C33

loc_7FF6E3433BBF:
mov     rax, [rsp+38h+arg_8]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_32 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+38h+var_18], rax
cmp     [rsp+38h+var_18], 0
jz      short loc_7FF6E3433BF7
mov     rax, [rsp+38h+arg_8]
cmp     [rsp+38h+var_18], rax
jnz     short loc_7FF6E3433C02

loc_7FF6E3433BF7:
mov     rax, [rsp+38h+arg_0]
mov     byte ptr [rax+8], 1
jmp     short loc_7FF6E3433C33

loc_7FF6E3433C02:
mov     rcx, [rsp+38h+var_18]
call    sub_7FF6E3437E20
mov     rax, [rsp+38h+arg_8]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    sub_7FF6E3437F30
mov     rcx, [rsp+38h+arg_0]
mov     [rcx+8], al

loc_7FF6E3433C33:
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E3433B70 endp

algn_7FF6E3433C3D:
align 20h



sub_7FF6E3433C40 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3433630
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D4B0
mov     [rax], rcx
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E3433C40 endp

algn_7FF6E3433C76:
align 20h
; [0000009D BYTES: COLLAPSED FUNCTION std::system_error::system_error(std::error_code,char const *)]
algn_7FF6E3433D1D:
align 20h



sub_7FF6E3433D20 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    sub_7FF6E3433D40
nop
add     rsp, 28h
retn
sub_7FF6E3433D20 endp

algn_7FF6E3433D3C:
align 20h



sub_7FF6E3433D40 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop
add     rsp, 28h
retn
sub_7FF6E3433D40 endp

algn_7FF6E3433D5C:
align 20h



sub_7FF6E3433D60 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
cmp     qword ptr [rax], 0
jz      short loc_7FF6E3433D82
mov     rax, [rsp+28h+arg_0]
mov     rcx, [rax]
call    unknown_libname_19 ; Microsoft VisualC v14 64bit runtime
nop

loc_7FF6E3433D82:
add     rsp, 28h
retn
sub_7FF6E3433D60 endp

algn_7FF6E3433D87:
align 10h



sub_7FF6E3433D90 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E34364F0
nop
add     rsp, 28h
retn
sub_7FF6E3433D90 endp

algn_7FF6E3433DA9:
align 10h


; Attributes: unwind_handler

sub_7FF6E3433DB0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E34365D0
nop
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    sub_7FF6E3433D20
nop
add     rsp, 28h
retn
sub_7FF6E3433DB0 endp

algn_7FF6E3433DD7:
align 20h



sub_7FF6E3433DE0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D5D8
mov     [rax], rcx
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3436530
nop
mov     rcx, [rsp+28h+arg_0] ; this
call    ??1ios_base@std@@UEAA@XZ_0 ; std::ios_base::~ios_base(void)
nop
add     rsp, 28h
retn
sub_7FF6E3433DE0 endp

algn_7FF6E3433E13:
align 20h
; [00000028 BYTES: COLLAPSED FUNCTION std::ios_base::~ios_base(void)]
algn_7FF6E3433E48:
align 10h



sub_7FF6E3433E50 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
lea     rcx, off_7FF6E345D710
mov     [rax], rcx
mov     rcx, [rsp+28h+arg_0]
call    unknown_libname_19 ; Microsoft VisualC v14 64bit runtime
nop
mov     rcx, [rsp+28h+arg_0] ; this
call    ??1ios_base@std@@UEAA@XZ_1 ; std::ios_base::~ios_base(void)
nop
add     rsp, 28h
retn
sub_7FF6E3433E50 endp

algn_7FF6E3433E83:
align 10h


; Attributes: unwind_handler

sub_7FF6E3433E90 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
cmp     qword ptr [rax], 0
jz      short loc_7FF6E3433EC2
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+28h+arg_0]
mov     rdx, [rcx]
mov     rcx, rax
call    sub_7FF6E3434850
nop

loc_7FF6E3433EC2:
add     rsp, 28h
retn
sub_7FF6E3433E90 endp

algn_7FF6E3433EC7:
align 10h



sub_7FF6E3433ED0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
mov     rax, [rsp+arg_0]
lea     rcx, off_7FF6E345D550
mov     [rax], rcx
retn
sub_7FF6E3433ED0 endp

align 10h



sub_7FF6E3433EF0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop
add     rsp, 28h
retn
sub_7FF6E3433EF0 endp

algn_7FF6E3433F09:
align 10h



sub_7FF6E3433F10 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0] ; struct std::_Locinfo *
call    ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z ; std::_Locinfo::_Locinfo_dtor(std::_Locinfo *)
nop
mov     rax, [rsp+28h+arg_0]
add     rax, 58h ; 'X'
mov     rcx, rax
call    sub_7FF6E3433D90
mov     rax, [rsp+28h+arg_0]
add     rax, 48h ; 'H'
mov     rcx, rax
call    sub_7FF6E3433D90
mov     rax, [rsp+28h+arg_0]
add     rax, 38h ; '8'
mov     rcx, rax
call    sub_7FF6E3433D90
mov     rax, [rsp+28h+arg_0]
add     rax, 28h ; '('
mov     rcx, rax
call    sub_7FF6E3433D90
mov     rax, [rsp+28h+arg_0]
add     rax, 18h
mov     rcx, rax
call    sub_7FF6E3433D90
mov     rax, [rsp+28h+arg_0]
add     rax, 8
mov     rcx, rax
call    sub_7FF6E3433D90
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax        ; this
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
nop
add     rsp, 28h
retn
sub_7FF6E3433F10 endp

algn_7FF6E3433F9D:
align 20h



sub_7FF6E3433FA0 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
mov     rax, [rax]
mov     [rsp+38h+var_10], rax
mov     rax, [rsp+38h+var_10]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+38h+var_10]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+38h+var_18], rax
cmp     [rsp+38h+var_18], 0
jz      short loc_7FF6E3433FF3
mov     rax, [rsp+38h+var_18]
mov     rax, [rax]
mov     rcx, [rsp+38h+var_18]
call    qword ptr [rax+10h]
nop

loc_7FF6E3433FF3:
add     rsp, 38h
retn
sub_7FF6E3433FA0 endp

algn_7FF6E3433FF8:
align 20h



sub_7FF6E3434000 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    unknown_libname_63 ; Microsoft VisualC v14 64bit runtime
nop
add     rsp, 28h
retn
sub_7FF6E3434000 endp

algn_7FF6E3434019:
align 20h
; [00000019 BYTES: COLLAPSED FUNCTION unknown_libname_63]
algn_7FF6E3434039:
align 20h
; [00000028 BYTES: COLLAPSED FUNCTION std::ios_base::~ios_base(void)]
algn_7FF6E3434068:
align 10h
; [0000002F BYTES: COLLAPSED FUNCTION std::exception::~exception(void)]
algn_7FF6E343409F:
align 20h
; [00000028 BYTES: COLLAPSED FUNCTION std::ios_base::~ios_base(void)]
algn_7FF6E34340C8:
align 10h



sub_7FF6E34340D0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E34341C0
nop
add     rsp, 28h
retn
sub_7FF6E34340D0 endp

algn_7FF6E34340E9:
align 10h


; Attributes: unwind_handler

sub_7FF6E34340F0 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
cmp     qword ptr [rax+8], 0
jz      short loc_7FF6E343414E
mov     rax, [rsp+38h+arg_0]
mov     rax, [rax+8]
mov     rcx, [rsp+38h+arg_0]
mov     rcx, [rcx+8]
mov     rax, [rax]
call    qword ptr [rax+10h]
mov     [rsp+38h+var_18], rax
cmp     [rsp+38h+var_18], 0
jz      short loc_7FF6E3434145
mov     rax, [rsp+38h+var_18]
mov     rax, [rax]
mov     edx, 1
mov     rcx, [rsp+38h+var_18]
call    qword ptr [rax]
mov     [rsp+38h+var_10], rax
jmp     short loc_7FF6E343414E

loc_7FF6E3434145:
mov     [rsp+38h+var_10], 0

loc_7FF6E343414E:
add     rsp, 38h
retn
sub_7FF6E34340F0 endp

algn_7FF6E3434153:
align 20h



sub_7FF6E3434160 proc near

var_18= byte ptr -18h
var_17= byte ptr -17h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
call    j___uncaught_exception
movzx   eax, al
test    eax, eax
jnz     short loc_7FF6E343417C
mov     [rsp+38h+var_18], 1
jmp     short loc_7FF6E3434181

loc_7FF6E343417C:
mov     [rsp+38h+var_18], 0

loc_7FF6E3434181:
movzx   eax, [rsp+38h+var_18]
mov     [rsp+38h+var_17], al
movzx   eax, [rsp+38h+var_17]
test    eax, eax
jz      short loc_7FF6E34341A1
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rax]
call    sub_7FF6E3436060
nop

loc_7FF6E34341A1:
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3433FA0
nop
add     rsp, 38h
retn
sub_7FF6E3434160 endp

algn_7FF6E34341B1:
align 20h



sub_7FF6E34341C0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3434000
nop
add     rsp, 28h
retn
sub_7FF6E34341C0 endp

algn_7FF6E34341D9:
align 20h
; [00000010 BYTES: COLLAPSED FUNCTION _lambda_7224c10e0d9cf27ffd5accaa7469d6af_::operator()(unsigned __int64)]



sub_7FF6E34341F0 proc near

var_28= dword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 48h
mov     rcx, [rsp+48h+arg_8]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
cmp     [rsp+48h+arg_0], rax
jnz     short loc_7FF6E3434216
mov     rax, [rsp+48h+arg_0]
jmp     short loc_7FF6E3434269

loc_7FF6E3434216:
mov     rcx, [rsp+48h+arg_0]
call    sub_7FF6E34350B0
mov     [rsp+48h+var_18], rax
mov     rcx, [rsp+48h+arg_8]
call    sub_7FF6E34350B0
mov     [rsp+48h+var_20], rax
mov     [rsp+48h+var_28], 0
mov     rcx, [rsp+48h+arg_0]
call    sub_7FF6E34365D0
mov     rdx, [rsp+48h+var_20]
mov     rcx, [rsp+48h+var_18]
call    sub_7FF6E3432630
mov     rdx, [rsp+48h+arg_8]
mov     rcx, [rsp+48h+arg_0]
call    sub_7FF6E34362F0
mov     rax, [rsp+48h+arg_0]

loc_7FF6E3434269:
add     rsp, 48h
retn
sub_7FF6E34341F0 endp

algn_7FF6E343426E:
align 10h



sub_7FF6E3434270 proc near

var_18= dword ptr -18h
arg_0= qword ptr  8
arg_8= byte ptr  10h

mov     [rsp+arg_8], dl
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
cmp     qword ptr [rax+8], 0
jz      short loc_7FF6E34342B9
movzx   edx, [rsp+38h+arg_8]
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rax+8]
call    sub_7FF6E3438450
mov     [rsp+38h+var_18], eax
call    sub_7FF6E3437CE0
mov     ecx, [rsp+38h+var_18]
mov     edx, ecx
mov     ecx, eax
call    ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z ; std::_Narrow_char_traits<char,int>::eq_int_type(int,int)
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E34342C1

loc_7FF6E34342B9:
mov     rax, [rsp+38h+arg_0]
mov     byte ptr [rax], 1

loc_7FF6E34342C1:
mov     rax, [rsp+38h+arg_0]
add     rsp, 38h
retn
sub_7FF6E3434270 endp

algn_7FF6E34342CB:
align 10h



sub_7FF6E34342D0 proc near

var_A8= byte ptr -0A8h
var_A0= dword ptr -0A0h
var_98= byte ptr -98h
var_94= dword ptr -94h
var_90= dword ptr -90h
var_8C= dword ptr -8Ch
var_88= qword ptr -88h
var_80= qword ptr -80h
var_78= qword ptr -78h
var_70= byte ptr -70h
var_60= byte ptr -60h
var_48= byte ptr -48h
var_38= byte ptr -38h
var_28= byte ptr -28h
arg_0= qword ptr  8
arg_8= dword ptr  10h

; __unwind { // __CxxFrameHandler4
mov     [rsp+arg_8], edx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0B8h
mov     [rsp+0C8h+var_94], 0
mov     rdx, [rsp+0C8h+arg_0]
lea     rcx, [rsp+0C8h+var_70]
call    sub_7FF6E3433B70
nop
lea     rcx, [rsp+0C8h+var_70]
call    ??B?$optional@_K@std@@QEBA_NXZ ; std::optional<unsigned __int64>::operator bool(void)
movzx   eax, al
test    eax, eax
jz      loc_7FF6E3434492
mov     rax, [rsp+0C8h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+0C8h+arg_0]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+0C8h+var_60]
mov     rcx, rax
call    ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
mov     rcx, rax
call    sub_7FF6E3432DF0
mov     [rsp+0C8h+var_80], rax
lea     rcx, [rsp+0C8h+var_60]
call    sub_7FF6E34340F0
nop
mov     rax, [rsp+0C8h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+0C8h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 0E00h
mov     [rsp+0C8h+var_90], eax
cmp     [rsp+0C8h+var_90], 400h
jz      short loc_7FF6E3434396
cmp     [rsp+0C8h+var_90], 800h
jnz     short loc_7FF6E34343A3

loc_7FF6E3434396:
mov     eax, [rsp+0C8h+arg_8]
mov     [rsp+0C8h+var_8C], eax
jmp     short loc_7FF6E34343AE

loc_7FF6E34343A3:
mov     eax, [rsp+0C8h+arg_8]
mov     [rsp+0C8h+var_8C], eax

loc_7FF6E34343AE:
;   try {
mov     rax, [rsp+0C8h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+0C8h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    ?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ ; std::ios::fill(void)
mov     [rsp+0C8h+var_98], al
mov     rcx, [rsp+0C8h+arg_0]
mov     rcx, [rcx]
movsxd  rcx, dword ptr [rcx+4]
mov     rdx, [rsp+0C8h+arg_0]
add     rdx, rcx
mov     rcx, rdx
mov     [rsp+0C8h+var_88], rcx
mov     rdx, [rsp+0C8h+arg_0]
mov     rdx, [rdx]
movsxd  rdx, dword ptr [rdx+4]
mov     r8, [rsp+0C8h+arg_0]
add     r8, rdx
mov     rdx, r8
mov     rcx, rdx
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
mov     rdx, rax
lea     rcx, [rsp+0C8h+var_38]
call    ??0?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z ; std::ostreambuf_iterator<char>::ostreambuf_iterator<char>(std::streambuf *)
lea     rcx, [rsp+0C8h+var_48]
mov     rdi, rcx
mov     rsi, rax
mov     ecx, 10h
rep movsb
mov     eax, [rsp+0C8h+var_8C]
mov     [rsp+0C8h+var_A0], eax
movzx   eax, [rsp+0C8h+var_98]
mov     [rsp+0C8h+var_A8], al
mov     rax, [rsp+0C8h+var_88]
mov     r9, rax
lea     r8, [rsp+0C8h+var_48]
lea     rdx, [rsp+0C8h+var_28]
mov     rcx, [rsp+0C8h+var_80]
call    sub_7FF6E34382C0
mov     rcx, rax
call    ??$_Atomic_reinterpret_as@DD@std@@YADAEBD@Z ; std::_Atomic_reinterpret_as<char,char>(char const &)
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E3434490
mov     eax, [rsp+0C8h+var_94]
or      eax, 4
mov     [rsp+0C8h+var_94], eax
;   } // starts at 7FF6E34343AE

loc_7FF6E3434490:
jmp     short $+2

loc_7FF6E3434492:
mov     rax, [rsp+0C8h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+0C8h+arg_0]
add     rcx, rax
mov     rax, rcx
xor     r8d, r8d
mov     edx, [rsp+0C8h+var_94]
mov     rcx, rax
call    sub_7FF6E3438400
nop
mov     rax, [rsp+0C8h+arg_0]
mov     [rsp+0C8h+var_78], rax
lea     rcx, [rsp+0C8h+var_70]
call    sub_7FF6E3434160
mov     rax, [rsp+0C8h+var_78]
add     rsp, 0B8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E34342D0
sub_7FF6E34342D0 endp

algn_7FF6E34344E5:
align 10h
; [00000058 BYTES: COLLAPSED FUNCTION std::error_category::operator==(std::error_category const &)]
algn_7FF6E3434548:
align 10h
; [0000007A BYTES: COLLAPSED FUNCTION std::operator==(std::error_condition const &,std::error_condition const &)]
algn_7FF6E34345CA:
align 10h



sub_7FF6E34345D0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
add     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E34345D0 endp

algn_7FF6E34345F5:
align 20h



sub_7FF6E3434600 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
cmp     qword ptr [rax], 0
jnz     short loc_7FF6E3434654
xor     edx, edx        ; int
lea     rcx, [rsp+38h+var_18] ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
nop
mov     rax, [rsp+38h+arg_0]
cmp     qword ptr [rax], 0
jnz     short loc_7FF6E3434649
mov     eax, cs:dword_7FF6E346E3F0
inc     eax
mov     cs:dword_7FF6E346E3F0, eax
movsxd  rax, cs:dword_7FF6E346E3F0
mov     rcx, [rsp+38h+arg_0]
mov     [rcx], rax

loc_7FF6E3434649:       ; this
lea     rcx, [rsp+38h+var_18]
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
nop

loc_7FF6E3434654:
mov     rax, [rsp+38h+arg_0]
mov     rax, [rax]
add     rsp, 38h
retn
sub_7FF6E3434600 endp

algn_7FF6E3434661:
align 10h
; [0000000F BYTES: COLLAPSED FUNCTION std::optional<unsigned __int64>::operator bool(void)]
align 20h



sub_7FF6E3434680 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h
arg_28= qword ptr  30h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     r8, [rsp+38h+arg_18]
mov     rdx, [rsp+38h+arg_10]
mov     rcx, [rsp+38h+arg_8]
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
mov     rax, [rsp+38h+arg_18]
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
mov     r8, [rsp+38h+arg_28]
mov     rdx, [rsp+38h+arg_20]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
mov     [rsp+38h+var_18], 0
mov     rax, [rsp+38h+arg_28]
mov     rcx, [rsp+38h+arg_18]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+38h+var_18]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
add     rsp, 38h
retn
sub_7FF6E3434680 endp

algn_7FF6E3434702:
align 10h



sub_7FF6E3434710 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h
arg_28= qword ptr  30h
arg_30= byte ptr  38h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     r8, [rsp+38h+arg_20]
mov     rdx, [rsp+38h+arg_10]
mov     rcx, [rsp+38h+arg_8]
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
mov     rax, [rsp+38h+arg_20]
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
movzx   r8d, [rsp+38h+arg_30]
mov     rdx, [rsp+38h+arg_28]
mov     rcx, rax
call    ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign(char * const,unsigned __int64,char)
mov     rax, [rsp+38h+arg_20]
mov     rcx, [rsp+38h+arg_18]
sub     rcx, rax
mov     rax, rcx
inc     rax
mov     rcx, [rsp+38h+arg_20]
mov     rdx, [rsp+38h+arg_10]
add     rdx, rcx
mov     rcx, rdx
mov     rdx, [rsp+38h+arg_20]
mov     r8, [rsp+38h+arg_8]
add     r8, rdx
mov     rdx, r8
add     rdx, [rsp+38h+arg_28]
mov     [rsp+38h+var_18], rdx
mov     r8, rax
mov     rdx, rcx
mov     rax, [rsp+38h+var_18]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
add     rsp, 38h
retn
sub_7FF6E3434710 endp

algn_7FF6E34347B5:
align 20h



sub_7FF6E34347C0 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h
arg_28= byte ptr  30h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     r8, [rsp+38h+arg_18]
mov     rdx, [rsp+38h+arg_10]
mov     rcx, [rsp+38h+arg_8]
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
mov     rax, [rsp+38h+arg_18]
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
movzx   r8d, [rsp+38h+arg_28]
mov     rdx, [rsp+38h+arg_20]
mov     rcx, rax
call    ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign(char * const,unsigned __int64,char)
nop
mov     [rsp+38h+var_18], 0
mov     rax, [rsp+38h+arg_20]
mov     rcx, [rsp+38h+arg_18]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+38h+arg_8]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+38h+var_18]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
add     rsp, 38h
retn
sub_7FF6E34347C0 endp

algn_7FF6E3434843:
align 10h



sub_7FF6E3434850 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_8]
mov     [rsp+38h+var_18], rax
cmp     [rsp+38h+var_18], 0
jz      short loc_7FF6E343488B
mov     rax, [rsp+38h+var_18]
mov     rax, [rax]
mov     edx, 1
mov     rcx, [rsp+38h+var_18]
call    qword ptr [rax]
mov     [rsp+38h+var_10], rax
jmp     short loc_7FF6E3434894

loc_7FF6E343488B:
mov     [rsp+38h+var_10], 0

loc_7FF6E3434894:
add     rsp, 38h
retn
sub_7FF6E3434850 endp

algn_7FF6E3434899:
align 20h



sub_7FF6E34348A0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E3433DE0
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E34348D2
mov     edx, 30h ; '0'
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E34348D2:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E34348A0 endp

algn_7FF6E34348DC:
align 20h



sub_7FF6E34348E0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block] ; this
call    ??1ios_base@std@@UEAA@XZ ; std::ios_base::~ios_base(void)
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434912
mov     edx, 10h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434912:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E34348E0 endp

algn_7FF6E343491C:
align 20h



sub_7FF6E3434920 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E3433E50
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434952
mov     edx, 30h ; '0'
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434952:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434920 endp

algn_7FF6E343495C:
align 20h



sub_7FF6E3434960 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E3433ED0
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434992
mov     edx, 8
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434992:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434960 endp

algn_7FF6E343499C:
align 20h



sub_7FF6E34349A0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E3433EF0
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E34349D2
mov     edx, 10h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E34349D2:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E34349A0 endp

algn_7FF6E34349DC:
align 20h



sub_7FF6E34349E0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E3434000
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434A12
mov     edx, 28h ; '('
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434A12:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E34349E0 endp

algn_7FF6E3434A1C:
align 20h



sub_7FF6E3434A20 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    unknown_libname_63 ; Microsoft VisualC v14 64bit runtime
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434A52
mov     edx, 18h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434A52:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434A20 endp

algn_7FF6E3434A5C:
align 20h



sub_7FF6E3434A60 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E3434000
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434A92
mov     edx, 18h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434A92:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434A60 endp

algn_7FF6E3434A9C:
align 20h



sub_7FF6E3434AA0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block] ; this
call    ??1ios_base@std@@UEAA@XZ_0 ; std::ios_base::~ios_base(void)
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434AD2
mov     edx, 10h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434AD2:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434AA0 endp

algn_7FF6E3434ADC:
align 20h



sub_7FF6E3434AE0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block] ; this
call    ??1exception@std@@UEAA@XZ ; std::exception::~exception(void)
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434B12
mov     edx, 18h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434B12:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434AE0 endp

algn_7FF6E3434B1C:
align 20h



sub_7FF6E3434B20 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block] ; this
call    ??1ios_base@std@@UEAA@XZ_1 ; std::ios_base::~ios_base(void)
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434B52
mov     edx, 10h
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434B52:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434B20 endp

algn_7FF6E3434B5C:
align 20h



sub_7FF6E3434B60 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E34340D0
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434B92
mov     edx, 28h ; '('
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434B92:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434B60 endp

algn_7FF6E3434B9C:
align 20h



sub_7FF6E3434BA0 proc near

Block= qword ptr  8
arg_8= dword ptr  10h

mov     [rsp+arg_8], edx
mov     [rsp+Block], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Block]
call    sub_7FF6E34341C0
mov     eax, [rsp+28h+arg_8]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E3434BD2
mov     edx, 28h ; '('
mov     rcx, [rsp+28h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3434BD2:
mov     rax, [rsp+28h+Block]
add     rsp, 28h
retn
sub_7FF6E3434BA0 endp

algn_7FF6E3434BDC:
align 20h



sub_7FF6E3434BE0 proc near

var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 48h
mov     rax, [rsp+48h+arg_8]
mov     rax, [rax]
add     rax, 27h ; '''
mov     rcx, [rsp+48h+arg_8]
mov     [rcx], rax
mov     rax, [rsp+48h+arg_0]
mov     rax, [rax]
mov     [rsp+48h+var_18], rax
mov     eax, 8
imul    rax, -1
mov     rcx, [rsp+48h+var_18]
mov     rax, [rcx+rax]
mov     [rsp+48h+var_20], rax
mov     [rsp+48h+var_10], 8
mov     rax, [rsp+48h+arg_0]
mov     rcx, [rsp+48h+var_20]
mov     rax, [rax]
sub     rax, rcx
mov     [rsp+48h+var_28], rax

loc_7FF6E3434C44:
cmp     [rsp+48h+var_28], 8
jb      short loc_7FF6E3434C56
cmp     [rsp+48h+var_28], 27h ; '''
ja      short loc_7FF6E3434C56
jmp     short loc_7FF6E3434C62

loc_7FF6E3434C56:
call    _invalid_parameter_noinfo_noreturn
align 4
xor     eax, eax
test    eax, eax
jnz     short loc_7FF6E3434C56

loc_7FF6E3434C62:
xor     eax, eax
test    eax, eax
jnz     short loc_7FF6E3434C44
mov     rax, [rsp+48h+arg_0]
mov     rcx, [rsp+48h+var_20]
mov     [rax], rcx
add     rsp, 48h
retn
sub_7FF6E3434BE0 endp

algn_7FF6E3434C7A:
align 20h



sub_7FF6E3434C80 proc near

Size= qword ptr  8

mov     [rsp+Size], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Size] ; Size
call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
add     rsp, 28h
retn
sub_7FF6E3434C80 endp

algn_7FF6E3434C98:
align 20h
; [00000047 BYTES: COLLAPSED FUNCTION unknown_libname_13]
algn_7FF6E3434CE7:
align 10h



sub_7FF6E3434CF0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0]
call    ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::string::max_size(void)
mov     r8, rax
mov     rax, [rsp+28h+arg_0]
mov     rdx, [rax+18h]
mov     rcx, [rsp+28h+arg_8]
call    ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::string::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64)
add     rsp, 28h
retn
sub_7FF6E3434CF0 endp

algn_7FF6E3434D23:
align 10h
; [00000092 BYTES: COLLAPSED FUNCTION std::string::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64)]
algn_7FF6E3434DC2:
align 10h



sub_7FF6E3434DD0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, [rsp+28h+arg_8]
cmp     [rax+10h], rcx
jnb     short loc_7FF6E3434DF4
call    sub_7FF6E34366A0
align 4

loc_7FF6E3434DF4:
add     rsp, 28h
retn
sub_7FF6E3434DD0 endp

algn_7FF6E3434DF9:
align 20h



sub_7FF6E3434E00 proc near

var_18= byte ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
mov     [rsp+38h+var_10], rax
lea     rdx, unk_7FF6E345D3E0 ; struct __crt_win32_buffer_empty_debug_info *
mov     rcx, [rsp+38h+var_10] ; void *
call    ?deallocate@__crt_win32_buffer_no_resizing@@SAXQEAXAEBV__crt_win32_buffer_empty_debug_info@@@Z ; Microsoft VisualC v14 64bit runtime
mov     rax, [rsp+38h+var_10]
mov     qword ptr [rax+10h], 0
mov     rax, [rsp+38h+var_10]
mov     qword ptr [rax+18h], 0Fh
mov     rcx, [rsp+38h+var_10]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop
mov     [rsp+38h+var_18], 0
mov     eax, 1
imul    rax, 0
mov     rcx, [rsp+38h+var_10]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+38h+var_18]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
add     rsp, 38h
retn
sub_7FF6E3434E00 endp

algn_7FF6E3434E75:
align 20h



sub_7FF6E3434E80 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_10]
inc     rax
mov     r8, rax
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3436BF0
nop
add     rsp, 28h
retn
sub_7FF6E3434E80 endp

algn_7FF6E3434EB3:
align 20h
; [00000029 BYTES: COLLAPSED FUNCTION std::locale::facet::_Decref(void)]
align 10h



sub_7FF6E3434EF0 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rsp+38h+arg_8]
mov     [rax+10h], rcx
mov     [rsp+38h+var_18], 0
mov     rax, [rsp+38h+arg_0]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
add     rax, [rsp+38h+arg_8]
lea     rdx, [rsp+38h+var_18]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
add     rsp, 38h
retn
sub_7FF6E3434EF0 endp

algn_7FF6E3434F36:
align 20h
; [0000016F BYTES: COLLAPSED FUNCTION unknown_libname_14]
algn_7FF6E34350AF:
align 10h



sub_7FF6E34350B0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
add     rsp, 28h
retn
sub_7FF6E34350B0 endp

algn_7FF6E34350CB:
align 10h



sub_7FF6E34350D0 proc near

var_88= dword ptr -88h
var_80= qword ptr -80h
var_78= qword ptr -78h
var_70= byte ptr -70h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 0A8h
mov     [rsp+0A8h+var_88], 0
cmp     [rsp+0A8h+arg_0], 0
jz      loc_7FF6E343518B
mov     rax, [rsp+0A8h+arg_0]
cmp     qword ptr [rax], 0
jnz     loc_7FF6E343518B
mov     ecx, 30h ; '0'  ; Size
call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
mov     [rsp+0A8h+var_80], rax
cmp     [rsp+0A8h+var_80], 0
jz      short loc_7FF6E3435157
mov     rcx, [rsp+0A8h+arg_8]
call    unknown_libname_13 ; Microsoft VisualC v14 64bit runtime
mov     rdx, rax
lea     rcx, [rsp+0A8h+var_70]
call    sub_7FF6E3433420
or      [rsp+0A8h+var_88], 1
xor     r8d, r8d
mov     rdx, rax
mov     rcx, [rsp+0A8h+var_80]
call    unknown_libname_7 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0A8h+var_78], rax
jmp     short loc_7FF6E3435160

loc_7FF6E3435157:
mov     [rsp+0A8h+var_78], 0

loc_7FF6E3435160:
mov     rax, [rsp+0A8h+arg_0]
mov     rcx, [rsp+0A8h+var_78]
mov     [rax], rcx
mov     eax, [rsp+0A8h+var_88]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E343518B
and     [rsp+0A8h+var_88], 0FFFFFFFEh
lea     rcx, [rsp+0A8h+var_70]
call    sub_7FF6E3433F10
nop

loc_7FF6E343518B:
mov     eax, 2
add     rsp, 0A8h
retn
sub_7FF6E34350D0 endp

algn_7FF6E3435198:
align 20h



sub_7FF6E34351A0 proc near

var_88= dword ptr -88h
var_80= qword ptr -80h
var_78= qword ptr -78h
var_70= byte ptr -70h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 0A8h
mov     [rsp+0A8h+var_88], 0
cmp     [rsp+0A8h+arg_0], 0
jz      loc_7FF6E343525B
mov     rax, [rsp+0A8h+arg_0]
cmp     qword ptr [rax], 0
jnz     loc_7FF6E343525B
mov     ecx, 10h        ; Size
call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
mov     [rsp+0A8h+var_80], rax
cmp     [rsp+0A8h+var_80], 0
jz      short loc_7FF6E3435227
mov     rcx, [rsp+0A8h+arg_8]
call    unknown_libname_13 ; Microsoft VisualC v14 64bit runtime
mov     rdx, rax
lea     rcx, [rsp+0A8h+var_70]
call    sub_7FF6E3433420
or      [rsp+0A8h+var_88], 1
xor     r8d, r8d
mov     rdx, rax
mov     rcx, [rsp+0A8h+var_80]
call    unknown_libname_8 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0A8h+var_78], rax
jmp     short loc_7FF6E3435230

loc_7FF6E3435227:
mov     [rsp+0A8h+var_78], 0

loc_7FF6E3435230:
mov     rax, [rsp+0A8h+arg_0]
mov     rcx, [rsp+0A8h+var_78]
mov     [rax], rcx
mov     eax, [rsp+0A8h+var_88]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E343525B
and     [rsp+0A8h+var_88], 0FFFFFFFEh
lea     rcx, [rsp+0A8h+var_70]
call    sub_7FF6E3433F10
nop

loc_7FF6E343525B:
mov     eax, 4
add     rsp, 0A8h
retn
sub_7FF6E34351A0 endp

algn_7FF6E3435268:
align 10h



sub_7FF6E3435270 proc near

var_88= dword ptr -88h
var_80= qword ptr -80h
var_78= qword ptr -78h
var_70= byte ptr -70h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 0A8h
mov     [rsp+0A8h+var_88], 0
cmp     [rsp+0A8h+arg_0], 0
jz      loc_7FF6E343532E
mov     rax, [rsp+0A8h+arg_0]
cmp     qword ptr [rax], 0
jnz     loc_7FF6E343532E
mov     ecx, 30h ; '0'  ; Size
call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
mov     [rsp+0A8h+var_80], rax
cmp     [rsp+0A8h+var_80], 0
jz      short loc_7FF6E34352FA
mov     rcx, [rsp+0A8h+arg_8]
call    unknown_libname_13 ; Microsoft VisualC v14 64bit runtime
mov     rdx, rax
lea     rcx, [rsp+0A8h+var_70]
call    sub_7FF6E3433420
or      [rsp+0A8h+var_88], 1
mov     r9b, 1
xor     r8d, r8d
mov     rdx, rax
mov     rcx, [rsp+0A8h+var_80]
call    sub_7FF6E3433330
mov     [rsp+0A8h+var_78], rax
jmp     short loc_7FF6E3435303

loc_7FF6E34352FA:
mov     [rsp+0A8h+var_78], 0

loc_7FF6E3435303:
mov     rax, [rsp+0A8h+arg_0]
mov     rcx, [rsp+0A8h+var_78]
mov     [rax], rcx
mov     eax, [rsp+0A8h+var_88]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E343532E
and     [rsp+0A8h+var_88], 0FFFFFFFEh
lea     rcx, [rsp+0A8h+var_70]
call    sub_7FF6E3433F10
nop

loc_7FF6E343532E:
mov     eax, 4
add     rsp, 0A8h
retn
sub_7FF6E3435270 endp

algn_7FF6E343533B:
align 20h
; [00000052 BYTES: COLLAPSED FUNCTION std::_Locinfo::_Getctype(void)]
algn_7FF6E3435392:
align 20h
; [0000007A BYTES: COLLAPSED FUNCTION std::_Locinfo::_Getcvt(void)]
algn_7FF6E343541A:
align 20h
; [000000A7 BYTES: COLLAPSED FUNCTION std::locale::_Getfacet(unsigned __int64)]
algn_7FF6E34354C7:
align 10h



sub_7FF6E34354D0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
lea     rax, aFalse     ; "false"
retn
sub_7FF6E34354D0 endp

align 20h



sub_7FF6E34354E0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
call    localeconv
add     rsp, 28h
retn
sub_7FF6E34354E0 endp

algn_7FF6E34354F3:
align 20h



sub_7FF6E3435500 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
lea     rax, aTrue      ; "true"
retn
sub_7FF6E3435500 endp

align 10h
; [00000186 BYTES: COLLAPSED FUNCTION unknown_libname_15]
algn_7FF6E3435696:
align 20h
; [00000012 BYTES: COLLAPSED FUNCTION unknown_libname_16]
align 20h
; [00000039 BYTES: COLLAPSED FUNCTION std::ctype<char>::_Init(std::_Locinfo const &)]
algn_7FF6E34356F9:
align 20h



sub_7FF6E3435700 proc near

var_D8= qword ptr -0D8h
var_D0= qword ptr -0D0h
var_C8= qword ptr -0C8h
var_B8= byte ptr -0B8h
var_88= _Cvtvec ptr -88h
var_58= _Cvtvec ptr -58h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0E8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0F8h+var_28], rax
mov     rcx, [rsp+0F8h+arg_8]
call    sub_7FF6E34354E0
mov     [rsp+0F8h+var_D0], rax
lea     rdx, [rsp+0F8h+var_88] ; retstr
mov     rcx, [rsp+0F8h+arg_8] ; this
call    ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ; std::_Locinfo::_Getcvt(void)
mov     rax, [rsp+0F8h+arg_0]
mov     qword ptr [rax+10h], 0
mov     rax, [rsp+0F8h+arg_0]
mov     qword ptr [rax+20h], 0
mov     rax, [rsp+0F8h+arg_0]
mov     qword ptr [rax+28h], 0
mov     rax, [rsp+0F8h+arg_0]
mov     [rsp+0F8h+var_C8], rax
movzx   eax, [rsp+0F8h+arg_10]
test    eax, eax
jz      short loc_7FF6E34357A5
lea     rax, unk_7FF6E345D5A8
mov     [rsp+0F8h+var_D8], rax
jmp     short loc_7FF6E34357B3

loc_7FF6E34357A5:
mov     rax, [rsp+0F8h+var_D0]
mov     rax, [rax+10h]
mov     [rsp+0F8h+var_D8], rax

loc_7FF6E34357B3:       ; retstr
lea     rdx, [rsp+0F8h+var_58]
mov     rcx, [rsp+0F8h+arg_8] ; this
call    ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ ; std::_Locinfo::_Getcvt(void)
mov     r8, rax
xor     edx, edx
mov     rcx, [rsp+0F8h+var_D8]
call    sub_7FF6E3432570
mov     rcx, [rsp+0F8h+arg_0]
mov     [rcx+10h], rax
mov     rcx, [rsp+0F8h+arg_8]
call    sub_7FF6E34354D0
lea     r8, [rsp+0F8h+var_88]
xor     edx, edx
mov     rcx, rax
call    sub_7FF6E3432570
mov     rcx, [rsp+0F8h+arg_0]
mov     [rcx+20h], rax
mov     rcx, [rsp+0F8h+arg_8]
call    sub_7FF6E3435500
lea     r8, [rsp+0F8h+var_88]
xor     edx, edx
mov     rcx, rax
call    sub_7FF6E3432570
mov     rcx, [rsp+0F8h+arg_0]
mov     [rcx+28h], rax
mov     [rsp+0F8h+var_C8], 0
movzx   eax, [rsp+0F8h+arg_10]
test    eax, eax
jz      short loc_7FF6E343587C
lea     r8, [rsp+0F8h+var_88]
xor     edx, edx
mov     cl, 2Eh ; '.'
call    ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ; std::_Maklocchr<char>(char,char *,_Cvtvec const &)
mov     rcx, [rsp+0F8h+arg_0]
mov     [rcx+18h], al
lea     r8, [rsp+0F8h+var_88]
xor     edx, edx
mov     cl, 2Ch ; ','
call    ??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z ; std::_Maklocchr<char>(char,char *,_Cvtvec const &)
mov     rcx, [rsp+0F8h+arg_0]
mov     [rcx+19h], al
jmp     short loc_7FF6E34358AD

loc_7FF6E343587C:
lea     rax, [rsp+0F8h+var_B8]
lea     rcx, [rsp+0F8h+var_88]
mov     rdi, rax
mov     rsi, rcx
mov     ecx, 2Ch ; ','
rep movsb
lea     r9, [rsp+0F8h+var_B8]
mov     r8, [rsp+0F8h+var_D0]
xor     edx, edx
mov     rcx, [rsp+0F8h+arg_0]
call    ??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z ; std::numpunct<char>::_Getvals<char>(char,lconv const *,_Cvtvec)
nop

loc_7FF6E34358AD:
lea     rcx, [rsp+0F8h+var_C8]
call    sub_7FF6E3433D60
nop
mov     rcx, [rsp+0F8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0E8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3435700
sub_7FF6E3435700 endp

algn_7FF6E34358D2:
align 20h



sub_7FF6E34358E0 proc near

var_1B8= qword ptr -1B8h
var_1A8= byte ptr -1A8h
var_1A0= qword ptr -1A0h
var_198= qword ptr -198h
var_190= dword ptr -190h
var_188= qword ptr -188h
var_180= qword ptr -180h
var_178= qword ptr -178h
var_170= qword ptr -170h
var_168= qword ptr -168h
var_160= byte ptr -160h
var_150= byte ptr -150h
var_138= byte ptr -138h
var_128= byte ptr -128h
var_118= byte ptr -118h
var_108= byte ptr -108h
var_F8= byte ptr -0F8h
var_E8= byte ptr -0E8h
var_D8= byte ptr -0D8h
var_C8= byte ptr -0C8h
var_B8= byte ptr -0B8h
var_A8= byte ptr -0A8h
var_98= byte ptr -98h
var_88= byte ptr -88h
var_78= byte ptr -78h
var_68= byte ptr -68h
var_48= byte ptr -48h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= qword ptr  30h
arg_30= qword ptr  38h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 1C8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+1D8h+var_28], rax
cmp     [rsp+1D8h+arg_30], 0
jbe     short loc_7FF6E3435945
mov     rax, [rsp+1D8h+arg_28]
movsx   eax, byte ptr [rax]
cmp     eax, 2Bh ; '+'
jz      short loc_7FF6E343593A
mov     rax, [rsp+1D8h+arg_28]
movsx   eax, byte ptr [rax]
cmp     eax, 2Dh ; '-'
jnz     short loc_7FF6E3435945

loc_7FF6E343593A:
mov     [rsp+1D8h+var_180], 1
jmp     short loc_7FF6E343594E

loc_7FF6E3435945:
mov     [rsp+1D8h+var_180], 0

loc_7FF6E343594E:
mov     rax, [rsp+1D8h+var_180]
mov     [rsp+1D8h+var_1A0], rax
mov     rcx, [rsp+1D8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 0E00h
cmp     eax, 800h
jnz     short loc_7FF6E34359E5
mov     rax, [rsp+1D8h+var_1A0]
add     rax, 2
cmp     rax, [rsp+1D8h+arg_30]
ja      short loc_7FF6E34359E5
mov     rax, [rsp+1D8h+var_1A0]
mov     rcx, [rsp+1D8h+arg_28]
add     rcx, rax
mov     rax, rcx
movsx   eax, byte ptr [rax]
cmp     eax, 30h ; '0'
jnz     short loc_7FF6E34359E5
mov     rax, [rsp+1D8h+var_1A0]
mov     rcx, [rsp+1D8h+arg_28]
add     rcx, rax
mov     rax, rcx
movsx   eax, byte ptr [rax+1]
cmp     eax, 78h ; 'x'
jz      short loc_7FF6E34359D7
mov     rax, [rsp+1D8h+var_1A0]
mov     rcx, [rsp+1D8h+arg_28]
add     rcx, rax
mov     rax, rcx
movsx   eax, byte ptr [rax+1]
cmp     eax, 58h ; 'X'
jnz     short loc_7FF6E34359E5

loc_7FF6E34359D7:
mov     rax, [rsp+1D8h+var_1A0]
add     rax, 2
mov     [rsp+1D8h+var_1A0], rax

loc_7FF6E34359E5:
lea     rdx, [rsp+1D8h+var_160]
mov     rcx, [rsp+1D8h+arg_18]
call    ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
mov     rcx, rax
call    sub_7FF6E3432CF0
mov     [rsp+1D8h+var_170], rax
lea     rcx, [rsp+1D8h+var_160]
call    sub_7FF6E34340F0
nop
xor     r8d, r8d
mov     rdx, [rsp+1D8h+arg_30]
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E3433240
xor     edx, edx
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E34345D0
mov     rcx, [rsp+1D8h+arg_30]
mov     rdx, [rsp+1D8h+arg_28]
add     rdx, rcx
mov     rcx, rdx
mov     r9, rax
mov     r8, rcx
mov     rdx, [rsp+1D8h+arg_28]
mov     rcx, [rsp+1D8h+var_170]
call    sub_7FF6E34385C0
nop
lea     rdx, [rsp+1D8h+var_150]
mov     rcx, [rsp+1D8h+arg_18]
call    ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
mov     rcx, rax
call    sub_7FF6E3432EF0
mov     [rsp+1D8h+var_178], rax
lea     rcx, [rsp+1D8h+var_150]
call    sub_7FF6E34340F0
nop
lea     rdx, [rsp+1D8h+var_48]
mov     rcx, [rsp+1D8h+var_178]
call    sub_7FF6E3437F70
xor     edx, edx
lea     rcx, [rsp+1D8h+var_48]
call    sub_7FF6E34345D0
mov     [rsp+1D8h+var_198], rax
mov     rax, [rsp+1D8h+var_198]
movsx   eax, byte ptr [rax]
cmp     eax, 7Fh
jz      loc_7FF6E3435B95
mov     rax, [rsp+1D8h+var_198]
movsx   eax, byte ptr [rax]
test    eax, eax
jle     loc_7FF6E3435B95
mov     rcx, [rsp+1D8h+var_178]
call    sub_7FF6E3438500
mov     [rsp+1D8h+var_1A8], al

loc_7FF6E3435AEA:
mov     rax, [rsp+1D8h+var_198]
movsx   eax, byte ptr [rax]
cmp     eax, 7Fh
jz      loc_7FF6E3435B95
mov     rax, [rsp+1D8h+var_198]
movsx   eax, byte ptr [rax]
test    eax, eax
jle     loc_7FF6E3435B95
mov     rax, [rsp+1D8h+var_198]
movsx   rax, byte ptr [rax]
mov     rcx, [rsp+1D8h+var_1A0]
mov     rdx, [rsp+1D8h+arg_30]
sub     rdx, rcx
mov     rcx, rdx
cmp     rax, rcx
jnb     short loc_7FF6E3435B95
mov     rax, [rsp+1D8h+var_198]
movsx   rax, byte ptr [rax]
mov     rcx, [rsp+1D8h+arg_30]
sub     rcx, rax
mov     rax, rcx
mov     [rsp+1D8h+arg_30], rax
movzx   r9d, [rsp+1D8h+var_1A8]
mov     r8d, 1
mov     rdx, [rsp+1D8h+arg_30]
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E3437FA0
nop
mov     eax, 1
imul    rax, 1
mov     rcx, [rsp+1D8h+var_198]
movsx   eax, byte ptr [rcx+rax]
test    eax, eax
jle     short loc_7FF6E3435B90
mov     rax, [rsp+1D8h+var_198]
inc     rax
mov     [rsp+1D8h+var_198], rax

loc_7FF6E3435B90:
jmp     loc_7FF6E3435AEA

loc_7FF6E3435B95:
lea     rcx, [rsp+1D8h+var_68]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+1D8h+arg_30], rax
mov     rcx, [rsp+1D8h+arg_18] ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
test    rax, rax
jle     short loc_7FF6E3435BD3
mov     rcx, [rsp+1D8h+arg_18] ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
cmp     rax, [rsp+1D8h+arg_30]
ja      short loc_7FF6E3435BDE

loc_7FF6E3435BD3:
mov     [rsp+1D8h+var_188], 0
jmp     short loc_7FF6E3435BF8

loc_7FF6E3435BDE:       ; this
mov     rcx, [rsp+1D8h+arg_18]
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
sub     rax, [rsp+1D8h+arg_30]
mov     [rsp+1D8h+var_188], rax

loc_7FF6E3435BF8:
mov     rcx, [rsp+1D8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 1C0h
mov     [rsp+1D8h+var_190], eax
cmp     [rsp+1D8h+var_190], 40h ; '@'
jz      loc_7FF6E3435CF6
cmp     [rsp+1D8h+var_190], 100h
jz      loc_7FF6E3435CF6
lea     rax, [rsp+1D8h+var_138]
mov     rdi, rax
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+1D8h+var_188]
mov     [rsp+1D8h+var_1B8], rax
movzx   r9d, [rsp+1D8h+arg_20]
lea     r8, [rsp+1D8h+var_138]
lea     rdx, [rsp+1D8h+var_C8]
mov     rcx, [rsp+1D8h+arg_0]
call    sub_7FF6E3436240
mov     rdi, [rsp+1D8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
mov     [rsp+1D8h+var_188], 0
xor     edx, edx
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1D8h+var_128]
mov     rdi, rcx
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1D8h+var_1A0]
mov     [rsp+1D8h+var_1B8], rcx
mov     r9, rax
lea     r8, [rsp+1D8h+var_128]
lea     rdx, [rsp+1D8h+var_B8]
mov     rcx, [rsp+1D8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1D8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
jmp     loc_7FF6E3435E35

loc_7FF6E3435CF6:
cmp     [rsp+1D8h+var_190], 100h
jnz     loc_7FF6E3435DD0
xor     edx, edx
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1D8h+var_118]
mov     rdi, rcx
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1D8h+var_1A0]
mov     [rsp+1D8h+var_1B8], rcx
mov     r9, rax
lea     r8, [rsp+1D8h+var_118]
lea     rdx, [rsp+1D8h+var_A8]
mov     rcx, [rsp+1D8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1D8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
lea     rax, [rsp+1D8h+var_108]
mov     rdi, rax
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+1D8h+var_188]
mov     [rsp+1D8h+var_1B8], rax
movzx   r9d, [rsp+1D8h+arg_20]
lea     r8, [rsp+1D8h+var_108]
lea     rdx, [rsp+1D8h+var_98]
mov     rcx, [rsp+1D8h+arg_0]
call    sub_7FF6E3436240
mov     rdi, [rsp+1D8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
mov     [rsp+1D8h+var_188], 0
jmp     short loc_7FF6E3435E35

loc_7FF6E3435DD0:
xor     edx, edx
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1D8h+var_F8]
mov     rdi, rcx
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1D8h+var_1A0]
mov     [rsp+1D8h+var_1B8], rcx
mov     r9, rax
lea     r8, [rsp+1D8h+var_F8]
lea     rdx, [rsp+1D8h+var_88]
mov     rcx, [rsp+1D8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1D8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb

loc_7FF6E3435E35:
mov     rax, [rsp+1D8h+var_1A0]
mov     rcx, [rsp+1D8h+arg_30]
sub     rcx, rax
mov     rax, rcx
mov     [rsp+1D8h+var_168], rax
mov     rdx, [rsp+1D8h+var_1A0]
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E34345D0
lea     rcx, [rsp+1D8h+var_E8]
mov     rdi, rcx
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+1D8h+var_168]
mov     [rsp+1D8h+var_1B8], rcx
mov     r9, rax
lea     r8, [rsp+1D8h+var_E8]
lea     rdx, [rsp+1D8h+var_78]
mov     rcx, [rsp+1D8h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+1D8h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
xor     edx, edx        ; __int64
mov     rcx, [rsp+1D8h+arg_18] ; this
call    ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width(__int64)
lea     rax, [rsp+1D8h+var_D8]
mov     rdi, rax
mov     rsi, [rsp+1D8h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+1D8h+var_188]
mov     [rsp+1D8h+var_1B8], rax
movzx   r9d, [rsp+1D8h+arg_20]
lea     r8, [rsp+1D8h+var_D8]
mov     rdx, [rsp+1D8h+arg_8]
mov     rcx, [rsp+1D8h+arg_0]
call    sub_7FF6E3436240
lea     rcx, [rsp+1D8h+var_48]
call    sub_7FF6E3433DB0
lea     rcx, [rsp+1D8h+var_68]
call    sub_7FF6E3433DB0
mov     rax, [rsp+1D8h+arg_8]
mov     rcx, [rsp+1D8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 1C8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E34358E0
sub_7FF6E34358E0 endp

algn_7FF6E3435F4A:
align 10h
; [0000002E BYTES: COLLAPSED FUNCTION std::_String_val<std::_Simple_types<char>>::_Large_mode_engaged(void)]
algn_7FF6E3435F7E:
align 20h



sub_7FF6E3435F80 proc near

var_38= byte ptr -38h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 58h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+58h+var_18], rax
mov     rcx, [rsp+58h+arg_10]
call    unknown_libname_25 ; Microsoft VisualC v14 64bit runtime
movzx   eax, al
test    eax, eax
jnz     short loc_7FF6E3435FC5
lea     rdx, unk_7FF6E345D4A0
mov     rcx, [rsp+58h+arg_10]
call    sub_7FF6E3436730
nop

loc_7FF6E3435FC5:
lea     rdx, [rsp+58h+var_38]
mov     rcx, [rsp+58h+arg_8]
call    sub_7FF6E3438220
mov     rdx, rax
mov     rcx, [rsp+58h+arg_10]
call    sub_7FF6E34366F0
lea     rcx, [rsp+58h+var_38]
call    sub_7FF6E3433DB0
nop
mov     rdx, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+arg_0]
call    sub_7FF6E3433080
mov     rcx, [rsp+58h+arg_10]
call    sub_7FF6E3433DB0
mov     rax, [rsp+58h+arg_0]
mov     rcx, [rsp+58h+var_18]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 58h
retn
; } // starts at 7FF6E3435F80
sub_7FF6E3435F80 endp

algn_7FF6E343601C:
align 20h
; [00000040 BYTES: COLLAPSED FUNCTION unknown_libname_17]



sub_7FF6E3436060 proc near

arg_0= qword ptr  8

; __unwind { // __CxxFrameHandler4
mov     [rsp+arg_0], rcx
sub     rsp, 28h
;   try {
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+28h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    sub_7FF6E3437F30
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E3436109
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+28h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 2
test    eax, eax
jz      short loc_7FF6E3436109
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+28h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
mov     rcx, rax
call    sub_7FF6E34382A0
cmp     eax, 0FFFFFFFFh
jnz     short loc_7FF6E3436109
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+28h+arg_0]
add     rcx, rax
mov     rax, rcx
xor     r8d, r8d
mov     edx, 4
mov     rcx, rax
call    sub_7FF6E3438400
nop
;   } // starts at 7FF6E3436069

loc_7FF6E3436109:
jmp     short $+2

loc_7FF6E343610B:
add     rsp, 28h
retn
; } // starts at 7FF6E3436060
sub_7FF6E3436060 endp

; [00000038 BYTES: COLLAPSED FUNCTION unknown_libname_18]
algn_7FF6E3436148:
align 10h
; [00000055 BYTES: COLLAPSED FUNCTION std::streambuf::_Pninc(void)]
algn_7FF6E34361A5:
align 10h
; [00000082 BYTES: COLLAPSED FUNCTION std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)]
algn_7FF6E3436232:
align 20h



sub_7FF6E3436240 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= byte ptr  20h
arg_20= qword ptr  28h

mov     [rsp+arg_18], r9b
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 28h
jmp     short loc_7FF6E3436274

loc_7FF6E343625C:
mov     rax, [rsp+38h+arg_20]
dec     rax
mov     [rsp+38h+arg_20], rax
mov     rcx, [rsp+38h+arg_10]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
nop

loc_7FF6E3436274:
cmp     [rsp+38h+arg_20], 0
jbe     short loc_7FF6E3436296
mov     rcx, [rsp+38h+arg_10]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
movzx   edx, [rsp+38h+arg_18]
mov     rcx, rax
call    sub_7FF6E3434270
nop
jmp     short loc_7FF6E343625C

loc_7FF6E3436296:
mov     rdi, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+38h+arg_8]
add     rsp, 28h
pop     rdi
pop     rsi
retn
sub_7FF6E3436240 endp

algn_7FF6E34362B3:
align 20h



sub_7FF6E34362C0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0] ; void *
mov     rdx, rax        ; struct __crt_win32_buffer_empty_debug_info *
call    ?deallocate@__crt_win32_buffer_no_resizing@@SAXQEAXAEBV__crt_win32_buffer_empty_debug_info@@@Z ; Microsoft VisualC v14 64bit runtime
nop
add     rsp, 28h
retn
sub_7FF6E34362C0 endp

algn_7FF6E34362E6:
align 10h



sub_7FF6E34362F0 proc near

var_38= byte ptr -38h
var_37= byte ptr -37h
var_30= qword ptr -30h
var_28= qword ptr -28h
Src= qword ptr -20h
var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 58h
mov     rax, [rsp+58h+arg_0]
mov     [rsp+58h+var_28], rax
mov     rax, [rsp+58h+arg_8]
mov     [rsp+58h+var_30], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+58h+var_18], rax
mov     rax, [rsp+58h+arg_8]
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+58h+Src], rax
mov     r8d, 20h ; ' '  ; Size
mov     rdx, [rsp+58h+Src] ; Src
mov     rcx, [rsp+58h+var_18] ; void *
call    memcpy
mov     rax, [rsp+58h+var_30]
mov     qword ptr [rax+10h], 0
mov     rax, [rsp+58h+var_30]
mov     qword ptr [rax+18h], 0Fh
mov     rcx, [rsp+58h+var_30]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
nop
mov     [rsp+58h+var_38], 0
mov     eax, 1
imul    rax, 0
mov     rcx, [rsp+58h+var_30]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+58h+var_38]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
jmp     loc_7FF6E3436486
mov     rcx, [rsp+58h+var_30]
call    ?_Large_mode_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char>>::_Large_mode_engaged(void)
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E34363DE
mov     rdx, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+arg_0]
call    sub_7FF6E34362C0
mov     rax, [rsp+58h+var_30]
mov     rcx, [rsp+58h+var_28]
mov     rdx, rax
call    sub_7FF6E3431BE0
mov     rax, [rsp+58h+var_30]
mov     rcx, rax
call    sub_7FF6E3433D40
nop
jmp     short loc_7FF6E3436421

loc_7FF6E34363DE:
mov     rcx, [rsp+58h+var_30]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
mov     rcx, [rsp+58h+var_28]
call    ??R_lambda_daad5f71a1db84f3475a074fd2d177ad_@@QEBA@XZ ; _lambda_daad5f71a1db84f3475a074fd2d177ad_::operator()(void)
mov     rax, [rsp+58h+var_30]
mov     rax, [rax+10h]
inc     rax
mov     rcx, [rsp+58h+var_30]
mov     rdx, [rsp+58h+var_28]
mov     [rsp+58h+var_10], rdx
mov     r8, rax
mov     rdx, rcx
mov     rax, [rsp+58h+var_10]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop

loc_7FF6E3436421:
mov     rax, [rsp+58h+var_28]
mov     rcx, [rsp+58h+var_30]
mov     rcx, [rcx+18h]
mov     [rax+18h], rcx
mov     rax, [rsp+58h+var_28]
mov     rcx, [rsp+58h+var_30]
mov     rcx, [rcx+10h]
mov     [rax+10h], rcx
mov     rax, [rsp+58h+var_30]
mov     qword ptr [rax+10h], 0
mov     rax, [rsp+58h+var_30]
mov     qword ptr [rax+18h], 0Fh
mov     [rsp+58h+var_37], 0
mov     eax, 1
imul    rax, 0
mov     rcx, [rsp+58h+var_30]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+58h+var_37]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop

loc_7FF6E3436486:
add     rsp, 58h
retn
sub_7FF6E34362F0 endp

algn_7FF6E343648B:
align 10h


; Attributes: noreturn

sub_7FF6E3436490 proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
lea     rcx, [rsp+48h+pExceptionObject] ; this
call    ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length(void)
lea     rdx, pThrowInfo ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
sub_7FF6E3436490 endp

align 10h
add     rsp, 48h
retn
algn_7FF6E34364B5:
align 20h


; Attributes: noreturn

sub_7FF6E34364C0 proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
lea     rcx, [rsp+48h+pExceptionObject]
call    sub_7FF6E34337D0
lea     rdx, stru_7FF6E346BEE0 ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
sub_7FF6E34364C0 endp

align 20h
add     rsp, 48h
retn
algn_7FF6E34364E5:
align 10h



sub_7FF6E34364F0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
cmp     qword ptr [rax], 0
jz      short loc_7FF6E3436512
mov     rax, [rsp+28h+arg_0]
mov     rcx, [rax]      ; Block
call    j__free_base
nop

loc_7FF6E3436512:
mov     rax, [rsp+28h+arg_0]
mov     qword ptr [rax], 0
add     rsp, 28h
retn
sub_7FF6E34364F0 endp

algn_7FF6E3436523:
align 10h



sub_7FF6E3436530 proc near

Block= qword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
cmp     dword ptr [rax+20h], 0
jle     short loc_7FF6E3436555
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rax+18h]  ; Block
call    j__free_base
nop
jmp     short loc_7FF6E3436579

loc_7FF6E3436555:
mov     rax, [rsp+38h+arg_0]
cmp     dword ptr [rax+20h], 0
jge     short loc_7FF6E3436579
mov     rax, [rsp+38h+arg_0]
mov     rax, [rax+18h]
mov     [rsp+38h+Block], rax
mov     rcx, [rsp+38h+Block] ; Block
call    j_j_j__free_base
nop

loc_7FF6E3436579:
mov     rax, [rsp+38h+arg_0]
mov     rcx, [rax+28h]  ; Block
call    j__free_base
nop
add     rsp, 38h
retn
sub_7FF6E3436530 endp

algn_7FF6E343658D:
align 10h
; [00000039 BYTES: COLLAPSED FUNCTION unknown_libname_19]
algn_7FF6E34365C9:
align 10h
; [000000AD BYTES: COLLAPSED FUNCTION sub_7FF6E34365D0]
algn_7FF6E343667D:
align 20h


; Attributes: noreturn

sub_7FF6E3436680 proc near
sub     rsp, 28h
lea     rcx, aStringTooLong ; "string too long"
call    sub_7FF6E3438A90
sub_7FF6E3436680 endp

db 90h
add     rsp, 28h
retn
algn_7FF6E3436696:
align 20h


; Attributes: noreturn

sub_7FF6E34366A0 proc near
sub     rsp, 28h
lea     rcx, aInvalidStringP ; "invalid string position"
call    sub_7FF6E3438AB4
sub_7FF6E34366A0 endp

db 90h
add     rsp, 28h
retn
algn_7FF6E34366B6:
align 20h
; [00000025 BYTES: COLLAPSED FUNCTION std::allocator<char>::allocate(unsigned __int64)]
algn_7FF6E34366E5:
align 10h



sub_7FF6E34366F0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_8]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
mov     rcx, [rsp+28h+arg_8]
mov     r8, [rcx+10h]
mov     rdx, rax
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3436770
add     rsp, 28h
retn
sub_7FF6E34366F0 endp

algn_7FF6E3436726:
align 10h



sub_7FF6E3436730 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_8]
call    sub_7FF6E34380E0
mov     rcx, rax
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     r8, rax
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3436770
add     rsp, 28h
retn
sub_7FF6E3436730 endp

algn_7FF6E3436767:
align 10h



sub_7FF6E3436770 proc near

var_38= qword ptr -38h
var_28= byte ptr -28h
var_27= byte ptr -27h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rdi
sub     rsp, 50h
mov     rax, [rsp+58h+arg_0]
mov     rax, [rax+10h]
mov     [rsp+58h+var_20], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, [rsp+58h+var_20]
mov     rax, [rax+18h]
sub     rax, rcx
cmp     [rsp+58h+arg_10], rax
ja      loc_7FF6E3436831
mov     rax, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+var_20]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+58h+arg_0]
mov     [rcx+10h], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+58h+var_18], rax
mov     rax, [rsp+58h+var_20]
mov     rcx, [rsp+58h+var_18]
add     rcx, rax
mov     rax, rcx
mov     r8, [rsp+58h+arg_10]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, rax
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
nop
mov     [rsp+58h+var_28], 0
mov     rax, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+var_20]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+58h+var_18]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+58h+var_28]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
mov     rax, [rsp+58h+arg_0]
jmp     short loc_7FF6E3436866

loc_7FF6E3436831:
lea     rax, [rsp+58h+var_27]
mov     rdi, rax
xor     eax, eax
mov     ecx, 1
rep stosb
mov     rax, [rsp+58h+arg_10]
mov     [rsp+58h+var_38], rax
mov     r9, [rsp+58h+arg_8]
movzx   r8d, [rsp+58h+var_27]
mov     rdx, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+arg_0]
call    sub_7FF6E3432650

loc_7FF6E3436866:
add     rsp, 50h
pop     rdi
retn
sub_7FF6E3436770 endp

algn_7FF6E343686C:
align 10h



sub_7FF6E3436870 proc near

var_38= byte ptr -38h
var_28= byte ptr -28h
var_27= byte ptr -27h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h

mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rdi
sub     rsp, 50h
mov     rax, [rsp+58h+arg_0]
mov     rax, [rax+10h]
mov     [rsp+58h+var_20], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, [rsp+58h+var_20]
mov     rax, [rax+18h]
sub     rax, rcx
cmp     [rsp+58h+arg_8], rax
ja      loc_7FF6E3436932
mov     rax, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+var_20]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+58h+arg_0]
mov     [rcx+10h], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+58h+var_18], rax
mov     rax, [rsp+58h+var_20]
mov     rcx, [rsp+58h+var_18]
add     rcx, rax
mov     rax, rcx
movzx   r8d, [rsp+58h+arg_10]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, rax
call    ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign(char * const,unsigned __int64,char)
nop
mov     [rsp+58h+var_28], 0
mov     rax, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+var_20]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+58h+var_18]
add     rcx, rax
mov     rax, rcx
lea     rdx, [rsp+58h+var_28]
mov     rcx, rax
call    unknown_libname_20 ; Microsoft VisualC v14 64bit runtime
nop
mov     rax, [rsp+58h+arg_0]
jmp     short loc_7FF6E3436966

loc_7FF6E3436932:
lea     rax, [rsp+58h+var_27]
mov     rdi, rax
xor     eax, eax
mov     ecx, 1
rep stosb
movzx   eax, [rsp+58h+arg_10]
mov     [rsp+58h+var_38], al
mov     r9, [rsp+58h+arg_8]
movzx   r8d, [rsp+58h+var_27]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+arg_0]
call    sub_7FF6E3432A10

loc_7FF6E3436966:
add     rsp, 50h
pop     rdi
retn
sub_7FF6E3436870 endp

algn_7FF6E343696C:
align 10h
; [0000002E BYTES: COLLAPSED FUNCTION std::_Narrow_char_traits<char,int>::assign(char * const,unsigned __int64,char)]
algn_7FF6E343699E:
align 20h
; [0000001A BYTES: COLLAPSED FUNCTION unknown_libname_20]
align 20h



sub_7FF6E34369C0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_8]
call    unknown_libname_64 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rdx, rax
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E34341F0
mov     rax, [rsp+28h+arg_0]
add     rsp, 28h
retn
sub_7FF6E34369C0 endp

algn_7FF6E34369EF:
align 10h
; [00000038 BYTES: COLLAPSED FUNCTION unknown_libname_21]
algn_7FF6E3436A28:
align 10h



sub_7FF6E3436A30 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
add     rsp, 28h
retn
sub_7FF6E3436A30 endp

algn_7FF6E3436A4B:
align 10h
; [0000000F BYTES: COLLAPSED FUNCTION __crt_win32_buffer_debug_info::file_name(void)]
align 20h



sub_7FF6E3436A60 proc near

var_18= dword ptr -18h
arg_0= qword ptr  8
arg_8= dword ptr  10h
arg_10= byte ptr  18h

mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], edx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
cmp     qword ptr [rax+48h], 0
jz      short loc_7FF6E3436A88
mov     [rsp+38h+var_18], 0
jmp     short loc_7FF6E3436A90

loc_7FF6E3436A88:
mov     [rsp+38h+var_18], 4

loc_7FF6E3436A90:
mov     eax, [rsp+38h+var_18]
mov     ecx, [rsp+38h+arg_8]
or      ecx, eax
mov     eax, ecx
movzx   r8d, [rsp+38h+arg_10]
mov     edx, eax
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3436AC0
nop
add     rsp, 38h
retn
sub_7FF6E3436A60 endp

algn_7FF6E3436AB4:
align 20h



sub_7FF6E3436AC0 proc near

var_58= dword ptr -58h
var_50= qword ptr -50h
var_48= byte ptr -48h
pExceptionObject= byte ptr -38h
arg_0= qword ptr  8
arg_8= dword ptr  10h
arg_10= byte ptr  18h

mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], edx
mov     [rsp+arg_0], rcx
sub     rsp, 78h
mov     eax, [rsp+78h+arg_8]
and     eax, 17h
mov     [rsp+78h+arg_8], eax
mov     rax, [rsp+78h+arg_0]
mov     ecx, [rsp+78h+arg_8]
mov     [rax+10h], ecx
mov     rax, [rsp+78h+arg_0]
mov     eax, [rax+14h]
mov     ecx, [rsp+78h+arg_8]
and     ecx, eax
mov     eax, ecx
mov     [rsp+78h+var_58], eax
cmp     [rsp+78h+var_58], 0
jz      loc_7FF6E3436BA1
movzx   eax, [rsp+78h+arg_10]
test    eax, eax
jz      short loc_7FF6E3436B30
xor     edx, edx        ; pThrowInfo
xor     ecx, ecx        ; pExceptionObject
call    _CxxThrowException
align 10h

loc_7FF6E3436B30:
mov     eax, [rsp+78h+var_58]
and     eax, 4
test    eax, eax
jz      short loc_7FF6E3436B49
lea     rax, aIosBaseBadbitS ; "ios_base::badbit set"
mov     [rsp+78h+var_50], rax
jmp     short loc_7FF6E3436B6E

loc_7FF6E3436B49:
mov     eax, [rsp+78h+var_58]
and     eax, 2
test    eax, eax
jz      short loc_7FF6E3436B62
lea     rax, aIosBaseFailbit ; "ios_base::failbit set"
mov     [rsp+78h+var_50], rax
jmp     short loc_7FF6E3436B6E

loc_7FF6E3436B62:
lea     rax, aIosBaseEofbitS ; "ios_base::eofbit set"
mov     [rsp+78h+var_50], rax

loc_7FF6E3436B6E:
mov     edx, 1
lea     rcx, [rsp+78h+var_48]
call    ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z ; std::make_error_code(std::io_errc)
mov     r8, rax         ; struct std::error_code *
mov     rdx, [rsp+78h+var_50] ; char *
lea     rcx, [rsp+78h+pExceptionObject] ; this
call    ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z ; std::ios_base::failure::failure(char const *,std::error_code const &)
lea     rdx, stru_7FF6E346BF40 ; pThrowInfo
lea     rcx, [rsp+78h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
db 90h

loc_7FF6E3436BA1:
add     rsp, 78h
retn
sub_7FF6E3436AC0 endp

algn_7FF6E3436BA6:
align 10h
; [00000031 BYTES: COLLAPSED FUNCTION unknown_libname_66]
algn_7FF6E3436BE1:
align 10h



sub_7FF6E3436BF0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_10]
mov     rcx, [rsp+28h+arg_8]
call    sub_7FF6E3431C40
nop
add     rsp, 28h
retn
sub_7FF6E3436BF0 endp

algn_7FF6E3436C18:
align 20h



sub_7FF6E3436C20 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+18h]
add     rsp, 28h
retn
sub_7FF6E3436C20 endp

algn_7FF6E3436C3E:
align 20h
; [00000030 BYTES: COLLAPSED FUNCTION std::error_category::default_error_condition(int)]
; [0000000F BYTES: COLLAPSED FUNCTION unknown_libname_23]
align 20h



sub_7FF6E3436C80 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rdx, [rax+20h]
mov     rcx, [rsp+28h+arg_8]
call    sub_7FF6E3433160
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3436C80 endp

algn_7FF6E3436CAB:
align 10h



sub_7FF6E3436CB0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rdx, [rax+10h]
mov     rcx, [rsp+28h+arg_8]
call    sub_7FF6E3433160
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3436CB0 endp

algn_7FF6E3436CDB:
align 20h
; [00000014 BYTES: COLLAPSED FUNCTION std::ctype<char>::do_narrow(char,char)]
align 20h
; [00000053 BYTES: COLLAPSED FUNCTION std::ctype<char>::do_narrow(char const *,char const *,char,char *)]
algn_7FF6E3436D53:
align 20h



sub_7FF6E3436D60 proc near

var_A8= byte ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_88= byte ptr -88h
var_78= byte ptr -78h
Buffer= byte ptr -68h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= dword ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0B8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0C8h+var_28], rax
mov     rcx, [rsp+0C8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
mov     r9d, eax
lea     r8, aLd_0       ; "ld"
lea     rdx, [rsp+0C8h+var_78]
mov     rcx, [rsp+0C8h+arg_0]
call    unknown_libname_15 ; Microsoft VisualC v14 64bit runtime
mov     r9d, [rsp+0C8h+arg_28]
mov     r8, rax         ; Format
mov     edx, 40h ; '@'  ; BufferCount
lea     rcx, [rsp+0C8h+Buffer] ; Buffer
call    sprintf_s
cdqe
lea     rcx, [rsp+0C8h+var_88]
mov     rdi, rcx
mov     rsi, [rsp+0C8h+arg_10]
mov     ecx, 10h
rep movsb
mov     [rsp+0C8h+var_98], rax
lea     rax, [rsp+0C8h+Buffer]
mov     [rsp+0C8h+var_A0], rax
movzx   eax, [rsp+0C8h+arg_20]
mov     [rsp+0C8h+var_A8], al
mov     r9, [rsp+0C8h+arg_18]
lea     r8, [rsp+0C8h+var_88]
mov     rdx, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+arg_0]
call    sub_7FF6E34358E0
mov     rax, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0B8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3436D60
sub_7FF6E3436D60 endp

algn_7FF6E3436E4A:
align 10h



sub_7FF6E3436E50 proc near

var_A8= byte ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_88= byte ptr -88h
var_78= byte ptr -78h
Buffer= byte ptr -68h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= dword ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0B8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0C8h+var_28], rax
mov     rcx, [rsp+0C8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
mov     r9d, eax
lea     r8, aLu_0       ; "lu"
lea     rdx, [rsp+0C8h+var_78]
mov     rcx, [rsp+0C8h+arg_0]
call    unknown_libname_15 ; Microsoft VisualC v14 64bit runtime
mov     r9d, [rsp+0C8h+arg_28]
mov     r8, rax         ; Format
mov     edx, 40h ; '@'  ; BufferCount
lea     rcx, [rsp+0C8h+Buffer] ; Buffer
call    sprintf_s
cdqe
lea     rcx, [rsp+0C8h+var_88]
mov     rdi, rcx
mov     rsi, [rsp+0C8h+arg_10]
mov     ecx, 10h
rep movsb
mov     [rsp+0C8h+var_98], rax
lea     rax, [rsp+0C8h+Buffer]
mov     [rsp+0C8h+var_A0], rax
movzx   eax, [rsp+0C8h+arg_20]
mov     [rsp+0C8h+var_A8], al
mov     r9, [rsp+0C8h+arg_18]
lea     r8, [rsp+0C8h+var_88]
mov     rdx, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+arg_0]
call    sub_7FF6E34358E0
mov     rax, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0B8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3436E50
sub_7FF6E3436E50 endp

algn_7FF6E3436F3A:
align 20h



sub_7FF6E3436F40 proc near

var_C8= qword ptr -0C8h
var_C0= qword ptr -0C0h
var_B8= qword ptr -0B8h
var_B0= byte ptr -0B0h
var_A8= byte ptr -0A8h
var_A7= byte ptr -0A7h
var_A6= byte ptr -0A6h
var_A5= byte ptr -0A5h
var_A4= byte ptr -0A4h
var_A0= dword ptr -0A0h
var_9C= dword ptr -9Ch
var_98= dword ptr -98h
var_94= dword ptr -94h
var_90= dword ptr -90h
var_88= qword ptr -88h
var_80= qword ptr -80h
var_78= qword ptr -78h
Format= qword ptr -70h
BufferCount= qword ptr -68h
var_60= qword ptr -60h
var_58= byte ptr -58h
var_48= byte ptr -48h
var_28= byte ptr -28h
var_20= qword ptr -20h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= qword ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0D8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0E8h+var_20], rax
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3433200
mov     rcx, [rsp+0E8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 3000h
mov     [rsp+0E8h+var_A0], eax
cmp     [rsp+0E8h+var_A0], 2000h
jnz     short loc_7FF6E3436FA3
mov     [rsp+0E8h+var_A8], 1
jmp     short loc_7FF6E3436FA8

loc_7FF6E3436FA3:
mov     [rsp+0E8h+var_A8], 0

loc_7FF6E3436FA8:
movzx   eax, [rsp+0E8h+var_A8]
mov     [rsp+0E8h+var_A4], al
cmp     [rsp+0E8h+var_A0], 3000h
jnz     short loc_7FF6E3436FC2
mov     [rsp+0E8h+var_A7], 1
jmp     short loc_7FF6E3436FC7

loc_7FF6E3436FC2:
mov     [rsp+0E8h+var_A7], 0

loc_7FF6E3436FC7:
movzx   eax, [rsp+0E8h+var_A7]
mov     [rsp+0E8h+var_A5], al
movzx   eax, [rsp+0E8h+var_A5]
test    eax, eax
jz      short loc_7FF6E3436FE4
mov     [rsp+0E8h+var_80], 0FFFFFFFFFFFFFFFFh
jmp     short loc_7FF6E3436FF6

loc_7FF6E3436FE4:       ; this
mov     rcx, [rsp+0E8h+arg_18]
call    ?precision@ios_base@std@@QEBA_JXZ ; std::ios_base::precision(void)
mov     [rsp+0E8h+var_80], rax

loc_7FF6E3436FF6:
mov     rax, [rsp+0E8h+var_80]
mov     [rsp+0E8h+var_78], rax
mov     edx, [rsp+0E8h+var_A0]
mov     rcx, [rsp+0E8h+var_78]
call    unknown_libname_3 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0E8h+var_98], eax
movsxd  rax, [rsp+0E8h+var_98]
mov     [rsp+0E8h+var_88], rax
movzx   eax, [rsp+0E8h+var_A4]
test    eax, eax
jz      short loc_7FF6E3437079
movsd   xmm0, [rsp+0E8h+arg_28]
call    sub_7FF6E3441190
comisd  xmm0, cs:qword_7FF6E345D778
jbe     short loc_7FF6E3437079
lea     rdx, [rsp+0E8h+var_94]
movsd   xmm0, [rsp+0E8h+arg_28]
call    sub_7FF6E34412A0
mov     ecx, [rsp+0E8h+var_94]
call    sub_7FF6E3441184
imul    eax, 7597h
cdq
mov     ecx, 186A0h
idiv    ecx
cdqe
mov     rcx, [rsp+0E8h+var_88]
add     rcx, rax
mov     rax, rcx
mov     [rsp+0E8h+var_88], rax

loc_7FF6E3437079:
mov     rax, [rsp+0E8h+var_88]
add     rax, 32h ; '2'
xor     r8d, r8d
mov     rdx, rax
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3438380
movsd   xmm0, [rsp+0E8h+arg_28]
call    sub_7FF6E3432C10
mov     [rsp+0E8h+var_A6], al
movzx   eax, [rsp+0E8h+var_A6]
test    eax, eax
jz      short loc_7FF6E34370C3
mov     rcx, [rsp+0E8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0E8h+var_9C], eax
jmp     short loc_7FF6E34370D7

loc_7FF6E34370C3:
mov     rcx, [rsp+0E8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 0FFFFFFEFh
mov     [rsp+0E8h+var_9C], eax

loc_7FF6E34370D7:
mov     eax, [rsp+0E8h+var_9C]
mov     [rsp+0E8h+var_90], eax
mov     r9d, [rsp+0E8h+var_90]
xor     r8d, r8d
lea     rdx, [rsp+0E8h+var_28]
mov     rcx, [rsp+0E8h+arg_0]
call    unknown_libname_14 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0E8h+Format], rax
lea     rcx, [rsp+0E8h+var_48]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+0E8h+BufferCount], rax
xor     edx, edx
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E34345D0
movsd   xmm0, [rsp+0E8h+arg_28]
movsd   [rsp+0E8h+var_C8], xmm0
mov     r9d, dword ptr [rsp+0E8h+var_78]
mov     rcx, [rsp+0E8h+Format]
mov     r8, rcx         ; Format
mov     rcx, [rsp+0E8h+BufferCount]
mov     rdx, rcx        ; BufferCount
mov     rcx, rax        ; Buffer
call    sprintf_s
cdqe
mov     [rsp+0E8h+var_60], rax
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3436A30
lea     rcx, [rsp+0E8h+var_58]
mov     rdi, rcx
mov     rsi, [rsp+0E8h+arg_10]
mov     ecx, 10h
rep movsb
movzx   ecx, [rsp+0E8h+var_A6]
mov     [rsp+0E8h+var_B0], cl
mov     rcx, [rsp+0E8h+var_60]
mov     [rsp+0E8h+var_B8], rcx
mov     [rsp+0E8h+var_C0], rax
movzx   eax, [rsp+0E8h+arg_20]
mov     byte ptr [rsp+0E8h+var_C8], al
mov     r9, [rsp+0E8h+arg_18]
lea     r8, [rsp+0E8h+var_58]
mov     rdx, [rsp+0E8h+arg_8]
mov     rcx, [rsp+0E8h+arg_0]
call    sub_7FF6E3431D30
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3433DB0
mov     rax, [rsp+0E8h+arg_8]
mov     rcx, [rsp+0E8h+var_20]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0D8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3436F40
sub_7FF6E3436F40 endp




sub_7FF6E3437200 proc near

var_C8= qword ptr -0C8h
var_C0= qword ptr -0C0h
var_B8= qword ptr -0B8h
var_B0= byte ptr -0B0h
var_A8= byte ptr -0A8h
var_A7= byte ptr -0A7h
var_A6= byte ptr -0A6h
var_A5= byte ptr -0A5h
var_A4= byte ptr -0A4h
var_A0= dword ptr -0A0h
var_9C= dword ptr -9Ch
var_98= dword ptr -98h
var_94= dword ptr -94h
var_90= dword ptr -90h
var_88= qword ptr -88h
var_80= qword ptr -80h
var_78= qword ptr -78h
Format= qword ptr -70h
BufferCount= qword ptr -68h
var_60= qword ptr -60h
var_58= byte ptr -58h
var_48= byte ptr -48h
var_28= byte ptr -28h
var_20= qword ptr -20h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= qword ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0D8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0E8h+var_20], rax
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3433200
mov     rcx, [rsp+0E8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 3000h
mov     [rsp+0E8h+var_A0], eax
cmp     [rsp+0E8h+var_A0], 2000h
jnz     short loc_7FF6E3437263
mov     [rsp+0E8h+var_A8], 1
jmp     short loc_7FF6E3437268

loc_7FF6E3437263:
mov     [rsp+0E8h+var_A8], 0

loc_7FF6E3437268:
movzx   eax, [rsp+0E8h+var_A8]
mov     [rsp+0E8h+var_A4], al
cmp     [rsp+0E8h+var_A0], 3000h
jnz     short loc_7FF6E3437282
mov     [rsp+0E8h+var_A7], 1
jmp     short loc_7FF6E3437287

loc_7FF6E3437282:
mov     [rsp+0E8h+var_A7], 0

loc_7FF6E3437287:
movzx   eax, [rsp+0E8h+var_A7]
mov     [rsp+0E8h+var_A5], al
movzx   eax, [rsp+0E8h+var_A5]
test    eax, eax
jz      short loc_7FF6E34372A4
mov     [rsp+0E8h+var_80], 0FFFFFFFFFFFFFFFFh
jmp     short loc_7FF6E34372B6

loc_7FF6E34372A4:       ; this
mov     rcx, [rsp+0E8h+arg_18]
call    ?precision@ios_base@std@@QEBA_JXZ ; std::ios_base::precision(void)
mov     [rsp+0E8h+var_80], rax

loc_7FF6E34372B6:
mov     rax, [rsp+0E8h+var_80]
mov     [rsp+0E8h+var_78], rax
mov     edx, [rsp+0E8h+var_A0]
mov     rcx, [rsp+0E8h+var_78]
call    unknown_libname_3 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0E8h+var_98], eax
movsxd  rax, [rsp+0E8h+var_98]
mov     [rsp+0E8h+var_88], rax
movzx   eax, [rsp+0E8h+var_A4]
test    eax, eax
jz      short loc_7FF6E3437339
movsd   xmm0, [rsp+0E8h+arg_28]
call    sub_7FF6E34386D0
comisd  xmm0, cs:qword_7FF6E345D778
jbe     short loc_7FF6E3437339
lea     rdx, [rsp+0E8h+var_94]
movsd   xmm0, [rsp+0E8h+arg_28]
call    sub_7FF6E34386F0
mov     ecx, [rsp+0E8h+var_94]
call    sub_7FF6E3441184
imul    eax, 7597h
cdq
mov     ecx, 186A0h
idiv    ecx
cdqe
mov     rcx, [rsp+0E8h+var_88]
add     rcx, rax
mov     rax, rcx
mov     [rsp+0E8h+var_88], rax

loc_7FF6E3437339:
mov     rax, [rsp+0E8h+var_88]
add     rax, 32h ; '2'
xor     r8d, r8d
mov     rdx, rax
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3438380
movsd   xmm0, [rsp+0E8h+arg_28]
call    sub_7FF6E3432C10
mov     [rsp+0E8h+var_A6], al
movzx   eax, [rsp+0E8h+var_A6]
test    eax, eax
jz      short loc_7FF6E3437383
mov     rcx, [rsp+0E8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0E8h+var_9C], eax
jmp     short loc_7FF6E3437397

loc_7FF6E3437383:
mov     rcx, [rsp+0E8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 0FFFFFFEFh
mov     [rsp+0E8h+var_9C], eax

loc_7FF6E3437397:
mov     eax, [rsp+0E8h+var_9C]
mov     [rsp+0E8h+var_90], eax
mov     r9d, [rsp+0E8h+var_90]
mov     r8b, 4Ch ; 'L'
lea     rdx, [rsp+0E8h+var_28]
mov     rcx, [rsp+0E8h+arg_0]
call    unknown_libname_14 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+0E8h+Format], rax
lea     rcx, [rsp+0E8h+var_48]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+0E8h+BufferCount], rax
xor     edx, edx
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E34345D0
movsd   xmm0, [rsp+0E8h+arg_28]
movsd   [rsp+0E8h+var_C8], xmm0
mov     r9d, dword ptr [rsp+0E8h+var_78]
mov     rcx, [rsp+0E8h+Format]
mov     r8, rcx         ; Format
mov     rcx, [rsp+0E8h+BufferCount]
mov     rdx, rcx        ; BufferCount
mov     rcx, rax        ; Buffer
call    sprintf_s
cdqe
mov     [rsp+0E8h+var_60], rax
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3436A30
lea     rcx, [rsp+0E8h+var_58]
mov     rdi, rcx
mov     rsi, [rsp+0E8h+arg_10]
mov     ecx, 10h
rep movsb
movzx   ecx, [rsp+0E8h+var_A6]
mov     [rsp+0E8h+var_B0], cl
mov     rcx, [rsp+0E8h+var_60]
mov     [rsp+0E8h+var_B8], rcx
mov     [rsp+0E8h+var_C0], rax
movzx   eax, [rsp+0E8h+arg_20]
mov     byte ptr [rsp+0E8h+var_C8], al
mov     r9, [rsp+0E8h+arg_18]
lea     r8, [rsp+0E8h+var_58]
mov     rdx, [rsp+0E8h+arg_8]
mov     rcx, [rsp+0E8h+arg_0]
call    sub_7FF6E3431D30
lea     rcx, [rsp+0E8h+var_48]
call    sub_7FF6E3433DB0
mov     rax, [rsp+0E8h+arg_8]
mov     rcx, [rsp+0E8h+var_20]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0D8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3437200
sub_7FF6E3437200 endp

; [000000C5 BYTES: COLLAPSED FUNCTION std::num_put<char,std::ostreambuf_iterator<char>>::do_put(std::ostreambuf_iterator<char>,std::ios_base &,char,void const *)]
algn_7FF6E3437585:
align 10h



sub_7FF6E3437590 proc near

var_A8= byte ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_88= byte ptr -88h
var_78= byte ptr -78h
Buffer= byte ptr -68h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= qword ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0B8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0C8h+var_28], rax
mov     rcx, [rsp+0C8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
mov     r9d, eax
lea     r8, aLd         ; "Ld"
lea     rdx, [rsp+0C8h+var_78]
mov     rcx, [rsp+0C8h+arg_0]
call    unknown_libname_15 ; Microsoft VisualC v14 64bit runtime
mov     r9, [rsp+0C8h+arg_28]
mov     r8, rax         ; Format
mov     edx, 40h ; '@'  ; BufferCount
lea     rcx, [rsp+0C8h+Buffer] ; Buffer
call    sprintf_s
cdqe
lea     rcx, [rsp+0C8h+var_88]
mov     rdi, rcx
mov     rsi, [rsp+0C8h+arg_10]
mov     ecx, 10h
rep movsb
mov     [rsp+0C8h+var_98], rax
lea     rax, [rsp+0C8h+Buffer]
mov     [rsp+0C8h+var_A0], rax
movzx   eax, [rsp+0C8h+arg_20]
mov     [rsp+0C8h+var_A8], al
mov     r9, [rsp+0C8h+arg_18]
lea     r8, [rsp+0C8h+var_88]
mov     rdx, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+arg_0]
call    sub_7FF6E34358E0
mov     rax, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0B8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3437590
sub_7FF6E3437590 endp

algn_7FF6E343767A:
align 20h



sub_7FF6E3437680 proc near

var_A8= byte ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_88= byte ptr -88h
var_78= byte ptr -78h
Buffer= byte ptr -68h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= qword ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 0B8h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0C8h+var_28], rax
mov     rcx, [rsp+0C8h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
mov     r9d, eax
lea     r8, aLu         ; "Lu"
lea     rdx, [rsp+0C8h+var_78]
mov     rcx, [rsp+0C8h+arg_0]
call    unknown_libname_15 ; Microsoft VisualC v14 64bit runtime
mov     r9, [rsp+0C8h+arg_28]
mov     r8, rax         ; Format
mov     edx, 40h ; '@'  ; BufferCount
lea     rcx, [rsp+0C8h+Buffer] ; Buffer
call    sprintf_s
cdqe
lea     rcx, [rsp+0C8h+var_88]
mov     rdi, rcx
mov     rsi, [rsp+0C8h+arg_10]
mov     ecx, 10h
rep movsb
mov     [rsp+0C8h+var_98], rax
lea     rax, [rsp+0C8h+Buffer]
mov     [rsp+0C8h+var_A0], rax
movzx   eax, [rsp+0C8h+arg_20]
mov     [rsp+0C8h+var_A8], al
mov     r9, [rsp+0C8h+arg_18]
lea     r8, [rsp+0C8h+var_88]
mov     rdx, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+arg_0]
call    sub_7FF6E34358E0
mov     rax, [rsp+0C8h+arg_8]
mov     rcx, [rsp+0C8h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 0B8h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3437680
sub_7FF6E3437680 endp

algn_7FF6E343776A:
align 10h



sub_7FF6E3437770 proc near

var_138= qword ptr -138h
var_130= dword ptr -130h
var_128= qword ptr -128h
var_120= qword ptr -120h
var_118= qword ptr -118h
var_110= qword ptr -110h
var_108= qword ptr -108h
var_100= qword ptr -100h
var_F8= byte ptr -0F8h
var_E8= byte ptr -0E8h
var_D8= byte ptr -0D8h
var_C8= byte ptr -0C8h
var_B8= byte ptr -0B8h
var_A8= byte ptr -0A8h
var_98= byte ptr -98h
var_88= byte ptr -88h
var_68= byte ptr -68h
var_48= byte ptr -48h
var_28= qword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= byte ptr  30h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 148h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+158h+var_28], rax
mov     rcx, [rsp+158h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 4000h
test    eax, eax
jnz     short loc_7FF6E343782B
movzx   eax, [rsp+158h+arg_28]
lea     rcx, [rsp+158h+var_F8]
mov     rdi, rcx
mov     rsi, [rsp+158h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+158h+arg_0]
mov     rcx, [rcx]
mov     [rsp+158h+var_118], rcx
mov     [rsp+158h+var_130], eax
movzx   eax, [rsp+158h+arg_20]
mov     byte ptr [rsp+158h+var_138], al
mov     r9, [rsp+158h+arg_18]
lea     r8, [rsp+158h+var_F8]
mov     rdx, [rsp+158h+arg_8]
mov     rcx, [rsp+158h+arg_0]
mov     rax, [rsp+158h+var_118]
call    qword ptr [rax+48h]
mov     rax, [rsp+158h+arg_8]
jmp     loc_7FF6E3437AA5
jmp     loc_7FF6E3437AA5

loc_7FF6E343782B:
lea     rdx, [rsp+158h+var_E8]
mov     rcx, [rsp+158h+arg_18]
call    ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ ; std::ios_base::getloc(void)
mov     rcx, rax
call    sub_7FF6E3432EF0
mov     [rsp+158h+var_120], rax
lea     rcx, [rsp+158h+var_E8]
call    sub_7FF6E34340F0
nop
lea     rcx, [rsp+158h+var_88]
call    sub_7FF6E3433200
nop
movzx   eax, [rsp+158h+arg_28]
test    eax, eax
jz      short loc_7FF6E34378A1
lea     rdx, [rsp+158h+var_68]
mov     rcx, [rsp+158h+var_120]
call    sub_7FF6E3438540
mov     rdx, rax
lea     rcx, [rsp+158h+var_88]
call    sub_7FF6E34369C0
lea     rcx, [rsp+158h+var_68]
call    sub_7FF6E3433DB0
nop
jmp     short loc_7FF6E34378D1

loc_7FF6E34378A1:
lea     rdx, [rsp+158h+var_48]
mov     rcx, [rsp+158h+var_120]
call    sub_7FF6E3437DD0
mov     rdx, rax
lea     rcx, [rsp+158h+var_88]
call    sub_7FF6E34369C0
lea     rcx, [rsp+158h+var_48]
call    sub_7FF6E3433DB0
nop

loc_7FF6E34378D1:       ; this
mov     rcx, [rsp+158h+arg_18]
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
test    rax, rax
jle     short loc_7FF6E343790C
mov     rcx, [rsp+158h+arg_18] ; this
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
mov     [rsp+158h+var_110], rax
lea     rcx, [rsp+158h+var_88]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+158h+var_110]
cmp     rcx, rax
ja      short loc_7FF6E3437917

loc_7FF6E343790C:
mov     [rsp+158h+var_128], 0
jmp     short loc_7FF6E3437946

loc_7FF6E3437917:       ; this
mov     rcx, [rsp+158h+arg_18]
call    ?width@ios_base@std@@QEBA_JXZ ; std::ios_base::width(void)
mov     [rsp+158h+var_108], rax
lea     rcx, [rsp+158h+var_88]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     rcx, [rsp+158h+var_108]
sub     rcx, rax
mov     rax, rcx
mov     [rsp+158h+var_128], rax

loc_7FF6E3437946:
mov     rcx, [rsp+158h+arg_18]
call    unknown_libname_26 ; Microsoft VisualC v14 64bit runtime
and     eax, 1C0h
cmp     eax, 40h ; '@'
jz      short loc_7FF6E34379C2
lea     rax, [rsp+158h+var_D8]
mov     rdi, rax
mov     rsi, [rsp+158h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+158h+var_128]
mov     [rsp+158h+var_138], rax
movzx   r9d, [rsp+158h+arg_20]
lea     r8, [rsp+158h+var_D8]
lea     rdx, [rsp+158h+var_A8]
mov     rcx, [rsp+158h+arg_0]
call    sub_7FF6E3436240
mov     rdi, [rsp+158h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
mov     [rsp+158h+var_128], 0

loc_7FF6E34379C2:
lea     rcx, [rsp+158h+var_88]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+158h+var_100], rax
lea     rcx, [rsp+158h+var_88]
call    sub_7FF6E3436A30
lea     rcx, [rsp+158h+var_C8]
mov     rdi, rcx
mov     rsi, [rsp+158h+arg_10]
mov     ecx, 10h
rep movsb
mov     rcx, [rsp+158h+var_100]
mov     [rsp+158h+var_138], rcx
mov     r9, rax
lea     r8, [rsp+158h+var_C8]
lea     rdx, [rsp+158h+var_98]
mov     rcx, [rsp+158h+arg_0]
call    ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
mov     rdi, [rsp+158h+arg_10]
mov     rsi, rax
mov     ecx, 10h
rep movsb
xor     edx, edx        ; __int64
mov     rcx, [rsp+158h+arg_18] ; this
call    ?width@ios_base@std@@QEAA_J_J@Z ; std::ios_base::width(__int64)
lea     rax, [rsp+158h+var_B8]
mov     rdi, rax
mov     rsi, [rsp+158h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+158h+var_128]
mov     [rsp+158h+var_138], rax
movzx   r9d, [rsp+158h+arg_20]
lea     r8, [rsp+158h+var_B8]
mov     rdx, [rsp+158h+arg_8]
mov     rcx, [rsp+158h+arg_0]
call    sub_7FF6E3436240
lea     rcx, [rsp+158h+var_88]
call    sub_7FF6E3433DB0
mov     rax, [rsp+158h+arg_8]

loc_7FF6E3437AA5:
mov     rcx, [rsp+158h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 148h
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3437770
sub_7FF6E3437770 endp

algn_7FF6E3437ABF:
align 20h
; [0000000F BYTES: COLLAPSED FUNCTION unknown_libname_24]
align 10h
; [00000028 BYTES: COLLAPSED FUNCTION std::ctype<char>::do_tolower(char)]
algn_7FF6E3437AF8:
align 20h



sub_7FF6E3437B00 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
lea     rdx, [rsp+28h+arg_10] ; struct __crt_win32_buffer_empty_debug_info *
lea     rcx, [rsp+28h+arg_8] ; void *
call    ?deallocate@__crt_win32_buffer_no_resizing@@SAXQEAXAEBV__crt_win32_buffer_empty_debug_info@@@Z ; Microsoft VisualC v14 64bit runtime
nop
jmp     short loc_7FF6E3437B32

loc_7FF6E3437B25:
mov     rax, [rsp+28h+arg_8]
inc     rax
mov     [rsp+28h+arg_8], rax

loc_7FF6E3437B32:
mov     rax, [rsp+28h+arg_10]
cmp     [rsp+28h+arg_8], rax
jz      short loc_7FF6E3437B60
mov     rax, [rsp+28h+arg_0]
add     rax, 10h
mov     rcx, [rsp+28h+arg_8]
movzx   ecx, byte ptr [rcx] ; int
mov     rdx, rax        ; _Ctypevec *
call    _Tolower
mov     rcx, [rsp+28h+arg_8]
mov     [rcx], al
jmp     short loc_7FF6E3437B25

loc_7FF6E3437B60:
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3437B00 endp

algn_7FF6E3437B6A:
align 10h
; [00000028 BYTES: COLLAPSED FUNCTION std::ctype<char>::do_toupper(char)]
algn_7FF6E3437B98:
align 20h



sub_7FF6E3437BA0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
lea     rdx, [rsp+28h+arg_10] ; struct __crt_win32_buffer_empty_debug_info *
lea     rcx, [rsp+28h+arg_8] ; void *
call    ?deallocate@__crt_win32_buffer_no_resizing@@SAXQEAXAEBV__crt_win32_buffer_empty_debug_info@@@Z ; Microsoft VisualC v14 64bit runtime
nop
jmp     short loc_7FF6E3437BD2

loc_7FF6E3437BC5:
mov     rax, [rsp+28h+arg_8]
inc     rax
mov     [rsp+28h+arg_8], rax

loc_7FF6E3437BD2:
mov     rax, [rsp+28h+arg_10]
cmp     [rsp+28h+arg_8], rax
jz      short loc_7FF6E3437C00
mov     rax, [rsp+28h+arg_0]
add     rax, 10h
mov     rcx, [rsp+28h+arg_8]
movzx   ecx, byte ptr [rcx] ; int
mov     rdx, rax        ; _Ctypevec *
call    _Toupper
mov     rcx, [rsp+28h+arg_8]
mov     [rcx], al
jmp     short loc_7FF6E3437BC5

loc_7FF6E3437C00:
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3437BA0 endp

algn_7FF6E3437C0A:
align 10h



sub_7FF6E3437C10 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rdx, [rax+28h]
mov     rcx, [rsp+28h+arg_8]
call    sub_7FF6E3433160
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3437C10 endp

algn_7FF6E3437C3B:
align 20h
; [0000000F BYTES: COLLAPSED FUNCTION std::ctype<char>::do_widen(char)]
align 10h
; [00000053 BYTES: COLLAPSED FUNCTION std::ctype<char>::do_widen(char const *,char const *,char *)]
algn_7FF6E3437CA3:
align 10h
; [0000002E BYTES: COLLAPSED FUNCTION unknown_libname_25]
algn_7FF6E3437CDE:
align 20h



sub_7FF6E3437CE0 proc near
mov     eax, 0FFFFFFFFh
retn
sub_7FF6E3437CE0 endp

align 10h
; [0000002F BYTES: COLLAPSED FUNCTION std::_Narrow_char_traits<char,int>::eq_int_type(int,int)]
algn_7FF6E3437D1F:
align 20h
; [0000005D BYTES: COLLAPSED FUNCTION std::error_category::equivalent(std::error_code const &,int)]
algn_7FF6E3437D7D:
align 20h



sub_7FF6E3437D80 proc near

var_18= byte ptr -18h
arg_0= qword ptr  8
arg_8= dword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], edx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rax, [rsp+38h+arg_0]
mov     rax, [rax]
mov     r8d, [rsp+38h+arg_8]
lea     rdx, [rsp+38h+var_18]
mov     rcx, [rsp+38h+arg_0]
call    qword ptr [rax+18h]
mov     rdx, [rsp+38h+arg_10]
mov     rcx, rax
call    ??8std@@YA_NAEBVerror_condition@0@0@Z ; std::operator==(std::error_condition const &,std::error_condition const &)
add     rsp, 38h
retn
sub_7FF6E3437D80 endp

algn_7FF6E3437DBE:
align 20h
; [0000000E BYTES: COLLAPSED FUNCTION std::_Atomic_reinterpret_as<char,char>(char const &)]
align 10h



sub_7FF6E3437DD0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+30h]
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3437DD0 endp

algn_7FF6E3437DFD:
align 20h
; [0000000F BYTES: COLLAPSED FUNCTION std::ios::fill(void)]
align 10h
; [0000000E BYTES: COLLAPSED FUNCTION unknown_libname_26]
align 20h



sub_7FF6E3437E20 proc near

var_28= dword ptr -28h
var_20= qword ptr -20h
var_18= byte ptr -18h
arg_0= qword ptr  8

; __unwind { // __CxxFrameHandler4
mov     [rsp+arg_0], rcx
sub     rsp, 48h
mov     rax, [rsp+48h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+48h+arg_0]
add     rcx, rax
mov     rax, rcx
mov     rcx, rax
call    unknown_libname_28 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+48h+var_20], rax
cmp     [rsp+48h+var_20], 0
jz      short loc_7FF6E3437ECC
mov     rdx, [rsp+48h+arg_0]
lea     rcx, [rsp+48h+var_18]
call    sub_7FF6E3433B70
nop
lea     rcx, [rsp+48h+var_18]
call    ??B?$optional@_K@std@@QEBA_NXZ ; std::optional<unsigned __int64>::operator bool(void)
movzx   eax, al
test    eax, eax
jz      short loc_7FF6E3437EC1
mov     [rsp+48h+var_28], 0
;   try {
mov     rcx, [rsp+48h+var_20]
call    sub_7FF6E34382A0
cmp     eax, 0FFFFFFFFh
jnz     short loc_7FF6E3437E98
mov     eax, [rsp+48h+var_28]
or      eax, 4
mov     [rsp+48h+var_28], eax
;   } // starts at 7FF6E3437E7E

loc_7FF6E3437E98:
jmp     short $+2

loc_7FF6E3437E9A:
mov     rax, [rsp+48h+arg_0]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rsp+48h+arg_0]
add     rcx, rax
mov     rax, rcx
xor     r8d, r8d
mov     edx, [rsp+48h+var_28]
mov     rcx, rax
call    sub_7FF6E3438400
nop

loc_7FF6E3437EC1:
lea     rcx, [rsp+48h+var_18]
call    sub_7FF6E3434160
nop

loc_7FF6E3437ECC:
mov     rax, [rsp+48h+arg_0]
add     rsp, 48h
retn
; } // starts at 7FF6E3437E20
sub_7FF6E3437E20 endp

algn_7FF6E3437ED6:
align 20h



sub_7FF6E3437EE0 proc near

arg_0= qword ptr  8

movsd   [rsp+arg_0], xmm0
sub     rsp, 28h
lea     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3441130
cwde
add     rsp, 28h
retn
sub_7FF6E3437EE0 endp

algn_7FF6E3437EFA:
align 20h
; [0000002B BYTES: COLLAPSED FUNCTION std::ios_base::getloc(void)]
algn_7FF6E3437F2B:
align 10h



sub_7FF6E3437F30 proc near

var_18= dword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rcx, [rsp+38h+arg_0] ; this
call    ?line_number@__crt_win32_buffer_debug_info@@QEBAHXZ ; Microsoft VisualC v14 64bit runtime
test    eax, eax
jnz     short loc_7FF6E3437F51
mov     [rsp+38h+var_18], 1
jmp     short loc_7FF6E3437F59

loc_7FF6E3437F51:
mov     [rsp+38h+var_18], 0

loc_7FF6E3437F59:
movzx   eax, byte ptr [rsp+38h+var_18]
add     rsp, 38h
retn
sub_7FF6E3437F30 endp

algn_7FF6E3437F63:
align 10h



sub_7FF6E3437F70 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+28h]
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3437F70 endp

algn_7FF6E3437F9D:
align 20h



sub_7FF6E3437FA0 proc near

var_38= qword ptr -38h
var_30= byte ptr -30h
var_28= byte ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= byte ptr  20h

mov     [rsp+arg_18], r9b
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rdi
sub     rsp, 50h
mov     rax, [rsp+58h+arg_0]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, rax
call    sub_7FF6E3434DD0
mov     rax, [rsp+58h+arg_0]
mov     rax, [rax+10h]
mov     [rsp+58h+var_20], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, [rsp+58h+var_20]
mov     rax, [rax+18h]
sub     rax, rcx
cmp     [rsp+58h+arg_10], rax
ja      loc_7FF6E3438081
mov     rax, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+var_20]
add     rcx, rax
mov     rax, rcx
mov     rcx, [rsp+58h+arg_0]
mov     [rcx+10h], rax
mov     rax, [rsp+58h+arg_0]
mov     rcx, rax
call    unknown_libname_17 ; Microsoft VisualC v14 64bit runtime
mov     [rsp+58h+var_10], rax
mov     rax, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+var_10]
add     rcx, rax
mov     rax, rcx
mov     [rsp+58h+var_18], rax
mov     rax, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+var_20]
sub     rcx, rax
mov     rax, rcx
inc     rax
mov     rcx, [rsp+58h+arg_10]
mov     rdx, [rsp+58h+var_18]
add     rdx, rcx
mov     rcx, rdx
mov     r8, rax
mov     rdx, [rsp+58h+var_18]
call    unknown_libname_66 ; Microsoft VisualC 64bit universal runtime
movzx   r8d, [rsp+58h+arg_18]
mov     rdx, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+var_18]
call    ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign(char * const,unsigned __int64,char)
mov     rax, [rsp+58h+arg_0]
jmp     short loc_7FF6E34380BF

loc_7FF6E3438081:
lea     rax, [rsp+58h+var_28]
mov     rdi, rax
xor     eax, eax
mov     ecx, 1
rep stosb
movzx   eax, [rsp+58h+arg_18]
mov     [rsp+58h+var_30], al
mov     rax, [rsp+58h+arg_10]
mov     [rsp+58h+var_38], rax
mov     r9, [rsp+58h+arg_8]
movzx   r8d, [rsp+58h+var_28]
mov     rdx, [rsp+58h+arg_10]
mov     rcx, [rsp+58h+arg_0]
call    sub_7FF6E3432820

loc_7FF6E34380BF:
add     rsp, 50h
pop     rdi
retn
sub_7FF6E3437FA0 endp

algn_7FF6E34380C5:
align 10h



sub_7FF6E34380D0 proc near
sub     rsp, 28h
call    sub_7FF6E3432540
add     rsp, 28h
retn
sub_7FF6E34380D0 endp

algn_7FF6E34380DE:
align 20h



sub_7FF6E34380E0 proc near

Str= qword ptr  8

mov     [rsp+Str], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+Str] ; Str
call    strlen
add     rsp, 28h
retn
sub_7FF6E34380E0 endp

algn_7FF6E34380F8:
align 20h
; [0000002D BYTES: COLLAPSED FUNCTION std::make_error_code(std::io_errc)]
algn_7FF6E343812D:
align 10h
; [0000000D BYTES: COLLAPSED FUNCTION unknown_libname_27]
align 20h
; [0000006E BYTES: COLLAPSED FUNCTION std::string::max_size(void)]
algn_7FF6E34381AE:
align 10h



sub_7FF6E34381B0 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= dword ptr  18h

mov     [rsp+arg_10], r8d
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
cmp     [rsp+38h+arg_10], 1
jnz     short loc_7FF6E34381F3
mov     [rsp+38h+var_18], 15h
mov     r8d, 15h
lea     rdx, aIostreamStream ; "iostream stream error"
mov     rcx, [rsp+38h+arg_8]
call    sub_7FF6E34331B0
mov     rax, [rsp+38h+arg_8]
jmp     short loc_7FF6E343820E
jmp     short loc_7FF6E343820E

loc_7FF6E34381F3:       ; int
mov     ecx, [rsp+38h+arg_10]
call    ?_Syserror_map@std@@YAPEBDH@Z ; std::_Syserror_map(int)
mov     rdx, rax
mov     rcx, [rsp+38h+arg_8]
call    sub_7FF6E3433160
mov     rax, [rsp+38h+arg_8]

loc_7FF6E343820E:
add     rsp, 38h
retn
sub_7FF6E34381B0 endp

algn_7FF6E3438213:
align 20h



sub_7FF6E3438220 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rcx, [rsp+38h+arg_0] ; this
call    ?file_name@__crt_win32_buffer_debug_info@@QEBAPEBDXZ ; Microsoft VisualC v14 64bit runtime
mov     [rsp+38h+var_18], rax
mov     rcx, [rsp+38h+arg_0]
call    ?_Error@_Transcode_result@?A0x5e1b7880@@QEBA?AW4__std_win_error@@XZ ; `anonymous namespace'::_Transcode_result::_Error(void)
mov     rcx, [rsp+38h+var_18]
mov     rcx, [rcx]
mov     [rsp+38h+var_10], rcx
mov     r8d, eax
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+var_18]
mov     rax, [rsp+38h+var_10]
call    qword ptr [rax+10h]
mov     rax, [rsp+38h+arg_8]
add     rsp, 38h
retn
sub_7FF6E3438220 endp

algn_7FF6E3438273:
align 20h



sub_7FF6E3438280 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
lea     rax, aIostream  ; "iostream"
retn
sub_7FF6E3438280 endp

align 10h
; [0000000F BYTES: COLLAPSED FUNCTION std::ios_base::precision(void)]
align 20h



sub_7FF6E34382A0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+68h]
add     rsp, 28h
retn
sub_7FF6E34382A0 endp

algn_7FF6E34382BE:
align 20h



sub_7FF6E34382C0 proc near

var_38= byte ptr -38h
var_30= dword ptr -30h
var_28= byte ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h
arg_28= dword ptr  30h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
push    rsi
push    rdi
sub     rsp, 48h
lea     rax, [rsp+58h+var_28]
mov     rdi, rax
mov     rsi, [rsp+58h+arg_10]
mov     ecx, 10h
rep movsb
mov     rax, [rsp+58h+arg_0]
mov     rax, [rax]
mov     ecx, [rsp+58h+arg_28]
mov     [rsp+58h+var_30], ecx
movzx   ecx, [rsp+58h+arg_20]
mov     [rsp+58h+var_38], cl
mov     r9, [rsp+58h+arg_18]
lea     r8, [rsp+58h+var_28]
mov     rdx, [rsp+58h+arg_8]
mov     rcx, [rsp+58h+arg_0]
call    qword ptr [rax+48h]
mov     rax, [rsp+58h+arg_8]
add     rsp, 48h
pop     rdi
pop     rsi
retn
sub_7FF6E34382C0 endp

; [0000000F BYTES: COLLAPSED FUNCTION unknown_libname_28]
align 20h
; [0000000E BYTES: COLLAPSED FUNCTION __crt_win32_buffer_debug_info::line_number(void)]
align 10h



sub_7FF6E3438350 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     [rsp+38h+var_18], 0
mov     rax, [rsp+38h+arg_0]
lea     rdx, [rsp+38h+var_18]
mov     rcx, rax
call    unknown_libname_4 ; Microsoft VisualC v14 64bit runtime
add     rsp, 38h
retn
sub_7FF6E3438350 endp

algn_7FF6E3438379:
align 20h



sub_7FF6E3438380 proc near

var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= byte ptr  18h

mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rcx, [rsp+38h+arg_0]
call    unknown_libname_67 ; Microsoft VisualC v14 64bit runtime
                        ; Microsoft VisualC 64bit universal runtime
mov     [rsp+38h+var_18], rax
mov     rax, [rsp+38h+var_18]
cmp     [rsp+38h+arg_8], rax
ja      short loc_7FF6E34383C0
mov     rdx, [rsp+38h+arg_8]
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3434EF0
nop
jmp     short loc_7FF6E34383E4

loc_7FF6E34383C0:
mov     rax, [rsp+38h+var_18]
mov     rcx, [rsp+38h+arg_8]
sub     rcx, rax
mov     rax, rcx
movzx   r8d, [rsp+38h+arg_10]
mov     rdx, rax
mov     rcx, [rsp+38h+arg_0]
call    sub_7FF6E3436870
nop

loc_7FF6E34383E4:
add     rsp, 38h
retn
sub_7FF6E3438380 endp

algn_7FF6E34383E9:
align 10h
; [00000010 BYTES: COLLAPSED FUNCTION unknown_libname_30]



sub_7FF6E3438400 proc near

arg_0= qword ptr  8
arg_8= dword ptr  10h
arg_10= byte ptr  18h

mov     [rsp+arg_10], r8b
mov     [rsp+arg_8], edx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rcx, [rsp+28h+arg_0] ; this
call    ?line_number@__crt_win32_buffer_debug_info@@QEBAHXZ ; Microsoft VisualC v14 64bit runtime
or      eax, [rsp+28h+arg_8]
movzx   r8d, [rsp+28h+arg_10]
mov     edx, eax
mov     rcx, [rsp+28h+arg_0]
call    sub_7FF6E3436A60
nop
add     rsp, 28h
retn
sub_7FF6E3438400 endp

algn_7FF6E3438438:
align 20h
; [0000000F BYTES: COLLAPSED FUNCTION unknown_libname_67]
align 10h



sub_7FF6E3438450 proc near

var_18= dword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= byte ptr  10h

mov     [rsp+arg_8], dl
mov     [rsp+arg_0], rcx
sub     rsp, 38h
mov     rcx, [rsp+38h+arg_0]
call    unknown_libname_18 ; Microsoft VisualC v14 64bit runtime
test    rax, rax
jle     short loc_7FF6E343848D
mov     rcx, [rsp+38h+arg_0]
call    ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ ; std::streambuf::_Pninc(void)
movzx   ecx, [rsp+38h+arg_8]
mov     [rax], cl
movzx   ecx, [rsp+38h+arg_8]
call    ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z ; std::_Narrow_char_traits<char,int>::to_int_type(char)
mov     [rsp+38h+var_18], eax
jmp     short loc_7FF6E34384B7

loc_7FF6E343848D:
movzx   ecx, [rsp+38h+arg_8]
call    ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHD@Z ; std::_Narrow_char_traits<char,int>::to_int_type(char)
mov     rcx, [rsp+38h+arg_0]
mov     rcx, [rcx]
mov     [rsp+38h+var_10], rcx
mov     edx, eax
mov     rcx, [rsp+38h+arg_0]
mov     rax, [rsp+38h+var_10]
call    qword ptr [rax+18h]
mov     [rsp+38h+var_18], eax

loc_7FF6E34384B7:
mov     eax, [rsp+38h+var_18]
add     rsp, 38h
retn
sub_7FF6E3438450 endp




sub_7FF6E34384C0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     r8, [rsp+28h+arg_10]
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+48h]
add     rsp, 28h
retn
sub_7FF6E34384C0 endp

algn_7FF6E34384F2:
align 20h



sub_7FF6E3438500 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+20h]
add     rsp, 28h
retn
sub_7FF6E3438500 endp

algn_7FF6E343851E:
align 20h
; [0000000F BYTES: COLLAPSED FUNCTION unknown_libname_32]
align 10h
; [0000000A BYTES: COLLAPSED FUNCTION std::_Narrow_char_traits<char,int>::to_int_type(char)]
align 20h



sub_7FF6E3438540 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+38h]
mov     rax, [rsp+28h+arg_8]
add     rsp, 28h
retn
sub_7FF6E3438540 endp

algn_7FF6E343856D:
align 10h
; [0000000D BYTES: COLLAPSED FUNCTION `anonymous namespace'::_Transcode_result::_Error(void)]
align 20h
; [00000038 BYTES: COLLAPSED FUNCTION get_unexpected_or_default(__vcrt_ptd const * const)]
algn_7FF6E34385B8:
align 20h



sub_7FF6E34385C0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     [rsp+arg_18], r9
mov     [rsp+arg_10], r8
mov     [rsp+arg_8], rdx
mov     [rsp+arg_0], rcx
sub     rsp, 28h
mov     rax, [rsp+28h+arg_0]
mov     rax, [rax]
mov     r9, [rsp+28h+arg_18]
mov     r8, [rsp+28h+arg_10]
mov     rdx, [rsp+28h+arg_8]
mov     rcx, [rsp+28h+arg_0]
call    qword ptr [rax+38h]
add     rsp, 28h
retn
sub_7FF6E34385C0 endp

algn_7FF6E34385FC:
align 20h
; [00000032 BYTES: COLLAPSED FUNCTION std::ios_base::width(__int64)]
algn_7FF6E3438632:
align 20h
; [0000000F BYTES: COLLAPSED FUNCTION std::ios_base::width(void)]
align 10h



sub_7FF6E3438650 proc near
lea     rax, unk_7FF6E346E270
retn
sub_7FF6E3438650 endp

align 20h
; [0000006E BYTES: COLLAPSED FUNCTION _vsprintf_s_l]
algn_7FF6E34386CE:
align 10h



sub_7FF6E34386D0 proc near

arg_0= qword ptr  8

movsd   [rsp+arg_0], xmm0
sub     rsp, 28h
movsd   xmm0, [rsp+28h+arg_0]
call    sub_7FF6E3441190
add     rsp, 28h
retn
sub_7FF6E34386D0 endp

algn_7FF6E34386EA:
align 10h



sub_7FF6E34386F0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
movsd   [rsp+arg_0], xmm0
sub     rsp, 28h
mov     rdx, [rsp+28h+arg_8]
movsd   xmm0, [rsp+28h+arg_0]
call    sub_7FF6E34412A0
add     rsp, 28h
retn
sub_7FF6E34386F0 endp

algn_7FF6E3438714:
align 20h
; [00000059 BYTES: COLLAPSED FUNCTION sprintf_s]
algn_7FF6E3438779:
align 4
; [00000043 BYTES: COLLAPSED FUNCTION std::_Init_locks::_Init_locks(void)]
algn_7FF6E34387BF:
align 20h
; [0000003B BYTES: COLLAPSED FUNCTION std::_Lockit::_Lockit(int)]
algn_7FF6E34387FB:
align 4
; [0000003B BYTES: COLLAPSED FUNCTION unknown_libname_33]
algn_7FF6E3438837:
align 8
; [00000032 BYTES: COLLAPSED FUNCTION std::_Lockit::~_Lockit(void)]
algn_7FF6E343886A:
align 4



sub_7FF6E343886C proc near
and     qword ptr [rcx+10h], 0
lea     rax, aBadAllocation ; "bad allocation"
mov     [rcx+8], rax
lea     rax, off_7FF6E345D420
mov     [rcx], rax
mov     rax, rcx
retn
sub_7FF6E343886C endp

align 4



sub_7FF6E343888C proc near
push    rbx
sub     rsp, 20h
mov     rbx, rcx
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rax+8]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345D7B0
mov     [rbx], rax
mov     rax, rbx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E343888C endp




sub_7FF6E34388C8 proc near

var_18= qword ptr -18h
var_10= byte ptr -10h

push    rbx
sub     rsp, 30h
mov     rbx, rcx
mov     [rsp+38h+var_10], 1
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rsp+38h+var_18], rax
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rsp+38h+var_18]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345D7B0
mov     [rbx], rax
mov     rax, rbx
add     rsp, 30h
pop     rbx
retn
sub_7FF6E34388C8 endp

algn_7FF6E343890F:
align 10h



sub_7FF6E3438910 proc near
push    rbx
sub     rsp, 20h
mov     rbx, rcx
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rax+8]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345D798
mov     [rbx], rax
mov     rax, rbx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E3438910 endp




sub_7FF6E343894C proc near
push    rbx
sub     rsp, 20h
mov     rbx, rcx
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rax+8]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345D7C8
mov     [rbx], rax
mov     rax, rbx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E343894C endp




sub_7FF6E3438988 proc near

var_18= qword ptr -18h
var_10= byte ptr -10h

push    rbx
sub     rsp, 30h
mov     rbx, rcx
mov     [rsp+38h+var_10], 1
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rsp+38h+var_18], rax
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rsp+38h+var_18]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345D7C8
mov     [rbx], rax
mov     rax, rbx
add     rsp, 30h
pop     rbx
retn
sub_7FF6E3438988 endp

algn_7FF6E34389CF:
align 10h



sub_7FF6E34389D0 proc near

var_18= qword ptr -18h
var_10= byte ptr -10h

push    rbx
sub     rsp, 30h
mov     rbx, rcx
mov     [rsp+38h+var_10], 1
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rsp+38h+var_18], rax
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rsp+38h+var_18]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345D478
mov     [rbx], rax
mov     rax, rbx
add     rsp, 30h
pop     rbx
retn
sub_7FF6E34389D0 endp

algn_7FF6E3438A17:
align 8

unknown_libname_34:     ; Microsoft VisualC v14 64bit runtime
lea     rax, off_7FF6E345D3F0
mov     [rcx], rax
add     rcx, 8
jmp     __std_exception_destroy
align 4
; [00000042 BYTES: COLLAPSED FUNCTION unknown_libname_35]
algn_7FF6E3438A6E:
align 10h


; Attributes: noreturn

sub_7FF6E3438A70 proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
lea     rcx, [rsp+48h+pExceptionObject]
call    sub_7FF6E343886C
lea     rdx, stru_7FF6E346BFB8 ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
sub_7FF6E3438A70 endp

align 10h


; Attributes: noreturn

sub_7FF6E3438A90 proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
mov     rdx, rcx
lea     rcx, [rsp+48h+pExceptionObject]
call    sub_7FF6E34388C8
lea     rdx, stru_7FF6E346C018 ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
db 0CCh
sub_7FF6E3438A90 endp

algn_7FF6E3438AB3:
align 4


; Attributes: noreturn

sub_7FF6E3438AB4 proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
mov     rdx, rcx
lea     rcx, [rsp+48h+pExceptionObject]
call    sub_7FF6E3438988
lea     rdx, stru_7FF6E346C080 ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
db 0CCh
sub_7FF6E3438AB4 endp

algn_7FF6E3438AD7:
align 8


; Attributes: noreturn

sub_7FF6E3438AD8 proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
mov     rdx, rcx
lea     rcx, [rsp+48h+pExceptionObject]
call    sub_7FF6E34389D0
lea     rdx, stru_7FF6E346C0E8 ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
db 0CCh
sub_7FF6E3438AD8 endp

algn_7FF6E3438AFB:
align 4
; [00000005 BYTES: COLLAPSED FUNCTION j___uncaught_exception]
align 4
; [00000028 BYTES: COLLAPSED FUNCTION std::_Syserror_map(int)]
; [00000086 BYTES: COLLAPSED FUNCTION std::locale::_Locimp::_Locimp(bool)]
algn_7FF6E3438BB2:
align 4
; [00000076 BYTES: COLLAPSED FUNCTION std::_Yarn<char>::operator=(char const *)]
algn_7FF6E3438C2A:
align 4
; [0000005C BYTES: COLLAPSED FUNCTION std::locale::_Locimp::`scalar deleting destructor'(uint)]
; [00000038 BYTES: COLLAPSED FUNCTION std::_Facet_Register(std::_Facet_base *)]



sub_7FF6E3438CC0 proc near
mov     rax, cs:qword_7FF6E346E448
retn
sub_7FF6E3438CC0 endp

; [000000F2 BYTES: COLLAPSED FUNCTION std::locale::_Init(bool)]
algn_7FF6E3438DBA:
align 4
; [0000007B BYTES: COLLAPSED FUNCTION std::locale::_Locimp::_Locimp_dtor(std::locale::_Locimp *)]
algn_7FF6E3438E37:
align 8
; [00000069 BYTES: COLLAPSED FUNCTION std::_Locinfo::_Locinfo_ctor(std::_Locinfo *,char const *)]
algn_7FF6E3438EA1:
align 4
; [00000019 BYTES: COLLAPSED FUNCTION std::_Locinfo::_Locinfo_dtor(std::_Locinfo *)]
algn_7FF6E3438EBD:
align 20h
; [0000002E BYTES: COLLAPSED FUNCTION std::locale::_Locimp::_New_Locimp(bool)]
algn_7FF6E3438EEE:
align 10h
; [00000032 BYTES: COLLAPSED FUNCTION std::locale::_Setgloballocale(void *)]
algn_7FF6E3438F22:
align 4
; [0000003A BYTES: COLLAPSED FUNCTION _Deletegloballocale]
algn_7FF6E3438F5E:
align 20h
; [00000033 BYTES: COLLAPSED FUNCTION tidy_global]
algn_7FF6E3438F93:
align 4
; [000000BE BYTES: COLLAPSED FUNCTION _Getctype]
algn_7FF6E3439052:
align 4
; [00000131 BYTES: COLLAPSED FUNCTION _Tolower]
algn_7FF6E3439185:
align 8
; [00000098 BYTES: COLLAPSED FUNCTION _Getcvt]
; [00000141 BYTES: COLLAPSED FUNCTION _Toupper]
algn_7FF6E3439361:
align 4



; __int64 __fastcall sub_7FF6E3439364(void *Src)
sub_7FF6E3439364 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r12
push    r14
push    r15
sub     rsp, 20h
mov     r14, [rcx+10h]
mov     rsi, 7FFFFFFFFFFFFFFFh
mov     rax, rsi
mov     r15b, r9b
sub     rax, r14
mov     rbx, rcx
cmp     rax, rdx
jb      loc_7FF6E343953A
mov     rbp, [rcx+18h]
lea     r12, [r14+rdx]
mov     rcx, r12
or      rcx, 0Fh
cmp     rcx, rsi
ja      short loc_7FF6E34393C9
mov     rdx, rbp
mov     rax, rsi
shr     rdx, 1
sub     rax, rdx
cmp     rbp, rax
jbe     short loc_7FF6E34393D5

loc_7FF6E34393C9:
mov     rcx, 8000000000000000h
jmp     short loc_7FF6E34393F9

loc_7FF6E34393D5:
lea     rax, [rdx+rbp]
mov     rsi, rcx
cmp     rcx, rax
cmovb   rsi, rax
lea     rcx, [rsi+1]    ; Size
test    rcx, rcx
jnz     short loc_7FF6E34393F0
xor     edi, edi
jmp     short loc_7FF6E3439408

loc_7FF6E34393F0:
cmp     rcx, 1000h
jb      short loc_7FF6E3439400

loc_7FF6E34393F9:
call    sub_7FF6E34316A0
jmp     short loc_7FF6E3439405

loc_7FF6E3439400:
call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)

loc_7FF6E3439405:
mov     rdi, rax

loc_7FF6E3439408:
mov     rcx, [rbx+18h]
mov     rax, [rbx+10h]
cmp     rcx, 0Fh
jbe     short loc_7FF6E3439456
cmp     cs:byte_7FF6E34683A0, 0
mov     r11, [rbx]
jz      short loc_7FF6E3439456
inc     rax
lea     rdx, [rcx+8]
add     rdx, r11
lea     r10, [rcx+1]
and     rdx, 0FFFFFFFFFFFFFFF8h
add     rax, r11
add     r10, r11
mov     r8, rdx
cmp     rax, rdx
mov     r9, rdx
mov     rcx, r11
cmovbe  r8, rax
cmp     r10, rdx
cmovbe  r9, r10
call    _guard_check_icall_nop

loc_7FF6E3439456:
mov     [rbx+10h], r12
mov     r8, r14         ; Size
mov     [rbx+18h], rsi
mov     rcx, rdi        ; void *
cmp     rbp, 0Fh
jbe     short loc_7FF6E34394B2
mov     rsi, [rbx]
mov     rdx, rsi        ; Src
call    memcpy
lea     rdx, [rbp+1]
mov     [rdi+r14], r15b
mov     byte ptr [rdi+r14+1], 0
cmp     rdx, 1000h
jb      short loc_7FF6E34394A8
mov     rcx, [rsi-8]
add     rdx, 27h ; '''
sub     rsi, rcx
lea     rax, [rsi-8]
cmp     rax, 1Fh
ja      loc_7FF6E3439534
mov     rsi, rcx

loc_7FF6E34394A8:       ; Block
mov     rcx, rsi
call    j_j_j__free_base
jmp     short loc_7FF6E34394C4

loc_7FF6E34394B2:       ; Src
mov     rdx, rbx
call    memcpy
mov     [rdi+r14], r15b
mov     byte ptr [rdi+r14+1], 0

loc_7FF6E34394C4:
mov     [rbx], rdi
mov     rdx, [rbx+18h]
mov     rcx, [rbx+10h]
cmp     rdx, 0Fh
jbe     short loc_7FF6E3439512
cmp     cs:byte_7FF6E34683A0, 0
jz      short loc_7FF6E3439512
lea     rax, [rdx+1]
inc     rcx
add     rdx, 8
add     rcx, rdi
add     rdx, rdi
add     rax, rdi
and     rdx, 0FFFFFFFFFFFFFFF8h
cmp     rax, rdx
mov     r8, rdx
mov     r9, rdx
cmovbe  r8, rax
cmp     rcx, rdx
cmovbe  r9, rcx
mov     rcx, rdi
call    _guard_check_icall_nop

loc_7FF6E3439512:
mov     rbp, [rsp+38h+arg_8]
mov     rax, rbx
mov     rbx, [rsp+38h+arg_0]
mov     rsi, [rsp+38h+arg_10]
mov     rdi, [rsp+38h+arg_18]
add     rsp, 20h
pop     r15
pop     r14
pop     r12
retn

loc_7FF6E3439534:
call    _invalid_parameter_noinfo_noreturn
align 2

loc_7FF6E343953A:
call    sub_7FF6E3436680
sub_7FF6E3439364 endp

align 20h



sub_7FF6E3439540 proc near

arg_0= qword ptr  8
arg_8= byte ptr  10h
arg_10= qword ptr  18h

; __unwind { // __CxxFrameHandler4
push    rbx
push    rbp
push    rsi
push    rdi
push    r14
sub     rsp, 20h
mov     rbp, rcx
xor     edx, edx        ; int
lea     rcx, [rsp+48h+arg_8] ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
nop
mov     rsi, cs:qword_7FF6E346E588
mov     [rsp+48h+arg_10], rsi
mov     rdi, cs:qword_7FF6E346E578
test    rdi, rdi
jnz     short loc_7FF6E34395B0
xor     edx, edx        ; int
lea     rcx, [rsp+48h+arg_0] ; this
call    ??0_Lockit@std@@QEAA@H@Z ; std::_Lockit::_Lockit(int)
cmp     cs:qword_7FF6E346E578, rdi
jnz     short loc_7FF6E343959F
mov     eax, cs:dword_7FF6E346E3F0
inc     eax
mov     cs:dword_7FF6E346E3F0, eax
cdqe
mov     cs:qword_7FF6E346E578, rax

loc_7FF6E343959F:       ; this
lea     rcx, [rsp+48h+arg_0]
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
mov     rdi, cs:qword_7FF6E346E578

loc_7FF6E34395B0:
mov     rcx, [rbp+8]
lea     r14, ds:0[rdi*8]
cmp     rdi, [rcx+18h]
jnb     short loc_7FF6E34395D1
mov     rax, [rcx+10h]
mov     rbx, [r14+rax]
test    rbx, rbx
jnz     short loc_7FF6E3439637
jmp     short loc_7FF6E34395D3

loc_7FF6E34395D1:
xor     ebx, ebx

loc_7FF6E34395D3:
cmp     byte ptr [rcx+24h], 0
jz      short loc_7FF6E34395EC
call    sub_7FF6E3438CC0
cmp     rdi, [rax+18h]
jnb     short loc_7FF6E34395F1
mov     rax, [rax+10h]
mov     rbx, [r14+rax]

loc_7FF6E34395EC:
test    rbx, rbx
jnz     short loc_7FF6E3439637

loc_7FF6E34395F1:
test    rsi, rsi
jz      short loc_7FF6E34395FB
mov     rbx, rsi
jmp     short loc_7FF6E3439637

loc_7FF6E34395FB:
mov     rdx, rbp
lea     rcx, [rsp+48h+arg_10]
call    ?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z ; std::codecvt<char,char,_Mbstatet>::_Getcat(std::locale::facet const * *,std::locale const *)
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E343964F
mov     rbx, [rsp+48h+arg_10]
mov     [rsp+48h+arg_0], rbx
mov     rcx, rbx        ; struct std::_Facet_base *
call    ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register(std::_Facet_base *)
mov     rcx, [rbx]
mov     rax, [rcx+8]
mov     rcx, rbx
call    cs:__guard_dispatch_icall_fptr
mov     cs:qword_7FF6E346E588, rbx

loc_7FF6E3439637:       ; this
lea     rcx, [rsp+48h+arg_8]
call    ??1_Lockit@std@@QEAA@XZ ; std::_Lockit::~_Lockit(void)
mov     rax, rbx
add     rsp, 20h
pop     r14
pop     rdi
pop     rsi
pop     rbp
pop     rbx
retn

loc_7FF6E343964F:
call    sub_7FF6E34364C0
db 90h
; } // starts at 7FF6E3439540
sub_7FF6E3439540 endp

algn_7FF6E3439655:
align 8
; [0000009E BYTES: COLLAPSED FUNCTION std::ostream::ostream(std::streambuf *,bool)]
algn_7FF6E34396F6:
align 8



sub_7FF6E34396F8 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

; __unwind { // __CxxFrameHandler4
mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 20h
mov     rbx, rcx
lea     rax, off_7FF6E345E6A0
mov     [rcx], rax
lea     rsi, [rcx+8]
xor     eax, eax
mov     [rsi], rax
lea     r14, [rcx+10h]
mov     [r14], rax
mov     [rcx+18h], rax
mov     [rcx+20h], rax
lea     r15, [rcx+28h]
mov     [r15], rax
lea     rbp, [rcx+30h]
mov     [rbp+0], rax
mov     [rcx+38h], rax
mov     [rcx+40h], rax
lea     r12, [rcx+48h]
mov     [r12], eax
lea     r13, [rcx+4Ch]
mov     [r13+0], eax
mov     [rcx+50h], rax
mov     [rcx+58h], rax
lea     ecx, [rax+10h]  ; Size
call    ??2@YAPEAX_K@Z  ; operator new(unsigned __int64)
mov     rdi, rax
xor     eax, eax
test    rdi, rdi
jz      short loc_7FF6E3439789
mov     cl, 1           ; bool
call    ?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z ; std::locale::_Init(bool)
mov     [rdi+8], rax
xor     eax, eax
jmp     short loc_7FF6E343978C

loc_7FF6E3439789:
mov     rdi, rax

loc_7FF6E343978C:
mov     [rbx+60h], rdi
mov     [rbx+18h], rsi
mov     [rbx+20h], r14
mov     [rbx+38h], r15
mov     [rbx+40h], rbp
mov     [rbx+50h], r12
mov     [rbx+58h], r13
mov     [r14], rax
mov     [rbp+0], rax
mov     [r13+0], eax
mov     [rsi], rax
mov     [r15], rax
mov     [r12], eax
mov     rax, rbx
mov     rbx, [rsp+48h+arg_0]
mov     rbp, [rsp+48h+arg_8]
mov     rsi, [rsp+48h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
retn
; } // starts at 7FF6E34396F8
sub_7FF6E34396F8 endp

algn_7FF6E34397DD:
align 20h
; [000000B0 BYTES: COLLAPSED FUNCTION std::filebuf::~filebuf<char,std::char_traits<char>>(void)]
; [00000019 BYTES: COLLAPSED FUNCTION unknown_libname_36]
algn_7FF6E34398A9:
align 4



sub_7FF6E34398AC proc near
movsxd  rax, dword ptr [rcx-4]
sub     rcx, rax
jmp     sub_7FF6E343992C
sub_7FF6E34398AC endp

; [00000034 BYTES: COLLAPSED FUNCTION std::filebuf::`scalar deleting destructor'(uint)]
; [0000003F BYTES: COLLAPSED FUNCTION unknown_libname_37]
algn_7FF6E343992B:
align 4



sub_7FF6E343992C proc near

arg_0= qword ptr  8

; __unwind { // __CxxFrameHandler4
mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     ebx, edx
lea     rdi, [rcx-10h]
mov     rax, [rdi]
movsxd  r8, dword ptr [rax+4]
lea     rax, off_7FF6E345E688
mov     [r8+rcx-10h], rax
mov     rax, [rdi]
movsxd  r8, dword ptr [rax+4]
lea     r9d, [r8-10h]
mov     [r8+rcx-14h], r9d
lea     rax, off_7FF6E345E668
mov     [rcx], rax
call    sub_7FF6E343B13C
nop
test    bl, 1
jz      short loc_7FF6E3439981
mov     edx, 70h ; 'p'
mov     rcx, rdi        ; Block
call    j_j_j__free_base

loc_7FF6E3439981:
mov     rax, rdi
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
; } // starts at 7FF6E343992C
sub_7FF6E343992C endp

algn_7FF6E343998F:
align 10h



; __int64 __fastcall sub_7FF6E3439990(void *Block)
sub_7FF6E3439990 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
push    rdi
sub     rsp, 20h
mov     rdi, [rcx+60h]
lea     rax, off_7FF6E345E6A0
mov     [rcx], rax
mov     esi, edx
mov     rbx, rcx
test    rdi, rdi
jz      short loc_7FF6E34399F3
mov     rcx, [rdi+8]
test    rcx, rcx
jz      short loc_7FF6E34399E6
mov     rax, [rcx]
mov     rax, [rax+10h]
call    cs:__guard_dispatch_icall_fptr
mov     rcx, rax
test    rax, rax
jz      short loc_7FF6E34399E6
mov     rdx, [rax]
mov     rax, [rdx]
mov     edx, 1
call    cs:__guard_dispatch_icall_fptr

loc_7FF6E34399E6:
mov     edx, 10h
mov     rcx, rdi        ; Block
call    j_j_j__free_base

loc_7FF6E34399F3:
test    sil, 1
jz      short loc_7FF6E3439A06
mov     edx, 68h ; 'h'
mov     rcx, rbx        ; Block
call    j_j_j__free_base

loc_7FF6E3439A06:
mov     rsi, [rsp+28h+arg_8]
mov     rax, rbx
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E3439990 endp

algn_7FF6E3439A19:
align 4



sub_7FF6E3439A1C proc near
push    rbx
sub     rsp, 20h
lea     rax, off_7FF6E345D550
mov     rbx, rcx
mov     [rcx], rax
test    dl, 1
jz      short loc_7FF6E3439A3E
mov     edx, 10h
call    j_j_j__free_base

loc_7FF6E3439A3E:
mov     rax, rbx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E3439A1C endp

algn_7FF6E3439A47:
align 8
; [0000003F BYTES: COLLAPSED FUNCTION std::ios_base::`scalar deleting destructor'(uint)]
algn_7FF6E3439A87:
align 8
; [000000D5 BYTES: COLLAPSED FUNCTION std::filebuf::_Endwrite(void)]
algn_7FF6E3439B5D:
align 20h
; [000000D9 BYTES: COLLAPSED FUNCTION std::string::_Erase_noexcept(unsigned __int64,unsigned __int64)]
algn_7FF6E3439C39:
align 4
; [000000B9 BYTES: COLLAPSED FUNCTION std::codecvt<char,char,_Mbstatet>::_Getcat(std::locale::facet const * *,std::locale const *)]
algn_7FF6E3439CF5:
align 8
; [000000D7 BYTES: COLLAPSED FUNCTION std::filebuf::_Init(_iobuf *,std::filebuf::_Initfl)]
algn_7FF6E3439DCF:
align 10h
; [00000070 BYTES: COLLAPSED FUNCTION std::ios_base::_Init(void)]
; [0000007E BYTES: COLLAPSED FUNCTION unknown_libname_38]
algn_7FF6E3439EBE:
align 20h
; [0000001A BYTES: COLLAPSED FUNCTION unknown_libname_39]
algn_7FF6E3439EDA:
align 4



_guard_check_icall_nop proc near
retn    0
_guard_check_icall_nop endp

align 20h
; [0000001A BYTES: COLLAPSED FUNCTION unknown_libname_40]
algn_7FF6E3439EFA:
align 4
; [0000006B BYTES: COLLAPSED FUNCTION std::ios_base::clear(int)]
algn_7FF6E3439F67:
align 8
; [0000008F BYTES: COLLAPSED FUNCTION std::filebuf::close(void)]
algn_7FF6E3439FF7:
align 8



sub_7FF6E3439FF8 proc near
mov     al, 1
retn
sub_7FF6E3439FF8 endp

align 4
; [00000006 BYTES: COLLAPSED FUNCTION charNode::raw_length(void)]
align 4
; [0000001B BYTES: COLLAPSED FUNCTION unknown_libname_41]
align 20h
; [0000001C BYTES: COLLAPSED FUNCTION std::codecvt<char,char,_Mbstatet>::do_length(_Mbstatet &,char const *,char const *,unsigned __int64)]
; [0000000E BYTES: COLLAPSED FUNCTION std::codecvt<char,char,_Mbstatet>::do_unshift(_Mbstatet &,char *,char *,char * &)]
align 4



sub_7FF6E343A04C proc near
push    rbx
sub     rsp, 20h
mov     rbx, rcx
mov     rcx, rdx
call    sub_7FF6E3439540
mov     rdx, rax
mov     rcx, rbx
add     rsp, 20h
pop     rbx
jmp     unknown_libname_38 ; Microsoft VisualC v14 64bit runtime
sub_7FF6E343A04C endp

algn_7FF6E343A06D:
align 10h
; [000000BA BYTES: COLLAPSED FUNCTION std::ios::init(std::streambuf *,bool)]
algn_7FF6E343A12A:
align 4
; [00000184 BYTES: COLLAPSED FUNCTION std::filebuf::overflow(int)]



sub_7FF6E343A2B0 proc near
or      eax, 0FFFFFFFFh
retn
sub_7FF6E343A2B0 endp

; [000000CC BYTES: COLLAPSED FUNCTION std::filebuf::pbackfail(int)]
; [000000BA BYTES: COLLAPSED FUNCTION std::string::push_back(char)]
algn_7FF6E343A43A:
align 4
; [000000E4 BYTES: COLLAPSED FUNCTION std::filebuf::seekoff(__int64,int,int)]
; [00000013 BYTES: COLLAPSED FUNCTION unknown_libname_42]
align 4
; [000000B6 BYTES: COLLAPSED FUNCTION std::filebuf::seekpos(std::fpos<_Mbstatet>,int)]
algn_7FF6E343A5EA:
align 4
; [00000054 BYTES: COLLAPSED FUNCTION std::filebuf::setbuf(char *,__int64)]



sub_7FF6E343A640 proc near
mov     rax, rcx
retn
sub_7FF6E343A640 endp




sub_7FF6E343A644 proc near
xor     eax, eax
retn
sub_7FF6E343A644 endp

align 8
; [00000050 BYTES: COLLAPSED FUNCTION std::filebuf::sync(void)]


; Attributes: bp-based frame fpd=57h

sub_7FF6E343A698 proc near

var_70= qword ptr -70h
var_68= qword ptr -68h
var_60= qword ptr -60h
var_58= qword ptr -58h
var_40= byte ptr -40h
var_3F= byte ptr -3Fh
var_38= qword ptr -38h
var_30= qword ptr -30h
Src= xmmword ptr -28h
var_18= qword ptr -18h
var_10= qword ptr -10h
var_8= qword ptr -8
var_s0= byte ptr  0

; __unwind { // __GSHandlerCheck_EH4
mov     rax, rsp
mov     [rax+10h], rbx
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    rbp
lea     rbp, [rax-5Fh]
sub     rsp, 90h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+57h+var_8], rax
mov     rdi, rcx
mov     rax, [rcx+38h]
mov     rcx, [rax]
test    rcx, rcx
jz      short loc_7FF6E343A6FC
mov     rdx, [rdi+50h]
movsxd  r9, dword ptr [rdx]
lea     rax, [rcx+r9]
cmp     rcx, rax
jnb     short loc_7FF6E343A6FC
lea     eax, [r9-1]
mov     [rdx], eax
mov     rcx, [rdi+38h]
mov     rdx, [rcx]
lea     rax, [rdx+1]
mov     [rcx], rax
movzx   eax, byte ptr [rdx]
jmp     loc_7FF6E343A89B

loc_7FF6E343A6FC:
cmp     qword ptr [rdi+80h], 0
jnz     short loc_7FF6E343A70E
or      eax, 0FFFFFFFFh
jmp     loc_7FF6E343A89B

loc_7FF6E343A70E:
mov     r9, [rdi+18h]
lea     rax, [rdi+70h]
cmp     [r9], rax
jnz     short loc_7FF6E343A73B
mov     rdx, [rdi+90h]
mov     rcx, [rdi+88h]
mov     [r9], rcx
mov     rax, [rdi+38h]
mov     [rax], rcx
sub     edx, ecx
mov     rax, [rdi+50h]
mov     [rax], edx

loc_7FF6E343A73B:       ; Stream
mov     rcx, [rdi+80h]
cmp     qword ptr [rdi+68h], 0
jnz     short loc_7FF6E343A761
call    fgetc
or      ebx, 0FFFFFFFFh
cmp     eax, ebx
jz      loc_7FF6E343A899
movzx   ebx, al
jmp     loc_7FF6E343A899

loc_7FF6E343A761:
xorps   xmm0, xmm0
movups  [rbp+57h+Src], xmm0
and     [rbp+57h+var_18], 0
mov     [rbp+57h+var_10], 0Fh
mov     byte ptr [rbp+57h+Src], 0
call    fgetc
or      ebx, 0FFFFFFFFh
jmp     loc_7FF6E343A82F

loc_7FF6E343A786:
mov     dl, al
lea     rcx, [rbp+57h+Src] ; Src
call    ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::string::push_back(char)
mov     r10, [rdi+68h]
lea     rcx, [rbp+57h+Src]
cmp     [rbp+57h+var_10], 0Fh
cmova   rcx, qword ptr [rbp+57h+Src]
mov     r9, [rbp+57h+var_18]
add     r9, rcx
lea     r8, [rbp+57h+Src]
cmp     [rbp+57h+var_10], 0Fh
cmova   r8, qword ptr [rbp+57h+Src]
mov     rax, [r10]
lea     rcx, [rbp+57h+var_30]
mov     [rsp+90h+var_58], rcx
lea     rcx, [rbp+57h+var_3F]
mov     [rsp+90h+var_60], rcx
lea     rcx, [rbp+57h+var_40]
mov     [rsp+90h+var_68], rcx
lea     rcx, [rbp+57h+var_38]
mov     [rsp+90h+var_70], rcx
lea     rdx, [rdi+74h]
mov     rcx, r10
mov     rax, [rax+30h]
call    cs:__guard_dispatch_icall_fptr
test    eax, eax
jz      short loc_7FF6E343A7F9
sub     eax, 1
jnz     short loc_7FF6E343A839

loc_7FF6E343A7F9:
lea     rax, [rbp+57h+var_40]
cmp     [rbp+57h+var_30], rax
lea     rax, [rbp+57h+Src]
jnz     short loc_7FF6E343A851
cmp     [rbp+57h+var_10], 0Fh
cmova   rax, qword ptr [rbp+57h+Src]
mov     r8, [rbp+57h+var_38]
sub     r8, rax
xor     edx, edx
lea     rcx, [rbp+57h+Src]
call    ?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV12@_K_K@Z ; std::string::_Erase_noexcept(unsigned __int64,unsigned __int64)
mov     rcx, [rdi+80h]  ; Stream
call    fgetc

loc_7FF6E343A82F:
cmp     eax, ebx
jnz     loc_7FF6E343A786
jmp     short loc_7FF6E343A890

loc_7FF6E343A839:
cmp     eax, 2
jnz     short loc_7FF6E343A890
lea     rax, [rbp+57h+Src]
cmp     [rbp+57h+var_10], 0Fh
cmova   rax, qword ptr [rbp+57h+Src]
movsx   ebx, byte ptr [rax]
jmp     short loc_7FF6E343A890

loc_7FF6E343A851:
cmp     [rbp+57h+var_10], 0Fh
cmova   rax, qword ptr [rbp+57h+Src]
mov     rbx, [rbp+57h+var_18]
mov     rcx, [rbp+57h+var_38]
sub     rbx, rcx
add     rbx, rax
test    rbx, rbx
jle     short loc_7FF6E343A88C

loc_7FF6E343A86E:
dec     rbx
movsx   ecx, byte ptr [rbx+rcx] ; Character
mov     rdx, [rdi+80h]  ; Stream
call    ungetc
test    rbx, rbx
jle     short loc_7FF6E343A88C
mov     rcx, [rbp+57h+var_38]
jmp     short loc_7FF6E343A86E

loc_7FF6E343A88C:
movzx   ebx, [rbp+57h+var_40]

loc_7FF6E343A890:
lea     rcx, [rbp+57h+Src]
call    sub_7FF6E34365D0

loc_7FF6E343A899:
mov     eax, ebx

loc_7FF6E343A89B:
mov     rcx, [rbp+57h+var_8]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
lea     r11, [rsp+90h+var_s0]
mov     rbx, [r11+18h]
mov     rsi, [r11+20h]
mov     rdi, [r11+28h]
mov     rsp, r11
pop     rbp
retn
; } // starts at 7FF6E343A698
sub_7FF6E343A698 endp

; [0000003C BYTES: COLLAPSED FUNCTION std::streambuf::uflow(void)]
; [00000063 BYTES: COLLAPSED FUNCTION std::filebuf::underflow(void)]
algn_7FF6E343A95F:
align 20h
; [00000089 BYTES: COLLAPSED FUNCTION std::ios::widen(char)]
algn_7FF6E343A9E9:
align 4
; [0000012F BYTES: COLLAPSED FUNCTION std::filebuf::xsgetn(char *,__int64)]
algn_7FF6E343AB1B:
align 4
; [000000C4 BYTES: COLLAPSED FUNCTION std::streambuf::xsgetn(char *,__int64)]
; [000000BF BYTES: COLLAPSED FUNCTION std::filebuf::xsputn(char const *,__int64)]
algn_7FF6E343AC9F:
align 20h
; [000000C8 BYTES: COLLAPSED FUNCTION std::streambuf::xsputn(char const *,__int64)]
; [00000007 BYTES: COLLAPSED FUNCTION DeleteCriticalSection]
align 10h
; [0000000F BYTES: COLLAPSED FUNCTION _Mtxinit]
align 20h
; [00000007 BYTES: COLLAPSED FUNCTION EnterCriticalSection]
align 8
; [00000007 BYTES: COLLAPSED FUNCTION LeaveCriticalSection]
align 10h
; [0000003B BYTES: COLLAPSED FUNCTION _Atexit(void (*)(void))]
algn_7FF6E343ADCB:
align 4
; [000002F9 BYTES: COLLAPSED FUNCTION __crtLCMapStringA]
algn_7FF6E343B0C5:
align 8
; [00000071 BYTES: COLLAPSED FUNCTION std::ios_base::_Addstd(std::ios_base *)]
algn_7FF6E343B139:
align 4
; [00000075 BYTES: COLLAPSED FUNCTION sub_7FF6E343B13C]
algn_7FF6E343B1B1:
align 4
; [0000007F BYTES: COLLAPSED FUNCTION std::ios_base::_Tidy(void)]
algn_7FF6E343B233:
align 4
; [0000003C BYTES: COLLAPSED FUNCTION operator new(unsigned __int64)]
; [00000005 BYTES: COLLAPSED FUNCTION j_j_j__free_base]
align 8
; [0000001D BYTES: COLLAPSED FUNCTION __GSHandlerCheck]
algn_7FF6E343B295:
align 8
; [0000005B BYTES: COLLAPSED FUNCTION __GSHandlerCheckCommon]
byte_7FF6E343B2F3 db 13h dup(0CCh)
align 10h
; [0000001E BYTES: COLLAPSED FUNCTION __security_check_cookie]
algn_7FF6E343B32E:
align 10h



sub_7FF6E343B330 proc near
push    rbx
sub     rsp, 20h
lea     rax, off_7FF6E345E9E8
mov     rbx, rcx
mov     [rcx], rax
test    dl, 1
jz      short loc_7FF6E343B352
mov     edx, 18h
call    j_j_j__free_base

loc_7FF6E343B352:
mov     rax, rbx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E343B330 endp

algn_7FF6E343B35B:
align 4
; [000000B6 BYTES: COLLAPSED FUNCTION pre_c_initialization(void)]
algn_7FF6E343B412:
align 4
; [00000010 BYTES: COLLAPSED FUNCTION post_pgo_initialization(void)]
; [00000019 BYTES: COLLAPSED FUNCTION pre_cpp_initialization(void)]
algn_7FF6E343B43D:
align 20h
; [0000017C BYTES: COLLAPSED FUNCTION __scrt_common_main_seh(void)]
; [00000012 BYTES: COLLAPSED FUNCTION start]
algn_7FF6E343B5CE:
align 10h
; [00000039 BYTES: COLLAPSED FUNCTION __scrt_acquire_startup_lock]
algn_7FF6E343B609:
align 4
; [0000003A BYTES: COLLAPSED FUNCTION __scrt_initialize_crt]
algn_7FF6E343B646:
align 8
; [0000008B BYTES: COLLAPSED FUNCTION __scrt_initialize_onexit_tables]
algn_7FF6E343B6D3:
align 4
; [00000098 BYTES: COLLAPSED FUNCTION __scrt_is_nonwritable_in_current_image]
; [00000024 BYTES: COLLAPSED FUNCTION __scrt_release_startup_lock]
; [00000029 BYTES: COLLAPSED FUNCTION __scrt_uninitialize_crt]
algn_7FF6E343B7B9:
align 4
; [0000003A BYTES: COLLAPSED FUNCTION _onexit]
algn_7FF6E343B7F6:
align 8
; [00000017 BYTES: COLLAPSED FUNCTION atexit]
algn_7FF6E343B80F:
align 10h
; [0000007F BYTES: COLLAPSED FUNCTION __GSHandlerCheck_EH4]
algn_7FF6E343B88F:
align 20h
; [0000004E BYTES: COLLAPSED FUNCTION __alloca_probe]
algn_7FF6E343B8EE:
align 10h


; Attributes: bp-based frame

sub_7FF6E343B8F0 proc near

var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= qword ptr  20h
arg_8= qword ptr  28h
arg_10= qword ptr  30h

mov     [rsp-18h+arg_8], rbx
mov     [rsp-18h+arg_10], rsi
push    rbp
push    rdi
push    r14
mov     rbp, rsp
sub     rsp, 10h
xor     eax, eax
xor     ecx, ecx
cpuid
mov     r8d, ecx
mov     r10d, edx
xor     r10d, 49656E69h
xor     r8d, 6C65746Eh
mov     r9d, ebx
mov     r14d, eax
xor     ecx, ecx
mov     eax, 1
cpuid
or      r10d, r8d
mov     [rbp+var_10], eax
xor     r9d, 756E6547h
mov     [rbp+var_C], ebx
or      r10d, r9d
mov     [rbp+var_8], ecx
mov     edi, ecx
mov     [rbp+var_4], edx
jnz     short loc_7FF6E343B9A6
or      cs:qword_7FF6E346D0A8, 0FFFFFFFFFFFFFFFFh
and     eax, 0FFF3FF0h
mov     cs:qword_7FF6E346D0A0, 8000h
cmp     eax, 106C0h
jz      short loc_7FF6E343B992
cmp     eax, 20660h
jz      short loc_7FF6E343B992
cmp     eax, 20670h
jz      short loc_7FF6E343B992
add     eax, 0FFFCF9B0h
cmp     eax, 20h ; ' '
ja      short loc_7FF6E343B9A6
mov     rcx, 100010001h
bt      rcx, rax
jnb     short loc_7FF6E343B9A6

loc_7FF6E343B992:
mov     r8d, cs:dword_7FF6E346E7EC
or      r8d, 1
mov     cs:dword_7FF6E346E7EC, r8d
jmp     short loc_7FF6E343B9AD

loc_7FF6E343B9A6:
mov     r8d, cs:dword_7FF6E346E7EC

loc_7FF6E343B9AD:
xor     r9d, r9d
mov     esi, r9d
mov     r10d, r9d
mov     r11d, r9d
cmp     r14d, 7
jl      short loc_7FF6E343BA24
lea     eax, [r9+7]
xor     ecx, ecx
cpuid
mov     [rbp+var_10], eax
mov     esi, edx
mov     [rbp+var_C], ebx
mov     r9d, ebx
mov     [rbp+var_8], ecx
mov     [rbp+var_4], edx
bt      ebx, 9
jnb     short loc_7FF6E343B9E9
or      r8d, 2
mov     cs:dword_7FF6E346E7EC, r8d

loc_7FF6E343B9E9:
cmp     eax, 1
jl      short loc_7FF6E343BA07
mov     eax, 7
lea     ecx, [rax-6]
cpuid
mov     r10d, edx
mov     [rbp+var_10], eax
mov     [rbp+var_C], ebx
mov     [rbp+var_8], ecx
mov     [rbp+var_4], edx

loc_7FF6E343BA07:
mov     eax, 24h ; '$'
cmp     r14d, eax
jl      short loc_7FF6E343BA24
xor     ecx, ecx
cpuid
mov     r11d, ebx
mov     [rbp+var_10], eax
mov     [rbp+var_C], ebx
mov     [rbp+var_8], ecx
mov     [rbp+var_4], edx

loc_7FF6E343BA24:
mov     rax, cs:qword_7FF6E346D090
mov     ebx, 6
and     rax, 0FFFFFFFFFFFFFFFEh
mov     cs:dword_7FF6E346D098, 1
mov     cs:dword_7FF6E346D09C, 2
mov     cs:qword_7FF6E346D090, rax
bt      edi, 14h
jnb     short loc_7FF6E343BA70
and     rax, 0FFFFFFFFFFFFFFEFh
mov     cs:dword_7FF6E346D098, 2
mov     cs:qword_7FF6E346D090, rax
mov     cs:dword_7FF6E346D09C, ebx

loc_7FF6E343BA70:
bt      edi, 1Bh
jnb     loc_7FF6E343BBA5
xor     ecx, ecx
xgetbv
shl     rdx, 20h
or      rdx, rax
mov     [rbp+arg_0], rdx
bt      edi, 1Ch
jnb     loc_7FF6E343BB8A
mov     rax, [rbp+arg_0]
and     al, bl
cmp     al, bl
jnz     loc_7FF6E343BB8A
mov     eax, cs:dword_7FF6E346D09C
mov     dl, 0E0h
or      eax, 8
mov     cs:dword_7FF6E346D098, 3
mov     cs:dword_7FF6E346D09C, eax
test    r9b, 20h
jz      short loc_7FF6E343BB20
or      eax, 20h
mov     cs:dword_7FF6E346D098, 5
mov     cs:dword_7FF6E346D09C, eax
mov     ecx, 0D0030000h
mov     rax, cs:qword_7FF6E346D090
and     r9d, ecx
and     rax, 0FFFFFFFFFFFFFFFDh
mov     cs:qword_7FF6E346D090, rax
cmp     r9d, ecx
jnz     short loc_7FF6E343BB27
mov     rax, [rbp+arg_0]
and     al, dl
cmp     al, dl
jnz     short loc_7FF6E343BB20
mov     rax, cs:qword_7FF6E346D090
or      cs:dword_7FF6E346D09C, 40h
and     rax, 0FFFFFFFFFFFFFFDBh
mov     cs:dword_7FF6E346D098, ebx
mov     cs:qword_7FF6E346D090, rax
jmp     short loc_7FF6E343BB27

loc_7FF6E343BB20:
mov     rax, cs:qword_7FF6E346D090

loc_7FF6E343BB27:
bt      esi, 17h
jnb     short loc_7FF6E343BB39
btr     rax, 18h
mov     cs:qword_7FF6E346D090, rax

loc_7FF6E343BB39:
bt      r10d, 13h
jnb     short loc_7FF6E343BB8A
mov     rax, [rbp+arg_0]
and     al, dl
cmp     al, dl
jnz     short loc_7FF6E343BB8A
mov     ecx, r11d
mov     eax, r11d
shr     rcx, 10h
and     eax, 400FFh
and     ecx, 7
mov     cs:dword_7FF6E346E7E8, eax
or      rcx, 1000028h
not     rcx
and     rcx, cs:qword_7FF6E346D090
mov     cs:qword_7FF6E346D090, rcx
cmp     eax, 1
jbe     short loc_7FF6E343BB8A
and     rcx, 0FFFFFFFFFFFFFFBFh
mov     cs:qword_7FF6E346D090, rcx

loc_7FF6E343BB8A:
bt      r10d, 15h
jnb     short loc_7FF6E343BBA5
mov     rax, [rbp+arg_0]
bt      rax, 13h
jnb     short loc_7FF6E343BBA5
btr     cs:qword_7FF6E346D090, 7

loc_7FF6E343BBA5:
mov     rbx, [rsp+10h+arg_8]
xor     eax, eax
mov     rsi, [rsp+10h+arg_10]
add     rsp, 10h
pop     r14
pop     rdi
pop     rbp
retn
sub_7FF6E343B8F0 endp

algn_7FF6E343BBBA:
align 4


; Attributes: noreturn

sub_7FF6E343BBBC proc near

pExceptionObject= byte ptr -28h

sub     rsp, 48h
lea     rcx, [rsp+48h+pExceptionObject] ; this
call    ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length(void)
lea     rdx, pThrowInfo ; pThrowInfo
lea     rcx, [rsp+48h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
sub_7FF6E343BBBC endp

align 4
; [00000005 BYTES: COLLAPSED FUNCTION j_j__free_base]
align 4
; [00000034 BYTES: COLLAPSED FUNCTION __raise_securityfailure]
; [000000D3 BYTES: COLLAPSED FUNCTION __report_gsfailure]
algn_7FF6E343BCEB:
align 4


; Attributes: noreturn

sub_7FF6E343BCEC proc near
sub     rsp, 28h
mov     ecx, 8
call    __report_securityfailure
sub_7FF6E343BCEC endp

db 90h
add     rsp, 28h
retn
; [0000009D BYTES: COLLAPSED FUNCTION __report_securityfailure]
algn_7FF6E343BD9D:
align 20h
; [0000006D BYTES: COLLAPSED FUNCTION capture_current_context]
algn_7FF6E343BE0D:
align 10h
; [00000071 BYTES: COLLAPSED FUNCTION capture_previous_context]
algn_7FF6E343BE81:
align 4
; [000000AC BYTES: COLLAPSED FUNCTION __security_init_cookie]
; [00000006 BYTES: COLLAPSED FUNCTION _get_startup_file_mode]
align 8



sub_7FF6E343BF38 proc near
lea     rcx, unk_7FF6E346ED60
jmp     cs:InitializeSListHead
sub_7FF6E343BF38 endp

align 8



sub_7FF6E343BF48 proc near
lea     rax, unk_7FF6E346ED70
retn
sub_7FF6E343BF48 endp

; [0000001B BYTES: COLLAPSED FUNCTION __scrt_initialize_default_local_stdio_options]
algn_7FF6E343BF6B:
align 4
; [0000000C BYTES: COLLAPSED FUNCTION __scrt_is_user_matherr_present]



sub_7FF6E343BF78 proc near
lea     rax, unk_7FF6E346F998
retn
sub_7FF6E343BF78 endp




sub_7FF6E343BF80 proc near
lea     rax, unk_7FF6E346F990
retn
sub_7FF6E343BF80 endp




sub_7FF6E343BF88 proc near
and     cs:dword_7FF6E346ED78, 0
retn
sub_7FF6E343BF88 endp

; [00000148 BYTES: COLLAPSED FUNCTION __scrt_fastfail]


; Attributes: thunk

sub_7FF6E343C0D8 proc near
jmp     sub_7FF6E343A644
sub_7FF6E343C0D8 endp

align 20h
; [00000051 BYTES: COLLAPSED FUNCTION __scrt_is_managed_app]
algn_7FF6E343C131:
align 4
; [0000000E BYTES: COLLAPSED FUNCTION __scrt_set_unhandled_exception_filter]
align 4
; [0000005B BYTES: COLLAPSED FUNCTION __scrt_unhandled_exception_filter]
algn_7FF6E343C19F:
align 20h



sub_7FF6E343C1A0 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
lea     rbx, unk_7FF6E3469C40
lea     rdi, unk_7FF6E3469C40
jmp     short loc_7FF6E343C1CC

loc_7FF6E343C1BA:
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E343C1C8
call    cs:__guard_dispatch_icall_fptr

loc_7FF6E343C1C8:
add     rbx, 8

loc_7FF6E343C1CC:
cmp     rbx, rdi
jb      short loc_7FF6E343C1BA
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E343C1A0 endp




; void __cdecl sub_7FF6E343C1DC()
sub_7FF6E343C1DC proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
lea     rbx, unk_7FF6E3469C50
lea     rdi, unk_7FF6E3469C50
jmp     short loc_7FF6E343C208

loc_7FF6E343C1F6:
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E343C204
call    cs:__guard_dispatch_icall_fptr

loc_7FF6E343C204:
add     rbx, 8

loc_7FF6E343C208:
cmp     rbx, rdi
jb      short loc_7FF6E343C1F6
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E343C1DC endp

; [0000000C BYTES: COLLAPSED FUNCTION __scrt_is_ucrt_dll_in_use]
align 10h



sub_7FF6E343C230 proc near
mov     rax, cs:qword_7FF6E346ED88
nop
retn
sub_7FF6E343C230 endp

align 4
; [0000001A BYTES: COLLAPSED FUNCTION _purecall]
algn_7FF6E343C256:
align 20h
; [0000008D BYTES: COLLAPSED FUNCTION __std_exception_copy]
algn_7FF6E343C2ED:
align 10h
; [00000025 BYTES: COLLAPSED FUNCTION __std_exception_destroy]
algn_7FF6E343C315:
align 8
; [000000A7 BYTES: COLLAPSED FUNCTION _CxxThrowException]
algn_7FF6E343C3BF:
align 20h
; [00000051 BYTES: COLLAPSED FUNCTION unknown_libname_43]
algn_7FF6E343C411:
align 4
; [00000051 BYTES: COLLAPSED FUNCTION unknown_libname_44]
algn_7FF6E343C465:
align 8
; [00000062 BYTES: COLLAPSED FUNCTION __FrameHandler3::CatchTryBlock(_s_FuncInfo const *,int)]
algn_7FF6E343C4CA:
align 4



sub_7FF6E343C4CC proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= byte ptr  28h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
mov     r11b, [rcx]
lea     r10, [rcx+1]
mov     [rdx], r11b
mov     edi, r9d
lea     r14, cs:7FF6E3430000h
mov     rbp, r8
mov     rbx, rdx
mov     rsi, rcx
test    r11b, 4
jz      short loc_7FF6E343C528
movzx   ecx, byte ptr [r10]
and     ecx, 0Fh
movsx   rax, byte ptr [rcx+r14+2EA00h]
mov     cl, [rcx+r14+2EA10h]
sub     r10, rax
mov     eax, [r10-4]
shr     eax, cl
mov     [rdx+4], eax

loc_7FF6E343C528:
test    r11b, 8
jz      short loc_7FF6E343C538
mov     eax, [r10]
add     r10, 4
mov     [rdx+8], eax

loc_7FF6E343C538:
test    r11b, 10h
jz      short loc_7FF6E343C548
mov     eax, [r10]
add     r10, 4
mov     [rdx+0Ch], eax

loc_7FF6E343C548:
xor     r9d, r9d
lea     r8, [r10+4]
cmp     [rsp+8+arg_20], r9b
jnz     short loc_7FF6E343C5B6
test    r11b, 2
jz      short loc_7FF6E343C5B6
mov     [rdx+10h], r9d
cmp     [r10], r9d
jz      short loc_7FF6E343C5AD
movsxd  rdx, dword ptr [r10]
add     rdx, rbp
movzx   ecx, byte ptr [rdx]
and     ecx, 0Fh
movsx   rax, byte ptr [rcx+r14+2EA00h]
mov     cl, [rcx+r14+2EA10h]
sub     rdx, rax
mov     r10d, [rdx-4]
shr     r10d, cl
test    r10d, r10d
jz      short loc_7FF6E343C5BC

loc_7FF6E343C591:
mov     eax, [rdx]
mov     ecx, [rdx+4]
lea     rdx, [rdx+8]
cmp     eax, edi
jz      short loc_7FF6E343C5A8
inc     r9d
cmp     r9d, r10d
jb      short loc_7FF6E343C591
jmp     short loc_7FF6E343C5BC

loc_7FF6E343C5A8:
mov     [rbx+10h], ecx
jmp     short loc_7FF6E343C5BC

loc_7FF6E343C5AD:
mov     ecx, 7
int     29h             ; Win8: RtlFailFast(ecx)
jmp     short loc_7FF6E343C5BC

loc_7FF6E343C5B6:
mov     eax, [r10]
mov     [rdx+10h], eax

loc_7FF6E343C5BC:
test    r11b, 1
jz      short loc_7FF6E343C5E6
movzx   ecx, byte ptr [r8]
and     ecx, 0Fh
movsx   rdx, byte ptr [rcx+r14+2EA00h]
mov     cl, [rcx+r14+2EA10h]
sub     r8, rdx
mov     edx, [r8-4]
shr     edx, cl
mov     [rbx+14h], edx

loc_7FF6E343C5E6:
mov     rbx, [rsp+8+arg_0]
sub     r8, rsi
mov     rbp, [rsp+8+arg_8]
mov     rax, r8
mov     rsi, [rsp+8+arg_10]
mov     rdi, [rsp+8+arg_18]
pop     r14
retn
sub_7FF6E343C4CC endp

algn_7FF6E343C603:
align 4
; [0000002A BYTES: COLLAPSED FUNCTION __FrameHandler3::ExecutionInCatch(_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)]
algn_7FF6E343C62E:
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION __FrameHandler4::ExecutionInCatch(_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *)]
align 8
; [00000064 BYTES: COLLAPSED FUNCTION __FrameHandler3::FrameUnwindToEmptyState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)]
; [00000032 BYTES: COLLAPSED FUNCTION __FrameHandler4::FrameUnwindToEmptyState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *)]
algn_7FF6E343C6CE:
align 10h
; [000000D0 BYTES: COLLAPSED FUNCTION __FrameHandler3::GetEstablisherFrame(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,unsigned __int64 *)]
; [00000021 BYTES: COLLAPSED FUNCTION __FrameHandler4::GetEstablisherFrame(unsigned __int64 *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,unsigned __int64 *)]
align 4
; [00000131 BYTES: COLLAPSED FUNCTION __FrameHandler3::GetRangeOfTrysToCheck(__FrameHandler3::TryBlockMap &,int,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)]
algn_7FF6E343C8F5:
align 8
; [00000169 BYTES: COLLAPSED FUNCTION __FrameHandler4::GetRangeOfTrysToCheck(FH4::TryBlockMap4 &,int,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int)]
algn_7FF6E343CA61:
align 4
; [00000103 BYTES: COLLAPSED FUNCTION __FrameHandler3::UnwindNestedFrames(unsigned __int64 *,EHExceptionRecord *,_CONTEXT *,unsigned __int64 *,void *,_s_FuncInfo const *,int,int,_s_HandlerType const *,_xDISPATCHER_CONTEXT *,uchar)]
algn_7FF6E343CB67:
align 8
; [0000011F BYTES: COLLAPSED FUNCTION __FrameHandler4::UnwindNestedFrames(unsigned __int64 *,EHExceptionRecord *,_CONTEXT *,unsigned __int64 *,void *,FH4::FuncInfo4 *,int,int,FH4::HandlerType4 *,_xDISPATCHER_CONTEXT *,uchar)]
algn_7FF6E343CC87:
align 8
; [000001C2 BYTES: COLLAPSED FUNCTION FH4::TryBlockMap4::setBuffer(FH4::TryBlockMap4::iterator)]
align 4
; [0000003A BYTES: COLLAPSED FUNCTION _CreateFrameInfo]
algn_7FF6E343CE86:
align 8
; [00000053 BYTES: COLLAPSED FUNCTION _FindAndUnlinkFrame]
algn_7FF6E343CEDB:
align 4
; [00000012 BYTES: COLLAPSED FUNCTION _GetImageBase]
algn_7FF6E343CEEE:
align 10h
; [00000012 BYTES: COLLAPSED FUNCTION _GetThrowImageBase]
algn_7FF6E343CF02:
align 4
; [00000018 BYTES: COLLAPSED FUNCTION _SetImageBase]
; [00000018 BYTES: COLLAPSED FUNCTION _SetThrowImageBase]
; [00000086 BYTES: COLLAPSED FUNCTION __CxxFrameHandler3]
algn_7FF6E343CFBA:
align 4
; [000000BF BYTES: COLLAPSED FUNCTION __CxxFrameHandler4]
algn_7FF6E343D07B:
align 4
; [0000001E BYTES: COLLAPSED FUNCTION __uncaught_exception]
algn_7FF6E343D09A:
align 4
; [0000006D BYTES: COLLAPSED FUNCTION __DestructExceptionObject]
algn_7FF6E343D109:
align 4
; [00000003 BYTES: COLLAPSED FUNCTION _CallMemberFunction0(void * const,void * const)]
align 10h
; [0000002F BYTES: COLLAPSED FUNCTION _IsExceptionObjectToBeDestroyed]
algn_7FF6E343D13F:
align 20h
; [00000023 BYTES: COLLAPSED FUNCTION __AdjustPointer]
align 4
; [00000066 BYTES: COLLAPSED FUNCTION __FrameUnwindFilter]
algn_7FF6E343D1CA:
align 4
; [00000012 BYTES: COLLAPSED FUNCTION __current_exception]
algn_7FF6E343D1DE:
align 20h
; [00000012 BYTES: COLLAPSED FUNCTION __current_exception_context]
algn_7FF6E343D1F2:
align 4


; Attributes: noreturn unwind_handler

sub_7FF6E343D1F4 proc near
sub     rsp, 28h
call    sub_7FF6E3449A90
db 0CCh
sub_7FF6E343D1F4 endp

algn_7FF6E343D1FE:
align 20h
; [00000217 BYTES: COLLAPSED FUNCTION __C_specific_handler]
algn_7FF6E343D417:
align 8
; [00000028 BYTES: COLLAPSED FUNCTION __vcrt_initialize]
; [00000019 BYTES: COLLAPSED FUNCTION __vcrt_uninitialize]
algn_7FF6E343D459:
align 4
; [00000027 BYTES: COLLAPSED FUNCTION __std_type_info_compare]
align 4
; [0000001F BYTES: COLLAPSED FUNCTION __vcrt_freefls]
algn_7FF6E343D4A3:
align 4
; [00000019 BYTES: COLLAPSED FUNCTION __vcrt_getptd]
algn_7FF6E343D4BD:
align 20h
; [000000BF BYTES: COLLAPSED FUNCTION __vcrt_getptd_noexit]
algn_7FF6E343D57F:
align 20h
; [0000004D BYTES: COLLAPSED FUNCTION __vcrt_getptd_noinit]
algn_7FF6E343D5CD:
align 10h
; [00000047 BYTES: COLLAPSED FUNCTION __vcrt_initialize_ptd]
algn_7FF6E343D617:
align 8
; [00000022 BYTES: COLLAPSED FUNCTION __vcrt_uninitialize_ptd]
algn_7FF6E343D63A:
align 4
; [00000027 BYTES: COLLAPSED FUNCTION __FrameHandler3::GetCurrentState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)]
algn_7FF6E343D663:
align 4
; [00000029 BYTES: COLLAPSED FUNCTION __FrameHandler3::GetUnwindTryBlock(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)]
algn_7FF6E343D68D:
align 10h
; [0000000C BYTES: COLLAPSED FUNCTION __FrameHandler3::SetState(unsigned __int64 *,_s_FuncInfo const *,int)]
; [0000003B BYTES: COLLAPSED FUNCTION __FrameHandler3::SetUnwindTryBlock(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)]
algn_7FF6E343D6D7:
align 8
; [00000008 BYTES: COLLAPSED FUNCTION __FrameHandler3::StateFromControlPc(_s_FuncInfo const *,_xDISPATCHER_CONTEXT *)]
; [00000008 BYTES: COLLAPSED FUNCTION __FrameHandler4::StateFromControlPc(FH4::FuncInfo4 *,_xDISPATCHER_CONTEXT *)]
; [00000066 BYTES: COLLAPSED FUNCTION __FrameHandler3::StateFromIp(_s_FuncInfo const *,_xDISPATCHER_CONTEXT *,unsigned __int64)]
algn_7FF6E343D74E:
align 10h
; [000000ED BYTES: COLLAPSED FUNCTION __FrameHandler4::StateFromIp(FH4::FuncInfo4 *,_xDISPATCHER_CONTEXT *,unsigned __int64)]
algn_7FF6E343D83D:
align 20h



sub_7FF6E343D840 proc near

var_28= dword ptr -28h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

; __unwind { // __C_specific_handler
mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
mov     [rsp+arg_10], rdi
push    r13
push    r14
push    r15
sub     rsp, 30h
mov     r14, r9
mov     rbx, r8
mov     rsi, rdx
mov     r13, rcx
xor     edi, edi
cmp     [r8+4], edi
jz      short loc_7FF6E343D87C
movsxd  r15, dword ptr [r8+4]
call    _GetImageBase
lea     rdx, [r15+rax]
jmp     short loc_7FF6E343D882

loc_7FF6E343D87C:
mov     rdx, rdi
mov     r15d, edi

loc_7FF6E343D882:
test    rdx, rdx
jz      loc_7FF6E343DA02
test    r15d, r15d
jz      short loc_7FF6E343D8A1
call    _GetImageBase
mov     rcx, rax
movsxd  rax, dword ptr [rbx+4]
add     rcx, rax
jmp     short loc_7FF6E343D8A4

loc_7FF6E343D8A1:
mov     rcx, rdi

loc_7FF6E343D8A4:
cmp     [rcx+10h], dil
jz      loc_7FF6E343DA02
cmp     [rbx+8], edi
jnz     short loc_7FF6E343D8BB
cmp     [rbx], edi
jge     loc_7FF6E343DA02

loc_7FF6E343D8BB:
cmp     [rbx], edi
jl      short loc_7FF6E343D8C9
movsxd  rax, dword ptr [rbx+8]
add     rax, [rsi]
mov     rsi, rax

loc_7FF6E343D8C9:
;   __try { // __except at loc_7FF6E343DA38
test    byte ptr [rbx], 80h
jz      short loc_7FF6E343D900
test    byte ptr [r14], 10h
jz      short loc_7FF6E343D900
mov     rax, cs:qword_7FF6E346ED80
test    rax, rax
jz      short loc_7FF6E343D900
call    cs:__guard_dispatch_icall_fptr
test    rax, rax
jz      loc_7FF6E343DA1E
test    rsi, rsi
jz      loc_7FF6E343DA1E
mov     [rsi], rax
mov     rcx, rax
jmp     short loc_7FF6E343D95F

loc_7FF6E343D900:
test    byte ptr [rbx], 8
jz      short loc_7FF6E343D920
mov     rcx, [r13+28h]
test    rcx, rcx
jz      loc_7FF6E343DA23
test    rsi, rsi
jz      loc_7FF6E343DA23
mov     [rsi], rcx
jmp     short loc_7FF6E343D95F

loc_7FF6E343D920:
test    byte ptr [r14], 1
jz      short loc_7FF6E343D970
mov     rdx, [r13+28h]  ; Src
test    rdx, rdx
jz      loc_7FF6E343DA28
test    rsi, rsi
jz      loc_7FF6E343DA28
movsxd  r8, dword ptr [r14+14h] ; Size
mov     rcx, rsi        ; void *
call    memcpy
cmp     dword ptr [r14+14h], 8
jnz     loc_7FF6E343D9FE
cmp     [rsi], rdi
jz      loc_7FF6E343D9FE
mov     rcx, [rsi]

loc_7FF6E343D95F:
lea     rdx, [r14+8]
call    __AdjustPointer
mov     [rsi], rax
jmp     loc_7FF6E343D9FE

loc_7FF6E343D970:
cmp     [r14+18h], edi
jz      short loc_7FF6E343D985
movsxd  rbx, dword ptr [r14+18h]
call    _GetThrowImageBase
lea     rcx, [rbx+rax]
jmp     short loc_7FF6E343D98A

loc_7FF6E343D985:
mov     rcx, rdi
mov     ebx, edi

loc_7FF6E343D98A:
test    rcx, rcx
jnz     short loc_7FF6E343D9C3
cmp     [r13+28h], rdi
jz      loc_7FF6E343DA2D
test    rsi, rsi
jz      loc_7FF6E343DA2D
movsxd  rbx, dword ptr [r14+14h]
lea     rdx, [r14+8]
mov     rcx, [r13+28h]
call    __AdjustPointer
mov     rdx, rax        ; Src
mov     r8, rbx         ; Size
mov     rcx, rsi        ; void *
call    memcpy
jmp     short loc_7FF6E343D9FE

loc_7FF6E343D9C3:
cmp     [r13+28h], rdi
jz      short loc_7FF6E343DA32
test    rsi, rsi
jz      short loc_7FF6E343DA32
test    ebx, ebx
jz      short loc_7FF6E343D9E3
call    _GetThrowImageBase
mov     rcx, rax
movsxd  rax, dword ptr [r14+18h]
add     rcx, rax
jmp     short loc_7FF6E343D9E6

loc_7FF6E343D9E3:
mov     rcx, rdi

loc_7FF6E343D9E6:
test    rcx, rcx
jz      short loc_7FF6E343DA32
mov     al, [r14]
and     al, 4
neg     al
sbb     ecx, ecx
neg     ecx
inc     ecx
mov     edi, ecx
mov     [rsp+48h+var_28], ecx
;   } // starts at 7FF6E343D8C9

loc_7FF6E343D9FE:
mov     eax, edi
jmp     short loc_7FF6E343DA04

loc_7FF6E343DA02:
xor     eax, eax

loc_7FF6E343DA04:
mov     rbx, [rsp+48h+arg_0]
mov     rsi, [rsp+48h+arg_8]
mov     rdi, [rsp+48h+arg_10]
add     rsp, 30h
pop     r15
pop     r14
pop     r13
retn

loc_7FF6E343DA1E:
;   __try { // __except at loc_7FF6E343DA38
call    abort

loc_7FF6E343DA23:
call    abort

loc_7FF6E343DA28:
call    abort

loc_7FF6E343DA2D:
call    abort

loc_7FF6E343DA32:
call    abort
align 8
;   } // starts at 7FF6E343DA1E

loc_7FF6E343DA38:
;   __except(7FF5A3430001) // owned by 7FF6E343D8C9
;   __except(7FF5A3430001) // owned by 7FF6E343DA1E
call    abort
align 2
; } // starts at 7FF6E343D840
sub_7FF6E343D840 endp

algn_7FF6E343DA3E:
align 20h
; [00000201 BYTES: COLLAPSED FUNCTION BuildCatchObjectHelperInternal<__FrameHandler4>(EHExceptionRecord *,void *,FH4::HandlerType4 *,_s_CatchableType const *)]
algn_7FF6E343DC41:
align 4
; [000000C0 BYTES: COLLAPSED FUNCTION BuildCatchObjectInternal<__FrameHandler3>(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)]
; [000000C1 BYTES: COLLAPSED FUNCTION BuildCatchObjectInternal<__FrameHandler4>(EHExceptionRecord *,void *,FH4::HandlerType4 *,_s_CatchableType const *)]
algn_7FF6E343DDC5:
align 8
; [000000D1 BYTES: COLLAPSED FUNCTION CatchIt<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,unsigned __int64 *,uchar,uchar)]
algn_7FF6E343DE99:
align 4
; [000000D1 BYTES: COLLAPSED FUNCTION CatchIt<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,FH4::HandlerType4 *,_s_CatchableType const *,FH4::TryBlockMapEntry4 *,int,unsigned __int64 *,uchar,uchar)]
algn_7FF6E343DF6D:
align 10h


; Attributes: bp-based frame fpd=60h

; __int64 __usercall sub_7FF6E343DF70@<rax>(struct EHExceptionRecord *@<rcx>, unsigned __int64 *@<rdx>, struct _s_FuncInfo *, char, int, __int64)
sub_7FF6E343DF70 proc near

var_140= qword ptr -140h
var_138= qword ptr -138h
var_130= qword ptr -130h
var_128= qword ptr -128h
var_120= dword ptr -120h
var_118= qword ptr -118h
var_110= byte ptr -110h
var_108= byte ptr -108h
var_100= dword ptr -100h
var_F8= qword ptr -0F8h
var_F0= qword ptr -0F0h
var_E8= qword ptr -0E8h
var_E0= qword ptr -0E0h
var_D8= qword ptr -0D8h
var_D0= qword ptr -0D0h
var_C8= qword ptr -0C8h
var_C0= dword ptr -0C0h
pExceptionObject= xmmword ptr -0B8h
var_A8= dword ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_90= xmmword ptr -90h
var_80= xmmword ptr -80h
var_68= dword ptr -68h
var_60= _s_HandlerType ptr -60h
var_48= qword ptr -48h
arg_20= qword ptr  30h
arg_28= byte ptr  38h
arg_30= dword ptr  40h
arg_38= qword ptr  48h

; __unwind { // __GSHandlerCheck
push    rbp
push    rbx
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
lea     rbp, [rsp-28h]
sub     rsp, 128h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+60h+var_48], rax
mov     rdi, [rbp+60h+arg_20]
mov     r12, rdx
mov     r13, [rbp+60h+arg_38]
mov     r15, r8
mov     [rsp+160h+var_F8], r8
mov     rbx, rcx
mov     [rsp+160h+var_E8], rdx
mov     r8, rdi         ; struct _s_FuncInfo *
mov     rcx, r12        ; unsigned __int64 *
mov     qword ptr [rbp+60h+var_C0], r13
mov     rdx, r9         ; struct _xDISPATCHER_CONTEXT *
mov     byte ptr [rsp+160h+var_100], 0
mov     rsi, r9
call    ?GetHandlerSearchState@__FrameHandler3@@SAHPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z ; __FrameHandler3::GetHandlerSearchState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
mov     r14d, eax
cmp     eax, 0FFFFFFFFh
jl      loc_7FF6E343E439
cmp     eax, [rdi+4]
jge     loc_7FF6E343E439
cmp     dword ptr [rbx], 0E06D7363h
jnz     loc_7FF6E343E0BC
cmp     dword ptr [rbx+18h], 4
jnz     loc_7FF6E343E0BC
mov     eax, [rbx+20h]
sub     eax, 19930520h
cmp     eax, 2
ja      loc_7FF6E343E0BC
cmp     qword ptr [rbx+30h], 0
jnz     loc_7FF6E343E0BC
call    __vcrt_getptd
cmp     qword ptr [rax+20h], 0
jz      loc_7FF6E343E3D2
call    __vcrt_getptd
mov     rbx, [rax+20h]
call    __vcrt_getptd
mov     rcx, [rbx+38h]
mov     byte ptr [rsp+160h+var_100], 1
mov     r15, [rax+28h]
mov     [rsp+160h+var_F8], r15
call    _SetThrowImageBase
cmp     dword ptr [rbx], 0E06D7363h
jnz     short loc_7FF6E343E074
cmp     dword ptr [rbx+18h], 4
jnz     short loc_7FF6E343E074
mov     eax, [rbx+20h]
sub     eax, 19930520h
cmp     eax, 2
ja      short loc_7FF6E343E074
cmp     qword ptr [rbx+30h], 0
jz      loc_7FF6E343E439

loc_7FF6E343E074:
call    __vcrt_getptd
cmp     qword ptr [rax+38h], 0
jz      short loc_7FF6E343E0BC
call    __vcrt_getptd
mov     r15, [rax+38h]
call    __vcrt_getptd
mov     rdx, r15        ; struct _s_ESTypeList *
mov     rcx, rbx        ; struct EHExceptionRecord *
and     qword ptr [rax+38h], 0
call    ?IsInExceptionSpec@@YAEPEAUEHExceptionRecord@@PEBU_s_ESTypeList@@@Z ; IsInExceptionSpec(EHExceptionRecord *,_s_ESTypeList const *)
test    al, al
jnz     short loc_7FF6E343E0B7
mov     rcx, r15        ; struct _s_ESTypeList *
call    ?Is_bad_exception_allowed@@YAEPEBU_s_ESTypeList@@@Z ; Is_bad_exception_allowed(_s_ESTypeList const *)
test    al, al
jz      loc_7FF6E343E416
jmp     loc_7FF6E343E3F2

loc_7FF6E343E0B7:
mov     r15, [rsp+160h+var_F8]

loc_7FF6E343E0BC:
mov     rax, [rsi+8]
mov     [rbp+60h+var_98], rax
mov     [rbp+60h+var_A0], rdi
cmp     dword ptr [rbx], 0E06D7363h
jnz     loc_7FF6E343E389
cmp     dword ptr [rbx+18h], 4
jnz     loc_7FF6E343E389
mov     eax, [rbx+20h]
sub     eax, 19930520h
cmp     eax, 2
ja      loc_7FF6E343E389
cmp     dword ptr [rdi+0Ch], 0
jbe     loc_7FF6E343E2B9
mov     eax, [rbp+60h+arg_30]
lea     rdx, [rbp+60h+var_A0]
mov     dword ptr [rsp+160h+var_138], eax
lea     rcx, [rbp+60h+var_80]
mov     r9, rsi
mov     [rsp+160h+var_140], rdi
mov     r8d, r14d
call    ?GetRangeOfTrysToCheck@__FrameHandler3@@SA?AU?$pair@Viterator@TryBlockMap@__FrameHandler3@@V123@@std@@AEAVTryBlockMap@1@HPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@H@Z ; __FrameHandler3::GetRangeOfTrysToCheck(__FrameHandler3::TryBlockMap &,int,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)
movups  xmm1, [rbp+60h+var_80]
movdqa  xmm0, xmm1
psrldq  xmm0, 8
movd    eax, xmm0
movdqu  [rbp+60h+var_90], xmm1
cmp     eax, [rbp+60h+var_68]
jnb     loc_7FF6E343E2B9
mov     r15d, dword ptr [rbp+60h+var_90+8]
movq    r9, xmm1
mov     [rbp+60h+var_D8], r9

loc_7FF6E343E147:
mov     rax, qword ptr [rbp+60h+var_90]
mov     rax, [rax]
movsxd  rdx, dword ptr [rax+10h]
mov     eax, r15d
lea     rcx, [rax+rax*4]
mov     rax, [r9+8]
lea     r8, [rdx+rcx*4]
movups  xmm0, xmmword ptr [r8+rax]
movsxd  rcx, dword ptr [r8+rax+10h]
mov     [rbp+60h+var_A8], ecx
movd    eax, xmm0
movups  [rbp+60h+pExceptionObject], xmm0
cmp     eax, r14d
jg      loc_7FF6E343E2AC
movq    rax, xmm0
shr     rax, 20h
cmp     r14d, eax
jg      loc_7FF6E343E2AC
add     rcx, [rsi+8]
xor     r12d, r12d
psrldq  xmm0, 8
movq    rax, xmm0
mov     [rbp+60h+var_C8], rcx
shr     rax, 20h
mov     [rbp+60h+var_D0], rax
test    eax, eax
jz      loc_7FF6E343E29C

loc_7FF6E343E1B6:
lea     rax, [r12+r12*4]
movups  xmm0, xmmword ptr [rcx+rax*4]
movups  xmmword ptr [rbp+60h+var_60.adjectives], xmm0
mov     eax, [rcx+rax*4+10h]
mov     [rbp+60h+var_60.dispFrame], eax
call    _GetThrowImageBase
mov     rcx, [rbx+30h]
add     rax, 4
movsxd  rdx, dword ptr [rcx+0Ch]
add     rax, rdx
mov     [rsp+160h+var_F0], rax
call    _GetThrowImageBase
mov     rcx, [rbx+30h]
movsxd  rdx, dword ptr [rcx+0Ch]
mov     r13d, [rax+rdx]
jmp     short loc_7FF6E343E226

loc_7FF6E343E1F5:
call    _GetThrowImageBase
mov     rcx, [rsp+160h+var_F0]
mov     r8, [rbx+30h]
movsxd  rcx, dword ptr [rcx]
add     rax, rcx
lea     rcx, [rbp+60h+var_60]
mov     rdx, rax
mov     [rbp+60h+var_E0], rax
call    ??$TypeMatchHelper@V__FrameHandler3@@@@YAHPEBU_s_HandlerType@@PEBU_s_CatchableType@@PEBU_s_ThrowInfo@@@Z ; TypeMatchHelper<__FrameHandler3>(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)
test    eax, eax
jnz     short loc_7FF6E343E23D
dec     r13d
add     [rsp+160h+var_F0], 4

loc_7FF6E343E226:
test    r13d, r13d
jg      short loc_7FF6E343E1F5
inc     r12d
cmp     r12d, dword ptr [rbp+60h+var_D0]
jz      short loc_7FF6E343E2A3
mov     rcx, [rbp+60h+var_C8]
jmp     loc_7FF6E343E1B6

loc_7FF6E343E23D:
mov     al, [rbp+60h+arg_28]
mov     r9, rsi
mov     r12, [rsp+160h+var_E8]
mov     rcx, rbx        ; struct EHExceptionRecord *
mov     r8, [rsp+160h+var_F8]
mov     rdx, r12        ; unsigned __int64 *
mov     [rsp+160h+var_108], al ; char
mov     al, byte ptr [rsp+160h+var_100]
mov     [rsp+160h+var_110], al ; int
mov     rax, qword ptr [rbp+60h+var_C0]
mov     [rsp+160h+var_118], rax ; int
mov     eax, [rbp+60h+arg_30]
mov     [rsp+160h+var_120], eax ; int
lea     rax, [rbp+60h+pExceptionObject]
mov     [rsp+160h+var_128], rax ; __int64
mov     rax, [rbp+60h+var_E0]
mov     [rsp+160h+var_130], rax ; __int64
lea     rax, [rbp+60h+var_60]
mov     [rsp+160h+var_138], rax ; struct _s_HandlerType *
mov     [rsp+160h+var_140], rdi ; struct _s_FuncInfo *
call    ??$CatchIt@V__FrameHandler3@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@PEBU_s_HandlerType@@PEBU_s_CatchableType@@PEBU_s_TryBlockMapEntry@@H1EE@Z ; CatchIt<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,unsigned __int64 *,uchar,uchar)
jmp     short loc_7FF6E343E2A8

loc_7FF6E343E29C:
mov     r12, [rsp+160h+var_E8]
jmp     short loc_7FF6E343E2AC

loc_7FF6E343E2A3:
mov     r12, [rsp+160h+var_E8]

loc_7FF6E343E2A8:
mov     r9, [rbp+60h+var_D8]

loc_7FF6E343E2AC:
inc     r15d
cmp     r15d, [rbp+60h+var_68]
jb      loc_7FF6E343E147

loc_7FF6E343E2B9:
mov     eax, [rdi]
and     eax, 1FFFFFFFh
cmp     eax, 19930521h
jb      loc_7FF6E343E3C6
cmp     dword ptr [rdi+20h], 0
jz      short loc_7FF6E343E2DF
call    _GetImageBase
movsxd  rcx, dword ptr [rdi+20h]
add     rax, rcx
jnz     short loc_7FF6E343E300

loc_7FF6E343E2DF:
mov     eax, [rdi+24h]
shr     eax, 2
test    al, 1
jz      loc_7FF6E343E3C6
mov     rdx, rdi        ; struct _s_FuncInfo *
mov     rcx, rsi        ; struct _xDISPATCHER_CONTEXT *
call    ?ExecutionInCatch@__FrameHandler3@@SA_NPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z ; __FrameHandler3::ExecutionInCatch(_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
test    al, al
jnz     loc_7FF6E343E3C6

loc_7FF6E343E300:
mov     eax, [rdi+24h]
shr     eax, 2
test    al, 1
jnz     loc_7FF6E343E41C
cmp     dword ptr [rdi+20h], 0
jz      short loc_7FF6E343E325
call    _GetImageBase
mov     rdx, rax
movsxd  rax, dword ptr [rdi+20h]
add     rdx, rax
jmp     short loc_7FF6E343E327

loc_7FF6E343E325:       ; struct _s_ESTypeList *
xor     edx, edx

loc_7FF6E343E327:       ; struct EHExceptionRecord *
mov     rcx, rbx
call    ?IsInExceptionSpec@@YAEPEAUEHExceptionRecord@@PEBU_s_ESTypeList@@@Z ; IsInExceptionSpec(EHExceptionRecord *,_s_ESTypeList const *)
test    al, al
jnz     loc_7FF6E343E3C6
lea     r9, [rbp+60h+var_E0] ; unsigned __int64 *
mov     r8, rdi         ; struct _s_FuncInfo *
mov     rdx, rsi        ; struct _xDISPATCHER_CONTEXT *
mov     rcx, r12        ; unsigned __int64 *
call    ?GetEstablisherFrame@__FrameHandler3@@SAPEA_KPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@0@Z ; __FrameHandler3::GetEstablisherFrame(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,unsigned __int64 *)
mov     cl, [rbp+60h+arg_28]
mov     r9, rax         ; unsigned __int64 *
mov     r8, [rsp+160h+var_F8] ; struct _CONTEXT *
mov     rdx, rbx        ; struct EHExceptionRecord *
mov     [rsp+160h+var_110], cl ; char
or      ecx, 0FFFFFFFFh
mov     [rsp+160h+var_118], rsi ; struct _xDISPATCHER_CONTEXT *
and     qword ptr [rsp+160h+var_120], 0
mov     dword ptr [rsp+160h+var_128], ecx ; int
mov     dword ptr [rsp+160h+var_130], ecx ; int
mov     rcx, r12        ; unsigned __int64 *
mov     [rsp+160h+var_138], rdi ; struct _s_FuncInfo *
and     [rsp+160h+var_140], 0
call    ?UnwindNestedFrames@__FrameHandler3@@SAXPEA_KPEAUEHExceptionRecord@@PEAU_CONTEXT@@0PEAXPEBU_s_FuncInfo@@HHPEBU_s_HandlerType@@PEAU_xDISPATCHER_CONTEXT@@E@Z ; __FrameHandler3::UnwindNestedFrames(unsigned __int64 *,EHExceptionRecord *,_CONTEXT *,unsigned __int64 *,void *,_s_FuncInfo const *,int,int,_s_HandlerType const *,_xDISPATCHER_CONTEXT *,uchar)
jmp     short loc_7FF6E343E3C6

loc_7FF6E343E389:
cmp     dword ptr [rdi+0Ch], 0
jbe     short loc_7FF6E343E3C6
cmp     [rbp+60h+arg_28], 0
jnz     loc_7FF6E343E439
mov     eax, [rbp+60h+arg_30]
mov     r9, rsi
mov     [rsp+160h+var_128], r13 ; __int64
mov     r8, r15
mov     dword ptr [rsp+160h+var_130], eax ; int
mov     rdx, r12
mov     dword ptr [rsp+160h+var_138], r14d ; int
mov     rcx, rbx        ; struct EHExceptionRecord *
mov     [rsp+160h+var_140], rdi ; struct _s_FuncInfo *
call    ??$FindHandlerForForeignException@V__FrameHandler3@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@HH1@Z ; FindHandlerForForeignException<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int,int,unsigned __int64 *)

loc_7FF6E343E3C6:
call    __vcrt_getptd
cmp     qword ptr [rax+38h], 0
jnz     short loc_7FF6E343E439

loc_7FF6E343E3D2:
mov     rcx, [rbp+60h+var_48]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 128h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbx
pop     rbp
retn

loc_7FF6E343E3F2:
mov     dl, 1
mov     rcx, rbx
call    __DestructExceptionObject
lea     rcx, [rbp+60h+pExceptionObject]
call    sub_7FF6E343F7F8
lea     rdx, stru_7FF6E346C120 ; pThrowInfo
lea     rcx, [rbp+60h+pExceptionObject] ; pExceptionObject
call    _CxxThrowException
align 2

loc_7FF6E343E416:
call    sub_7FF6E3449A90
align 4

loc_7FF6E343E41C:
call    __vcrt_getptd
mov     [rax+20h], rbx
call    __vcrt_getptd
mov     rcx, [rsp+160h+var_F8]
mov     [rax+28h], rcx
call    sub_7FF6E3449A90
db 0CCh

loc_7FF6E343E439:
call    abort
db 0CCh
; } // starts at 7FF6E343DF70
sub_7FF6E343DF70 endp

algn_7FF6E343E43F:
align 20h
; [00000501 BYTES: COLLAPSED FUNCTION FindHandler<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,uchar,int,unsigned __int64 *)]
algn_7FF6E343E941:
align 4
; [0000026D BYTES: COLLAPSED FUNCTION FindHandlerForForeignException<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int,int,unsigned __int64 *)]
algn_7FF6E343EBB1:
align 4
; [000002F4 BYTES: COLLAPSED FUNCTION FindHandlerForForeignException<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,int,unsigned __int64 *)]
; [0000013D BYTES: COLLAPSED FUNCTION TypeMatchHelper<__FrameHandler3>(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)]
algn_7FF6E343EFE5:
align 8
; [0000014B BYTES: COLLAPSED FUNCTION TypeMatchHelper<__FrameHandler4>(FH4::HandlerType4 *,_s_CatchableType const *,_s_ThrowInfo const *)]
algn_7FF6E343F133:
align 4



; __int64 __usercall sub_7FF6E343F134@<rax>(struct EHExceptionRecord *@<rcx>, unsigned __int64 *@<rdx>, struct _s_FuncInfo *, int, __int64, char)
sub_7FF6E343F134 proc near

var_48= qword ptr -48h
var_40= byte ptr -40h
var_38= dword ptr -38h
var_30= qword ptr -30h
var_8= byte ptr -8
arg_20= qword ptr  28h
arg_28= dword ptr  30h
arg_30= qword ptr  38h
arg_38= byte ptr  40h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 60h
mov     rdi, rcx
mov     rsi, r9
mov     rcx, r8
mov     r14, r8
mov     rbp, rdx
call    __except_validate_context_record
call    __vcrt_getptd
mov     rbx, [rsp+68h+arg_20]
mov     ecx, 80000029h
mov     edx, 80000026h
cmp     dword ptr [rax+40h], 0
jnz     short loc_7FF6E343F1B6
cmp     dword ptr [rdi], 0E06D7363h
jz      short loc_7FF6E343F1B6
cmp     [rdi], ecx
jnz     short loc_7FF6E343F19A
cmp     dword ptr [rdi+18h], 0Fh
jnz     short loc_7FF6E343F19E
cmp     qword ptr [rdi+60h], 19930520h
jz      short loc_7FF6E343F1B6

loc_7FF6E343F19A:
cmp     [rdi], edx
jz      short loc_7FF6E343F1B6

loc_7FF6E343F19E:
mov     eax, [rbx]
and     eax, 1FFFFFFFh
cmp     eax, 19930522h
jb      short loc_7FF6E343F1B6
test    byte ptr [rbx+24h], 1
jnz     loc_7FF6E343F345

loc_7FF6E343F1B6:
test    byte ptr [rdi+4], 66h
jz      loc_7FF6E343F24E
cmp     dword ptr [rbx+4], 0
jz      loc_7FF6E343F345
cmp     [rsp+68h+arg_28], 0
jnz     loc_7FF6E343F345
test    byte ptr [rdi+4], 20h
jz      short loc_7FF6E343F23B
cmp     [rdi], edx
jnz     short loc_7FF6E343F219
mov     r8, [rsi+20h]   ; unsigned __int64
mov     rdx, rsi        ; struct _xDISPATCHER_CONTEXT *
mov     rcx, rbx        ; struct _s_FuncInfo *
call    ?StateFromIp@__FrameHandler3@@SAHPEBU_s_FuncInfo@@PEAU_xDISPATCHER_CONTEXT@@_K@Z ; __FrameHandler3::StateFromIp(_s_FuncInfo const *,_xDISPATCHER_CONTEXT *,unsigned __int64)
cmp     eax, 0FFFFFFFFh
jl      loc_7FF6E343F365
cmp     eax, [rbx+4]
jge     loc_7FF6E343F365
mov     r9d, eax        ; int
mov     rcx, rbp        ; unsigned __int64 *

loc_7FF6E343F209:       ; struct _xDISPATCHER_CONTEXT *
mov     rdx, rsi
mov     r8, rbx         ; struct _s_FuncInfo *
call    ?FrameUnwindToState@__FrameHandler3@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@H@Z ; __FrameHandler3::FrameUnwindToState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)
jmp     loc_7FF6E343F345

loc_7FF6E343F219:
cmp     [rdi], ecx
jnz     short loc_7FF6E343F23B
mov     r9d, [rdi+38h]
cmp     r9d, 0FFFFFFFFh
jl      loc_7FF6E343F365
cmp     r9d, [rbx+4]
jge     loc_7FF6E343F365
mov     rcx, [rdi+28h]
jmp     short loc_7FF6E343F209

loc_7FF6E343F23B:       ; struct _s_FuncInfo *
mov     r8, rbx
mov     rdx, rsi        ; struct _xDISPATCHER_CONTEXT *
mov     rcx, rbp        ; unsigned __int64 *
call    ?FrameUnwindToEmptyState@__FrameHandler3@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z ; __FrameHandler3::FrameUnwindToEmptyState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
jmp     loc_7FF6E343F345

loc_7FF6E343F24E:
cmp     dword ptr [rbx+0Ch], 0
jnz     short loc_7FF6E343F296
mov     eax, [rbx]
and     eax, 1FFFFFFFh
cmp     eax, 19930521h
jb      short loc_7FF6E343F276
cmp     dword ptr [rbx+20h], 0
jz      short loc_7FF6E343F276
call    _GetImageBase
movsxd  rcx, dword ptr [rbx+20h]
add     rax, rcx
jnz     short loc_7FF6E343F296

loc_7FF6E343F276:
mov     eax, [rbx]
and     eax, 1FFFFFFFh
cmp     eax, 19930522h
jb      loc_7FF6E343F345
mov     eax, [rbx+24h]
shr     eax, 2
test    al, 1
jz      loc_7FF6E343F345

loc_7FF6E343F296:
cmp     dword ptr [rdi], 0E06D7363h
jnz     short loc_7FF6E343F30C
cmp     dword ptr [rdi+18h], 3
jb      short loc_7FF6E343F30C
cmp     dword ptr [rdi+20h], 19930522h
jbe     short loc_7FF6E343F30C
mov     rax, [rdi+30h]
cmp     dword ptr [rax+8], 0
jz      short loc_7FF6E343F30C
call    _GetThrowImageBase
mov     rcx, [rdi+30h]
mov     r10, rax
movsxd  rdx, dword ptr [rcx+8]
add     r10, rdx
jz      short loc_7FF6E343F30C
movzx   ecx, [rsp+68h+arg_38]
mov     r9, rsi
mov     eax, [rsp+68h+arg_28]
mov     r8, r14
mov     dword ptr [rsp+68h+var_30], ecx
mov     rdx, rbp
mov     rcx, [rsp+68h+arg_30]
mov     qword ptr [rsp+68h+var_38], rcx
mov     rcx, rdi
mov     dword ptr [rsp+68h+var_40], eax
mov     rax, r10
mov     [rsp+68h+var_48], rbx
call    cs:__guard_dispatch_icall_fptr
jmp     short loc_7FF6E343F34A

loc_7FF6E343F30C:
mov     rax, [rsp+68h+arg_30]
mov     r9, rsi
mov     [rsp+68h+var_30], rax ; __int64
mov     r8, r14
mov     eax, [rsp+68h+arg_28]
mov     rdx, rbp        ; unsigned __int64 *
mov     [rsp+68h+var_38], eax ; int
mov     rcx, rdi        ; struct EHExceptionRecord *
mov     al, [rsp+68h+arg_38]
mov     [rsp+68h+var_40], al ; char
mov     [rsp+68h+var_48], rbx ; struct _s_FuncInfo *
call    sub_7FF6E343DF70

loc_7FF6E343F345:
mov     eax, 1

loc_7FF6E343F34A:
lea     r11, [rsp+68h+var_8]
mov     rbx, [r11+10h]
mov     rbp, [r11+18h]
mov     rsi, [r11+20h]
mov     rdi, [r11+28h]
mov     rsp, r11
pop     r14
retn

loc_7FF6E343F365:
call    abort
db 0CCh
sub_7FF6E343F134 endp

algn_7FF6E343F36B:
align 4
; [00000293 BYTES: COLLAPSED FUNCTION __InternalCxxFrameHandler<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)]
align 20h


; Attributes: thunk

; __int64 __usercall sub_7FF6E343F600@<rax>(struct EHExceptionRecord *@<rcx>, unsigned __int64 *@<rdx>, struct _s_FuncInfo *, int, __int64, char)
sub_7FF6E343F600 proc near
jmp     sub_7FF6E343F134
sub_7FF6E343F600 endp

align 8
; [0000004B BYTES: COLLAPSED FUNCTION __InternalCxxFrameHandlerWrapper<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)]
algn_7FF6E343F653:
align 4
; [00000082 BYTES: COLLAPSED FUNCTION FH4::HandlerMap4::HandlerMap4(FH4::TryBlockMapEntry4 const *,unsigned __int64,int)]
algn_7FF6E343F6D6:
align 8
; [000000E4 BYTES: COLLAPSED FUNCTION FH4::TryBlockMap4::TryBlockMap4(FH4::FuncInfo4 const *,unsigned __int64)]



sub_7FF6E343F7BC proc near
push    rbx
sub     rsp, 20h
mov     rbx, rcx
mov     rax, rdx
lea     rcx, off_7FF6E345D3F0
xorps   xmm0, xmm0
mov     [rbx], rcx
lea     rdx, [rbx+8]
lea     rcx, [rax+8]
movups  xmmword ptr [rdx], xmm0
call    __std_exception_copy
lea     rax, off_7FF6E345EB68
mov     [rbx], rax
mov     rax, rbx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E343F7BC endp




sub_7FF6E343F7F8 proc near
and     qword ptr [rcx+10h], 0
lea     rax, aBadException ; "bad exception"
mov     [rcx+8], rax
lea     rax, off_7FF6E345EB68
mov     [rcx], rax
mov     rax, rcx
retn
sub_7FF6E343F7F8 endp

align 8
; [000001EA BYTES: COLLAPSED FUNCTION unknown_libname_45]
algn_7FF6E343FA02:
align 4



sub_7FF6E343FA04 proc near

var_A8= dword ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_90= qword ptr -90h
var_88= qword ptr -88h
var_80= qword ptr -80h
var_78= byte ptr -78h
var_60= qword ptr -60h
var_58= qword ptr -58h
var_50= qword ptr -50h
arg_0= dword ptr  8
arg_8= dword ptr  10h
arg_10= dword ptr  18h
arg_18= qword ptr  20h

; FUNCTION CHUNK AT 00007FF6E345C0C8 SIZE 000000C0 BYTES

; __unwind { // __C_specific_handler
mov     rax, rsp
push    rbx
push    rsi
push    rdi
push    r12
push    r13
push    r15
sub     rsp, 98h
mov     rdi, rcx
xor     r12d, r12d
mov     [rsp+0C8h+var_A8], r12d
and     [rsp+0C8h+arg_10], r12d
and     [rsp+0C8h+var_A0], r12
and     [rsp+0C8h+var_88], r12
mov     [rax-78h], r12b
and     [rax-74h], r12d
and     [rax-70h], r12d
and     [rax-6Ch], r12d
and     [rax-68h], r12d
and     [rax-64h], r12d
call    __vcrt_getptd
mov     rax, [rax+28h]
mov     [rsp+0C8h+var_90], rax
call    __vcrt_getptd
mov     rax, [rax+20h]
mov     [rsp+0C8h+var_98], rax
mov     rsi, [rdi+50h]
mov     [rsp+0C8h+arg_18], rsi
mov     rbx, [rdi+40h]
mov     rax, [rdi+30h]
mov     [rsp+0C8h+var_60], rax
mov     r15, [rdi+28h]
mov     rax, [rdi+48h]
mov     [rsp+0C8h+var_58], rax
mov     rax, [rdi+68h]
mov     [rsp+0C8h+var_50], rax
mov     eax, [rdi+78h]
mov     [rsp+0C8h+arg_8], eax
mov     eax, [rdi+38h]
mov     [rsp+0C8h+arg_0], eax
mov     rcx, rbx
call    __except_validate_context_record
call    __vcrt_getptd
mov     [rax+20h], rsi
call    __vcrt_getptd
mov     [rax+28h], rbx
call    __vcrt_getptd
mov     rdx, [rax+20h]
mov     rdx, [rdx+28h]
lea     rcx, [rsp+0C8h+var_78]
call    _CreateFrameInfo
mov     r13, rax
mov     [rsp+0C8h+var_80], rax
cmp     [rdi+58h], r12
jz      short loc_7FF6E343FB03
mov     [rsp+0C8h+arg_10], 1
call    __vcrt_getptd
mov     rcx, [rax+70h]
mov     [rsp+0C8h+var_88], rcx

loc_7FF6E343FB03:
;   __try { // __finally(loc_7FF6E345C0F7)
;     __try { // __except at loc_7FF6E343FB4E
mov     r8d, 100h
mov     rdx, r15
mov     rcx, [rsp+0C8h+var_60]
call    _CallSettingFrame_LookupContinuationIndex
mov     rbx, rax
mov     [rsp+0C8h+var_A0], rax
cmp     rax, 2
jge     short loc_7FF6E343FB37
mov     rbx, [rsp+rax*8+0C8h+var_58]
test    rbx, rbx
jz      loc_7FF6E343FC4A
mov     [rsp+0C8h+var_A0], rbx

loc_7FF6E343FB37:
mov     rdx, r15
mov     rcx, rbx
call    _CallSettingFrame_NotifyContinuationAddr
mov     rdi, [rsp+0C8h+var_90]
mov     r15, [rsp+0C8h+var_98]
jmp     short loc_7FF6E343FBCA
;     } // starts at 7FF6E343FB03

loc_7FF6E343FB4E:
;   __except(loc_7FF6E345C0C8) // owned by 7FF6E343FB03
;   __except(loc_7FF6E345C0C8) // owned by 7FF6E343FC4A
mov     [rsp+0C8h+var_A8], 1
call    __vcrt_getptd
and     dword ptr [rax+40h], 0
call    __vcrt_getptd
mov     ecx, [rsp+0C8h+arg_8]
mov     [rax+78h], ecx
mov     rsi, [rsp+0C8h+arg_18]
cmp     [rsp+0C8h+arg_10], 0
jz      short loc_7FF6E343FB9E
mov     dl, 1
mov     rcx, rsi
call    __DestructExceptionObject
mov     rcx, [rsp+0C8h+var_88]
lea     r9, [rcx+20h]
mov     r8d, [rcx+18h]
mov     edx, [rcx+4]
mov     ecx, [rcx]
jmp     short loc_7FF6E343FBAB

loc_7FF6E343FB9E:       ; lpArguments
lea     r9, [rsi+20h]
mov     r8d, [rsi+18h]  ; nNumberOfArguments
mov     edx, [rsi+4]    ; dwExceptionFlags
mov     ecx, [rsi]      ; dwExceptionCode

loc_7FF6E343FBAB:
call    cs:RaiseException
mov     r12d, [rsp+0C8h+var_A8]
mov     rbx, [rsp+0C8h+var_A0]
mov     rdi, [rsp+0C8h+var_90]
mov     r15, [rsp+0C8h+var_98]
mov     r13, [rsp+0C8h+var_80]
;   } // starts at 7FF6E343FB03

loc_7FF6E343FBCA:
mov     rcx, r13
call    _FindAndUnlinkFrame
test    r12d, r12d
jnz     short loc_7FF6E343FC09
cmp     dword ptr [rsi], 0E06D7363h
jnz     short loc_7FF6E343FC09
cmp     dword ptr [rsi+18h], 4
jnz     short loc_7FF6E343FC09
mov     eax, [rsi+20h]
sub     eax, 19930520h
cmp     eax, 2
ja      short loc_7FF6E343FC09
mov     rcx, [rsi+28h]
call    _IsExceptionObjectToBeDestroyed
test    eax, eax
jz      short loc_7FF6E343FC09
mov     dl, 1
mov     rcx, rsi
call    __DestructExceptionObject

loc_7FF6E343FC09:
call    __vcrt_getptd
mov     [rax+20h], r15
call    __vcrt_getptd
mov     [rax+28h], rdi
call    __vcrt_getptd
mov     ecx, [rsp+0C8h+arg_0]
mov     [rax+78h], ecx
call    __vcrt_getptd
mov     dword ptr [rax+78h], 0FFFFFFFEh
mov     rax, rbx
add     rsp, 98h
pop     r15
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbx
retn

loc_7FF6E343FC4A:
;     __try { // __finally(loc_7FF6E345C0F7)
;   __try { // __except at loc_7FF6E343FB4E
call    abort
db 90h
;   } // starts at 7FF6E343FC4A
;     } // starts at 7FF6E343FC4A
byte_7FF6E343FC50 db 0CCh
; } // starts at 7FF6E343FA04
sub_7FF6E343FA04 endp

algn_7FF6E343FC51:
align 4
; [00000194 BYTES: COLLAPSED FUNCTION FH4::HandlerMap4::DecompHandler(void)]
; [00000083 BYTES: COLLAPSED FUNCTION ExFilterRethrow(_EXCEPTION_POINTERS *,EHExceptionRecord *,int *)]
algn_7FF6E343FE6B:
align 4
; [00000030 BYTES: COLLAPSED FUNCTION ExFilterRethrowFH4(_EXCEPTION_POINTERS *,EHExceptionRecord *,int,int *)]
; [0000018A BYTES: COLLAPSED FUNCTION __FrameHandler3::FrameUnwindToState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)]
algn_7FF6E3440026:
align 8



sub_7FF6E3440028 proc near

var_118= qword ptr -118h
var_108= qword ptr -108h
var_F8= dword ptr -0F8h
var_F4= dword ptr -0F4h
var_F0= dword ptr -0F0h
var_E8= qword ptr -0E8h
var_E0= qword ptr -0E0h
var_D8= qword ptr -0D8h
var_D0= qword ptr -0D0h
var_C8= qword ptr -0C8h
var_C0= qword ptr -0C0h
var_B8= qword ptr -0B8h
var_B0= qword ptr -0B0h
var_A8= qword ptr -0A8h
var_98= xmmword ptr -98h
var_88= xmmword ptr -88h
var_78= dword ptr -78h
var_70= qword ptr -70h
var_68= xmmword ptr -68h
var_58= qword ptr -58h
var_48= xmmword ptr -48h

; FUNCTION CHUNK AT 00007FF6E345C1C1 SIZE 00000039 BYTES

; __unwind { // __GSHandlerCheck_SEH
mov     rax, rsp
push    rbx
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 100h
movaps  xmmword ptr [rax-48h], xmm6
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+138h+var_58], rax
mov     r13d, r9d
mov     rbx, r8
mov     rsi, rdx
mov     r12, rcx
mov     [rsp+138h+var_B8], rcx
mov     [rsp+138h+var_D8], rcx
mov     [rsp+138h+var_F0], r9d
call    _GetImageBase
mov     [rsp+138h+var_D0], rax
mov     rdx, rsi        ; struct _xDISPATCHER_CONTEXT *
mov     rcx, rbx        ; struct FH4::FuncInfo4 *
call    ?StateFromControlPc@__FrameHandler4@@SAHPEAUFuncInfo4@FH4@@PEAU_xDISPATCHER_CONTEXT@@@Z ; __FrameHandler4::StateFromControlPc(FH4::FuncInfo4 *,_xDISPATCHER_CONTEXT *)
mov     edi, eax
lea     r14, [rsi+48h]
mov     [rsp+138h+var_C0], r14
cmp     dword ptr [r14], 0
jz      short loc_7FF6E34400AE
call    __vcrt_getptd
cmp     dword ptr [rax+78h], 0FFFFFFFEh
jnz     loc_7FF6E3440329
mov     edi, [r14]
sub     edi, 2
jmp     short loc_7FF6E34400CD

loc_7FF6E34400AE:
call    __vcrt_getptd
cmp     dword ptr [rax+78h], 0FFFFFFFEh
jz      short loc_7FF6E34400CD
call    __vcrt_getptd
mov     edi, [rax+78h]
call    __vcrt_getptd
mov     dword ptr [rax+78h], 0FFFFFFFEh

loc_7FF6E34400CD:
call    __vcrt_getptd
inc     dword ptr [rax+30h]
add     rsi, 8
mov     [rsp+138h+var_C8], rsi
xor     edx, edx
mov     [rsp+138h+var_70], rdx
xorps   xmm0, xmm0
movups  [rsp+138h+var_68], xmm0
cmp     [rbx+8], edx
jz      short loc_7FF6E3440137
movsxd  rdx, dword ptr [rbx+8]
add     rdx, [rsi]
movzx   ecx, byte ptr [rdx]
and     ecx, 0Fh
lea     r8, cs:7FF6E3430000h
movsx   rax, byte ptr [rcx+r8+2EA00h]
movzx   ecx, byte ptr [rcx+r8+2EA10h]
sub     rdx, rax
mov     eax, [rdx-4]
shr     eax, cl
mov     [rsp+138h+var_78], eax
mov     [rsp+138h+var_70], rdx
jmp     short loc_7FF6E344013E

loc_7FF6E3440137:
and     [rsp+138h+var_78], edx

loc_7FF6E344013E:
lea     rax, [rsp+138h+var_78]
mov     [rsp+138h+var_108], rax
mov     [rsp+138h+var_108+8], rdx
lea     rax, [rsp+138h+var_78]
mov     [rsp+138h+var_E8], rax
mov     [rsp+138h+var_E0], rdx
lea     rax, [rsp+138h+var_E8]
mov     [rsp+138h+var_118], rax ; struct FH4::UWMap4::iterator *
lea     r9, [rsp+138h+var_108] ; struct FH4::UWMap4::iterator *
mov     r8d, r13d       ; int
mov     edx, edi        ; int
lea     rcx, [rsp+138h+var_78] ; this
call    ?getStartStop@UWMap4@FH4@@QEAAXHHAEAViterator@12@0@Z ; FH4::UWMap4::getStartStop(int,int,FH4::UWMap4::iterator &,FH4::UWMap4::iterator &)
nop

loc_7FF6E3440184:
;   __try { // __finally(unknown_libname_57)
lea     rax, [rsp+138h+var_78]
mov     [rsp+138h+var_B0], rax
mov     rax, [rsp+138h+var_70]
mov     [rsp+138h+var_A8], rax
mov     r15, [rsp+138h+var_108+8]
cmp     r15, rax
jb      loc_7FF6E34402EB
cmp     r15, [rsp+138h+var_E0]
jbe     loc_7FF6E34402EB
lea     rdx, [rsp+138h+var_108+8] ; unsigned __int8 **
mov     rcx, [rsp+138h+var_108] ; this
call    ?ReadEntry@UWMap4@FH4@@AEAAXPEAPEAE@Z ; FH4::UWMap4::ReadEntry(uchar * *)
mov     [rsp+138h+var_108+8], r15
mov     rbx, [rsp+138h+var_108]
movups  xmm6, xmmword ptr [rbx+10h]
movups  [rsp+138h+var_88], xmm6
movaps  xmm0, xmmword ptr [rsp+138h+var_108]
movdqa  [rsp+138h+var_98], xmm0
lea     rdx, [rsp+138h+var_108+8] ; unsigned __int8 **
mov     rcx, rbx        ; this
call    ?ReadEntry@UWMap4@FH4@@AEAAXPEAPEAE@Z ; FH4::UWMap4::ReadEntry(uchar * *)
mov     eax, [rbx+10h]
sub     r15, rax
mov     [rsp+138h+var_108+8], r15
lea     rax, [rsp+138h+var_108]
mov     [rsp+138h+var_118], rax ; struct FH4::UWMap4::iterator *
mov     r9d, edi        ; int
lea     r8, [rsp+138h+var_98] ; struct FH4::UWMap4::iterator *
mov     edx, r13d       ; int
lea     rcx, [rsp+138h+var_E8] ; struct FH4::UWMap4::iterator *
call    ?getStateFromIterators@UWMap4@FH4@@SAHAEBViterator@12@H0H0@Z ; FH4::UWMap4::getStateFromIterators(FH4::UWMap4::iterator const &,int,FH4::UWMap4::iterator const &,int,FH4::UWMap4::iterator const &)
mov     edi, eax
mov     [rsp+138h+var_F4], eax
and     [rsp+138h+var_F8], 0
xor     r9d, r9d
movdqa  xmm0, xmm6
psrldq  xmm0, 8
movd    eax, xmm0
movdqa  xmm1, xmm6
psrldq  xmm1, 4
movd    ecx, xmm1
test    ecx, ecx
cmovnz  r9d, eax
mov     [rsp+138h+var_F8], r9d
test    r9d, r9d
jz      loc_7FF6E34402E6
lea     eax, [rdi+2]
mov     [r14], eax

loc_7FF6E344026C:
;     __try { // __except at loc_7FF6E34402CB
lea     eax, [rcx-1]
cmp     eax, 1
jbe     short loc_7FF6E344028A
movsxd  rcx, r9d
add     rcx, [rsi]
mov     r8d, 103h
mov     rdx, r12
call    _CallSettingFrame
jmp     short loc_7FF6E34402BF

loc_7FF6E344028A:
mov     rax, [rsp+138h+var_D8]
mov     rdx, [rax]
psrldq  xmm6, 0Ch
cmp     ecx, 2
jnz     short loc_7FF6E34402A6
movd    eax, xmm6
mov     r8, [rax+rdx]
jmp     short loc_7FF6E34402AE

loc_7FF6E34402A6:
movd    r8d, xmm6
add     r8, rdx

loc_7FF6E34402AE:
movsxd  rcx, r9d
add     rcx, [rsi]
mov     r9d, 103h
call    _CallSettingFrameEncoded

loc_7FF6E34402BF:
mov     rcx, [rsp+138h+var_D0]
call    _SetImageBase
jmp     short loc_7FF6E34402E6
;     } // starts at 7FF6E344026C

loc_7FF6E34402CB:
;   __except(unknown_libname_56) // owned by 7FF6E344026C
mov     edi, [rsp+138h+var_F4]
mov     rsi, [rsp+138h+var_C8]
mov     r14, [rsp+138h+var_C0]
mov     r12, [rsp+138h+var_B8]
mov     r13d, [rsp+138h+var_F0]

loc_7FF6E34402E6:
jmp     loc_7FF6E3440184
;   } // starts at 7FF6E3440184

loc_7FF6E34402EB:
call    __vcrt_getptd
cmp     dword ptr [rax+30h], 0
jle     short loc_7FF6E34402FE
call    __vcrt_getptd
dec     dword ptr [rax+30h]

loc_7FF6E34402FE:
mov     rcx, [rsp+138h+var_58]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
movaps  xmm6, [rsp+138h+var_48]
add     rsp, 100h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbx
retn

loc_7FF6E3440329:
call    abort
db 90h
; } // starts at 7FF6E3440028
sub_7FF6E3440028 endp

algn_7FF6E344032F:
align 10h
; [00000096 BYTES: COLLAPSED FUNCTION __FrameHandler3::GetHandlerSearchState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)]
algn_7FF6E34403C6:
align 8
; [000000ED BYTES: COLLAPSED FUNCTION IsInExceptionSpec(EHExceptionRecord *,_s_ESTypeList const *)]
algn_7FF6E34404B5:
align 8
; [00000088 BYTES: COLLAPSED FUNCTION Is_bad_exception_allowed(_s_ESTypeList const *)]
; [0000009C BYTES: COLLAPSED FUNCTION FH4::UWMap4::ReadEntry(uchar * *)]
; [00000009 BYTES: COLLAPSED FUNCTION unknown_libname_46]
align 8
; [0000000F BYTES: COLLAPSED FUNCTION unknown_libname_47]
align 8
; [000000CE BYTES: COLLAPSED FUNCTION FH4::UWMap4::getStartStop(int,int,FH4::UWMap4::iterator &,FH4::UWMap4::iterator &)]
algn_7FF6E34406C6:
align 8
; [000000B0 BYTES: COLLAPSED FUNCTION FH4::UWMap4::getStateFromIterators(FH4::UWMap4::iterator const &,int,FH4::UWMap4::iterator const &,int,FH4::UWMap4::iterator const &)]
byte_7FF6E3440778 db 0Eh dup(0CCh)
db 2 dup(66h), 0Fh, 1Fh, 84h, 5 dup(0)
db 6 dup(0CCh)
db 2 dup(66h), 0Fh, 1Fh, 84h, 5 dup(0)
db 6 dup(0CCh)
align 10h
; [00000021 BYTES: COLLAPSED FUNCTION _NLG_Notify]
algn_7FF6E34407D1:
align 20h
; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1]
algn_7FF6E34407E1:
align 4
; [00000037 BYTES: COLLAPSED FUNCTION __except_validate_context_record]
align 4
; [00000046 BYTES: COLLAPSED FUNCTION __vcrt_initialize_locks]
algn_7FF6E3440862:
align 4
; [00000037 BYTES: COLLAPSED FUNCTION __vcrt_uninitialize_locks]
algn_7FF6E344089B:
align 4
; [0000014F BYTES: COLLAPSED FUNCTION try_get_function(`anonymous namespace'::function_id,char const * const,A0x14174aea::module_id const * const,A0x14174aea::module_id const * const)]
algn_7FF6E34409EB:
align 4
; [00000045 BYTES: COLLAPSED FUNCTION __vcrt_FlsAlloc]
algn_7FF6E3440A31:
align 4
; [00000046 BYTES: COLLAPSED FUNCTION __vcrt_FlsFree]
algn_7FF6E3440A7A:
align 4
; [00000046 BYTES: COLLAPSED FUNCTION __vcrt_FlsGetValue]
algn_7FF6E3440AC2:
align 4
; [00000051 BYTES: COLLAPSED FUNCTION __vcrt_FlsSetValue]
algn_7FF6E3440B15:
align 8
; [00000061 BYTES: COLLAPSED FUNCTION __vcrt_InitializeCriticalSectionEx]
byte_7FF6E3440B79 db 0Dh dup(0CCh)
align 40h
; [00000040 BYTES: COLLAPSED FUNCTION _CallSettingFrame]
; [0000002A BYTES: COLLAPSED FUNCTION _CallSettingFrame_LookupContinuationIndex]
algn_7FF6E3440C2A:
align 10h
; [00000026 BYTES: COLLAPSED FUNCTION _CallSettingFrame_NotifyContinuationAddr]
algn_7FF6E3440C56:
align 20h
; [00000047 BYTES: COLLAPSED FUNCTION _CallSettingFrameEncoded]
algn_7FF6E3440CA7:
align 8
; [00000067 BYTES: COLLAPSED FUNCTION unknown_libname_68]
algn_7FF6E3440D0F:
align 10h
; [0000006A BYTES: COLLAPSED FUNCTION __crt_cached_ptd_host::get_raw_ptd_noexit(void)]
algn_7FF6E3440D7A:
align 4
; [0000004C BYTES: COLLAPSED FUNCTION __crt_state_management::dual_state_global<void (*)(wchar_t const *,wchar_t const *,wchar_t const *,uint,unsigned __int64)>::value(__crt_cached_ptd_host &)]


; Attributes: bp-based frame fpd=500h

sub_7FF6E3440DC8 proc near

var_5E0= qword ptr -5E0h
HandlerData= qword ptr -5D8h
EstablisherFrame= qword ptr -5D0h
var_5C8= qword ptr -5C8h
ImageBase= qword ptr -5C0h
var_5B8= qword ptr -5B8h
var_5B0= qword ptr -5B0h
ExceptionInfo= _EXCEPTION_POINTERS ptr -5A8h
var_590= dword ptr -590h
var_58C= dword ptr -58Ch
var_580= qword ptr -580h
ContextRecord= _CONTEXT ptr -4F0h
var_20= qword ptr -20h
var_10= byte ptr -10h
arg_8= qword ptr  18h
arg_10= qword ptr  20h

; __unwind { // __GSHandlerCheck
mov     [rsp-8+arg_8], rbx
mov     [rsp-8+arg_10], rsi
push    rbp
push    rdi
push    r14
lea     rbp, [rsp-4F0h]
sub     rsp, 5F0h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+500h+var_20], rax
mov     edi, r8d
mov     esi, edx
mov     ebx, ecx
cmp     ecx, 0FFFFFFFFh
jz      short loc_7FF6E3440E07
call    sub_7FF6E343BF88

loc_7FF6E3440E07:       ; Val
xor     edx, edx
lea     rcx, [rsp+600h+var_590] ; void *
mov     r8d, 98h        ; Size
call    memset
xor     edx, edx        ; Val
lea     rcx, [rbp+500h+ContextRecord] ; void *
mov     r8d, 4D0h       ; Size
call    memset
and     [rsp+600h+var_5B8], 0
lea     rax, [rsp+600h+var_590]
and     [rsp+600h+ImageBase], 0
lea     rcx, [rbp+500h+ContextRecord] ; ContextRecord
and     [rsp+600h+var_5B0], 0
mov     [rsp+600h+ExceptionInfo.ExceptionRecord], rax
lea     rax, [rbp+500h+ContextRecord]
mov     [rsp+600h+ExceptionInfo.ContextRecord], rax
call    cs:RtlCaptureContext
mov     r14, [rbp+500h+ContextRecord.Rip]
lea     rdx, [rsp+600h+ImageBase] ; ImageBase
mov     rcx, r14        ; ControlPc
xor     r8d, r8d        ; HistoryTable
call    cs:RtlLookupFunctionEntry
test    rax, rax
jz      short loc_7FF6E3440EAC
and     [rsp+600h+var_5C8], 0
lea     rcx, [rsp+600h+var_5B8]
mov     rdx, [rsp+600h+ImageBase] ; ImageBase
mov     r9, rax         ; FunctionEntry
mov     [rsp+600h+EstablisherFrame], rcx ; EstablisherFrame
mov     r8, r14         ; ControlPc
lea     rcx, [rsp+600h+var_5B0]
mov     [rsp+600h+HandlerData], rcx ; HandlerData
lea     rcx, [rbp+500h+ContextRecord]
mov     [rsp+600h+var_5E0], rcx ; ContextRecord
xor     ecx, ecx        ; HandlerType
call    cs:RtlVirtualUnwind

loc_7FF6E3440EAC:
mov     rax, [rbp+508h]
mov     [rbp+500h+ContextRecord.Rip], rax
lea     rax, [rbp+508h]
add     rax, 8
mov     [rsp+600h+var_590], esi
mov     [rbp+500h+ContextRecord.Rsp], rax
mov     rax, [rbp+508h]
mov     [rbp+500h+var_580], rax
mov     [rsp+600h+var_58C], edi
call    cs:IsDebuggerPresent
xor     ecx, ecx        ; lpTopLevelExceptionFilter
mov     edi, eax
call    cs:SetUnhandledExceptionFilter
lea     rcx, [rsp+600h+ExceptionInfo] ; ExceptionInfo
call    cs:UnhandledExceptionFilter
test    eax, eax
jnz     short loc_7FF6E3440F0E
test    edi, edi
jnz     short loc_7FF6E3440F0E
cmp     ebx, 0FFFFFFFFh
jz      short loc_7FF6E3440F0E
mov     ecx, ebx
call    sub_7FF6E343BF88

loc_7FF6E3440F0E:
mov     rcx, [rbp+500h+var_20]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
lea     r11, [rsp+600h+var_10]
mov     rbx, [r11+28h]
mov     rsi, [r11+30h]
mov     rsp, r11
pop     r14
pop     rdi
pop     rbp
retn
; } // starts at 7FF6E3440DC8
sub_7FF6E3440DC8 endp

algn_7FF6E3440F35:
align 8



sub_7FF6E3440F38 proc near
mov     cs:qword_7FF6E346EEE8, rcx
retn
sub_7FF6E3440F38 endp

; [0000009B BYTES: COLLAPSED FUNCTION _invalid_parameter]
algn_7FF6E3440FDB:
align 4



; __int64 __fastcall sub_7FF6E3440FDC(wchar_t *Expression, wchar_t *FunctionName, wchar_t *FileName, unsigned int LineNo, uintptr_t, __crt_cached_ptd_host *)
sub_7FF6E3440FDC proc near

Reserved= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_20= qword ptr  28h
arg_28= qword ptr  30h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 30h
mov     rbp, rcx
mov     ebx, r9d
mov     rcx, [rsp+38h+arg_28] ; this
mov     rdi, r8
mov     rsi, rdx
call    ?get_raw_ptd_noexit@__crt_cached_ptd_host@@QEAAPEAU__acrt_ptd@@XZ ; __crt_cached_ptd_host::get_raw_ptd_noexit(void)
test    rax, rax
jz      short loc_7FF6E3441047
mov     rax, [rax+3B8h]
test    rax, rax
jz      short loc_7FF6E3441047
mov     r9d, ebx
mov     r8, rdi
mov     rdx, rsi

loc_7FF6E3441020:
mov     rcx, [rsp+38h+arg_20]
mov     [rsp+38h+Reserved], rcx
mov     rcx, rbp
call    j__guard_dispatch_icall_nop
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 30h
pop     rdi
retn

loc_7FF6E3441047:
mov     rdx, [rsp+38h+arg_28]
lea     rcx, qword_7FF6E346EEE8
call    ?value@?$dual_state_global@P6AXPEB_W00I_K@Z@__crt_state_management@@QEAAAEAP6AXPEB_W00I_K@ZAEAV__crt_cached_ptd_host@@@Z ; __crt_state_management::dual_state_global<void (*)(wchar_t const *,wchar_t const *,wchar_t const *,uint,unsigned __int64)>::value(__crt_cached_ptd_host &)
mov     r9d, ebx        ; LineNo
mov     r8, rdi         ; FileName
mov     rdx, rsi        ; FunctionName
mov     r10, [rax]
mov     rax, cs:__security_cookie
xor     r10, rax
mov     ecx, eax
and     ecx, 3Fh
ror     r10, cl
test    r10, r10
jz      short loc_7FF6E3441080
mov     rax, r10
jmp     short loc_7FF6E3441020

loc_7FF6E3441080:
mov     rax, [rsp+38h+arg_20]
mov     rcx, rbp        ; Expression
mov     [rsp+38h+Reserved], rax ; Reserved
call    _invoke_watson
db 0CCh
sub_7FF6E3440FDC endp

algn_7FF6E3441093:
align 4
; [0000001E BYTES: COLLAPSED FUNCTION _invalid_parameter_noinfo]
algn_7FF6E34410B2:
align 4
; [0000002F BYTES: COLLAPSED FUNCTION _invalid_parameter_noinfo_noreturn]
algn_7FF6E34410E3:
align 4
; [00000047 BYTES: COLLAPSED FUNCTION _invoke_watson]
algn_7FF6E344112B:
align 10h



sub_7FF6E3441130 proc near
mov     rcx, [rcx]
mov     rax, rcx
shr     rax, 34h
and     eax, 7FFh
cmp     eax, 7FFh
jnz     short loc_7FF6E3441161
mov     rax, 0FFFFFFFFFFFFFh
test    rax, rcx
jnz     short loc_7FF6E344115B
mov     eax, 1
retn

loc_7FF6E344115B:
mov     eax, 2
retn

loc_7FF6E3441161:
test    eax, eax
jnz     short loc_7FF6E344117D
mov     rax, 7FFFFFFFFFFFFFFFh
test    rax, rcx
jnz     short loc_7FF6E3441177
xor     eax, eax
retn

loc_7FF6E3441177:
mov     eax, 0FFFFFFFEh
retn

loc_7FF6E344117D:
mov     eax, 0FFFFFFFFh
retn
sub_7FF6E3441130 endp

align 4



sub_7FF6E3441184 proc near
mov     eax, ecx
neg     eax
cmovs   eax, ecx
retn
sub_7FF6E3441184 endp

align 10h



sub_7FF6E3441190 proc near
andps   xmm0, cs:xmmword_7FF6E345E8F0
retn
sub_7FF6E3441190 endp

align 20h



sub_7FF6E34411A0 proc near

arg_0= dword ptr  8

xorps   xmm3, xmm3
mov     r9, rdx
ucomisd xmm0, xmm3
jp      short loc_7FF6E34411B8
jnz     short loc_7FF6E34411B8
mov     dword ptr [rdx], 0
xorps   xmm0, xmm0
retn

loc_7FF6E34411B8:
movq    rcx, xmm0
mov     rax, 7FF0000000000000h
test    rax, rcx
jnz     loc_7FF6E3441257
mov     rax, 0FFFFFFFFFFFFFh
test    rax, rcx
jz      short loc_7FF6E3441257
mov     ecx, 34h ; '4'
mov     [rsp+arg_0], 0
xorps   xmm1, xmm1
movsd   xmm1, xmm0
movq    rdx, xmm1
and     rdx, rax
mov     rax, 0FFEFFFFFFFFFFFFFh
bsr     r8, rdx
sub     ecx, r8d
shl     rdx, cl
mov     rcx, 8000000000000000h
and     rdx, rax
mov     rax, rdx
or      rax, rcx
lea     ecx, [r8-431h]
comisd  xmm3, xmm0
mov     [r9], ecx
cmova   rdx, rax
mov     rax, rdx
mov     rdx, 0BFEFFFFFFFFFFFFFh
and     rax, rdx
mov     rdx, 3FE0000000000000h
or      rax, rdx
movq    xmm0, rax
retn

loc_7FF6E3441257:
mov     rdx, 0BFEFFFFFFFFFFFFFh
shr     rcx, 34h
xorps   xmm1, xmm1
and     ecx, 7FFh
movsd   xmm1, xmm0
sub     ecx, 3FEh
movq    rax, xmm1
mov     [r9], ecx
and     rax, rdx
mov     rdx, 3FE0000000000000h
or      rax, rdx
movq    xmm0, rax
retn
sub_7FF6E34411A0 endp

align 20h



sub_7FF6E34412A0 proc near

var_28= qword ptr -28h
var_18= xmmword ptr -18h
arg_8= dword ptr  10h

sub     rsp, 48h
movaps  [rsp+48h+var_18], xmm6
movaps  xmm6, xmm0
mov     r8, rdx
test    rdx, rdx
jnz     short loc_7FF6E34412D1
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo
xorps   xmm0, xmm0
movaps  xmm6, [rsp+48h+var_18]
add     rsp, 48h
retn

loc_7FF6E34412D1:
mov     rdx, 7FF0000000000000h
movq    rax, xmm6
and     rax, rdx
cmp     rax, rdx
jnz     short loc_7FF6E3441363
mov     rax, 10000000000000h
mov     dword ptr [r8], 0FFFFFFFFh
movq    rcx, xmm6
mov     rdx, 7FFFFFFFFFFFFFFFh
add     rax, rcx
test    rdx, rax
jz      loc_7FF6E3441459
mov     rax, 7FF8000000000000h
and     rcx, rax
cmp     rcx, rax
jz      loc_7FF6E3441459
mov     edx, 0FFC0h
mov     ecx, 1F80h
call    sub_7FF6E344B36C
movaps  xmm3, xmm6
mov     [rsp+48h+var_28], rax
addsd   xmm3, cs:qword_7FF6E345FAB0
mov     edx, 17h
movaps  xmm2, xmm6
lea     ecx, [rdx-0Fh]
call    sub_7FF6E344A970
movaps  xmm6, [rsp+48h+var_18]
add     rsp, 48h
retn

loc_7FF6E3441363:
xorps   xmm2, xmm2
ucomisd xmm6, xmm2
jp      short loc_7FF6E344137F
jnz     short loc_7FF6E344137F
mov     dword ptr [r8], 0
movaps  xmm6, [rsp+48h+var_18]
add     rsp, 48h
retn

loc_7FF6E344137F:
movq    rcx, xmm6
test    rdx, rcx
jnz     loc_7FF6E344141B
mov     rax, 0FFFFFFFFFFFFFh
test    rax, rcx
jz      short loc_7FF6E344141B
mov     ecx, 34h ; '4'
mov     [rsp+48h+arg_8], 0
xorps   xmm1, xmm1
mov     r9, 8000000000000000h
movsd   xmm1, xmm6
movq    rdx, xmm1
and     rdx, rax
bsr     rax, rdx
sub     ecx, eax
shl     rdx, cl
mov     rcx, 0FFEFFFFFFFFFFFFFh
and     rdx, rcx
lea     ecx, [rax-431h]
mov     rax, rdx
or      rax, r9
mov     [r8], ecx
comisd  xmm2, xmm6
cmova   rdx, rax
mov     rax, rdx
mov     rdx, 0BFEFFFFFFFFFFFFFh
and     rax, rdx
mov     rdx, 3FE0000000000000h
or      rax, rdx
movq    xmm0, rax
movaps  xmm6, [rsp+48h+var_18]
add     rsp, 48h
retn

loc_7FF6E344141B:
mov     rdx, 0BFEFFFFFFFFFFFFFh
shr     rcx, 34h
xorps   xmm1, xmm1
and     ecx, 7FFh
movsd   xmm1, xmm6
movq    rax, xmm1
and     rax, rdx
mov     rdx, 3FE0000000000000h
or      rax, rdx
sub     ecx, 3FEh
mov     [r8], ecx
movq    xmm0, rax

loc_7FF6E3441459:
movaps  xmm6, [rsp+48h+var_18]
add     rsp, 48h
retn
sub_7FF6E34412A0 endp

algn_7FF6E3441463:
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j__calloc_base]
align 20h
; [00000005 BYTES: COLLAPSED FUNCTION j__free_base]
align 8


; Attributes: bp-based frame fpd=400h

; __int64 __fastcall sub_7FF6E3441488(int, int, int, int, __crt_cached_ptd_host *, __int64)
sub_7FF6E3441488 proc near

var_4E0= qword ptr -4E0h
var_4D8= qword ptr -4D8h
var_4D0= qword ptr -4D0h
var_4C8= qword ptr -4C8h
var_4C0= qword ptr -4C0h
var_4B8= byte ptr -4B8h
var_4B7= dword ptr -4B7h
var_4B3= word ptr -4B3h
var_4B1= byte ptr -4B1h
var_4B0= qword ptr -4B0h
var_4A8= qword ptr -4A8h
var_4A0= qword ptr -4A0h
var_498= qword ptr -498h
var_490= dword ptr -490h
var_48C= byte ptr -48Ch
var_488= qword ptr -488h
var_480= dword ptr -480h
var_478= word ptr -478h
var_468= dword ptr -468h
var_464= byte ptr -464h
Block= qword ptr -60h
var_50= qword ptr -50h
var_48= dword ptr -48h
var_40= qword ptr -40h
arg_20= qword ptr  30h
arg_28= qword ptr  38h

; __unwind { // __GSHandlerCheck
push    rbp
push    rbx
push    rsi
push    rdi
push    r12
push    r14
push    r15
lea     rbp, [rsp-3D0h]
sub     rsp, 4D0h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+400h+var_40], rax
mov     rax, [rbp+400h+arg_20]
xor     r12d, r12d
mov     rdi, r8
mov     rsi, rdx
mov     r15, rcx
test    r9, r9
jnz     short loc_7FF6E34414F7

loc_7FF6E34414CB:
mov     byte ptr [rax+30h], 1
xor     r9d, r9d        ; LineNo
mov     [rsp+500h+var_4D8], rax ; __crt_cached_ptd_host *
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
mov     dword ptr [rax+2Ch], 16h
xor     ecx, ecx        ; Expression
mov     [rsp+500h+var_4E0], r12 ; uintptr_t
call    sub_7FF6E3440FDC
or      eax, 0FFFFFFFFh
jmp     loc_7FF6E34415FB

loc_7FF6E34414F7:
test    rdi, rdi
jz      short loc_7FF6E3441501
test    rsi, rsi
jz      short loc_7FF6E34414CB

loc_7FF6E3441501:
mov     r14, r15
mov     [rsp+500h+var_4B7], r12d
mov     [rsp+500h+var_4B3], r12w
mov     [rsp+500h+var_4B1], r12b
mov     [rsp+500h+var_4D0], rsi
mov     [rsp+500h+var_4C8], rdi
mov     [rsp+500h+var_4C0], r12
and     r14d, 2
jnz     short loc_7FF6E3441533
mov     [rsp+500h+var_4B8], r12b
test    rsi, rsi
jnz     short loc_7FF6E3441538

loc_7FF6E3441533:
mov     [rsp+500h+var_4B8], 1

loc_7FF6E3441538:
mov     [rsp+500h+var_4A8], rax
lea     rcx, [rsp+500h+var_4B0]
lea     rax, [rsp+500h+var_4D0]
mov     [rsp+500h+var_490], r12d
mov     [rbp+400h+var_50], rax
xorps   xmm0, xmm0
mov     rax, [rbp+400h+arg_28]
mov     [rsp+500h+var_498], rax
mov     [rsp+500h+var_48C], r12b
mov     [rsp+500h+var_488], r12
mov     [rbp+400h+var_480], r12d
mov     [rbp+400h+var_478], r12w
mov     [rbp+400h+var_468], r12d
mov     [rbp+400h+var_464], r12b
movdqa  xmmword ptr [rbp+400h+Block], xmm0
mov     [rsp+500h+var_4B0], r15
mov     [rsp+500h+var_4A0], r9
mov     [rbp+400h+var_48], r12d
call    sub_7FF6E34423E0
movsxd  rbx, eax
test    rsi, rsi
jz      short loc_7FF6E34415ED
test    r15b, 1
jz      short loc_7FF6E34415CC
test    rdi, rdi
jnz     short loc_7FF6E34415B7
test    eax, eax
jz      short loc_7FF6E34415B7

loc_7FF6E34415B2:
or      ebx, 0FFFFFFFFh
jmp     short loc_7FF6E34415ED

loc_7FF6E34415B7:
mov     rax, [rsp+500h+var_4C0]
cmp     rax, rdi
jnz     short loc_7FF6E34415E9
test    ebx, ebx
js      short loc_7FF6E34415ED
cmp     rbx, rdi
jbe     short loc_7FF6E34415ED
jmp     short loc_7FF6E34415B2

loc_7FF6E34415CC:
test    r14, r14
jz      short loc_7FF6E344161C
test    rdi, rdi
jz      short loc_7FF6E34415ED
test    eax, eax
jns     short loc_7FF6E34415DF
mov     [rsi], r12b
jmp     short loc_7FF6E34415ED

loc_7FF6E34415DF:
mov     rax, [rsp+500h+var_4C0]
cmp     rax, rdi
jz      short loc_7FF6E3441630

loc_7FF6E34415E9:
mov     [rsi+rax], r12b

loc_7FF6E34415ED:       ; Block
mov     rcx, [rbp+400h+Block+8]
call    _free_base
mov     eax, ebx

loc_7FF6E34415FB:
mov     rcx, [rbp+400h+var_40]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 4D0h
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rsi
pop     rbx
pop     rbp
retn

loc_7FF6E344161C:
test    rdi, rdi
jz      short loc_7FF6E34415B2
mov     rax, [rsp+500h+var_4C0]
cmp     rax, rdi
jnz     short loc_7FF6E34415E9
mov     ebx, 0FFFFFFFEh

loc_7FF6E3441630:
mov     [rsi+rdi-1], r12b
jmp     short loc_7FF6E34415ED
; } // starts at 7FF6E3441488
sub_7FF6E3441488 endp

algn_7FF6E3441637:
align 8
; [000000A8 BYTES: COLLAPSED FUNCTION __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned __int64,__crt_cached_ptd_host &)]
; [000002B4 BYTES: COLLAPSED FUNCTION __crt_strtox::parse_integer<ulong,__crt_strtox::c_string_character_source<char>,0>(__crt_cached_ptd_host &,__crt_strtox::c_string_character_source<char>,int,bool)]



sub_7FF6E3441994 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 30h
mov     r8d, [rcx+34h]
mov     bpl, dl
mov     rbx, rcx
mov     r14d, 8
cmp     r8d, 5
jg      loc_7FF6E3441A90
jz      short loc_7FF6E34419F6
test    r8d, r8d
jz      loc_7FF6E3441AE7
sub     r8d, 1
jz      loc_7FF6E3441A67
sub     r8d, 1
jz      short loc_7FF6E3441A3F

loc_7FF6E34419E2:
sub     r8d, 1
jz      loc_7FF6E3441AE7
cmp     r8d, 1
jnz     loc_7FF6E3441AB3

loc_7FF6E34419F6:
mov     edx, [rcx+28h]
mov     rdi, r14
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
mov     rsi, [rcx]

loc_7FF6E3441A12:
mov     eax, edx
shr     eax, 4
test    al, 1
jz      short loc_7FF6E3441A29
test    rsi, rsi
jns     short loc_7FF6E3441A29
neg     rsi
or      edx, 40h
mov     [rbx+28h], edx

loc_7FF6E3441A29:
cmp     dword ptr [rbx+30h], 0
jge     loc_7FF6E3441B13
mov     dword ptr [rbx+30h], 1
jmp     loc_7FF6E3441B2A

loc_7FF6E3441A3F:
mov     edx, [rcx+28h]
mov     edi, 2
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441A62
movsx   rsi, word ptr [rcx]
jmp     short loc_7FF6E3441A12

loc_7FF6E3441A62:
movzx   esi, word ptr [rcx]
jmp     short loc_7FF6E3441A12

loc_7FF6E3441A67:
mov     edx, [rcx+28h]
mov     edi, 1
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    dil, al
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441A8B
movsx   rsi, byte ptr [rcx]
jmp     short loc_7FF6E3441A12

loc_7FF6E3441A8B:
movzx   esi, byte ptr [rcx]
jmp     short loc_7FF6E3441A12

loc_7FF6E3441A90:
sub     r8d, 6
jz      loc_7FF6E34419F6
sub     r8d, 1
jz      loc_7FF6E34419F6
sub     r8d, 2
jz      loc_7FF6E34419F6
jmp     loc_7FF6E34419E2

loc_7FF6E3441AB3:
mov     rax, [rcx+8]
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rax, [rcx+8]
xor     ecx, ecx        ; Expression
mov     [rsp+38h+var_10], rax ; __crt_cached_ptd_host *
and     [rsp+38h+var_18], 0
call    sub_7FF6E3440FDC
xor     al, al
jmp     loc_7FF6E3441B7C

loc_7FF6E3441AE7:
mov     edx, [rcx+28h]
mov     edi, 4
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441B0C
movsxd  rsi, dword ptr [rcx]
jmp     loc_7FF6E3441A12

loc_7FF6E3441B0C:
mov     esi, [rcx]
jmp     loc_7FF6E3441A12

loc_7FF6E3441B13:
mov     r8, [rbx+8]
lea     rcx, [rbx+50h]
and     edx, 0FFFFFFF7h
mov     [rbx+28h], edx
movsxd  rdx, dword ptr [rbx+30h]
call    ??$ensure_buffer_is_big_enough@D@formatting_buffer@__crt_stdio_output@@QEAA_N_KAEAV__crt_cached_ptd_host@@@Z ; __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned __int64,__crt_cached_ptd_host &)

loc_7FF6E3441B2A:
test    rsi, rsi
jnz     short loc_7FF6E3441B33
and     dword ptr [rbx+28h], 0FFFFFFDFh

loc_7FF6E3441B33:
mov     byte ptr [rbx+4Ch], 0
mov     r8b, bpl
mov     rcx, rbx
cmp     rdi, r14
jnz     short loc_7FF6E3441B4C
mov     rdx, rsi
call    unknown_libname_72 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E3441B53

loc_7FF6E3441B4C:
mov     edx, esi
call    unknown_libname_69 ; Microsoft VisualC 64bit universal runtime

loc_7FF6E3441B53:
mov     eax, [rbx+28h]
shr     eax, 7
test    al, 1
jz      short loc_7FF6E3441B7A
cmp     dword ptr [rbx+48h], 0
jz      short loc_7FF6E3441B6C
mov     rax, [rbx+40h]
cmp     byte ptr [rax], 30h ; '0'
jz      short loc_7FF6E3441B7A

loc_7FF6E3441B6C:
dec     qword ptr [rbx+40h]
mov     rcx, [rbx+40h]
mov     byte ptr [rcx], 30h ; '0'
inc     dword ptr [rbx+48h]

loc_7FF6E3441B7A:
mov     al, 1

loc_7FF6E3441B7C:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
mov     rdi, [rsp+38h+arg_18]
add     rsp, 30h
pop     r14
retn
sub_7FF6E3441994 endp

algn_7FF6E3441B97:
align 8



sub_7FF6E3441B98 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 30h
mov     r8d, [rcx+34h]
mov     bpl, dl
mov     rbx, rcx
mov     r14d, 8
cmp     r8d, 5
jg      loc_7FF6E3441C94
jz      short loc_7FF6E3441BFA
test    r8d, r8d
jz      loc_7FF6E3441CEB
sub     r8d, 1
jz      loc_7FF6E3441C6B
sub     r8d, 1
jz      short loc_7FF6E3441C43

loc_7FF6E3441BE6:
sub     r8d, 1
jz      loc_7FF6E3441CEB
cmp     r8d, 1
jnz     loc_7FF6E3441CB7

loc_7FF6E3441BFA:
mov     edx, [rcx+28h]
mov     rdi, r14
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
mov     rsi, [rcx]

loc_7FF6E3441C16:
mov     eax, edx
shr     eax, 4
test    al, 1
jz      short loc_7FF6E3441C2D
test    rsi, rsi
jns     short loc_7FF6E3441C2D
neg     rsi
or      edx, 40h
mov     [rbx+28h], edx

loc_7FF6E3441C2D:
cmp     dword ptr [rbx+30h], 0
jge     loc_7FF6E3441D17
mov     dword ptr [rbx+30h], 1
jmp     loc_7FF6E3441D2E

loc_7FF6E3441C43:
mov     edx, [rcx+28h]
mov     edi, 2
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441C66
movsx   rsi, word ptr [rcx]
jmp     short loc_7FF6E3441C16

loc_7FF6E3441C66:
movzx   esi, word ptr [rcx]
jmp     short loc_7FF6E3441C16

loc_7FF6E3441C6B:
mov     edx, [rcx+28h]
mov     edi, 1
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    dil, al
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441C8F
movsx   rsi, byte ptr [rcx]
jmp     short loc_7FF6E3441C16

loc_7FF6E3441C8F:
movzx   esi, byte ptr [rcx]
jmp     short loc_7FF6E3441C16

loc_7FF6E3441C94:
sub     r8d, 6
jz      loc_7FF6E3441BFA
sub     r8d, 1
jz      loc_7FF6E3441BFA
sub     r8d, 2
jz      loc_7FF6E3441BFA
jmp     loc_7FF6E3441BE6

loc_7FF6E3441CB7:
mov     rax, [rcx+8]
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rax, [rcx+8]
xor     ecx, ecx        ; Expression
mov     [rsp+38h+var_10], rax ; __crt_cached_ptd_host *
and     [rsp+38h+var_18], 0
call    sub_7FF6E3440FDC
xor     al, al
jmp     loc_7FF6E3441D80

loc_7FF6E3441CEB:
mov     edx, [rcx+28h]
mov     edi, 4
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441D10
movsxd  rsi, dword ptr [rcx]
jmp     loc_7FF6E3441C16

loc_7FF6E3441D10:
mov     esi, [rcx]
jmp     loc_7FF6E3441C16

loc_7FF6E3441D17:
mov     r8, [rbx+8]
lea     rcx, [rbx+50h]
and     edx, 0FFFFFFF7h
mov     [rbx+28h], edx
movsxd  rdx, dword ptr [rbx+30h]
call    ??$ensure_buffer_is_big_enough@D@formatting_buffer@__crt_stdio_output@@QEAA_N_KAEAV__crt_cached_ptd_host@@@Z ; __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned __int64,__crt_cached_ptd_host &)

loc_7FF6E3441D2E:
test    rsi, rsi
jnz     short loc_7FF6E3441D37
and     dword ptr [rbx+28h], 0FFFFFFDFh

loc_7FF6E3441D37:
mov     byte ptr [rbx+4Ch], 0
mov     r8b, bpl
mov     rcx, rbx
cmp     rdi, r14
jnz     short loc_7FF6E3441D50
mov     rdx, rsi
call    unknown_libname_73 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E3441D57

loc_7FF6E3441D50:
mov     edx, esi
call    unknown_libname_70 ; Microsoft VisualC 64bit universal runtime

loc_7FF6E3441D57:
mov     eax, [rbx+28h]
shr     eax, 7
test    al, 1
jz      short loc_7FF6E3441D7E
cmp     dword ptr [rbx+48h], 0
jz      short loc_7FF6E3441D70
mov     rax, [rbx+40h]
cmp     byte ptr [rax], 30h ; '0'
jz      short loc_7FF6E3441D7E

loc_7FF6E3441D70:
dec     qword ptr [rbx+40h]
mov     rcx, [rbx+40h]
mov     byte ptr [rcx], 30h ; '0'
inc     dword ptr [rbx+48h]

loc_7FF6E3441D7E:
mov     al, 1

loc_7FF6E3441D80:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
mov     rdi, [rsp+38h+arg_18]
add     rsp, 30h
pop     r14
retn
sub_7FF6E3441B98 endp

algn_7FF6E3441D9B:
align 4



sub_7FF6E3441D9C proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 30h
mov     r8d, [rcx+34h]
mov     bpl, dl
mov     rbx, rcx
mov     r14d, 8
cmp     r8d, 5
jg      loc_7FF6E3441E98
jz      short loc_7FF6E3441DFE
test    r8d, r8d
jz      loc_7FF6E3441EEF
sub     r8d, 1
jz      loc_7FF6E3441E6F
sub     r8d, 1
jz      short loc_7FF6E3441E47

loc_7FF6E3441DEA:
sub     r8d, 1
jz      loc_7FF6E3441EEF
cmp     r8d, 1
jnz     loc_7FF6E3441EBB

loc_7FF6E3441DFE:
mov     edx, [rcx+28h]
mov     rdi, r14
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
mov     rsi, [rcx]

loc_7FF6E3441E1A:
mov     eax, edx
shr     eax, 4
test    al, 1
jz      short loc_7FF6E3441E31
test    rsi, rsi
jns     short loc_7FF6E3441E31
neg     rsi
or      edx, 40h
mov     [rbx+28h], edx

loc_7FF6E3441E31:
cmp     dword ptr [rbx+30h], 0
jge     loc_7FF6E3441F1B
mov     dword ptr [rbx+30h], 1
jmp     loc_7FF6E3441F32

loc_7FF6E3441E47:
mov     edx, [rcx+28h]
mov     edi, 2
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441E6A
movsx   rsi, word ptr [rcx]
jmp     short loc_7FF6E3441E1A

loc_7FF6E3441E6A:
movzx   esi, word ptr [rcx]
jmp     short loc_7FF6E3441E1A

loc_7FF6E3441E6F:
mov     edx, [rcx+28h]
mov     edi, 1
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    dil, al
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441E93
movsx   rsi, byte ptr [rcx]
jmp     short loc_7FF6E3441E1A

loc_7FF6E3441E93:
movzx   esi, byte ptr [rcx]
jmp     short loc_7FF6E3441E1A

loc_7FF6E3441E98:
sub     r8d, 6
jz      loc_7FF6E3441DFE
sub     r8d, 1
jz      loc_7FF6E3441DFE
sub     r8d, 2
jz      loc_7FF6E3441DFE
jmp     loc_7FF6E3441DEA

loc_7FF6E3441EBB:
mov     rax, [rcx+8]
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rax, [rcx+8]
xor     ecx, ecx        ; Expression
mov     [rsp+38h+var_10], rax ; __crt_cached_ptd_host *
and     [rsp+38h+var_18], 0
call    sub_7FF6E3440FDC
xor     al, al
jmp     loc_7FF6E3441F84

loc_7FF6E3441EEF:
mov     edx, [rcx+28h]
mov     edi, 4
mov     rcx, [rcx+18h]
mov     eax, edx
shr     eax, 4
test    al, 1
lea     rax, [rcx+8]
mov     [rbx+18h], rax
jz      short loc_7FF6E3441F14
movsxd  rsi, dword ptr [rcx]
jmp     loc_7FF6E3441E1A

loc_7FF6E3441F14:
mov     esi, [rcx]
jmp     loc_7FF6E3441E1A

loc_7FF6E3441F1B:
mov     r8, [rbx+8]
lea     rcx, [rbx+50h]
and     edx, 0FFFFFFF7h
mov     [rbx+28h], edx
movsxd  rdx, dword ptr [rbx+30h]
call    ??$ensure_buffer_is_big_enough@D@formatting_buffer@__crt_stdio_output@@QEAA_N_KAEAV__crt_cached_ptd_host@@@Z ; __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned __int64,__crt_cached_ptd_host &)

loc_7FF6E3441F32:
test    rsi, rsi
jnz     short loc_7FF6E3441F3B
and     dword ptr [rbx+28h], 0FFFFFFDFh

loc_7FF6E3441F3B:
mov     byte ptr [rbx+4Ch], 0
mov     r8b, bpl
mov     rcx, rbx
cmp     rdi, r14
jnz     short loc_7FF6E3441F54
mov     rdx, rsi
call    unknown_libname_74 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E3441F5B

loc_7FF6E3441F54:
mov     edx, esi
call    unknown_libname_71 ; Microsoft VisualC 64bit universal runtime

loc_7FF6E3441F5B:
mov     eax, [rbx+28h]
shr     eax, 7
test    al, 1
jz      short loc_7FF6E3441F82
cmp     dword ptr [rbx+48h], 0
jz      short loc_7FF6E3441F74
mov     rax, [rbx+40h]
cmp     byte ptr [rax], 30h ; '0'
jz      short loc_7FF6E3441F82

loc_7FF6E3441F74:
dec     qword ptr [rbx+40h]
mov     rcx, [rbx+40h]
mov     byte ptr [rcx], 30h ; '0'
inc     dword ptr [rbx+48h]

loc_7FF6E3441F82:
mov     al, 1

loc_7FF6E3441F84:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
mov     rdi, [rsp+38h+arg_18]
add     rsp, 30h
pop     r14
retn
sub_7FF6E3441D9C endp

algn_7FF6E3441F9F:
align 20h
; [0000006D BYTES: COLLAPSED FUNCTION unknown_libname_69]
align 10h
; [000000AA BYTES: COLLAPSED FUNCTION unknown_libname_70]
algn_7FF6E34420BA:
align 4
; [00000084 BYTES: COLLAPSED FUNCTION unknown_libname_71]
; [0000006D BYTES: COLLAPSED FUNCTION unknown_libname_72]
align 10h
; [000000B0 BYTES: COLLAPSED FUNCTION unknown_libname_73]
; [00000084 BYTES: COLLAPSED FUNCTION unknown_libname_74]
; [0000006A BYTES: COLLAPSED FUNCTION __crt_stdio_output::crop_zeroes(char *,__crt_locale_pointers * const)]
align 10h
; [0000008D BYTES: COLLAPSED FUNCTION unknown_libname_75]
algn_7FF6E34423DD:
align 20h



sub_7FF6E34423E0 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 30h
mov     rax, [rcx+8]
or      ebp, 0FFFFFFFFh
xor     esi, esi
mov     rbx, rcx
cmp     [rcx+460h], rsi
jnz     short loc_7FF6E344241E
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
jmp     loc_7FF6E344273D

loc_7FF6E344241E:
cmp     [rcx+10h], rsi
jnz     short loc_7FF6E3442453
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rcx, [rcx+8]
mov     [rsp+38h+var_10], rcx ; __crt_cached_ptd_host *

loc_7FF6E3442438:       ; LineNo
xor     r9d, r9d
mov     [rsp+38h+var_18], rsi ; uintptr_t
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    sub_7FF6E3440FDC

loc_7FF6E344244C:
mov     eax, ebp
jmp     loc_7FF6E34426E3

loc_7FF6E3442453:
mov     eax, [rcx+468h]
inc     eax
mov     [rcx+468h], eax
cmp     eax, 2
jz      loc_7FF6E34426E0
lea     r14, unk_7FF6E345FAC0

loc_7FF6E3442471:
mov     [rbx+48h], esi
mov     [rbx+24h], sil
jmp     loc_7FF6E34426AA

loc_7FF6E344247D:
cmp     [rbx+20h], esi
jl      loc_7FF6E34426C2
lea     eax, [rdx-20h]
cmp     al, 5Ah ; 'Z'
ja      short loc_7FF6E344249F
movsx   rax, dl
sub     rax, 20h ; ' '
and     eax, 7Fh
mov     cl, [r14+rax*2+1]
jmp     short loc_7FF6E34424A2

loc_7FF6E344249F:
mov     cl, sil

loc_7FF6E34424A2:
movzx   eax, cl
lea     rcx, [rax+rax*8]
movzx   eax, byte ptr [rbx+24h]
add     rcx, rax
and     ecx, 7Fh
movzx   eax, byte ptr [r14+rcx*2]
mov     [rbx+24h], al
cmp     al, 8
jnb     loc_7FF6E344272A
mov     ecx, eax
test    al, al
jz      loc_7FF6E34425DE
sub     ecx, 1
jz      loc_7FF6E34425C7
sub     ecx, 1
jz      loc_7FF6E344257D
sub     ecx, 1
jz      short loc_7FF6E3442545
sub     ecx, 1
jz      short loc_7FF6E344253D
sub     ecx, 1
jz      short loc_7FF6E3442510
sub     ecx, 1
jz      short loc_7FF6E3442506
cmp     ecx, 1
jnz     loc_7FF6E344244C
mov     rcx, rbx
call    sub_7FF6E34428D0
jmp     short loc_7FF6E3442570

loc_7FF6E3442506:
mov     rcx, rbx
call    sub_7FF6E3442748
jmp     short loc_7FF6E3442570

loc_7FF6E3442510:
cmp     dl, 2Ah ; '*'
jz      short loc_7FF6E3442523
lea     rdx, [rbx+30h]

loc_7FF6E3442519:
mov     rcx, rbx
call    unknown_libname_75 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E3442570

loc_7FF6E3442523:
mov     rcx, [rbx+18h]
lea     rax, [rcx+8]
mov     [rbx+18h], rax
mov     eax, [rcx]
mov     [rbx+30h], eax
test    eax, eax
jns     short loc_7FF6E344256E
mov     [rbx+30h], ebp
jmp     short loc_7FF6E344256E

loc_7FF6E344253D:
mov     [rbx+30h], esi
jmp     loc_7FF6E34426AA

loc_7FF6E3442545:
cmp     dl, 2Ah ; '*'
jz      short loc_7FF6E3442550
lea     rdx, [rbx+2Ch]
jmp     short loc_7FF6E3442519

loc_7FF6E3442550:
mov     rcx, [rbx+18h]
lea     rax, [rcx+8]
mov     [rbx+18h], rax
mov     eax, [rcx]
mov     [rbx+2Ch], eax
test    eax, eax
jns     short loc_7FF6E344256E
or      dword ptr [rbx+28h], 4
neg     eax
mov     [rbx+2Ch], eax

loc_7FF6E344256E:
mov     al, 1

loc_7FF6E3442570:
test    al, al
jz      loc_7FF6E344244C
jmp     loc_7FF6E34426AA

loc_7FF6E344257D:
cmp     dl, 20h ; ' '
jz      short loc_7FF6E34425BE
cmp     dl, 23h ; '#'
jz      short loc_7FF6E34425B5
cmp     dl, 2Bh ; '+'
jz      short loc_7FF6E34425AC
cmp     dl, 2Dh ; '-'
jz      short loc_7FF6E34425A3
cmp     dl, 30h ; '0'
jnz     loc_7FF6E34426AA
or      dword ptr [rbx+28h], 8
jmp     loc_7FF6E34426AA

loc_7FF6E34425A3:
or      dword ptr [rbx+28h], 4
jmp     loc_7FF6E34426AA

loc_7FF6E34425AC:
or      dword ptr [rbx+28h], 1
jmp     loc_7FF6E34426AA

loc_7FF6E34425B5:
or      dword ptr [rbx+28h], 20h
jmp     loc_7FF6E34426AA

loc_7FF6E34425BE:
or      dword ptr [rbx+28h], 2
jmp     loc_7FF6E34426AA

loc_7FF6E34425C7:
mov     [rbx+28h], rsi
mov     [rbx+38h], sil
mov     [rbx+30h], ebp
mov     [rbx+34h], esi
mov     [rbx+4Ch], sil
jmp     loc_7FF6E34426AA

loc_7FF6E34425DE:
mov     rdi, [rbx+8]
mov     [rbx+4Ch], sil
cmp     [rdi+28h], sil
jnz     short loc_7FF6E34425F4
mov     rcx, rdi        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)

loc_7FF6E34425F4:
movsx   r8, byte ptr [rbx+39h]
cmp     r8d, ebp
jl      short loc_7FF6E344266B
mov     rax, [rdi+18h]
mov     rcx, [rax]
mov     eax, 8000h
test    [rcx+r8*2], ax
jz      short loc_7FF6E344266B
mov     rcx, [rbx+460h]
mov     rax, [rcx+8]
cmp     [rcx+10h], rax
jnz     short loc_7FF6E3442632
cmp     [rcx+18h], sil
jz      short loc_7FF6E344262D
inc     dword ptr [rbx+20h]
jmp     short loc_7FF6E3442650

loc_7FF6E344262D:
mov     [rbx+20h], ebp
jmp     short loc_7FF6E3442650

loc_7FF6E3442632:
inc     dword ptr [rbx+20h]
inc     qword ptr [rcx+10h]
mov     rax, [rbx+460h]
mov     rcx, [rax]
mov     [rcx], r8b
mov     rax, [rbx+460h]
inc     qword ptr [rax]

loc_7FF6E3442650:
mov     rax, [rbx+10h]
mov     r8b, [rax]
inc     rax
mov     [rbx+10h], rax
mov     [rbx+39h], r8b
test    r8b, r8b
jz      loc_7FF6E34426FE

loc_7FF6E344266B:
mov     rcx, [rbx+460h]
mov     rax, [rcx+8]
cmp     [rcx+10h], rax
jnz     short loc_7FF6E344268C
cmp     [rcx+18h], sil
jz      short loc_7FF6E3442687
inc     dword ptr [rbx+20h]
jmp     short loc_7FF6E34426AA

loc_7FF6E3442687:
mov     [rbx+20h], ebp
jmp     short loc_7FF6E34426AA

loc_7FF6E344268C:
inc     dword ptr [rbx+20h]
inc     qword ptr [rcx+10h]
mov     rax, [rbx+460h]
mov     rcx, [rax]
mov     [rcx], r8b
mov     rax, [rbx+460h]
inc     qword ptr [rax]

loc_7FF6E34426AA:
mov     rax, [rbx+10h]
mov     dl, [rax]
inc     rax
mov     [rbx+10h], rax
mov     [rbx+39h], dl
test    dl, dl
jnz     loc_7FF6E344247D

loc_7FF6E34426C2:
mov     al, [rbx+24h]
test    al, al
jz      short loc_7FF6E34426CD
cmp     al, 7
jnz     short loc_7FF6E344272A

loc_7FF6E34426CD:
inc     dword ptr [rbx+468h]
cmp     dword ptr [rbx+468h], 2
jnz     loc_7FF6E3442471

loc_7FF6E34426E0:
mov     eax, [rbx+20h]

loc_7FF6E34426E3:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
mov     rdi, [rsp+38h+arg_18]
add     rsp, 30h
pop     r14
retn

loc_7FF6E34426FE:
mov     rax, [rbx+8]
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rax, [rbx+8]
mov     [rsp+38h+var_10], rax ; __crt_cached_ptd_host *
mov     [rsp+38h+var_18], rsi ; uintptr_t
call    sub_7FF6E3440FDC

loc_7FF6E344272A:
mov     rax, [rbx+8]
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rax, [rbx+8]

loc_7FF6E344273D:
mov     [rsp+38h+var_10], rax
jmp     loc_7FF6E3442438
sub_7FF6E34423E0 endp

algn_7FF6E3442747:
align 8



sub_7FF6E3442748 proc near

var_18= qword ptr -18h
var_10= qword ptr -10h

sub     rsp, 38h
mov     al, [rcx+39h]
cmp     al, 46h ; 'F'
jnz     short loc_7FF6E3442769
test    byte ptr [rcx], 8
jnz     loc_7FF6E34428C8
mov     byte ptr [rcx+24h], 7
add     rsp, 38h
jmp     sub_7FF6E34428D0

loc_7FF6E3442769:
cmp     al, 4Eh ; 'N'
jnz     short loc_7FF6E34427AE
test    byte ptr [rcx], 8
jnz     loc_7FF6E34428C8
mov     byte ptr [rcx+24h], 8

loc_7FF6E344277A:
mov     rax, [rcx+8]
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
mov     byte ptr [rax+30h], 1
mov     dword ptr [rax+2Ch], 16h
mov     rax, [rcx+8]
xor     ecx, ecx        ; Expression
mov     [rsp+38h+var_10], rax ; __crt_cached_ptd_host *
and     [rsp+38h+var_18], 0
call    sub_7FF6E3440FDC
xor     al, al
jmp     loc_7FF6E34428CA

loc_7FF6E34427AE:
cmp     dword ptr [rcx+34h], 0
jnz     short loc_7FF6E344277A
cmp     al, 49h ; 'I'
jz      loc_7FF6E344286C
cmp     al, 4Ch ; 'L'
jz      loc_7FF6E3442863
cmp     al, 54h ; 'T'
jz      loc_7FF6E344285A
cmp     al, 68h ; 'h'
jz      short loc_7FF6E344283C
cmp     al, 6Ah ; 'j'
jz      short loc_7FF6E3442830
cmp     al, 6Ch ; 'l'
jz      short loc_7FF6E344280C
cmp     al, 74h ; 't'
jz      short loc_7FF6E3442800
cmp     al, 77h ; 'w'
jz      short loc_7FF6E34427F4
cmp     al, 7Ah ; 'z'
jnz     loc_7FF6E34428C8
mov     dword ptr [rcx+34h], 6
jmp     loc_7FF6E34428C8

loc_7FF6E34427F4:
mov     dword ptr [rcx+34h], 0Ch
jmp     loc_7FF6E34428C8

loc_7FF6E3442800:
mov     dword ptr [rcx+34h], 7
jmp     loc_7FF6E34428C8

loc_7FF6E344280C:
mov     rax, [rcx+10h]
cmp     byte ptr [rax], 6Ch ; 'l'
jnz     short loc_7FF6E3442823
inc     rax
mov     [rcx+10h], rax
mov     eax, 4
jmp     short loc_7FF6E3442828

loc_7FF6E3442823:
mov     eax, 3

loc_7FF6E3442828:
mov     [rcx+34h], eax
jmp     loc_7FF6E34428C8

loc_7FF6E3442830:
mov     dword ptr [rcx+34h], 5
jmp     loc_7FF6E34428C8

loc_7FF6E344283C:
mov     rax, [rcx+10h]
cmp     byte ptr [rax], 68h ; 'h'
jnz     short loc_7FF6E3442853
inc     rax
mov     [rcx+10h], rax
mov     eax, 1
jmp     short loc_7FF6E3442828

loc_7FF6E3442853:
mov     eax, 2
jmp     short loc_7FF6E3442828

loc_7FF6E344285A:
mov     dword ptr [rcx+34h], 0Dh
jmp     short loc_7FF6E34428C8

loc_7FF6E3442863:
mov     dword ptr [rcx+34h], 8
jmp     short loc_7FF6E34428C8

loc_7FF6E344286C:
mov     r8, [rcx+10h]
mov     al, [r8]
cmp     al, 33h ; '3'
jnz     short loc_7FF6E344288F
cmp     byte ptr [r8+1], 32h ; '2'
jnz     short loc_7FF6E344288F
lea     rax, [r8+2]
mov     dword ptr [rcx+34h], 0Ah
mov     [rcx+10h], rax
jmp     short loc_7FF6E34428C8

loc_7FF6E344288F:
cmp     al, 36h ; '6'
jnz     short loc_7FF6E34428AB
cmp     byte ptr [r8+1], 34h ; '4'
jnz     short loc_7FF6E34428C8
lea     rax, [r8+2]
mov     dword ptr [rcx+34h], 0Bh
mov     [rcx+10h], rax
jmp     short loc_7FF6E34428C8

loc_7FF6E34428AB:
sub     al, 58h ; 'X'
cmp     al, 20h ; ' '
ja      short loc_7FF6E34428C8
mov     rdx, 120821001h
bt      rdx, rax
jnb     short loc_7FF6E34428C8
mov     dword ptr [rcx+34h], 9

loc_7FF6E34428C8:
mov     al, 1

loc_7FF6E34428CA:
add     rsp, 38h
retn
sub_7FF6E3442748 endp

algn_7FF6E34428CF:
align 10h


; Attributes: bp-based frame

sub_7FF6E34428D0 proc near

var_40= qword ptr -40h
var_28= qword ptr -28h
var_20= dword ptr -20h
var_18= word ptr -18h
var_10= qword ptr -10h
var_s0= byte ptr  0

; __unwind { // __GSHandlerCheck_EH
mov     rax, rsp
push    rbp
push    rdi
push    r12
push    r14
push    r15
mov     rbp, rsp
sub     rsp, 60h
mov     [rbp+var_28], 0FFFFFFFFFFFFFFFEh
mov     [rax+10h], rbx
mov     [rax+18h], rsi
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+var_10], rax
mov     rbx, rcx
movsx   edx, byte ptr [rcx+39h]
mov     edi, 78h ; 'x'
cmp     edx, 64h ; 'd'
jg      short loc_7FF6E344297B
jz      loc_7FF6E34429A2
cmp     edx, 53h ; 'S'
jg      short loc_7FF6E3442949
jz      loc_7FF6E34429E5
sub     edx, 41h ; 'A'
jz      short loc_7FF6E344293F
sub     edx, 2
jz      short loc_7FF6E3442965
sub     edx, 2
jz      short loc_7FF6E344293F
sub     edx, 1
jz      short loc_7FF6E344293F
cmp     edx, 1
jnz     loc_7FF6E3442A05

loc_7FF6E344293F:
call    sub_7FF6E3442DBC
jmp     loc_7FF6E3442A01

loc_7FF6E3442949:
cmp     edx, 58h ; 'X'
jz      loc_7FF6E34429FA
cmp     edx, 5Ah ; 'Z'
jz      short loc_7FF6E3442971
cmp     edx, 61h ; 'a'
jz      short loc_7FF6E344293F
cmp     edx, 63h ; 'c'
jnz     loc_7FF6E3442A05

loc_7FF6E3442965:
xor     edx, edx
call    unknown_libname_77 ; Microsoft VisualC 64bit universal runtime
jmp     loc_7FF6E3442A01

loc_7FF6E3442971:       ; Microsoft VisualC 64bit universal runtime
call    unknown_libname_76
jmp     loc_7FF6E3442A01

loc_7FF6E344297B:
cmp     edx, 6Fh ; 'o'
jg      short loc_7FF6E34429CE
jz      short loc_7FF6E34429AF
sub     edx, 65h ; 'e'
jz      short loc_7FF6E344293F
sub     edx, 1
jz      short loc_7FF6E344293F
sub     edx, 1
jz      short loc_7FF6E344293F
sub     edx, 2
jz      short loc_7FF6E34429A2
cmp     edx, 5
jnz     short loc_7FF6E3442A05
call    unknown_libname_78 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E3442A01

loc_7FF6E34429A2:
or      dword ptr [rcx+28h], 10h

loc_7FF6E34429A6:
xor     edx, edx
call    sub_7FF6E3441B98
jmp     short loc_7FF6E3442A01

loc_7FF6E34429AF:
mov     ecx, [rcx+28h]
mov     eax, ecx
shr     eax, 5
test    al, 1
jz      short loc_7FF6E34429C2
bts     ecx, 7
mov     [rbx+28h], ecx

loc_7FF6E34429C2:
xor     edx, edx
mov     rcx, rbx
call    sub_7FF6E3441994
jmp     short loc_7FF6E3442A01

loc_7FF6E34429CE:
cmp     edx, 70h ; 'p'
jz      short loc_7FF6E34429EC
cmp     edx, 73h ; 's'
jz      short loc_7FF6E34429E5
cmp     edx, 75h ; 'u'
jz      short loc_7FF6E34429A6
cmp     edx, edi
jnz     short loc_7FF6E3442A05
xor     edx, edx
jmp     short loc_7FF6E34429FC

loc_7FF6E34429E5:       ; Microsoft VisualC 64bit universal runtime
call    unknown_libname_79
jmp     short loc_7FF6E3442A01

loc_7FF6E34429EC:
mov     dword ptr [rcx+30h], 10h
mov     dword ptr [rcx+34h], 0Bh

loc_7FF6E34429FA:
mov     dl, 1

loc_7FF6E34429FC:
call    sub_7FF6E3441D9C

loc_7FF6E3442A01:
test    al, al
jnz     short loc_7FF6E3442A0C

loc_7FF6E3442A05:
xor     al, al
jmp     loc_7FF6E3442D18

loc_7FF6E3442A0C:
cmp     byte ptr [rbx+38h], 0
jnz     loc_7FF6E3442D16
xor     eax, eax
mov     word ptr [rbp+var_20], ax
mov     byte ptr [rbp+var_20+2], al
xor     r8d, r8d
mov     edx, [rbx+28h]
mov     eax, edx
shr     eax, 4
test    al, 1
jz      short loc_7FF6E3442A5B
mov     eax, edx
shr     eax, 6
test    al, 1
jz      short loc_7FF6E3442A3D
mov     byte ptr [rbp+var_20], 2Dh ; '-'
jmp     short loc_7FF6E3442A55

loc_7FF6E3442A3D:
test    byte ptr [rbx+28h], 1
jz      short loc_7FF6E3442A49
mov     byte ptr [rbp+var_20], 2Bh ; '+'
jmp     short loc_7FF6E3442A55

loc_7FF6E3442A49:
mov     eax, edx
shr     eax, 1
test    al, 1
jz      short loc_7FF6E3442A5B
mov     byte ptr [rbp+var_20], 20h ; ' '

loc_7FF6E3442A55:
mov     r8d, 1

loc_7FF6E3442A5B:
mov     cl, [rbx+39h]
lea     eax, [rcx-58h]
test    al, 0DFh
jnz     short loc_7FF6E3442A73
mov     eax, edx
shr     eax, 5
test    al, 1
jz      short loc_7FF6E3442A73
mov     r9b, 1
jmp     short loc_7FF6E3442A76

loc_7FF6E3442A73:
xor     r9b, r9b

loc_7FF6E3442A76:
lea     eax, [rcx-41h]
test    al, 0DFh
setz    al
test    r9b, r9b
jnz     short loc_7FF6E3442A87
test    al, al
jz      short loc_7FF6E3442AA3

loc_7FF6E3442A87:
mov     byte ptr [rbp+r8+var_20], 30h ; '0'
cmp     cl, 58h ; 'X'
jz      short loc_7FF6E3442A97
cmp     cl, 41h ; 'A'
jnz     short loc_7FF6E3442A9A

loc_7FF6E3442A97:
mov     dil, 58h ; 'X'

loc_7FF6E3442A9A:
mov     byte ptr [rbp+r8+var_20+1], dil
add     r8, 2

loc_7FF6E3442AA3:
mov     esi, [rbx+2Ch]
sub     esi, r8d
sub     esi, [rbx+48h]
test    dl, 0Ch
jnz     short loc_7FF6E3442B0F
xor     r9d, r9d
test    esi, esi
jle     short loc_7FF6E3442B0F
mov     edx, [rbx+20h]

loc_7FF6E3442ABB:
mov     rcx, [rbx+460h]
mov     rax, [rcx+8]
cmp     [rcx+10h], rax
jnz     short loc_7FF6E3442ADE
cmp     byte ptr [rcx+18h], 0
jz      short loc_7FF6E3442AD6
inc     edx
jmp     short loc_7FF6E3442AD9

loc_7FF6E3442AD6:
or      edx, 0FFFFFFFFh

loc_7FF6E3442AD9:
mov     [rbx+20h], edx
jmp     short loc_7FF6E3442AFF

loc_7FF6E3442ADE:
lea     eax, [rdx+1]
mov     [rbx+20h], eax
inc     qword ptr [rcx+10h]
mov     rax, [rbx+460h]
mov     rcx, [rax]
mov     byte ptr [rcx], 20h ; ' '
mov     rax, [rbx+460h]
inc     qword ptr [rax]

loc_7FF6E3442AFF:
mov     edx, [rbx+20h]
cmp     edx, 0FFFFFFFFh
jz      short loc_7FF6E3442B0F
inc     r9d
cmp     r9d, esi
jl      short loc_7FF6E3442ABB

loc_7FF6E3442B0F:
lea     r12, [rbx+460h]
lea     rdi, [rbx+20h]
mov     rax, [rbx+8]
mov     [rsp+60h+var_40], rax ; struct __crt_cached_ptd_host *
mov     r9, rdi
lea     rdx, [rbp+var_20]
mov     rcx, r12
call    unknown_libname_80 ; Microsoft VisualC 64bit universal runtime
mov     ecx, [rbx+28h]
mov     eax, ecx
shr     eax, 3
test    al, 1
jz      short loc_7FF6E3442B97
shr     ecx, 2
test    cl, 1
jnz     short loc_7FF6E3442B97
xor     r8d, r8d
test    esi, esi
jle     short loc_7FF6E3442B97
mov     edx, [rdi]

loc_7FF6E3442B4F:
mov     rcx, [r12]
mov     rax, [rcx+8]
cmp     [rcx+10h], rax
jnz     short loc_7FF6E3442B6E
cmp     byte ptr [rcx+18h], 0
jz      short loc_7FF6E3442B67
inc     edx
jmp     short loc_7FF6E3442B6A

loc_7FF6E3442B67:
or      edx, 0FFFFFFFFh

loc_7FF6E3442B6A:
mov     [rdi], edx
jmp     short loc_7FF6E3442B88

loc_7FF6E3442B6E:
lea     eax, [rdx+1]
mov     [rdi], eax
inc     qword ptr [rcx+10h]
mov     rax, [r12]
mov     rcx, [rax]
mov     byte ptr [rcx], 30h ; '0'
mov     rax, [r12]
inc     qword ptr [rax]

loc_7FF6E3442B88:
mov     edx, [rdi]
cmp     edx, 0FFFFFFFFh
jz      short loc_7FF6E3442B97
inc     r8d
cmp     r8d, esi
jl      short loc_7FF6E3442B4F

loc_7FF6E3442B97:
cmp     byte ptr [rbx+4Ch], 0
jz      loc_7FF6E3442C87
cmp     dword ptr [rbx+48h], 0
jle     loc_7FF6E3442C87
mov     r15, [rbx+8]
cmp     byte ptr [r15+28h], 0
jnz     short loc_7FF6E3442BBE
mov     rcx, r15        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)

loc_7FF6E3442BBE:
mov     r14, [rbx+40h]
mov     ecx, [rbx+48h]
mov     rax, [r15+18h]
xor     r15d, r15d
cmp     dword ptr [rax+0Ch], 0FDE9h
jnz     short loc_7FF6E3442C2B
and     qword ptr [rbp+var_18], r15
test    ecx, ecx
jz      loc_7FF6E3442CA4

loc_7FF6E3442BE1:       ; char *
movzx   edx, word ptr [r14]
lea     r14, [r14+2]
mov     r9, [rbx+8]     ; struct _Mbstatet *
lea     r8, [rbp+var_18] ; char16_t
lea     rcx, [rbp+var_20] ; this

loc_7FF6E3442BF5:
;   try {
call    ?__c16rtomb_utf8@__crt_mbstring@@YA_KPEAD_SPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z ; __crt_mbstring::__c16rtomb_utf8(char *,char16_t,_Mbstatet *,__crt_cached_ptd_host &)
mov     r8, rax
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E3442C26
mov     rax, [rbx+8]
mov     [rsp+60h+var_40], rax
mov     r9, rdi
lea     rdx, [rbp+var_20]
mov     rcx, r12
call    unknown_libname_80 ; Microsoft VisualC 64bit universal runtime
inc     r15d
cmp     r15d, [rbx+48h]
jnz     short loc_7FF6E3442BE1
jmp     short loc_7FF6E3442CA4

loc_7FF6E3442C26:
or      dword ptr [rdi], 0FFFFFFFFh
jmp     short loc_7FF6E3442CA4

loc_7FF6E3442C2B:
test    ecx, ecx
jz      short loc_7FF6E3442CA4

loc_7FF6E3442C2F:
and     [rbp+var_20], 0
movzx   r9d, word ptr [r14]
lea     r14, [r14+2]
mov     rax, [rbx+8]
mov     [rsp+60h+var_40], rax
mov     r8d, 6
lea     rdx, [rbp+var_18]
lea     rcx, [rbp+var_20]
call    _wctomb_internal
test    eax, eax
jnz     short loc_7FF6E3442C26
mov     r8d, [rbp+var_20]
test    r8d, r8d
jz      short loc_7FF6E3442C26
mov     rax, [rbx+8]
mov     [rsp+60h+var_40], rax
mov     r9, rdi
lea     rdx, [rbp+var_18]
mov     rcx, r12
call    unknown_libname_80 ; Microsoft VisualC 64bit universal runtime
inc     r15d
cmp     r15d, [rbx+48h]
jnz     short loc_7FF6E3442C2F
jmp     short loc_7FF6E3442CA4

loc_7FF6E3442C87:
mov     rax, [rbx+8]
mov     [rsp+60h+var_40], rax
mov     r9, rdi
mov     r8d, [rbx+48h]
mov     rdx, [rbx+40h]
mov     rcx, r12
call    unknown_libname_80 ; Microsoft VisualC 64bit universal runtime
nop

loc_7FF6E3442CA4:
mov     ecx, [rbx+20h]
test    ecx, ecx
js      short loc_7FF6E3442D16
mov     eax, [rbx+28h]
shr     eax, 2
test    al, 1
jz      short loc_7FF6E3442D16
lea     r8, [rbx+20h]
xor     r9d, r9d
test    esi, esi
jle     short loc_7FF6E3442D16

loc_7FF6E3442CC0:
mov     rdx, [rbx+460h]
mov     rax, [rdx+8]
cmp     [rdx+10h], rax
jnz     short loc_7FF6E3442CE5
mov     rax, r8
cmp     byte ptr [rdx+18h], 0
jz      short loc_7FF6E3442CDE
inc     ecx
jmp     short loc_7FF6E3442CE1

loc_7FF6E3442CDE:
or      ecx, 0FFFFFFFFh

loc_7FF6E3442CE1:
mov     [rax], ecx
jmp     short loc_7FF6E3442D06

loc_7FF6E3442CE5:
lea     eax, [rcx+1]
mov     [r8], eax
inc     qword ptr [rdx+10h]
mov     rax, [rbx+460h]
mov     rcx, [rax]
mov     byte ptr [rcx], 20h ; ' '
mov     rax, [rbx+460h]
inc     qword ptr [rax]

loc_7FF6E3442D06:
mov     ecx, [r8]
cmp     ecx, 0FFFFFFFFh
jz      short loc_7FF6E3442D16
inc     r9d
cmp     r9d, esi
jl      short loc_7FF6E3442CC0

loc_7FF6E3442D16:
mov     al, 1

loc_7FF6E3442D18:
mov     rcx, [rbp+var_10]
xor     rcx, rsp        ; StackCookie
;   } // starts at 7FF6E3442BF5

loc_7FF6E3442D1F:
call    __security_check_cookie
lea     r11, [rsp+60h+var_s0]
mov     rbx, [r11+38h]
mov     rsi, [r11+40h]
mov     rsp, r11
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rbp
retn
; } // starts at 7FF6E34428D0
sub_7FF6E34428D0 endp

algn_7FF6E3442D3D:
align 20h
; [0000007C BYTES: COLLAPSED FUNCTION unknown_libname_76]



sub_7FF6E3442DBC proc near

var_38= qword ptr -38h
var_30= dword ptr -30h
var_28= dword ptr -28h
var_20= qword ptr -20h
var_18= dword ptr -18h
var_10= qword ptr -10h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 50h
or      dword ptr [rcx+28h], 10h
mov     rbx, rcx
mov     eax, [rcx+30h]
test    eax, eax
jns     short loc_7FF6E3442DEF
mov     al, [rcx+39h]
sub     al, 41h ; 'A'
and     al, 0DFh
neg     al
sbb     eax, eax
and     eax, 0FFFFFFF9h
add     eax, 0Dh
mov     [rcx+30h], eax
jmp     short loc_7FF6E3442E09

loc_7FF6E3442DEF:
jnz     short loc_7FF6E3442E09
cmp     byte ptr [rcx+39h], 67h ; 'g'
jz      short loc_7FF6E3442DFD
cmp     byte ptr [rcx+39h], 47h ; 'G'
jnz     short loc_7FF6E3442E09

loc_7FF6E3442DFD:
mov     dword ptr [rcx+30h], 1
mov     eax, 1

loc_7FF6E3442E09:
mov     r8, [rcx+8]
lea     rdi, [rcx+50h]
add     eax, 15Dh
mov     rcx, rdi
movsxd  rdx, eax
call    ??$ensure_buffer_is_big_enough@D@formatting_buffer@__crt_stdio_output@@QEAA_N_KAEAV__crt_cached_ptd_host@@@Z ; __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned __int64,__crt_cached_ptd_host &)
lea     rdx, [rbx+458h]
mov     r10d, 200h
test    al, al
jnz     short loc_7FF6E3442E58
cmp     qword ptr [rdx], 0
jnz     short loc_7FF6E3442E3D
mov     eax, r10d
jmp     short loc_7FF6E3442E47

loc_7FF6E3442E3D:
mov     rax, [rbx+450h]
shr     rax, 1

loc_7FF6E3442E47:
lea     r8d, [rax-15Dh]
mov     [rbx+30h], r8d
lea     r9, [rbx+50h]
jmp     short loc_7FF6E3442E5F

loc_7FF6E3442E58:
mov     r8d, [rbx+30h]
mov     r9, rdi

loc_7FF6E3442E5F:
mov     rax, [rdi+408h]
test    rax, rax
cmovz   rax, rdi
mov     [rbx+40h], rax
xor     eax, eax
mov     rcx, [rbx+18h]
mov     [rsp+58h+arg_0], rax
lea     rax, [rcx+8]
mov     [rbx+18h], rax
mov     rdx, [rdx]
movsd   xmm0, qword ptr [rcx]
mov     r11, [rbx+8]
mov     rdi, [rbx]
movsx   esi, byte ptr [rbx+39h]
movsd   [rsp+58h+arg_0], xmm0
test    rdx, rdx
jnz     short loc_7FF6E3442EAD
add     r9, r10
lea     rdx, [rbx+50h]
mov     rcx, r10
jmp     short loc_7FF6E3442ECE

loc_7FF6E3442EAD:
mov     r9, [r9+400h]
mov     rcx, [rbx+450h]
mov     r10, [rbx+450h]
shr     r9, 1
add     r9, rdx
shr     rcx, 1
shr     r10, 1

loc_7FF6E3442ECE:
mov     [rsp+58h+var_10], r11
mov     [rsp+58h+var_18], 1
mov     [rsp+58h+var_20], rdi
mov     [rsp+58h+var_28], r8d
mov     r8, r10
mov     [rsp+58h+var_30], esi
mov     [rsp+58h+var_38], rcx
lea     rcx, [rsp+58h+arg_0]
call    __acrt_fp_format
mov     eax, [rbx+28h]
shr     eax, 5
test    al, 1
jz      loc_7FF6E3442F8C
cmp     dword ptr [rbx+30h], 0
jnz     short loc_7FF6E3442F8C
mov     rdi, [rbx+8]
cmp     byte ptr [rdi+28h], 0
jnz     short loc_7FF6E3442F21
mov     rcx, rdi        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)

loc_7FF6E3442F21:
mov     r9, [rbx+40h]
mov     r10, [rdi+18h]
movzx   r8d, byte ptr [r9]
mov     rax, [r10+110h]
cmp     byte ptr [r8+rax], 65h ; 'e'
jz      short loc_7FF6E3442F4C
mov     rax, [r10]

loc_7FF6E3442F3E:
inc     r9
movzx   r8d, byte ptr [r9]
test    byte ptr [rax+r8*2], 4
jnz     short loc_7FF6E3442F3E

loc_7FF6E3442F4C:
mov     rax, [r10+110h]
movzx   ecx, r8b
cmp     byte ptr [rcx+rax], 78h ; 'x'
jnz     short loc_7FF6E3442F61
mov     r8b, [r9+2]

loc_7FF6E3442F61:
mov     rax, [r10+0F8h]
lea     rdx, [r9+2]
cmovnz  rdx, r9
mov     rcx, [rax]
mov     al, [rcx]
mov     [rdx], al
inc     rdx

loc_7FF6E3442F7A:
mov     al, [rdx]
mov     cl, r8b
mov     [rdx], r8b
inc     rdx
mov     r8b, al
test    cl, cl
jnz     short loc_7FF6E3442F7A

loc_7FF6E3442F8C:
mov     al, [rbx+39h]
sub     al, 47h ; 'G'
test    al, 0DFh
jnz     short loc_7FF6E3442FBE
mov     eax, [rbx+28h]
shr     eax, 5
test    al, 1
jnz     short loc_7FF6E3442FBE
mov     rdi, [rbx+8]
cmp     byte ptr [rdi+28h], 0
jnz     short loc_7FF6E3442FB1
mov     rcx, rdi        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)

loc_7FF6E3442FB1:       ; this
mov     rcx, [rbx+40h]
lea     rdx, [rdi+18h]  ; char *
call    ?crop_zeroes@__crt_stdio_output@@YAXPEADQEAU__crt_locale_pointers@@@Z ; __crt_stdio_output::crop_zeroes(char *,__crt_locale_pointers * const)

loc_7FF6E3442FBE:
mov     rcx, [rbx+40h]
mov     al, [rcx]
cmp     al, 2Dh ; '-'
jnz     short loc_7FF6E3442FD5
or      dword ptr [rbx+28h], 40h
inc     rcx
mov     [rbx+40h], rcx
mov     al, [rcx]

loc_7FF6E3442FD5:
sub     al, 49h ; 'I'
cmp     al, 25h ; '%'
ja      short loc_7FF6E3442FF3
mov     rdx, 2100000021h
bt      rdx, rax
jnb     short loc_7FF6E3442FF3
and     dword ptr [rbx+28h], 0FFFFFFF7h
mov     byte ptr [rbx+39h], 73h ; 's'

loc_7FF6E3442FF3:
or      rdx, 0FFFFFFFFFFFFFFFFh

loc_7FF6E3442FF7:
inc     rdx
cmp     byte ptr [rcx+rdx], 0
jnz     short loc_7FF6E3442FF7
mov     rsi, [rsp+58h+arg_10]
mov     al, 1
mov     [rbx+48h], edx
mov     rbx, [rsp+58h+arg_8]
add     rsp, 50h
pop     rdi
retn
sub_7FF6E3442DBC endp

algn_7FF6E3443015:
align 8
; [000000D2 BYTES: COLLAPSED FUNCTION unknown_libname_77]
algn_7FF6E34430EA:
align 4
; [000000B6 BYTES: COLLAPSED FUNCTION unknown_libname_78]
algn_7FF6E34431A2:
align 4
; [00000099 BYTES: COLLAPSED FUNCTION unknown_libname_79]
algn_7FF6E344323D:
align 20h
; [00000076 BYTES: COLLAPSED FUNCTION __crt_cached_ptd_host::update_locale_slow(void)]
algn_7FF6E34432B6:
align 8
; [000000A3 BYTES: COLLAPSED FUNCTION unknown_libname_80]
algn_7FF6E344335B:
align 4
; [00000111 BYTES: COLLAPSED FUNCTION __stdio_common_vsprintf_s]
algn_7FF6E344346D:
align 10h



sub_7FF6E3443470 proc near

var_38= xmmword ptr -38h
var_28= xmmword ptr -28h
var_18= qword ptr -18h

; __unwind { // __GSHandlerCheck
sub     rsp, 38h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+38h+var_18], rax
xorps   xmm0, xmm0
mov     r9, rcx
movups  [rsp+38h+var_38], xmm0
xor     r8d, r8d
movups  [rsp+38h+var_28], xmm0
jmp     short loc_7FF6E34434A4

loc_7FF6E3443497:
movzx   eax, al
lea     rcx, [rsp+38h+var_38]
bts     [rcx], eax
inc     rdx

loc_7FF6E34434A4:
mov     al, [rdx]
test    al, al
jnz     short loc_7FF6E3443497
movzx   ecx, byte ptr [r9]
or      byte ptr [rsp+38h+var_38], 1
mov     eax, ecx
shr     rax, 3
and     cl, 7
mov     al, byte ptr [rsp+rax+38h+var_38]
shr     al, cl
test    al, 1
jnz     short loc_7FF6E34434E1

loc_7FF6E34434C4:
inc     r9
inc     r8d
movzx   ecx, byte ptr [r9]
mov     eax, ecx
and     cl, 7
shr     rax, 3
mov     dl, byte ptr [rsp+rax+38h+var_38]
shr     dl, cl
test    dl, 1
jz      short loc_7FF6E34434C4

loc_7FF6E34434E1:
movsxd  rax, r8d
mov     rcx, [rsp+38h+var_18]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 38h
retn
; } // starts at 7FF6E3443470
sub_7FF6E3443470 endp

algn_7FF6E34434F6:
align 20h



sub_7FF6E3443500 proc near

arg_0= qword ptr  8
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     [rsp+arg_10], rbp
mov     [rsp+arg_18], rsi
push    rdi
sub     rsp, 20h
mov     r11, rdx
lea     rbp, cs:7FF6E3430000h
and     r11d, 0Fh
mov     rsi, rdx
sub     rsi, r11
xor     r9d, r9d
mov     rdi, rdx
mov     r8, rcx
xorps   xmm3, xmm3
lea     rax, [r11-1]    ; switch 15 cases
movdqu  xmm1, xmmword ptr [rsi]
cmp     rax, 0Eh
ja      short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case
mov     eax, ss:(jpt_7FF6E3443547 - 7FF6E3430000h)[rbp+rax*4]
add     rax, rbp
jmp     rax             ; switch jump

loc_7FF6E3443549:       ; jumptable 00007FF6E3443547 case 1
psrldq  xmm1, 1
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443550:       ; jumptable 00007FF6E3443547 case 2
psrldq  xmm1, 2
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443557:       ; jumptable 00007FF6E3443547 case 3
psrldq  xmm1, 3
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E344355E:       ; jumptable 00007FF6E3443547 case 4
psrldq  xmm1, 4
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443565:       ; jumptable 00007FF6E3443547 case 5
psrldq  xmm1, 5
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E344356C:       ; jumptable 00007FF6E3443547 case 6
psrldq  xmm1, 6
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443573:       ; jumptable 00007FF6E3443547 case 7
psrldq  xmm1, 7
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E344357A:       ; jumptable 00007FF6E3443547 case 8
psrldq  xmm1, 8
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443581:       ; jumptable 00007FF6E3443547 case 9
psrldq  xmm1, 9
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443588:       ; jumptable 00007FF6E3443547 case 10
psrldq  xmm1, 0Ah
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E344358F:       ; jumptable 00007FF6E3443547 case 11
psrldq  xmm1, 0Bh
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E3443596:       ; jumptable 00007FF6E3443547 case 12
psrldq  xmm1, 0Ch
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E344359D:       ; jumptable 00007FF6E3443547 case 13
psrldq  xmm1, 0Dh
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E34435A4:       ; jumptable 00007FF6E3443547 case 14
psrldq  xmm1, 0Eh
jmp     short def_7FF6E3443547 ; jumptable 00007FF6E3443547 default case

loc_7FF6E34435AB:       ; jumptable 00007FF6E3443547 case 15
psrldq  xmm1, 0Fh

def_7FF6E3443547:       ; jumptable 00007FF6E3443547 default case
xorps   xmm0, xmm0
mov     r10d, 0Fh
pcmpeqb xmm0, xmm1
pmovmskb eax, xmm0
test    eax, eax
jz      loc_7FF6E3443708
bsf     edx, eax

loc_7FF6E34435CC:
mov     [rsp+28h+arg_0], rbx
test    r11, r11
jnz     short loc_7FF6E34435DC
lea     ebx, [r10-0Eh]
jmp     short loc_7FF6E34435EF

loc_7FF6E34435DC:
mov     ecx, 10h
mov     eax, edx
sub     rcx, r11
mov     ebx, r9d
cmp     rax, rcx
setb    bl

loc_7FF6E34435EF:
mov     eax, r10d
sub     eax, edx
cmp     eax, r10d
ja      loc_7FF6E34436CC
mov     ecx, ss:(jpt_7FF6E3443607 - 7FF6E3430000h)[rbp+rax*4] ; switch 16 cases
add     rcx, rbp
jmp     rcx             ; switch jump

loc_7FF6E3443609:       ; jumptable 00007FF6E3443607 case 0
pslldq  xmm1, 1
psrldq  xmm1, 1
jmp     loc_7FF6E34436CC

loc_7FF6E3443618:       ; jumptable 00007FF6E3443607 case 1
pslldq  xmm1, 2
psrldq  xmm1, 2
jmp     loc_7FF6E34436CC

loc_7FF6E3443627:       ; jumptable 00007FF6E3443607 case 2
pslldq  xmm1, 3
psrldq  xmm1, 3
jmp     loc_7FF6E34436CC

loc_7FF6E3443636:       ; jumptable 00007FF6E3443607 case 3
pslldq  xmm1, 4
psrldq  xmm1, 4
jmp     loc_7FF6E34436CC

loc_7FF6E3443645:       ; jumptable 00007FF6E3443607 case 4
pslldq  xmm1, 5
psrldq  xmm1, 5
jmp     short loc_7FF6E34436CC

loc_7FF6E3443651:       ; jumptable 00007FF6E3443607 case 5
pslldq  xmm1, 6
psrldq  xmm1, 6
jmp     short loc_7FF6E34436CC

loc_7FF6E344365D:       ; jumptable 00007FF6E3443607 case 6
pslldq  xmm1, 7
psrldq  xmm1, 7
jmp     short loc_7FF6E34436CC

loc_7FF6E3443669:       ; jumptable 00007FF6E3443607 case 7
pslldq  xmm1, 8
psrldq  xmm1, 8
jmp     short loc_7FF6E34436CC

loc_7FF6E3443675:       ; jumptable 00007FF6E3443607 case 8
pslldq  xmm1, 9
psrldq  xmm1, 9
jmp     short loc_7FF6E34436CC

loc_7FF6E3443681:       ; jumptable 00007FF6E3443607 case 9
pslldq  xmm1, 0Ah
psrldq  xmm1, 0Ah
jmp     short loc_7FF6E34436CC

loc_7FF6E344368D:       ; jumptable 00007FF6E3443607 case 10
pslldq  xmm1, 0Bh
psrldq  xmm1, 0Bh
jmp     short loc_7FF6E34436CC

loc_7FF6E3443699:       ; jumptable 00007FF6E3443607 case 11
pslldq  xmm1, 0Ch
psrldq  xmm1, 0Ch
jmp     short loc_7FF6E34436CC

loc_7FF6E34436A5:       ; jumptable 00007FF6E3443607 case 12
pslldq  xmm1, 0Dh
psrldq  xmm1, 0Dh
jmp     short loc_7FF6E34436CC

loc_7FF6E34436B1:       ; jumptable 00007FF6E3443607 case 13
pslldq  xmm1, 0Eh
psrldq  xmm1, 0Eh
jmp     short loc_7FF6E34436CC

loc_7FF6E34436BD:       ; jumptable 00007FF6E3443607 case 14
pslldq  xmm1, 0Fh
psrldq  xmm1, 0Fh
jmp     short loc_7FF6E34436CC

loc_7FF6E34436C9:       ; jumptable 00007FF6E3443607 case 15
xorps   xmm1, xmm1

loc_7FF6E34436CC:
test    ebx, ebx
mov     rbx, [rsp+28h+arg_0]
jnz     loc_7FF6E34437C2

loc_7FF6E34436D9:
movdqu  xmm2, xmmword ptr [rsi+10h]
movdqa  xmm0, xmm2
pcmpeqb xmm0, xmm3
pmovmskb eax, xmm0
test    eax, eax
jnz     short loc_7FF6E344372B

loc_7FF6E34436EE:
mov     rdx, rdi
mov     rcx, r8
mov     rbp, [rsp+28h+arg_10]
mov     rsi, [rsp+28h+arg_18]
add     rsp, 20h
pop     rdi
jmp     sub_7FF6E3443470

loc_7FF6E3443708:
test    r11, r11
jnz     short loc_7FF6E34436D9
cmp     [rsi+1], r9b
jz      loc_7FF6E34437C2
mov     rbp, [rsp+28h+arg_10]
mov     rsi, [rsp+28h+arg_18]
add     rsp, 20h
pop     rdi
jmp     sub_7FF6E3443470

loc_7FF6E344372B:
bsf     ecx, eax
mov     eax, ecx
sub     rax, r11
add     rax, 10h
cmp     rax, 10h
ja      short loc_7FF6E34436EE
sub     r10d, ecx
cmp     r10d, 0Fh       ; switch 16 cases
ja      short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case
mov     ecx, ss:(jpt_7FF6E3443751 - 7FF6E3430000h)[rbp+r10*4]
add     rcx, rbp
jmp     rcx             ; switch jump

loc_7FF6E3443753:       ; jumptable 00007FF6E3443751 case 0
pslldq  xmm2, 1
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E344375A:       ; jumptable 00007FF6E3443751 case 1
pslldq  xmm2, 2
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E3443761:       ; jumptable 00007FF6E3443751 case 2
pslldq  xmm2, 3
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E3443768:       ; jumptable 00007FF6E3443751 case 3
pslldq  xmm2, 4
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E344376F:       ; jumptable 00007FF6E3443751 case 4
pslldq  xmm2, 5
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E3443776:       ; jumptable 00007FF6E3443751 case 5
pslldq  xmm2, 6
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E344377D:       ; jumptable 00007FF6E3443751 case 6
pslldq  xmm2, 7
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E3443784:       ; jumptable 00007FF6E3443751 case 7
pslldq  xmm2, 8
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E344378B:       ; jumptable 00007FF6E3443751 case 8
pslldq  xmm2, 9
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E3443792:       ; jumptable 00007FF6E3443751 case 9
pslldq  xmm2, 0Ah
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E3443799:       ; jumptable 00007FF6E3443751 case 10
pslldq  xmm2, 0Bh
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E34437A0:       ; jumptable 00007FF6E3443751 case 11
pslldq  xmm2, 0Ch
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E34437A7:       ; jumptable 00007FF6E3443751 case 12
pslldq  xmm2, 0Dh
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E34437AE:       ; jumptable 00007FF6E3443751 case 13
pslldq  xmm2, 0Eh
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E34437B5:       ; jumptable 00007FF6E3443751 case 14
pslldq  xmm2, 0Fh
jmp     short def_7FF6E3443751 ; jumptable 00007FF6E3443751 default case

loc_7FF6E34437BC:       ; jumptable 00007FF6E3443751 case 15
xorps   xmm2, xmm2

def_7FF6E3443751:       ; jumptable 00007FF6E3443751 default case
orps    xmm1, xmm2

loc_7FF6E34437C2:
movzx   eax, byte ptr [r8]
test    al, al
jz      short loc_7FF6E34437FF
nop     word ptr [rax+rax+00h]

loc_7FF6E34437D0:
movsx   eax, al
movd    xmm0, eax
punpcklbw xmm0, xmm0
punpcklbw xmm0, xmm0
pshufd  xmm0, xmm0, 0
pcmpeqb xmm0, xmm1
pmovmskb ecx, xmm0
test    ecx, ecx
jnz     short loc_7FF6E34437FF
movzx   eax, byte ptr [r8+1]
inc     r8
inc     r9
test    al, al
jnz     short loc_7FF6E34437D0

loc_7FF6E34437FF:
mov     rbp, [rsp+28h+arg_10]
mov     rax, r9
mov     rsi, [rsp+28h+arg_18]
add     rsp, 20h
pop     rdi
retn
align 4
jpt_7FF6E3443547 dd offset loc_7FF6E3443549 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E3443550 - 7FF6E3430000h
dd offset loc_7FF6E3443557 - 7FF6E3430000h
dd offset loc_7FF6E344355E - 7FF6E3430000h
dd offset loc_7FF6E3443565 - 7FF6E3430000h
dd offset loc_7FF6E344356C - 7FF6E3430000h
dd offset loc_7FF6E3443573 - 7FF6E3430000h
dd offset loc_7FF6E344357A - 7FF6E3430000h
dd offset loc_7FF6E3443581 - 7FF6E3430000h
dd offset loc_7FF6E3443588 - 7FF6E3430000h
dd offset loc_7FF6E344358F - 7FF6E3430000h
dd offset loc_7FF6E3443596 - 7FF6E3430000h
dd offset loc_7FF6E344359D - 7FF6E3430000h
dd offset loc_7FF6E34435A4 - 7FF6E3430000h
dd offset loc_7FF6E34435AB - 7FF6E3430000h
jpt_7FF6E3443607 dd offset loc_7FF6E3443609 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E3443618 - 7FF6E3430000h
dd offset loc_7FF6E3443627 - 7FF6E3430000h
dd offset loc_7FF6E3443636 - 7FF6E3430000h
dd offset loc_7FF6E3443645 - 7FF6E3430000h
dd offset loc_7FF6E3443651 - 7FF6E3430000h
dd offset loc_7FF6E344365D - 7FF6E3430000h
dd offset loc_7FF6E3443669 - 7FF6E3430000h
dd offset loc_7FF6E3443675 - 7FF6E3430000h
dd offset loc_7FF6E3443681 - 7FF6E3430000h
dd offset loc_7FF6E344368D - 7FF6E3430000h
dd offset loc_7FF6E3443699 - 7FF6E3430000h
dd offset loc_7FF6E34436A5 - 7FF6E3430000h
dd offset loc_7FF6E34436B1 - 7FF6E3430000h
dd offset loc_7FF6E34436BD - 7FF6E3430000h
dd offset loc_7FF6E34436C9 - 7FF6E3430000h
jpt_7FF6E3443751 dd offset loc_7FF6E3443753 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E344375A - 7FF6E3430000h
dd offset loc_7FF6E3443761 - 7FF6E3430000h
dd offset loc_7FF6E3443768 - 7FF6E3430000h
dd offset loc_7FF6E344376F - 7FF6E3430000h
dd offset loc_7FF6E3443776 - 7FF6E3430000h
dd offset loc_7FF6E344377D - 7FF6E3430000h
dd offset loc_7FF6E3443784 - 7FF6E3430000h
dd offset loc_7FF6E344378B - 7FF6E3430000h
dd offset loc_7FF6E3443792 - 7FF6E3430000h
dd offset loc_7FF6E3443799 - 7FF6E3430000h
dd offset loc_7FF6E34437A0 - 7FF6E3430000h
dd offset loc_7FF6E34437A7 - 7FF6E3430000h
dd offset loc_7FF6E34437AE - 7FF6E3430000h
dd offset loc_7FF6E34437B5 - 7FF6E3430000h
dd offset loc_7FF6E34437BC - 7FF6E3430000h
sub_7FF6E3443500 endp

; [00000033 BYTES: COLLAPSED FUNCTION localeconv]
algn_7FF6E3443903:
align 4
; [00000048 BYTES: COLLAPSED FUNCTION __vcrt_initialize_locks_0]
; [00000019 BYTES: COLLAPSED FUNCTION __vcrt_lock]
align 8
; [00000037 BYTES: COLLAPSED FUNCTION __vcrt_uninitialize_locks_0]
algn_7FF6E344399F:
align 20h
; [00000019 BYTES: COLLAPSED FUNCTION __vcrt_unlock]
align 4
; [0000001B BYTES: COLLAPSED FUNCTION _lock_locales]
algn_7FF6E34439D7:
align 8
; [0000000E BYTES: COLLAPSED FUNCTION _Init_thread_unlock]
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j__malloc_base]
align 8
; [0000003D BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<char *>::operator()<_lambda_9bd929c17696992ce54f1d748594fc62_,_lambda_082c17da81b0962e08c0587ee0fac50c_ &,_lambda_9c08ac857f4975304d44e9f601d9b878_>(_lambda_9bd929c17696992ce54f1d748594fc62_ &&,_lambda_082c17da81b0962e08c0587ee0fac50c_ &,_lambda_9c08ac857f4975304d44e9f601d9b878_ &&)]
algn_7FF6E3443A35:
align 8


; Attributes: bp-based frame

sub_7FF6E3443A38 proc near

Reserved= qword ptr -20h
Locale= qword ptr -18h
var_10= __crt_locale_pointers ptr -10h
var_s0= byte ptr  0
Count= qword ptr  30h
PtNumOfCharConverted= qword ptr  38h
arg_10= qword ptr  40h
arg_18= qword ptr  48h

mov     [rsp-28h+arg_10], rbx
mov     [rsp-28h+arg_18], rsi
push    rbp
push    rdi
push    r13
push    r14
push    r15
mov     rbp, rsp
sub     rsp, 40h
mov     rax, [rcx+8]
xor     edx, edx        ; DstBuf
mov     rdi, rcx
mov     rsi, [rax]
mov     rax, [rcx]
mov     r14d, [rax]
test    rsi, rsi
jnz     short loc_7FF6E3443A78
mov     ecx, r14d       ; Category
call    _wsetlocale
mov     r14, rax
jmp     loc_7FF6E3443B25

loc_7FF6E3443A78:
and     [rbp+Count], 0
lea     rcx, [rbp+Count] ; PtNumOfCharConverted
mov     r9, rsi         ; SrcBuf
mov     [rsp+40h+Reserved], 7FFFFFFFh ; Reserved
xor     r8d, r8d        ; SizeInWords
call    mbstowcs_s
cmp     eax, 16h
jz      loc_7FF6E3443CAB
cmp     eax, 22h ; '"'
jz      loc_7FF6E3443CAB
mov     rcx, [rbp+Count] ; Count
mov     edx, 2          ; Size
call    _calloc_base
xor     ecx, ecx        ; PtNumOfCharConverted
mov     rbx, rax
test    rax, rax
jnz     short loc_7FF6E3443ADF

loc_7FF6E3443ABF:
call    _free_base

loc_7FF6E3443AC4:
xor     eax, eax

loc_7FF6E3443AC6:
lea     r11, [rsp+40h+var_s0]
mov     rbx, [r11+40h]
mov     rsi, [r11+48h]
mov     rsp, r11
pop     r15
pop     r14
pop     r13
pop     rdi
pop     rbp
retn

loc_7FF6E3443ADF:       ; SizeInWords
mov     r8, [rbp+Count]
mov     r9, rsi         ; SrcBuf
or      [rsp+40h+Reserved], 0FFFFFFFFFFFFFFFFh
mov     rdx, rbx        ; DstBuf
call    mbstowcs_s
test    eax, eax
jz      short loc_7FF6E3443B0F
cmp     eax, 16h
jz      loc_7FF6E3443CAB
cmp     eax, 22h ; '"'
jz      loc_7FF6E3443CAB
mov     rcx, rbx
jmp     short loc_7FF6E3443ABF

loc_7FF6E3443B0F:       ; Locale
mov     rdx, rbx
mov     ecx, r14d       ; Category
call    _wsetlocale
mov     rcx, rbx        ; Block
mov     r14, rax
call    _free_base

loc_7FF6E3443B25:
test    r14, r14
jz      short loc_7FF6E3443AC4
call    sub_7FF6E344A7BC
mov     r13, rax
mov     r9, r14         ; Src
xor     r8d, r8d        ; DstSizeInBytes
xor     edx, edx        ; Dst
mov     rcx, [rax+90h]
mov     [rbp+var_10.locinfo], rcx
mov     rcx, [rax+88h]
lea     rax, [rbp+var_10]
and     [rbp+PtNumOfCharConverted], 0
mov     [rbp+var_10.mbcinfo], rcx
lea     rcx, [rbp+PtNumOfCharConverted] ; PtNumOfCharConverted
mov     [rsp+40h+Locale], rax ; Locale
and     [rsp+40h+Reserved], 0
call    _wcstombs_s_l
test    eax, eax
jz      short loc_7FF6E3443B88
cmp     eax, 16h
jz      loc_7FF6E3443CC1
cmp     eax, 22h ; '"'
jz      loc_7FF6E3443CC1
jmp     loc_7FF6E3443AC4

loc_7FF6E3443B88:
mov     rcx, [rbp+PtNumOfCharConverted]
add     rcx, 4          ; Size
call    _malloc_base
mov     rsi, rax
test    rax, rax
jz      loc_7FF6E3443AC4
mov     r8, [rbp+PtNumOfCharConverted] ; DstSizeInBytes
lea     r15, [rax+4]
lea     rax, [rbp+var_10]
mov     r9, r14         ; Src
mov     [rsp+40h+Locale], rax ; Locale
mov     rdx, r15        ; Dst
or      [rsp+40h+Reserved], 0FFFFFFFFFFFFFFFFh
xor     ecx, ecx        ; PtNumOfCharConverted
call    _wcstombs_s_l
test    eax, eax
jz      short loc_7FF6E3443BE3
cmp     eax, 16h
jz      loc_7FF6E3443CC1
cmp     eax, 22h ; '"'
jz      loc_7FF6E3443CC1
mov     rcx, rsi
jmp     loc_7FF6E3443ABF

loc_7FF6E3443BE3:
mov     rax, [rdi]
mov     rbx, [rbp+var_10.locinfo]
movsxd  rcx, dword ptr [rax]
shl     rcx, 5
mov     rdx, [rcx+rbx+30h]
test    rdx, rdx
jz      short loc_7FF6E3443C2B
or      eax, 0FFFFFFFFh
lock xadd [rdx], eax
cmp     eax, 1
jnz     short loc_7FF6E3443C2B
mov     rax, [rdi]
movsxd  rcx, dword ptr [rax]
shl     rcx, 5
mov     rcx, [rcx+rbx+30h] ; Block
call    _free_base
mov     rax, [rdi]
movsxd  rcx, dword ptr [rax]
shl     rcx, 5
and     qword ptr [rcx+rbx+30h], 0

loc_7FF6E3443C2B:
mov     eax, [r13+3A8h]
test    cs:dword_7FF6E346D488, eax
jnz     short loc_7FF6E3443C7E
mov     rax, [rdi]
movsxd  rcx, dword ptr [rax]
shl     rcx, 5
mov     rdx, [rcx+rbx+30h]
test    rdx, rdx
jz      short loc_7FF6E3443C7E
or      eax, 0FFFFFFFFh
lock xadd [rdx], eax
cmp     eax, 1
jnz     short loc_7FF6E3443C7E
mov     rax, [rdi]
movsxd  rcx, dword ptr [rax]
shl     rcx, 5
mov     rcx, [rcx+rbx+30h] ; Block
call    _free_base
mov     rax, [rdi]
movsxd  rcx, dword ptr [rax]
shl     rcx, 5
and     qword ptr [rcx+rbx+30h], 0

loc_7FF6E3443C7E:
mov     ecx, [rbx+10h]
mov     rax, r15
mov     [rsi], ecx
mov     rcx, [rdi]
movsxd  rdx, dword ptr [rcx]
shl     rdx, 5
mov     [rdx+rbx+30h], rsi
mov     rcx, [rdi]
movsxd  rdx, dword ptr [rcx]
inc     rdx
shl     rdx, 5
mov     [rdx+rbx], r15
jmp     loc_7FF6E3443AC6

loc_7FF6E3443CAB:
and     [rsp+40h+Reserved], 0
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
db 0CCh

loc_7FF6E3443CC1:
and     [rsp+40h+Reserved], 0
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
db 0CCh
sub_7FF6E3443A38 endp

algn_7FF6E3443CD7:
align 8
; [0000004C BYTES: COLLAPSED FUNCTION setlocale]
; [0000002F BYTES: COLLAPSED FUNCTION __pctype_func]
algn_7FF6E3443D53:
align 20h
; [000000A6 BYTES: COLLAPSED FUNCTION islower]
algn_7FF6E3443E06:
align 10h
; [000000A6 BYTES: COLLAPSED FUNCTION isupper]
algn_7FF6E3443EB6:
align 8
; [0000002F BYTES: COLLAPSED FUNCTION ___lc_codepage_func]
algn_7FF6E3443EE7:
align 8
; [00000032 BYTES: COLLAPSED FUNCTION ___lc_locale_name_func]
algn_7FF6E3443F1A:
align 4
; [0000002F BYTES: COLLAPSED FUNCTION ___mb_cur_max_func]
algn_7FF6E3443F4B:
align 4



sub_7FF6E3443F4C proc near

lpCharType= qword ptr -98h
var_90= qword ptr -90h
var_88= dword ptr -88h
var_80= dword ptr -80h
var_78= dword ptr -78h
Block= qword ptr -68h
var_60= dword ptr -60h
CPInfo= _cpinfo ptr -48h
var_30= qword ptr -30h
var_28= byte ptr -28h

; __unwind { // __GSHandlerCheck
mov     r11, rsp
mov     [r11+10h], rbx
mov     [r11+18h], rbp
mov     [r11+20h], rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 90h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0B8h+var_30], rax
mov     r8, [rcx+138h]
xor     ebx, ebx
xor     eax, eax
mov     [r11-58h], rcx
mov     [r11-50h], rbx
xorps   xmm0, xmm0
mov     rdi, rcx
mov     r15d, ebx
mov     r14d, ebx
mov     ebp, ebx
mov     r13d, ebx
movups  xmmword ptr [rsp+0B8h+CPInfo.MaxCharSize], xmm0
mov     [r11-38h], eax
test    r8, r8
jz      loc_7FF6E3444513
lea     r12, [rcx+0Ch]
mov     [rsp+0B8h+Block], rbx
lea     esi, [rbx+1]
cmp     [r12], ebx
jnz     short loc_7FF6E3443FE3
xor     edx, edx
mov     [rsp+0B8h+lpCharType], r12 ; __int64
mov     r9d, 1004h
lea     rcx, [r11-58h]  ; struct __crt_locale_pointers *
call    __acrt_GetLocaleInfoA
test    eax, eax
jnz     loc_7FF6E34444E3

loc_7FF6E3443FE3:       ; Size
mov     edx, 4
mov     rcx, rsi        ; Count
call    _calloc_base
xor     ecx, ecx        ; Block
mov     [rsp+0B8h+Block], rax
call    _free_base
mov     ebp, 180h
mov     edx, 2          ; Size
mov     ecx, ebp        ; Count
call    _calloc_base
xor     ecx, ecx        ; Block
mov     r15, rax
call    _free_base
mov     rdx, rsi        ; Size
mov     ecx, ebp        ; Count
call    _calloc_base
xor     ecx, ecx        ; Block
mov     r14, rax
call    _free_base
mov     rdx, rsi        ; Size
mov     ecx, ebp        ; Count
call    _calloc_base
xor     ecx, ecx        ; Block
mov     rbp, rax
call    _free_base
mov     rdx, rsi        ; Size
mov     ecx, 101h       ; Count
call    _calloc_base
xor     ecx, ecx        ; Block
mov     r13, rax
call    _free_base
cmp     [rsp+0B8h+Block], rbx
jz      loc_7FF6E34444E3
test    r15, r15
jz      loc_7FF6E34444E3
test    r13, r13
jz      loc_7FF6E34444E3
test    r14, r14
jz      loc_7FF6E34444E3
test    rbp, rbp
jz      loc_7FF6E34444E3
mov     rdx, r13
mov     eax, ebx

loc_7FF6E344408A:
mov     [rdx], al
add     rdx, rsi
add     eax, esi
cmp     eax, 100h
jl      short loc_7FF6E344408A
mov     ecx, [r12]      ; CodePage
lea     rdx, [rsp+0B8h+CPInfo] ; lpCPInfo
call    cs:GetCPInfo
test    eax, eax
jz      loc_7FF6E34444E3
cmp     [rsp+0B8h+CPInfo.MaxCharSize], 5
ja      loc_7FF6E34444E3
movzx   eax, word ptr [rsp+0B8h+CPInfo.MaxCharSize]
mov     [rsp+0B8h+var_60], eax
cmp     eax, esi
jbe     short loc_7FF6E344411B
cmp     dword ptr [rdi+0Ch], 0FDE9h
jnz     short loc_7FF6E34440E6
lea     rcx, [r13+80h]  ; void *
mov     r8d, 80h        ; Size
mov     dl, 20h ; ' '   ; Val
call    memset
jmp     short loc_7FF6E344411B

loc_7FF6E34440E6:
lea     rcx, [rsp+0B8h+CPInfo.LeadByte]
cmp     [rsp+0B8h+CPInfo.LeadByte], bl
jz      short loc_7FF6E344411B

loc_7FF6E34440F1:
cmp     [rcx+1], bl
jz      short loc_7FF6E344411B
movzx   edx, byte ptr [rcx]
movzx   eax, byte ptr [rcx+1]
cmp     edx, eax
ja      short loc_7FF6E3444113

loc_7FF6E3444101:
movsxd  rax, edx
add     edx, esi
mov     byte ptr [rax+r13], 20h ; ' '
movzx   eax, byte ptr [rcx+1]
cmp     edx, eax
jle     short loc_7FF6E3444101

loc_7FF6E3444113:
add     rcx, 2
cmp     [rcx], bl
jnz     short loc_7FF6E34440F1

loc_7FF6E344411B:
mov     eax, [rdi+0Ch]
lea     rcx, [r14+81h]
mov     rdx, [rdi+138h] ; wchar_t *
lea     r9, [r13+1]     ; char *
mov     [rsp+0B8h+var_78], ebx ; int
mov     [rsp+0B8h+var_80], eax ; int
mov     eax, 0FFh
mov     [rsp+0B8h+var_88], eax ; int
mov     [rsp+0B8h+var_90], rcx ; char *
xor     ecx, ecx        ; struct __crt_locale_pointers *
mov     dword ptr [rsp+0B8h+lpCharType], eax ; int
lea     r8d, [rax+1]    ; unsigned int
call    __acrt_LCMapStringA
test    eax, eax
jz      loc_7FF6E34444E3
mov     eax, [rdi+0Ch]
lea     rcx, [rbp+81h]
mov     rdx, [rdi+138h] ; wchar_t *
lea     r9, [r13+1]     ; char *
mov     [rsp+0B8h+var_78], ebx ; int
mov     r8d, 200h       ; unsigned int
mov     [rsp+0B8h+var_80], eax ; int
mov     eax, 0FFh
mov     [rsp+0B8h+var_88], eax ; int
mov     [rsp+0B8h+var_90], rcx ; char *
xor     ecx, ecx        ; struct __crt_locale_pointers *
mov     dword ptr [rsp+0B8h+lpCharType], eax ; int
call    __acrt_LCMapStringA
test    eax, eax
jz      loc_7FF6E34444E3
mov     eax, [rdi+0Ch]
lea     rcx, [r15+100h]
mov     [rsp+0B8h+var_88], ebx ; int
mov     r9d, 100h
mov     dword ptr [rsp+0B8h+var_90], eax ; int
mov     r8, r13
mov     [rsp+0B8h+lpCharType], rcx ; lpCharType
mov     edx, esi        ; dwInfoType
xor     ecx, ecx        ; struct __crt_locale_pointers *
call    __acrt_GetStringTypeA
test    eax, eax
jz      loc_7FF6E34444E3
mov     r12d, [rsp+0B8h+var_60]
mov     [r15+0FEh], bx
mov     [r14+7Fh], bl
mov     [rbp+7Fh], bl
mov     [r14+80h], bl
mov     [rbp+80h], bl
cmp     r12d, esi
jbe     loc_7FF6E344429E
cmp     dword ptr [rdi+0Ch], 0FDE9h
jnz     short loc_7FF6E3444254
mov     r8, r14
lea     rdx, [rbp+100h]
sub     r8, rbp
lea     r9, [r15+200h]
mov     ecx, 80h
mov     r10d, 8000h

loc_7FF6E3444224:
lea     eax, [rcx-0C2h]
cmp     eax, 32h ; '2'
ja      short loc_7FF6E3444235
movzx   eax, r10w
jmp     short loc_7FF6E3444237

loc_7FF6E3444235:
mov     eax, ebx

loc_7FF6E3444237:
mov     [r9], ax
add     r9, 2
mov     [r8+rdx], cl
mov     [rdx], cl
add     ecx, esi
add     rdx, rsi
cmp     ecx, 0FFh
jle     short loc_7FF6E3444224
jmp     short loc_7FF6E344429E

loc_7FF6E3444254:
lea     rdx, [rsp+0B8h+CPInfo.LeadByte]
cmp     [rsp+0B8h+CPInfo.LeadByte], bl
jz      short loc_7FF6E344429E

loc_7FF6E344425F:
cmp     [rdx+1], bl
jz      short loc_7FF6E344429E
movzx   ecx, byte ptr [rdx]
movzx   eax, byte ptr [rdx+1]
cmp     ecx, eax
ja      short loc_7FF6E3444296

loc_7FF6E344426F:
movsxd  rax, ecx
mov     word ptr [r15+rax*2+100h], 8000h
mov     [rax+r14+80h], cl
mov     [rax+rbp+80h], cl
add     ecx, esi
movzx   eax, byte ptr [rdx+1]
cmp     ecx, eax
jle     short loc_7FF6E344426F

loc_7FF6E3444296:
add     rdx, 2
cmp     [rdx], bl
jnz     short loc_7FF6E344425F

loc_7FF6E344429E:
lea     rcx, [r15+200h]
mov     eax, 80h
movups  xmm0, xmmword ptr [rcx]
movups  xmm1, xmmword ptr [rcx+10h]
lea     rdx, [rax+r15]
movups  xmmword ptr [r15], xmm0
movups  xmmword ptr [r15+10h], xmm1
movups  xmm0, xmmword ptr [rcx+20h]
movups  xmm1, xmmword ptr [rcx+30h]
movups  xmmword ptr [r15+20h], xmm0
movups  xmmword ptr [r15+30h], xmm1
movups  xmm0, xmmword ptr [rcx+40h]
movups  xmm1, xmmword ptr [rcx+50h]
movups  xmmword ptr [r15+40h], xmm0
movups  xmmword ptr [r15+50h], xmm1
movups  xmm1, xmmword ptr [rcx+70h]
movups  xmm0, xmmword ptr [rcx+60h]
add     rcx, rax
movups  xmmword ptr [r15+60h], xmm0
movups  xmm0, xmmword ptr [rcx]
mov     rax, [rcx+70h]
movups  xmmword ptr [rdx-10h], xmm1
movups  xmm1, xmmword ptr [rcx+10h]
movups  xmmword ptr [rdx], xmm0
movups  xmm0, xmmword ptr [rcx+20h]
movups  xmmword ptr [rdx+10h], xmm1
movups  xmm1, xmmword ptr [rcx+30h]
movups  xmmword ptr [rdx+20h], xmm0
movups  xmm0, xmmword ptr [rcx+40h]
movups  xmmword ptr [rdx+30h], xmm1
movups  xmm1, xmmword ptr [rcx+50h]
movups  xmmword ptr [rdx+40h], xmm0
movups  xmm0, xmmword ptr [rcx+60h]
movups  xmmword ptr [rdx+50h], xmm1
movups  xmmword ptr [rdx+60h], xmm0
mov     [rdx+70h], rax
mov     eax, [rcx+78h]
mov     [rdx+78h], eax
movzx   eax, word ptr [rcx+7Ch]
mov     [rdx+7Ch], ax
mov     eax, [r14+178h]
movups  xmm0, xmmword ptr [r14+100h]
movups  xmm1, xmmword ptr [r14+110h]
movups  xmmword ptr [r14], xmm0
movups  xmm0, xmmword ptr [r14+120h]
movups  xmmword ptr [r14+10h], xmm1
movups  xmm1, xmmword ptr [r14+130h]
movups  xmmword ptr [r14+20h], xmm0
movups  xmm0, xmmword ptr [r14+140h]
movups  xmmword ptr [r14+30h], xmm1
movups  xmm1, xmmword ptr [r14+150h]
movups  xmmword ptr [r14+40h], xmm0
movups  xmm0, xmmword ptr [r14+160h]
movups  xmmword ptr [r14+50h], xmm1
movsd   xmm1, qword ptr [r14+170h]
movups  xmmword ptr [r14+60h], xmm0
movsd   qword ptr [r14+70h], xmm1
mov     [r14+78h], eax
movzx   eax, word ptr [r14+17Ch]
mov     [r14+7Ch], ax
mov     al, [r14+17Eh]
mov     [r14+7Eh], al
movups  xmm0, xmmword ptr [rbp+100h]
mov     eax, [rbp+178h]
movups  xmm1, xmmword ptr [rbp+110h]
movups  xmmword ptr [rbp+0], xmm0
movups  xmm0, xmmword ptr [rbp+120h]
movups  xmmword ptr [rbp+10h], xmm1
movups  xmm1, xmmword ptr [rbp+130h]
movups  xmmword ptr [rbp+20h], xmm0
movups  xmm0, xmmword ptr [rbp+140h]
movups  xmmword ptr [rbp+30h], xmm1
movups  xmm1, xmmword ptr [rbp+150h]
movups  xmmword ptr [rbp+40h], xmm0
movups  xmm0, xmmword ptr [rbp+160h]
movups  xmmword ptr [rbp+50h], xmm1
movsd   xmm1, qword ptr [rbp+170h]
movups  xmmword ptr [rbp+60h], xmm0
movsd   qword ptr [rbp+70h], xmm1
mov     [rbp+78h], eax
movzx   eax, word ptr [rbp+17Ch]
mov     [rbp+7Ch], ax
mov     al, [rbp+17Eh]
mov     [rbp+7Eh], al
mov     rcx, [rdi+100h]
test    rcx, rcx
jz      short loc_7FF6E344449B
or      eax, 0FFFFFFFFh
lock xadd [rcx], eax
cmp     eax, esi
jnz     short loc_7FF6E344449B
mov     rcx, [rdi+108h]
sub     rcx, 0FEh       ; Block
call    _free_base
mov     rcx, [rdi+110h]
add     rcx, 0FFFFFFFFFFFFFF80h ; Block
call    _free_base
mov     rcx, [rdi+118h]
add     rcx, 0FFFFFFFFFFFFFF80h ; Block
call    _free_base
mov     rcx, [rdi+100h] ; Block
call    _free_base

loc_7FF6E344449B:
mov     rax, [rsp+0B8h+Block]
mov     [rax], esi
mov     [rdi+100h], rax
lea     rax, [r15+100h]
mov     [rdi], rax
lea     rax, [r15+0FEh]
mov     [rdi+108h], rax
lea     rax, [r14+80h]
mov     [rdi+110h], rax
lea     rax, [rbp+80h]
mov     [rdi+118h], rax
mov     [rdi+8], r12d
jmp     short loc_7FF6E3444507

loc_7FF6E34444E3:       ; Block
mov     rcx, [rsp+0B8h+Block]
call    _free_base
mov     rcx, r15        ; Block
call    _free_base
mov     rcx, r14        ; Block
call    _free_base
mov     rcx, rbp        ; Block
call    _free_base
mov     ebx, esi

loc_7FF6E3444507:       ; Block
mov     rcx, r13
call    _free_base
mov     eax, ebx
jmp     short loc_7FF6E344455F

loc_7FF6E3444513:
mov     rax, [rcx+100h]
test    rax, rax
jz      short loc_7FF6E3444522
lock dec dword ptr [rax]

loc_7FF6E3444522:
lea     rax, asc_7FF6E345FD00 ; "         (((((                  H"
mov     [rcx+100h], rbx
mov     [rcx], rax
lea     rax, unk_7FF6E345FF80
mov     [rcx+110h], rax
lea     rax, unk_7FF6E3460100
mov     [rcx+118h], rax
xor     eax, eax
mov     [rcx+108h], rbx
mov     dword ptr [rcx+8], 1

loc_7FF6E344455F:
mov     rcx, [rsp+0B8h+var_30]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
lea     r11, [rsp+0B8h+var_28]
mov     rbx, [r11+38h]
mov     rbp, [r11+40h]
mov     rsi, [r11+48h]
mov     rsp, r11
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
retn
; } // starts at 7FF6E3443F4C
sub_7FF6E3443F4C endp

; [00000082 BYTES: COLLAPSED FUNCTION _wcsdup]
algn_7FF6E3444612:
align 4



sub_7FF6E3444614 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
mov     [rsp+arg_10], rdi
mov     edx, ecx
cmp     ecx, 1
jb      short loc_7FF6E3444697
cmp     ecx, 0Dh
ja      short loc_7FF6E3444643
lea     eax, [rcx-1]
lea     r9, unk_7FF6E3460410
mov     eax, [r9+rax*8+4]
jmp     loc_7FF6E34446D3

loc_7FF6E3444643:
cmp     edx, 718h
ja      short loc_7FF6E3444697
mov     ecx, 2Dh ; '-'
lea     r9, unk_7FF6E3460410
xor     esi, esi
mov     r10d, esi
lea     edi, [rcx-1]

loc_7FF6E344465F:
mov     r8, rcx
shr     r8, 1
jz      short loc_7FF6E34446A6
test    cl, 1
lea     rcx, [r8-1]
cmovnz  rcx, r8
lea     r11, [rcx+r10]
lea     rax, [r9+r11*8]
cmp     edx, [rax]
jz      short loc_7FF6E34446B5
jb      short loc_7FF6E3444687
lea     r10, [r11+1]
mov     rcx, r8

loc_7FF6E3444687:
lea     rax, [r11-1]
cmovnb  rax, rdi
mov     rdi, rax
cmp     r10, rax
jbe     short loc_7FF6E344465F

loc_7FF6E3444697:
lea     ecx, [rdx-13h]
cmp     ecx, 11h
ja      short loc_7FF6E34446BF
mov     eax, 0Dh
jmp     short loc_7FF6E34446D3

loc_7FF6E34446A6:
test    rcx, rcx
jz      short loc_7FF6E3444697
lea     rax, [r9+r10*8]
cmp     edx, [rax]
cmovnz  rax, rsi

loc_7FF6E34446B5:
test    rax, rax
jz      short loc_7FF6E3444697
mov     eax, [rax+4]
jmp     short loc_7FF6E34446D3

loc_7FF6E34446BF:
mov     eax, 16h
lea     ecx, [rdx-0BCh]
cmp     ecx, 0Eh
lea     edx, [rax-0Eh]
cmovbe  eax, edx

loc_7FF6E34446D3:
mov     rbx, [rsp+arg_0]
mov     rsi, [rsp+arg_8]
mov     rdi, [rsp+arg_10]
retn
sub_7FF6E3444614 endp

algn_7FF6E34446E3:
align 4



sub_7FF6E34446E4 proc near
push    rbx
sub     rsp, 20h
mov     ebx, ecx
call    sub_7FF6E3444730
mov     ecx, ebx
mov     [rax], ebx
call    sub_7FF6E3444614
mov     ebx, eax
call    sub_7FF6E3444754
mov     [rax], ebx
add     rsp, 20h
pop     rbx
retn
sub_7FF6E34446E4 endp

algn_7FF6E3444709:
align 4
; [00000022 BYTES: COLLAPSED FUNCTION __acrt_errno_map_os_error_ptd]
algn_7FF6E344472E:
align 10h



sub_7FF6E3444730 proc near
sub     rsp, 28h
call    sub_7FF6E344A81C
mov     rcx, rax
lea     rdx, unk_7FF6E346D18C
add     rax, 24h ; '$'
test    rcx, rcx
cmovz   rax, rdx
add     rsp, 28h
retn
sub_7FF6E3444730 endp

algn_7FF6E3444753:
align 4



sub_7FF6E3444754 proc near
sub     rsp, 28h
call    sub_7FF6E344A81C
mov     rcx, rax
lea     rdx, unk_7FF6E346D188
add     rax, 20h ; ' '
test    rcx, rcx
cmovz   rax, rdx
add     rsp, 28h
retn
sub_7FF6E3444754 endp

algn_7FF6E3444777:
align 8



sub_7FF6E3444778 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 20h
mov     eax, cs:dword_7FF6E346F160
xor     ebx, ebx
mov     edi, 3
test    eax, eax
jnz     short loc_7FF6E34447A9
mov     eax, 200h
jmp     short loc_7FF6E34447AF

loc_7FF6E34447A9:
cmp     eax, edi
jge     short loc_7FF6E34447B5
mov     eax, edi

loc_7FF6E34447AF:
mov     cs:dword_7FF6E346F160, eax

loc_7FF6E34447B5:       ; Count
movsxd  rcx, eax
mov     edx, 8          ; Size
call    _calloc_base
xor     ecx, ecx        ; Block
mov     cs:Block, rax
call    _free_base
cmp     cs:Block, rbx
jnz     short loc_7FF6E3444808
mov     edx, 8          ; Size
mov     cs:dword_7FF6E346F160, edi
mov     rcx, rdi        ; Count
call    _calloc_base
xor     ecx, ecx        ; Block
mov     cs:Block, rax
call    _free_base
cmp     cs:Block, rbx
jnz     short loc_7FF6E3444808
or      eax, 0FFFFFFFFh
jmp     short loc_7FF6E344487D

loc_7FF6E3444808:
mov     rbp, rbx
lea     rsi, unk_7FF6E346D1A8
lea     r14, unk_7FF6E346D190

loc_7FF6E3444819:       ; lpCriticalSection
lea     rcx, [r14+30h]
xor     r8d, r8d        ; Flags
mov     edx, 0FA0h      ; dwSpinCount
call    InitializeCriticalSectionEx
mov     rax, cs:Block
lea     r8, qword_7FF6E346F380
mov     rdx, rbp
sar     rdx, 6
mov     [rbx+rax], r14
mov     rax, rbp
and     eax, 3Fh
lea     rcx, [rax+rax*8]
mov     rax, [r8+rdx*8]
mov     rcx, [rax+rcx*8+28h]
add     rcx, 2
cmp     rcx, 2
ja      short loc_7FF6E3444866
mov     dword ptr [rsi], 0FFFFFFFEh

loc_7FF6E3444866:
inc     rbp
add     r14, 58h ; 'X'
add     rbx, 8
add     rsi, 58h ; 'X'
sub     rdi, 1
jnz     short loc_7FF6E3444819
xor     eax, eax

loc_7FF6E344487D:
mov     rbx, [rsp+28h+arg_0]
mov     rbp, [rsp+28h+arg_8]
mov     rsi, [rsp+28h+arg_10]
mov     rdi, [rsp+28h+arg_18]
add     rsp, 20h
pop     r14
retn
sub_7FF6E3444778 endp

; [00000011 BYTES: COLLAPSED FUNCTION __acrt_iob_func]
align 4
; [0000005B BYTES: COLLAPSED FUNCTION __acrt_uninitialize_stdio]
algn_7FF6E3444907:
align 8
; [00000047 BYTES: COLLAPSED FUNCTION _get_stream_buffer_pointers]
algn_7FF6E344494F:
align 10h
; [0000000B BYTES: COLLAPSED FUNCTION _lock_file]
align 4
; [0000000B BYTES: COLLAPSED FUNCTION _unlock_file]
align 8
; [0000007A BYTES: COLLAPSED FUNCTION _fclose_internal(_iobuf * const,__crt_cached_ptd_host &)]
algn_7FF6E34449E2:
align 4
; [000000A5 BYTES: COLLAPSED FUNCTION _fclose_nolock_internal(_iobuf * const,__crt_cached_ptd_host &)]
algn_7FF6E3444A89:
align 4
; [00000098 BYTES: COLLAPSED FUNCTION fclose]



sub_7FF6E3444B24 proc near

arg_0= qword ptr  8
arg_18= qword ptr  20h

; FUNCTION CHUNK AT 00007FF6E345C22C SIZE 0000001B BYTES

; __unwind { // __C_specific_handler
mov     [rsp+arg_0], rbx
mov     [rsp+arg_18], r9
push    rdi
sub     rsp, 20h
mov     rdi, r9
mov     rbx, r8
mov     rcx, [rdx]      ; Stream
call    _lock_file
nop

loc_7FF6E3444B42:
;   __try { // __finally(int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0)
mov     rdx, [rbx+8]
mov     rax, [rbx]
mov     rcx, [rax]
test    rcx, rcx
jz      short loc_7FF6E3444BAD
mov     ecx, [rcx+14h]
nop
mov     eax, ecx
shr     eax, 0Dh
test    al, 1
jz      short loc_7FF6E3444BAD
mov     eax, ecx
and     al, 3
cmp     al, 2
jnz     short loc_7FF6E3444B6B
test    cl, 0C0h
jnz     short loc_7FF6E3444B75

loc_7FF6E3444B6B:
bt      ecx, 0Bh
jb      short loc_7FF6E3444B75
inc     dword ptr [rdx]
jmp     short loc_7FF6E3444BAD

loc_7FF6E3444B75:
mov     rax, [rbx+10h]
cmp     byte ptr [rax], 0
jnz     short loc_7FF6E3444B8E
mov     rax, [rbx]
mov     rcx, [rax]
mov     eax, [rcx+14h]
nop
shr     eax, 1
test    al, 1
jz      short loc_7FF6E3444BAD

loc_7FF6E3444B8E:
mov     rcx, [rbx]
mov     rcx, [rcx]      ; Stream
call    _fflush_nolock
cmp     eax, 0FFFFFFFFh
jz      short loc_7FF6E3444BA6
mov     rax, [rbx+8]
inc     dword ptr [rax]
jmp     short loc_7FF6E3444BAD

loc_7FF6E3444BA6:
mov     rax, [rbx+18h]
or      dword ptr [rax], 0FFFFFFFFh
;   } // starts at 7FF6E3444B42

loc_7FF6E3444BAD:       ; Stream
mov     rcx, [rdi]
call    _unlock_file
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
; } // starts at 7FF6E3444B24
sub_7FF6E3444B24 endp

; [000000E1 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_886d6c58226a84441f68b9f2b8217b83_,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_>(_lambda_886d6c58226a84441f68b9f2b8217b83_ &&,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_ &&)]
algn_7FF6E3444CA1:
align 4
; [00000040 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_c376a267cfb53b6959b3b692ec76b120_,_lambda_9a32fed5bf61b6b509b2d3f6003082a1_ &,_lambda_572fbb9fa0ab338edf41edfd4b5fcc8d_>(_lambda_c376a267cfb53b6959b3b692ec76b120_ &&,_lambda_9a32fed5bf61b6b509b2d3f6003082a1_ &,_lambda_572fbb9fa0ab338edf41edfd4b5fcc8d_ &&)]
; [0000005D BYTES: COLLAPSED FUNCTION common_flush_all(bool)]
algn_7FF6E3444D41:
align 4
; [0000008C BYTES: COLLAPSED FUNCTION __acrt_stdio_flush_nolock]
; [000000D2 BYTES: COLLAPSED FUNCTION _fflush_nolock]
algn_7FF6E3444EA2:
align 4
; [00000007 BYTES: COLLAPSED FUNCTION _flushall]
align 4
; [00000067 BYTES: COLLAPSED FUNCTION fflush]
algn_7FF6E3444F13:
align 4
; [00000043 BYTES: COLLAPSED FUNCTION _fgetc_nolock]
algn_7FF6E3444F57:
align 8
; [00000113 BYTES: COLLAPSED FUNCTION fgetc]
algn_7FF6E344506B:
align 4
; [0000004B BYTES: COLLAPSED FUNCTION fgetpos]
algn_7FF6E34450B7:
align 8
; [00000164 BYTES: COLLAPSED FUNCTION _fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)]
; [00000098 BYTES: COLLAPSED FUNCTION sub_7FF6E344521C]



; __int64 __usercall sub_7FF6E34452B4@<rax>(void *@<rcx>, size_t Size@<rdx>, FILE *Stream)
sub_7FF6E34452B4 proc near

arg_0= qword ptr  8
arg_10= qword ptr  18h
arg_18= qword ptr  20h
Stream= qword ptr  28h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_18], r9
push    rbp
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 20h
mov     rbx, [rsp+58h+Stream]
mov     r15, r8
mov     rsi, rdx
mov     r12, rcx
test    r8, r8
jz      short loc_7FF6E34452FD
test    r9, r9
jz      short loc_7FF6E34452FD
test    rcx, rcx
jnz     short loc_7FF6E3445314

loc_7FF6E34452ED:
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h

loc_7FF6E34452F8:
call    _invalid_parameter_noinfo

loc_7FF6E34452FD:
xor     eax, eax

loc_7FF6E34452FF:
mov     rbx, [rsp+58h+arg_0]
add     rsp, 20h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbp
retn

loc_7FF6E3445314:
test    rbx, rbx
jz      short loc_7FF6E3445327
xor     edx, edx
or      rax, 0FFFFFFFFFFFFFFFFh
div     r15
cmp     r9, rax
jbe     short loc_7FF6E344534F

loc_7FF6E3445327:
cmp     rsi, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344533C
mov     r8, rsi         ; Size
xor     edx, edx        ; Val
call    memset
mov     r9, [rsp+58h+arg_18]

loc_7FF6E344533C:
test    rbx, rbx
jz      short loc_7FF6E34452ED
xor     edx, edx
or      rax, 0FFFFFFFFFFFFFFFFh
div     r15
cmp     r9, rax
ja      short loc_7FF6E34452ED

loc_7FF6E344534F:
mov     eax, [rbx+14h]
nop
test    eax, 4C0h
jz      short loc_7FF6E3445360
mov     r8d, [rbx+20h]
jmp     short loc_7FF6E3445366

loc_7FF6E3445360:
mov     r8d, 1000h

loc_7FF6E3445366:
mov     rdi, r15
mov     dword ptr [rsp+58h+Stream], r8d
imul    rdi, r9
mov     rcx, rsi
mov     r13, r12
mov     [rsp+58h+arg_10], rcx
mov     rbp, rdi
test    rdi, rdi
jz      loc_7FF6E34454D7

loc_7FF6E344538C:
mov     eax, [rbx+14h]
mov     edx, 7FFFFFFFh
nop
test    eax, 4C0h
jz      loc_7FF6E344542D
movsxd  r14, dword ptr [rbx+10h]
test    r14d, r14d
jz      loc_7FF6E344542D
js      loc_7FF6E3445502
cmp     rbp, r14
cmovb   r14d, ebp
mov     r8d, r14d       ; Size
cmp     r8, rcx
ja      loc_7FF6E34454DF
mov     rdx, [rbx]      ; Src
test    r14d, r14d
jz      short loc_7FF6E3445404
test    r13, r13
jz      short loc_7FF6E34453EF
test    rdx, rdx
jz      short loc_7FF6E34453E2
mov     rcx, r13        ; void *
call    memcpy
jmp     short loc_7FF6E34453FF

loc_7FF6E34453E2:       ; Size
mov     r8, rcx
xor     edx, edx        ; Val
mov     rcx, r13        ; void *
call    memset

loc_7FF6E34453EF:
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo

loc_7FF6E34453FF:
mov     rcx, [rsp+58h+arg_10]

loc_7FF6E3445404:
sub     [rbx+10h], r14d
mov     eax, r14d
sub     rbp, rax
mov     eax, r14d
add     [rbx], rax
mov     eax, r14d
add     r13, rax
mov     eax, r14d

loc_7FF6E344541D:
mov     r8d, dword ptr [rsp+58h+Stream]
sub     rcx, rax
jmp     loc_7FF6E34454C4

loc_7FF6E344542D:
mov     eax, r8d
cmp     rbp, rax
jb      short loc_7FF6E3445494
cmp     rbp, rdx
mov     r14d, ebp
cmova   r14d, edx
test    r8d, r8d
jz      short loc_7FF6E344544F
xor     edx, edx
mov     eax, r14d
div     r8d
sub     r14d, edx

loc_7FF6E344544F:
mov     eax, r14d
cmp     rax, rcx
ja      loc_7FF6E34454DF
mov     rax, [rbx+8]
mov     rcx, rbx        ; Stream
and     dword ptr [rbx+10h], 0
mov     [rbx], rax
call    _fileno
mov     ecx, eax
mov     r8d, r14d
mov     rdx, r13
call    sub_7FF6E3450DB4
test    eax, eax
jz      loc_7FF6E3445509
js      short loc_7FF6E3445502
mov     rcx, [rsp+58h+arg_10]
cdqe
sub     rbp, rax
add     r13, rax
jmp     short loc_7FF6E344541D

loc_7FF6E3445494:       ; Stream
mov     rcx, rbx
call    __acrt_stdio_refill_and_read_narrow_nolock
cmp     eax, 0FFFFFFFFh
jz      short loc_7FF6E344550E
mov     rcx, [rsp+58h+arg_10]
test    rcx, rcx
jz      short loc_7FF6E34454DF
mov     [r13+0], al
dec     rbp
mov     r8d, [rbx+20h]
inc     r13
dec     rcx
mov     dword ptr [rsp+58h+Stream], r8d

loc_7FF6E34454C4:
mov     [rsp+58h+arg_10], rcx
test    rbp, rbp
jnz     loc_7FF6E344538C
mov     r9, [rsp+58h+arg_18]

loc_7FF6E34454D7:
mov     rax, r9
jmp     loc_7FF6E34452FF

loc_7FF6E34454DF:
cmp     rsi, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E34454F2
mov     r8, rsi         ; Size
xor     edx, edx        ; Val
mov     rcx, r12        ; void *
call    memset

loc_7FF6E34454F2:
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
jmp     loc_7FF6E34452F8

loc_7FF6E3445502:
lock or dword ptr [rbx+14h], 10h
jmp     short loc_7FF6E344550E

loc_7FF6E3445509:
lock or dword ptr [rbx+14h], 8

loc_7FF6E344550E:
sub     rdi, rbp
xor     edx, edx
mov     rax, rdi
div     r15
jmp     loc_7FF6E34452FF
sub_7FF6E34452B4 endp

algn_7FF6E344551E:
align 20h
; [0000001D BYTES: COLLAPSED FUNCTION fread]
algn_7FF6E344553D:
align 20h
; [000000A5 BYTES: COLLAPSED FUNCTION fread_s]
algn_7FF6E34455E5:
align 8
; [00000035 BYTES: COLLAPSED FUNCTION fsetpos]
algn_7FF6E344561D:
align 20h
; [0000009B BYTES: COLLAPSED FUNCTION common_fseek(__crt_stdio_stream,__int64,int,__crt_cached_ptd_host &)]
algn_7FF6E34456BB:
align 4



sub_7FF6E34456BC proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
push    rdi
sub     rsp, 20h
mov     rdi, rdx
mov     rbx, rcx
cmp     r8d, 2
jz      loc_7FF6E34457A4
mov     eax, [rcx+14h]
nop
test    eax, 4C0h
jz      loc_7FF6E34457A4
mov     eax, [rcx+14h]
nop
test    al, 6
jnz     loc_7FF6E34457A4
xor     esi, esi
cmp     [rcx+10h], esi
jle     loc_7FF6E34457A4
movsxd  r10, dword ptr [rcx+18h]
lea     r9, qword_7FF6E346F380
mov     rcx, r10
nop
and     ecx, 3Fh
mov     rax, r10
sar     rax, 6
lea     rdx, [rcx+rcx*8]
mov     r9, [r9+rax*8]
cmp     [r9+rdx*8+38h], sil
jl      short loc_7FF6E34457A4
cmp     [r9+rdx*8+39h], sil
jnz     short loc_7FF6E34457A4
test    r8d, r8d
jnz     short loc_7FF6E344577C
xor     edx, edx
lea     r8d, [rsi+1]
mov     ecx, r10d
call    _lseeki64_nolock
mov     rcx, rax
test    rax, rax
js      short loc_7FF6E34457A4
movsxd  rax, dword ptr [rbx+10h]
sub     rcx, rax
mov     rax, rdi
sub     rax, rcx
shr     rdi, 3Fh
shr     rcx, 3Fh
cmp     edi, ecx
jz      short loc_7FF6E3445779
mov     rcx, 7FFFFFFFFFFFFFFFh
cmp     rax, rcx
setnbe  sil
cmp     edi, esi
jnz     short loc_7FF6E34457A4

loc_7FF6E3445779:
mov     rdi, rax

loc_7FF6E344577C:
mov     r8, [rbx]
mov     rcx, [rbx+8]
sub     rcx, r8
cmp     rcx, rdi
jg      short loc_7FF6E34457A4
movsxd  rdx, dword ptr [rbx+10h]
cmp     rdi, rdx
jg      short loc_7FF6E34457A4
lea     rcx, [r8+rdi]
sub     edx, edi
mov     [rbx], rcx
mov     al, 1
mov     [rbx+10h], edx
jmp     short loc_7FF6E34457A6

loc_7FF6E34457A4:
xor     al, al

loc_7FF6E34457A6:
mov     rbx, [rsp+28h+arg_0]
mov     rsi, [rsp+28h+arg_8]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E34456BC endp

algn_7FF6E34457B6:
align 8
; [000000EA BYTES: COLLAPSED FUNCTION common_fseek_nolock(__crt_stdio_stream,__int64,int,__crt_cached_ptd_host &)]
algn_7FF6E34458A2:
align 4
; [00000098 BYTES: COLLAPSED FUNCTION _fseeki64]
; [0000003F BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<unsigned __int64>::operator()<_lambda_5d4c3fee44080f75d5d9762853974fe0_,_lambda_532e024f4337e6fc7ad266c2bef9f4ed_ &,_lambda_c87bdc10097eb2402edb8ba9bdf0697b_>(_lambda_5d4c3fee44080f75d5d9762853974fe0_ &&,_lambda_532e024f4337e6fc7ad266c2bef9f4ed_ &,_lambda_c87bdc10097eb2402edb8ba9bdf0697b_ &&)]
algn_7FF6E344597B:
align 4
; [0000007E BYTES: COLLAPSED FUNCTION _lambda_26974eb511f701c600fccfa2a97a8e1b_::operator()(void)]
algn_7FF6E34459FA:
align 4
; [0000009C BYTES: COLLAPSED FUNCTION _fwrite_internal]
; [00000211 BYTES: COLLAPSED FUNCTION _fwrite_nolock_internal]
algn_7FF6E3445CA9:
align 4
; [000000A1 BYTES: COLLAPSED FUNCTION fwrite]
algn_7FF6E3445D4D:
align 10h
; [0000003D BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_,_lambda_9a20e10065b92b5193c3597a66cba9d4_ &,_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_>(_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_ &&,_lambda_9a20e10065b92b5193c3597a66cba9d4_ &,_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_ &&)]
algn_7FF6E3445D8D:
align 10h
; [000000E7 BYTES: COLLAPSED FUNCTION unknown_libname_81]
algn_7FF6E3445E77:
align 8
; [00000135 BYTES: COLLAPSED FUNCTION setvbuf]
algn_7FF6E3445FAD:
align 10h
; [0000011E BYTES: COLLAPSED FUNCTION _ungetc_nolock]
algn_7FF6E34460CE:
align 10h
; [00000058 BYTES: COLLAPSED FUNCTION ungetc]
algn_7FF6E3446128:
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j__realloc_base]
align 8
; [0000009B BYTES: COLLAPSED FUNCTION _LocaleUpdate::_LocaleUpdate(__crt_locale_pointers * const)]
algn_7FF6E34461D3:
align 20h



sub_7FF6E34461E0 proc near

var_238= qword ptr -238h
var_230= qword ptr -230h
var_228= qword ptr -228h
var_220= qword ptr -220h
var_218= dword ptr -218h
Source= byte ptr -214h
var_40= qword ptr -40h
arg_0= dword ptr  8
arg_8= qword ptr  10h
arg_10= dword ptr  18h
arg_18= dword ptr  20h

mov     [rsp+arg_8], rdx
push    rbx
push    rbp
push    rsi
push    rdi
push    r12
push    r14
push    r15
sub     rsp, 220h
mov     r10d, [rcx]
mov     r15, rdx
mov     rsi, rcx
test    r10d, r10d
jz      loc_7FF6E3446658
mov     edi, [rdx]
test    edi, edi
jz      loc_7FF6E3446658
dec     r10d
lea     ebp, [rdi-1]
test    ebp, ebp
jnz     loc_7FF6E3446302
mov     r12d, [rdx+4]
xor     ebp, ebp
cmp     r12d, 1
jnz     short loc_7FF6E3446252
mov     ebx, [rcx+4]
lea     r8, [rsp+258h+Source] ; Source
add     rcx, 4          ; Destination
mov     [rsi], ebp
xor     r9d, r9d        ; SourceSize
mov     [rsp+258h+var_218], ebp
mov     edx, 1CCh       ; DestinationSize
call    memcpy_s
mov     eax, ebx
jmp     loc_7FF6E344665A

loc_7FF6E3446252:
test    r10d, r10d
jnz     short loc_7FF6E344628D
mov     ebx, [rcx+4]
lea     r8, [rsp+258h+Source] ; Source
mov     [rcx], ebp
xor     r9d, r9d        ; SourceSize
add     rcx, 4          ; Destination
mov     [rsp+258h+var_218], ebp
mov     edx, 1CCh       ; DestinationSize
call    memcpy_s
xor     edx, edx
mov     eax, ebx
div     r12d
test    edx, edx
mov     [rsi+4], edx
setnz   bpl
mov     [rsi], ebp
jmp     loc_7FF6E344665A

loc_7FF6E344628D:
mov     r15d, 0FFFFFFFFh
mov     rdi, rbp
mov     r14, rbp
cmp     r10d, r15d
jz      short loc_7FF6E34462C6
mov     rcx, r12

loc_7FF6E34462A1:
mov     eax, [rsi+r10*4+4]
xor     edx, edx
shl     r14, 20h
add     r10d, r15d
or      rax, r14
shl     rdi, 20h
div     rcx
mov     eax, eax
mov     r14, rdx
add     rdi, rax
cmp     r10d, r15d
jnz     short loc_7FF6E34462A1

loc_7FF6E34462C6:       ; SourceSize
xor     r9d, r9d
mov     [rsp+258h+var_218], ebp
lea     r8, [rsp+258h+Source] ; Source
mov     [rsi], ebp
mov     edx, 1CCh       ; DestinationSize
lea     rcx, [rsi+4]    ; Destination
call    memcpy_s
mov     rcx, r14
mov     [rsi+4], r14d
shr     rcx, 20h
mov     rax, rdi
test    ecx, ecx
mov     [rsi+8], ecx
setnz   bpl
inc     ebp
mov     [rsi], ebp
jmp     loc_7FF6E344665A

loc_7FF6E3446302:
cmp     ebp, r10d
ja      loc_7FF6E3446658
mov     r8d, r10d
movsxd  rdx, r10d
sub     r8d, ebp
mov     r9d, r10d
movsxd  rbx, r8d
cmp     rdx, rbx
jl      short loc_7FF6E3446368
add     rcx, 4
lea     rax, ds:0[rbx*4]
mov     r11, r15
sub     r11, rax
sub     r11, rsi
lea     rcx, [rcx+rdx*4]

loc_7FF6E3446338:
mov     eax, [rcx]
cmp     [r11+rcx], eax
jnz     short loc_7FF6E3446351
dec     r9d
dec     rdx
sub     rcx, 4
cmp     rdx, rbx
jge     short loc_7FF6E3446338
jmp     short loc_7FF6E3446368

loc_7FF6E3446351:
mov     eax, r9d
sub     eax, r8d
movsxd  rdx, eax
movsxd  rax, r9d
mov     ecx, [rsi+rax*4+4]
cmp     [r15+rdx*4+4], ecx
jnb     short loc_7FF6E344636B

loc_7FF6E3446368:
inc     r8d

loc_7FF6E344636B:
test    r8d, r8d
jz      loc_7FF6E3446658
mov     r9d, [r15+rbp*4+4]
lea     eax, [rdi-2]
mov     r11d, [r15+rax*4+4]
xor     ebp, ebp
bsr     eax, r9d
mov     [rsp+258h+arg_10], r11d
mov     [rsp+258h+arg_0], ebp
jz      short loc_7FF6E34463B6
mov     ebx, 1Fh
mov     r14d, 20h ; ' '
sub     ebx, eax
sub     r14d, ebx
mov     [rsp+258h+arg_0], r14d
test    ebx, ebx
jz      short loc_7FF6E3446402
jmp     short loc_7FF6E34463C5

loc_7FF6E34463B6:
mov     ebx, 20h ; ' '
mov     [rsp+258h+arg_0], ebp
mov     r14d, ebp

loc_7FF6E34463C5:
mov     eax, r9d
mov     edx, r11d
mov     ecx, r14d
shr     edx, cl
mov     ecx, ebx
shl     eax, cl
mov     r9d, edx
shl     r11d, cl
or      r9d, eax
mov     [rsp+258h+arg_10], r11d
cmp     edi, 2
jbe     short loc_7FF6E3446402
lea     eax, [rdi-3]
mov     ecx, r14d
mov     eax, [r15+rax*4+4]
shr     eax, cl
or      r11d, eax
mov     [rsp+258h+arg_10], r11d

loc_7FF6E3446402:
lea     r12d, [r8-1]
mov     [rsp+258h+var_228], rbp
mov     r11, rbp
test    r12d, r12d
js      loc_7FF6E3446618
mov     eax, r14d
mov     r15d, 0FFFFFFFFh
mov     [rsp+258h+var_220], rax
mov     eax, r9d

loc_7FF6E3446428:
mov     [rsp+258h+var_40], r13
lea     r13d, [r12+rdi]
mov     [rsp+258h+var_230], rax
nop     dword ptr [rax+00000000h]

loc_7FF6E3446440:
cmp     r13d, r10d
ja      short loc_7FF6E344644C
mov     edx, [rsi+r13*4+4]
jmp     short loc_7FF6E344644E

loc_7FF6E344644C:
mov     edx, ebp

loc_7FF6E344644E:
mov     [rsp+258h+arg_18], edx
lea     eax, [r13-1]
mov     ecx, [rsi+rax*4+4]
lea     eax, [r13-2]
mov     r11d, [rsi+rax*4+4]
mov     [rsp+258h+var_238], rcx
mov     dword ptr [rsp+258h+var_238+4], edx
test    ebx, ebx
jz      short loc_7FF6E34464A6
mov     rcx, [rsp+258h+var_220]
mov     r8d, r11d
mov     rax, [rsp+258h+var_238]
shr     r8, cl
mov     ecx, ebx
shl     rax, cl
or      r8, rax
shl     r11d, cl
cmp     r13d, 3
jb      short loc_7FF6E34464AB
lea     eax, [r13-3]
mov     ecx, r14d
mov     eax, [rsi+rax*4+4]
shr     eax, cl
or      r11d, eax
jmp     short loc_7FF6E34464AB

loc_7FF6E34464A6:
mov     r8, [rsp+258h+var_238]

loc_7FF6E34464AB:
mov     rcx, [rsp+258h+var_230]
xor     edx, edx
mov     rax, r8
div     rcx
xor     edx, edx
mov     r9, rax
mov     rax, r8
div     rcx
mov     r8d, edx
cmp     r9, r15
jbe     short loc_7FF6E34464E2
mov     rax, 0FFFFFFFF00000001h
add     rax, r9
mov     r9, r15
imul    rax, rcx
add     r8, rax

loc_7FF6E34464E2:
cmp     r8, r15
ja      short loc_7FF6E3446525
mov     edx, [rsp+258h+arg_10]
mov     r14, rcx
mov     eax, edx
imul    rax, r9
nop     word ptr [rax+rax+00000000h]

loc_7FF6E3446500:
mov     rcx, r8
shl     rcx, 20h
or      rcx, r11
cmp     rax, rcx
jbe     short loc_7FF6E344651D
dec     r9
sub     rax, rdx
add     r8, r14
cmp     r8, r15
jbe     short loc_7FF6E3446500

loc_7FF6E344651D:
mov     r14d, [rsp+258h+arg_0]

loc_7FF6E3446525:
test    r9, r9
jz      loc_7FF6E34465EF
mov     r10, rbp
mov     r11d, ebp
test    edi, edi
jz      short loc_7FF6E344659C
mov     r14, [rsp+258h+arg_8]
mov     r15d, [rsp+258h+arg_0]
add     r14, 4
nop     dword ptr [rax+00h]

loc_7FF6E3446550:
mov     eax, [r14]
lea     r14, [r14+4]
imul    rax, r9
add     r10, rax
lea     eax, [r11+r12]
mov     r8d, r10d
mov     ecx, eax
shr     r10, 20h
mov     eax, [rsi+rax*4+4]
mov     rdx, r10
inc     r10
cmp     eax, r8d
cmovnb  r10, rdx
sub     eax, r8d
inc     r11d
mov     [rsi+rcx*4+4], eax
cmp     r11d, edi
jb      short loc_7FF6E3446550
mov     r14d, r15d
mov     [rsp+258h+arg_0], r15d
mov     r15d, 0FFFFFFFFh

loc_7FF6E344659C:
mov     r11, [rsp+258h+arg_8]
mov     eax, [rsp+258h+arg_18]
add     r11, 4
cmp     rax, r10
jnb     short loc_7FF6E34465EB
mov     r10d, ebp
test    edi, edi
jz      short loc_7FF6E34465E8
mov     r8, rbp
xchg    ax, ax

loc_7FF6E34465C0:
mov     ecx, [r11]
lea     eax, [r10+r12]
lea     rdx, [rsi+rax*4]
inc     r10d
mov     eax, [rdx+4]
lea     r11, [r11+4]
add     r8, rax
add     r8, rcx
mov     [rdx+4], r8d
shr     r8, 20h
cmp     r10d, edi
jb      short loc_7FF6E34465C0

loc_7FF6E34465E8:
dec     r9

loc_7FF6E34465EB:
lea     r10d, [r13-1]

loc_7FF6E34465EF:
mov     r11, [rsp+258h+var_228]
dec     r13d
shl     r11, 20h
mov     eax, r9d
add     r11, rax
sub     r12d, 1
mov     [rsp+258h+var_228], r11
jns     loc_7FF6E3446440
mov     r13, [rsp+258h+var_40]

loc_7FF6E3446618:
inc     r10d
mov     ecx, r10d
cmp     r10d, [rsi]
jnb     short loc_7FF6E344662F

loc_7FF6E3446623:
mov     eax, ecx
inc     ecx
mov     [rsi+rax*4+4], ebp
cmp     ecx, [rsi]
jb      short loc_7FF6E3446623

loc_7FF6E344662F:
mov     [rsi], r10d
test    r10d, r10d
jz      short loc_7FF6E3446653
nop     word ptr [rax+rax+00000000h]

loc_7FF6E3446640:
lea     edx, [r10-1]
mov     r10d, edx
cmp     [rsi+rdx*4+4], ebp
jnz     short loc_7FF6E3446653
mov     [rsi], edx
test    edx, edx
jnz     short loc_7FF6E3446640

loc_7FF6E3446653:
mov     rax, r11
jmp     short loc_7FF6E344665A

loc_7FF6E3446658:
xor     eax, eax

loc_7FF6E344665A:
add     rsp, 220h
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rsi
pop     rbp
pop     rbx
retn
sub_7FF6E34461E0 endp

; [00000087 BYTES: COLLAPSED FUNCTION memcpy_s]
algn_7FF6E34466F3:
align 4
; [00000056 BYTES: COLLAPSED FUNCTION abort]
algn_7FF6E344674A:
align 4
; [00000015 BYTES: COLLAPSED FUNCTION __strncnt]
align 4
; [0000019D BYTES: COLLAPSED FUNCTION __acrt_convert_wcs_mbs_cp<char,wchar_t,_lambda_7c9dea7b4ca7285d2cdb541a38da6275_,__crt_win32_buffer_internal_dynamic_resizing>(char const * const,__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing> &,_lambda_7c9dea7b4ca7285d2cdb541a38da6275_ const &,uint)]
algn_7FF6E3446901:
align 4
; [00000119 BYTES: COLLAPSED FUNCTION __acrt_convert_wcs_mbs_cp<wchar_t,char,_lambda_f788ae46380686e8b737efdd8c720d07_,__crt_win32_buffer_no_resizing>(wchar_t const * const,__crt_win32_buffer<char,__crt_win32_buffer_no_resizing> &,_lambda_f788ae46380686e8b737efdd8c720d07_ const &,uint)]
algn_7FF6E3446A1D:
align 20h



sub_7FF6E3446A20 proc near
mov     eax, cs:dword_7FF6E346D098
mov     r10, rdx
mov     r9, rcx
cmp     eax, 5
jl      loc_7FF6E3446AD2
mov     r8, rcx
mov     eax, 20h ; ' '
and     r8d, 1Fh
sub     rax, r8
neg     r8
mov     r8, rcx
sbb     r11, r11
and     r11, rax
cmp     rdx, r11
cmovb   r11, rdx
lea     rax, [r11+rcx]
cmp     rcx, rax
jz      short loc_7FF6E3446A6E

loc_7FF6E3446A60:
cmp     byte ptr [r8], 0
jz      short loc_7FF6E3446A6E
inc     r8
cmp     r8, rax
jnz     short loc_7FF6E3446A60

loc_7FF6E3446A6E:
mov     rdx, r8
sub     rdx, r9
cmp     rdx, r11
jnz     loc_7FF6E3446B85
mov     rcx, r10
mov     rdx, r8
sub     rcx, r11
mov     r11, r8
mov     rax, rcx
and     eax, 1Fh
sub     r11, rax
add     r11, rcx
cmp     r8, r11
jz      short loc_7FF6E3446AB6

loc_7FF6E3446A9A:
vpxor   xmm1, xmm1, xmm1
vpcmpeqb ymm1, ymm1, ymmword ptr [rdx]
vpmovmskb eax, ymm1
test    eax, eax
vzeroupper
jnz     short loc_7FF6E3446AB6
add     rdx, 20h ; ' '
cmp     rdx, r11
jnz     short loc_7FF6E3446A9A

loc_7FF6E3446AB6:
lea     rax, [r9+r10]
jmp     short loc_7FF6E3446AC8

loc_7FF6E3446ABC:
cmp     byte ptr [rdx], 0
jz      loc_7FF6E3446B82
inc     rdx

loc_7FF6E3446AC8:
cmp     rdx, rax
jnz     short loc_7FF6E3446ABC
jmp     loc_7FF6E3446B82

loc_7FF6E3446AD2:
cmp     eax, 1
jl      loc_7FF6E3446B69
and     ecx, 0Fh
mov     eax, 10h
sub     rax, rcx
mov     r8, r9
neg     rcx
sbb     r11, r11
and     r11, rax
cmp     r10, r11
cmovb   r11, r10
lea     rax, [r11+r9]
cmp     r9, rax
jz      short loc_7FF6E3446B10

loc_7FF6E3446B02:
cmp     byte ptr [r8], 0
jz      short loc_7FF6E3446B10
inc     r8
cmp     r8, rax
jnz     short loc_7FF6E3446B02

loc_7FF6E3446B10:
mov     rdx, r8
sub     rdx, r9
cmp     rdx, r11
jnz     short loc_7FF6E3446B85
mov     rcx, r10
mov     rdx, r8
sub     rcx, r11
xorps   xmm1, xmm1
mov     rax, rcx
mov     r11, r8
and     eax, 0Fh
sub     r11, rax
add     r11, rcx
cmp     r8, r11
jz      short loc_7FF6E3446B54

loc_7FF6E3446B3B:
movdqa  xmm0, xmm1
pcmpeqb xmm0, xmmword ptr [rdx]
pmovmskb eax, xmm0
test    eax, eax
jnz     short loc_7FF6E3446B54
add     rdx, 10h
cmp     rdx, r11
jnz     short loc_7FF6E3446B3B

loc_7FF6E3446B54:
lea     rax, [r9+r10]
jmp     short loc_7FF6E3446B62

loc_7FF6E3446B5A:
cmp     byte ptr [rdx], 0
jz      short loc_7FF6E3446B82
inc     rdx

loc_7FF6E3446B62:
cmp     rdx, rax
jnz     short loc_7FF6E3446B5A
jmp     short loc_7FF6E3446B82

loc_7FF6E3446B69:
lea     rax, [rcx+rdx]
mov     rdx, r9
cmp     r9, rax
jz      short loc_7FF6E3446B82

loc_7FF6E3446B75:
cmp     byte ptr [rdx], 0
jz      short loc_7FF6E3446B82
inc     rdx
cmp     rdx, rax
jnz     short loc_7FF6E3446B75

loc_7FF6E3446B82:
sub     rdx, r9

loc_7FF6E3446B85:
mov     rax, rdx
retn
sub_7FF6E3446A20 endp

align 4



sub_7FF6E3446B8C proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
mov     eax, cs:dword_7FF6E346D098
mov     r11, rdx
mov     r8, rcx
cmp     eax, 5
jl      loc_7FF6E3446C7B
test    r8b, 1
jz      short loc_7FF6E3446BD7
lea     rax, [rcx+rdx*2]
mov     rdx, rcx
cmp     rcx, rax
jz      loc_7FF6E3446D71
xor     r9d, r9d

loc_7FF6E3446BBF:
cmp     [rdx], r9w
jz      loc_7FF6E3446D71
add     rdx, 2
cmp     rdx, rax
jnz     short loc_7FF6E3446BBF
jmp     loc_7FF6E3446D71

loc_7FF6E3446BD7:
and     ecx, 1Fh
mov     eax, 20h ; ' '
sub     rax, rcx
mov     rdx, r8
neg     rcx
sbb     rbx, rbx
and     rbx, rax
shr     rbx, 1
cmp     r11, rbx
cmovb   rbx, r11
xor     r9d, r9d
lea     rax, [r8+rbx*2]
cmp     r8, rax
jz      short loc_7FF6E3446C13

loc_7FF6E3446C04:
cmp     [rdx], r9w
jz      short loc_7FF6E3446C13
add     rdx, 2
cmp     rdx, rax
jnz     short loc_7FF6E3446C04

loc_7FF6E3446C13:
sub     rdx, r8
sar     rdx, 1
cmp     rdx, rbx
jnz     loc_7FF6E3446D77
lea     r10, [r8+rdx*2]
mov     rcx, r11
sub     rcx, rbx
mov     rax, rcx
and     eax, 1Fh
sub     rcx, rax
add     rcx, rdx
lea     rdx, [r8+rcx*2]
cmp     r10, rdx
jz      short loc_7FF6E3446C5E

loc_7FF6E3446C41:
vpxor   xmm1, xmm1, xmm1
vpcmpeqw ymm1, ymm1, ymmword ptr [r10]
vpmovmskb eax, ymm1
test    eax, eax
vzeroupper
jnz     short loc_7FF6E3446C5E
add     r10, 20h ; ' '
cmp     r10, rdx
jnz     short loc_7FF6E3446C41

loc_7FF6E3446C5E:
lea     rax, [r8+r11*2]
jmp     short loc_7FF6E3446C6E

loc_7FF6E3446C64:
cmp     [r10], r9w
jz      short loc_7FF6E3446C73
add     r10, 2

loc_7FF6E3446C6E:
cmp     r10, rax
jnz     short loc_7FF6E3446C64

loc_7FF6E3446C73:
mov     rdx, r10
jmp     loc_7FF6E3446D71

loc_7FF6E3446C7B:
cmp     eax, 1
jl      loc_7FF6E3446D53
test    r8b, 1
jz      short loc_7FF6E3446CB5
lea     rax, [rcx+rdx*2]
mov     rdx, r8
cmp     r8, rax
jz      loc_7FF6E3446D71
xor     r9d, r9d

loc_7FF6E3446C9D:
cmp     [rdx], r9w
jz      loc_7FF6E3446D71
add     rdx, 2
cmp     rdx, rax
jnz     short loc_7FF6E3446C9D
jmp     loc_7FF6E3446D71

loc_7FF6E3446CB5:
and     ecx, 0Fh
mov     eax, 10h
sub     rax, rcx
mov     rdx, r8
neg     rcx
sbb     rbx, rbx
and     rbx, rax
shr     rbx, 1
cmp     r11, rbx
cmovb   rbx, r11
xor     r9d, r9d
lea     rax, [r8+rbx*2]
cmp     r8, rax
jz      short loc_7FF6E3446CF1

loc_7FF6E3446CE2:
cmp     [rdx], r9w
jz      short loc_7FF6E3446CF1
add     rdx, 2
cmp     rdx, rax
jnz     short loc_7FF6E3446CE2

loc_7FF6E3446CF1:
sub     rdx, r8
sar     rdx, 1
cmp     rdx, rbx
jnz     short loc_7FF6E3446D77
mov     rcx, r11
lea     r10, [r8+rdx*2]
sub     rcx, rbx
xorps   xmm1, xmm1
mov     rax, rcx
and     eax, 0Fh
sub     rcx, rax
add     rcx, rdx
lea     rdx, [r8+rcx*2]
jmp     short loc_7FF6E3446D30

loc_7FF6E3446D1B:
movdqa  xmm0, xmm1
pcmpeqw xmm0, xmmword ptr [r10]
pmovmskb eax, xmm0
test    eax, eax
jnz     short loc_7FF6E3446D35
add     r10, 10h

loc_7FF6E3446D30:
cmp     r10, rdx
jnz     short loc_7FF6E3446D1B

loc_7FF6E3446D35:
lea     rax, [r8+r11*2]
jmp     short loc_7FF6E3446D49

loc_7FF6E3446D3B:
cmp     [r10], r9w
jz      loc_7FF6E3446C73
add     r10, 2

loc_7FF6E3446D49:
cmp     r10, rax
jnz     short loc_7FF6E3446D3B
jmp     loc_7FF6E3446C73

loc_7FF6E3446D53:
lea     rax, [rcx+rdx*2]
mov     rdx, r8
cmp     r8, rax
jz      short loc_7FF6E3446D71
xor     r9d, r9d

loc_7FF6E3446D62:
cmp     [rdx], r9w
jz      short loc_7FF6E3446D71
add     rdx, 2
cmp     rdx, rax
jnz     short loc_7FF6E3446D62

loc_7FF6E3446D71:
sub     rdx, r8
sar     rdx, 1

loc_7FF6E3446D77:
mov     rbx, [rsp+arg_0]
mov     rax, rdx
retn
sub_7FF6E3446B8C endp




sub_7FF6E3446D80 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     rdi, rcx
call    _query_new_handler
xor     ebx, ebx
test    rax, rax
jz      short loc_7FF6E3446DA8
mov     rcx, rdi
call    j__guard_dispatch_icall_nop
test    eax, eax
setnz   bl
mov     eax, ebx

loc_7FF6E3446DA8:
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E3446D80 endp

algn_7FF6E3446DB3:
align 20h



sub_7FF6E3446DC0 proc near
mov     cs:qword_7FF6E346F178, rcx
retn
sub_7FF6E3446DC0 endp

align 10h
; [00000037 BYTES: COLLAPSED FUNCTION _query_new_handler]
algn_7FF6E3446E07:
align 10h
; [00000059 BYTES: COLLAPSED FUNCTION _set_new_handler]
algn_7FF6E3446E69:
align 10h



sub_7FF6E3446E70 proc near
mov     rcx, cs:__security_cookie
jmp     _set_new_handler
sub_7FF6E3446E70 endp




sub_7FF6E3446E7C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 20h
mov     rsi, rdx
mov     edi, ecx
call    sub_7FF6E344A81C
xor     r9d, r9d
mov     rbx, rax
test    rax, rax
jz      short loc_7FF6E3446EC4
mov     rcx, [rax]
mov     rax, rcx
lea     r8, [rcx+0C0h]
cmp     rcx, r8
jz      short loc_7FF6E3446EC4

loc_7FF6E3446EB7:
cmp     [rax], edi
jz      short loc_7FF6E3446EDB
add     rax, 10h
cmp     rax, r8
jnz     short loc_7FF6E3446EB7

loc_7FF6E3446EC4:
xor     eax, eax

loc_7FF6E3446EC6:
mov     rbx, [rsp+28h+arg_0]
mov     rbp, [rsp+28h+arg_8]
mov     rsi, [rsp+28h+arg_10]
add     rsp, 20h
pop     rdi
retn

loc_7FF6E3446EDB:
test    rax, rax
jz      short loc_7FF6E3446EC4
mov     r8, [rax+8]
test    r8, r8
jz      short loc_7FF6E3446EC4
cmp     r8, 5
jnz     short loc_7FF6E3446EF9
mov     [rax+8], r9
lea     eax, [r8-4]
jmp     short loc_7FF6E3446EC6

loc_7FF6E3446EF9:
cmp     r8, 1
jnz     short loc_7FF6E3446F04

loc_7FF6E3446EFF:
or      eax, 0FFFFFFFFh
jmp     short loc_7FF6E3446EC6

loc_7FF6E3446F04:
mov     rbp, [rbx+8]
mov     [rbx+8], rsi
cmp     dword ptr [rax+4], 8
jnz     loc_7FF6E3446FCF
add     rcx, 30h ; '0'
lea     rdx, [rcx+90h]
jmp     short loc_7FF6E3446F2B

loc_7FF6E3446F23:
mov     [rcx+8], r9
add     rcx, 10h

loc_7FF6E3446F2B:
cmp     rcx, rdx
jnz     short loc_7FF6E3446F23
cmp     dword ptr [rax], 0C000008Dh
mov     edi, [rbx+10h]
jz      short loc_7FF6E3446FB5
cmp     dword ptr [rax], 0C000008Eh
jz      short loc_7FF6E3446FAE
cmp     dword ptr [rax], 0C000008Fh
jz      short loc_7FF6E3446FA7
cmp     dword ptr [rax], 0C0000090h
jz      short loc_7FF6E3446FA0
cmp     dword ptr [rax], 0C0000091h
jz      short loc_7FF6E3446F99
cmp     dword ptr [rax], 0C0000092h
jz      short loc_7FF6E3446F92
cmp     dword ptr [rax], 0C0000093h
jz      short loc_7FF6E3446F8B
cmp     dword ptr [rax], 0C00002B4h
jz      short loc_7FF6E3446F84
cmp     dword ptr [rax], 0C00002B5h
mov     edx, edi
jnz     short loc_7FF6E3446FBD
mov     edx, 8Dh
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446F84:
mov     edx, 8Eh
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446F8B:
mov     edx, 85h
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446F92:
mov     edx, 8Ah
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446F99:
mov     edx, 84h
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446FA0:
mov     edx, 81h
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446FA7:
mov     edx, 86h
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446FAE:
mov     edx, 83h
jmp     short loc_7FF6E3446FBA

loc_7FF6E3446FB5:
mov     edx, 82h

loc_7FF6E3446FBA:
mov     [rbx+10h], edx

loc_7FF6E3446FBD:
mov     ecx, 8
mov     rax, r8
call    j__guard_dispatch_icall_nop
mov     [rbx+10h], edi
jmp     short loc_7FF6E3446FDE

loc_7FF6E3446FCF:
mov     ecx, [rax+4]
mov     [rax+8], r9
mov     rax, r8
call    j__guard_dispatch_icall_nop

loc_7FF6E3446FDE:
mov     [rbx+8], rbp
jmp     loc_7FF6E3446EFF
sub_7FF6E3446E7C endp

algn_7FF6E3446FE7:
align 8



sub_7FF6E3446FE8 proc near
mov     eax, cs:dword_7FF6E346F180
retn
sub_7FF6E3446FE8 endp

align 10h



sub_7FF6E3446FF0 proc near
mov     cs:dword_7FF6E346F180, ecx
retn
sub_7FF6E3446FF0 endp

align 20h
; [00000020 BYTES: COLLAPSED FUNCTION __acrt_has_user_matherr]



sub_7FF6E3447020 proc near
mov     cs:qword_7FF6E346F188, rcx
retn
sub_7FF6E3447020 endp

align 10h



sub_7FF6E3447030 proc near
mov     rax, cs:__security_cookie
mov     r8, rcx
mov     rdx, cs:qword_7FF6E346F188
mov     ecx, eax
and     ecx, 3Fh
xor     rdx, rax
ror     rdx, cl
test    rdx, rdx
jnz     short loc_7FF6E3447054
xor     eax, eax
retn

loc_7FF6E3447054:
mov     rcx, r8
mov     rax, rdx
jmp     j__guard_dispatch_icall_nop
sub_7FF6E3447030 endp

align 20h



sub_7FF6E3447060 proc near
mov     rdx, cs:__security_cookie
mov     r8, rcx
mov     eax, edx
mov     ecx, 40h ; '@'
and     eax, 3Fh
sub     ecx, eax
ror     r8, cl
xor     r8, rdx
mov     cs:qword_7FF6E346F188, r8
retn
sub_7FF6E3447060 endp




sub_7FF6E3447084 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r12
push    r14
push    r15
sub     rsp, 20h
mov     r15, [rsp+38h+arg_20]
mov     r12, r9
mov     rbx, r8
mov     r14, rdx
mov     rdi, rcx
and     qword ptr [r15], 0
mov     qword ptr [r9], 1
test    rdx, rdx
jz      short loc_7FF6E34470C9
mov     [rdx], rbx
add     r14, 8

loc_7FF6E34470C9:
xor     bpl, bpl

loc_7FF6E34470CC:
cmp     byte ptr [rdi], 22h ; '"'
jnz     short loc_7FF6E34470E0
test    bpl, bpl
mov     sil, 22h ; '"'
setz    bpl
inc     rdi
jmp     short loc_7FF6E3447117

loc_7FF6E34470E0:
inc     qword ptr [r15]
test    rbx, rbx
jz      short loc_7FF6E34470EF
mov     al, [rdi]
mov     [rbx], al
inc     rbx

loc_7FF6E34470EF:
movsx   esi, byte ptr [rdi]
inc     rdi
mov     ecx, esi        ; Ch
call    _ismbblead
test    eax, eax
jz      short loc_7FF6E3447112
inc     qword ptr [r15]
test    rbx, rbx
jz      short loc_7FF6E344710F
mov     al, [rdi]
mov     [rbx], al
inc     rbx

loc_7FF6E344710F:
inc     rdi

loc_7FF6E3447112:
test    sil, sil
jz      short loc_7FF6E3447133

loc_7FF6E3447117:
test    bpl, bpl
jnz     short loc_7FF6E34470CC
cmp     sil, 20h ; ' '
jz      short loc_7FF6E3447128
cmp     sil, 9
jnz     short loc_7FF6E34470CC

loc_7FF6E3447128:
test    rbx, rbx
jz      short loc_7FF6E3447136
mov     byte ptr [rbx-1], 0
jmp     short loc_7FF6E3447136

loc_7FF6E3447133:
dec     rdi

loc_7FF6E3447136:
xor     sil, sil

loc_7FF6E3447139:
mov     al, [rdi]
test    al, al
jz      loc_7FF6E3447215

loc_7FF6E3447143:
cmp     al, 20h ; ' '
jz      short loc_7FF6E344714B
cmp     al, 9
jnz     short loc_7FF6E3447152

loc_7FF6E344714B:
inc     rdi
mov     al, [rdi]
jmp     short loc_7FF6E3447143

loc_7FF6E3447152:
test    al, al
jz      loc_7FF6E3447215
test    r14, r14
jz      short loc_7FF6E3447166
mov     [r14], rbx
add     r14, 8

loc_7FF6E3447166:
inc     qword ptr [r12]

loc_7FF6E344716A:
mov     edx, 1
xor     eax, eax
jmp     short loc_7FF6E3447178

loc_7FF6E3447173:
inc     rdi
inc     eax

loc_7FF6E3447178:
mov     cl, [rdi]
cmp     cl, 5Ch ; '\'
jz      short loc_7FF6E3447173
cmp     cl, 22h ; '"'
jnz     short loc_7FF6E34471B4
test    dl, al
jnz     short loc_7FF6E34471A0
test    sil, sil
jz      short loc_7FF6E3447197
cmp     [rdi+1], cl
jnz     short loc_7FF6E3447197
inc     rdi
jmp     short loc_7FF6E34471A0

loc_7FF6E3447197:
xor     edx, edx
test    sil, sil
setz    sil

loc_7FF6E34471A0:
shr     eax, 1
jmp     short loc_7FF6E34471B4

loc_7FF6E34471A4:
dec     eax
test    rbx, rbx
jz      short loc_7FF6E34471B1
mov     byte ptr [rbx], 5Ch ; '\'
inc     rbx

loc_7FF6E34471B1:
inc     qword ptr [r15]

loc_7FF6E34471B4:
test    eax, eax
jnz     short loc_7FF6E34471A4
mov     al, [rdi]
test    al, al
jz      short loc_7FF6E3447202
test    sil, sil
jnz     short loc_7FF6E34471CB
cmp     al, 20h ; ' '
jz      short loc_7FF6E3447202
cmp     al, 9
jz      short loc_7FF6E3447202

loc_7FF6E34471CB:
test    edx, edx
jz      short loc_7FF6E34471FA
test    rbx, rbx
jz      short loc_7FF6E34471D9
mov     [rbx], al
inc     rbx

loc_7FF6E34471D9:       ; Ch
movsx   ecx, byte ptr [rdi]
call    _ismbblead
test    eax, eax
jz      short loc_7FF6E34471F7
inc     qword ptr [r15]
inc     rdi
test    rbx, rbx
jz      short loc_7FF6E34471F7
mov     al, [rdi]
mov     [rbx], al
inc     rbx

loc_7FF6E34471F7:
inc     qword ptr [r15]

loc_7FF6E34471FA:
inc     rdi
jmp     loc_7FF6E344716A

loc_7FF6E3447202:
test    rbx, rbx
jz      short loc_7FF6E344720D
mov     byte ptr [rbx], 0
inc     rbx

loc_7FF6E344720D:
inc     qword ptr [r15]
jmp     loc_7FF6E3447139

loc_7FF6E3447215:
test    r14, r14
jz      short loc_7FF6E344721E
and     qword ptr [r14], 0

loc_7FF6E344721E:
inc     qword ptr [r12]
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
mov     rdi, [rsp+38h+arg_18]
add     rsp, 20h
pop     r15
pop     r14
pop     r12
retn
sub_7FF6E3447084 endp

algn_7FF6E3447241:
align 4
; [0000005D BYTES: COLLAPSED FUNCTION __acrt_allocate_buffer_for_argv]
algn_7FF6E34472A1:
align 4


; Attributes: bp-based frame

sub_7FF6E34472A4 proc near

var_10= qword ptr -10h
arg_0= qword ptr  30h
Block= qword ptr  38h
arg_10= qword ptr  40h
arg_18= qword ptr  48h

mov     [rsp-28h+arg_0], rbx
push    rbp
push    rsi
push    rdi
push    r14
push    r15
mov     rbp, rsp
sub     rsp, 30h
xor     edi, edi
mov     r14d, ecx
test    ecx, ecx
jz      loc_7FF6E344740E
lea     eax, [rcx-1]
cmp     eax, 1
jbe     short loc_7FF6E34472E2
call    sub_7FF6E3444754
mov     edi, 16h
mov     [rax], edi
call    _invalid_parameter_noinfo
jmp     loc_7FF6E344740E

loc_7FF6E34472E2:
call    __acrt_initialize_multibyte
lea     rbx, aCUsersKiennd19 ; ""
mov     r8d, 104h
mov     rdx, rbx
xor     ecx, ecx
call    __acrt_GetModuleFileNameA
mov     rsi, cs:qword_7FF6E346F2F0
mov     cs:qword_7FF6E346F2D0, rbx
test    rsi, rsi
jz      short loc_7FF6E3447316
cmp     [rsi], dil
jnz     short loc_7FF6E3447319

loc_7FF6E3447316:
mov     rsi, rbx

loc_7FF6E3447319:
lea     rax, [rbp+arg_18]
mov     [rbp+arg_10], rdi
lea     r9, [rbp+arg_10]
mov     [rsp+30h+var_10], rax
xor     r8d, r8d
mov     [rbp+arg_18], rdi
xor     edx, edx
mov     rcx, rsi
call    sub_7FF6E3447084
mov     r15, [rbp+arg_10]
mov     r8d, 1
mov     rdx, [rbp+arg_18]
mov     rcx, r15
call    __acrt_allocate_buffer_for_argv
mov     rbx, rax
test    rax, rax
jnz     short loc_7FF6E344736A
call    sub_7FF6E3444754
lea     edi, [rbx+0Ch]
mov     [rax], edi

loc_7FF6E3447363:
xor     ecx, ecx
jmp     loc_7FF6E3447409

loc_7FF6E344736A:
lea     r8, [rax+r15*8]
mov     rdx, rbx
lea     rax, [rbp+arg_18]
mov     rcx, rsi
lea     r9, [rbp+arg_10]
mov     [rsp+30h+var_10], rax
call    sub_7FF6E3447084
cmp     r14d, 1
jnz     short loc_7FF6E34473A0
mov     eax, dword ptr [rbp+arg_10]
dec     eax
mov     cs:qword_7FF6E346F2E0, rbx
mov     cs:dword_7FF6E346F2D8, eax
jmp     short loc_7FF6E3447363

loc_7FF6E34473A0:
lea     rdx, [rbp+Block]
mov     [rbp+Block], rdi
mov     rcx, rbx
call    j_??$common_expand_argv_wildcards@D@@YAHQEAPEADQEAPEAPEAD@Z ; common_expand_argv_wildcards<char>(char * * const,char * * * const)
mov     esi, eax
test    eax, eax
jz      short loc_7FF6E34473CF
mov     rcx, [rbp+Block] ; Block
call    _free_base
mov     rcx, rbx        ; Block
mov     [rbp+Block], rdi
call    _free_base
mov     edi, esi
jmp     short loc_7FF6E344740E

loc_7FF6E34473CF:
mov     rdx, [rbp+Block]
mov     rcx, rdi
mov     rax, rdx
cmp     [rdx], rdi
jz      short loc_7FF6E34473EA

loc_7FF6E34473DE:
lea     rax, [rax+8]
inc     rcx
cmp     [rax], rdi
jnz     short loc_7FF6E34473DE

loc_7FF6E34473EA:
mov     cs:dword_7FF6E346F2D8, ecx
xor     ecx, ecx        ; Block
mov     [rbp+Block], rdi
mov     cs:qword_7FF6E346F2E0, rdx
call    _free_base
mov     rcx, rbx        ; Block
mov     [rbp+Block], rdi

loc_7FF6E3447409:
call    _free_base

loc_7FF6E344740E:
mov     rbx, [rsp+30h+arg_0]
mov     eax, edi
add     rsp, 30h
pop     r15
pop     r14
pop     rdi
pop     rsi
pop     rbp
retn
sub_7FF6E34472A4 endp

algn_7FF6E3447421:
align 4
; [00000073 BYTES: COLLAPSED FUNCTION common_initialize_environment_nolock<char>(void)]
algn_7FF6E3447497:
align 8
; [00000112 BYTES: COLLAPSED FUNCTION create_environment<char>(char * const)]
algn_7FF6E34475AA:
align 4
; [00000041 BYTES: COLLAPSED FUNCTION unknown_libname_82]
algn_7FF6E34475ED:
align 10h
; [000000DE BYTES: COLLAPSED FUNCTION initialize_environment_by_cloning_nolock<char>(void)]
algn_7FF6E34476CE:
align 10h



sub_7FF6E34476D0 proc near
sub     rsp, 28h
mov     rcx, [rcx]      ; Block
cmp     rcx, cs:qword_7FF6E346F2B0
jz      short loc_7FF6E34476E5
call    unknown_libname_82 ; Microsoft VisualC 64bit universal runtime

loc_7FF6E34476E5:
add     rsp, 28h
retn
sub_7FF6E34476D0 endp

algn_7FF6E34476EA:
align 4



sub_7FF6E34476EC proc near
sub     rsp, 28h
mov     rcx, [rcx]      ; Block
cmp     rcx, cs:qword_7FF6E346F2A8
jz      short loc_7FF6E3447701
call    unknown_libname_82 ; Microsoft VisualC 64bit universal runtime

loc_7FF6E3447701:
add     rsp, 28h
retn
sub_7FF6E34476EC endp

algn_7FF6E3447706:
align 8
; [0000003B BYTES: COLLAPSED FUNCTION unknown_libname_83]
algn_7FF6E3447743:
align 4
; [00000043 BYTES: COLLAPSED FUNCTION __dcrt_uninitialize_environments_nolock]
algn_7FF6E3447787:
align 8
; [0000004E BYTES: COLLAPSED FUNCTION unknown_libname_84]
algn_7FF6E34477D6:
align 8
; [00000005 BYTES: COLLAPSED FUNCTION common_initialize_environment_nolock<char>(void)]
align 20h



sub_7FF6E34477E0 proc near

arg_0= qword ptr  8

cmp     rcx, rdx
jz      short locret_7FF6E3447815
mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     rdi, rdx
mov     rbx, rcx

loc_7FF6E34477F5:
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E3447802
call    j__guard_dispatch_icall_nop

loc_7FF6E3447802:
add     rbx, 8
cmp     rbx, rdi
jnz     short loc_7FF6E34477F5
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi

locret_7FF6E3447815:
retn
sub_7FF6E34477E0 endp

algn_7FF6E3447816:
align 8



sub_7FF6E3447818 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     rdi, rdx
mov     rbx, rcx
cmp     rcx, rdx
jz      short loc_7FF6E3447847

loc_7FF6E344782D:
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E344783E
call    j__guard_dispatch_icall_nop
test    eax, eax
jnz     short loc_7FF6E3447849

loc_7FF6E344783E:
add     rbx, 8
cmp     rbx, rdi
jnz     short loc_7FF6E344782D

loc_7FF6E3447847:
xor     eax, eax

loc_7FF6E3447849:
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E3447818 endp

; [00000038 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_99476a1ad63dd22509b5d3e65b0ffc95_,_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_ &,_lambda_f7424dd8d45958661754dc4f2697e9c3_>(_lambda_99476a1ad63dd22509b5d3e65b0ffc95_ &&,_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_ &,_lambda_f7424dd8d45958661754dc4f2697e9c3_ &&)]



sub_7FF6E344788C proc near

; FUNCTION CHUNK AT 00007FF6E345C2FC SIZE 0000002D BYTES

; __unwind { // __C_specific_handler
push    rbx
sub     rsp, 30h
mov     rbx, rcx
cmp     cs:byte_7FF6E346F2C8, 0
jnz     loc_7FF6E3447940
mov     eax, 1
xchg    eax, cs:dword_7FF6E346F2B8

loc_7FF6E34478AD:
;   __try { // __except at loc_7FF6E3447946
mov     rax, [rcx]
mov     ecx, [rax]
test    ecx, ecx
jnz     short loc_7FF6E34478E9
mov     rax, cs:__security_cookie
mov     rdx, cs:qword_7FF6E346F2C0
cmp     rdx, rax
jz      short loc_7FF6E34478E0
mov     ecx, eax
and     ecx, 3Fh
xor     rax, rdx
ror     rax, cl
xor     r8d, r8d
xor     edx, edx
xor     ecx, ecx
call    j__guard_dispatch_icall_nop

loc_7FF6E34478E0:
lea     rcx, stru_7FF6E346F310
jmp     short loc_7FF6E34478F5

loc_7FF6E34478E9:
cmp     ecx, 1
jnz     short loc_7FF6E34478FB
lea     rcx, Table      ; Table

loc_7FF6E34478F5:
call    _execute_onexit_table
nop
;   } // starts at 7FF6E34478AD

loc_7FF6E34478FB:
mov     rax, [rbx]
cmp     dword ptr [rax], 0
jnz     short loc_7FF6E3447916
lea     rdx, unk_7FF6E345D3C0
lea     rcx, unk_7FF6E345D3A0
call    sub_7FF6E34477E0

loc_7FF6E3447916:
lea     rdx, unk_7FF6E345D3D0
lea     rcx, unk_7FF6E345D3C8
call    sub_7FF6E34477E0
mov     rax, [rbx+8]
cmp     dword ptr [rax], 0
jnz     short loc_7FF6E3447940
mov     cs:byte_7FF6E346F2C8, 1
mov     rax, [rbx+10h]
mov     byte ptr [rax], 1

loc_7FF6E3447940:
add     rsp, 30h
pop     rbx
retn

loc_7FF6E3447946:
;   __except(int `_lambda_6e4b09c48022b2350581041d5f6b0c4c_::operator()(void)'::`1'::filt$0) // owned by 7FF6E34478AD
call    sub_7FF6E3449A90
align 4
; } // starts at 7FF6E344788C
sub_7FF6E344788C endp

; [000000E3 BYTES: COLLAPSED FUNCTION common_exit(int,_crt_exit_cleanup_mode,_crt_exit_return_mode)]
algn_7FF6E3447A2F:
align 10h


; Attributes: noreturn

; void __fastcall __noreturn sub_7FF6E3447A30(unsigned int)
sub_7FF6E3447A30 proc near
push    rbx
sub     rsp, 20h
mov     ebx, ecx
test    dl, dl
jz      short loc_7FF6E3447A4D
call    cs:GetCurrentProcess
mov     rcx, rax        ; hProcess
mov     edx, ebx        ; uExitCode
call    cs:TerminateProcess

loc_7FF6E3447A4D:       ; unsigned int
mov     ecx, ebx
call    ?try_cor_exit_process@@YAXI@Z ; try_cor_exit_process(uint)
mov     ecx, ebx        ; uExitCode
call    cs:ExitProcess
db 0CCh
sub_7FF6E3447A30 endp

algn_7FF6E3447A5D:
align 20h
; [00000064 BYTES: COLLAPSED FUNCTION try_cor_exit_process(uint)]
; [00000008 BYTES: COLLAPSED FUNCTION sub_7FF6E3447AC4]



sub_7FF6E3447ACC proc near
mov     edx, 2          ; enum _crt_exit_cleanup_mode
xor     ecx, ecx        ; unsigned int
lea     r8d, [rdx-1]    ; enum _crt_exit_return_mode
jmp     ?common_exit@@YAXHW4_crt_exit_cleanup_mode@@W4_crt_exit_return_mode@@@Z ; common_exit(int,_crt_exit_cleanup_mode,_crt_exit_return_mode)
sub_7FF6E3447ACC endp

; [0000000D BYTES: COLLAPSED FUNCTION _cexit]
align 4
; [0000000C BYTES: COLLAPSED FUNCTION _exit]



sub_7FF6E3447AF8 proc near
sub     rsp, 28h
mov     r8, cs:__security_cookie
mov     rdx, rcx
cmp     cs:qword_7FF6E346F2C0, r8
jnz     short loc_7FF6E3447B2E
mov     eax, r8d
mov     ecx, 40h ; '@'
and     eax, 3Fh
sub     ecx, eax
ror     rdx, cl
xor     rdx, r8
mov     cs:qword_7FF6E346F2C0, rdx
add     rsp, 28h
retn

loc_7FF6E3447B2E:
call    sub_7FF6E3449A90
sub_7FF6E3447AF8 endp

align 4
; [0000000A BYTES: COLLAPSED FUNCTION exit]
align 20h
; [0000003D BYTES: COLLAPSED FUNCTION _set_fmode]
algn_7FF6E3447B7D:
align 20h
; [00000025 BYTES: COLLAPSED FUNCTION __acrt_initialize_command_line]
algn_7FF6E3447BA5:
align 8



sub_7FF6E3447BA8 proc near
lea     rax, dword_7FF6E346F2D8
retn
sub_7FF6E3447BA8 endp




sub_7FF6E3447BB0 proc near
lea     rax, qword_7FF6E346F2E0
retn
sub_7FF6E3447BB0 endp

; [0000013A BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_d67e8342c384adda8f857579ab50b2ae_,_lambda_30712929f77e709619002f448b6a9510_ &,_lambda_4525336fd7e478d965fb7ca7a337cad8_>(_lambda_d67e8342c384adda8f857579ab50b2ae_ &&,_lambda_30712929f77e709619002f448b6a9510_ &,_lambda_4525336fd7e478d965fb7ca7a337cad8_ &&)]
algn_7FF6E3447CF2:
align 4
; [0000006E BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_9431c60049192bb82166e0947f95a2e9_,_lambda_85fa512c59a4d94d4a89f575eefd92a6_ &,_lambda_487febba6ca58d9ce348204d67e1dba3_>(_lambda_9431c60049192bb82166e0947f95a2e9_ &&,_lambda_85fa512c59a4d94d4a89f575eefd92a6_ &,_lambda_487febba6ca58d9ce348204d67e1dba3_ &&)]
algn_7FF6E3447D62:
align 4
; [00000029 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_5df02c53a8f32f81fd64e5bbb78039f1_,_lambda_2af78c5f5901b1372d98f9ab3177dfa6_ &,_lambda_f51fe5fd7c79a33db34fc9310f277369_ &>(_lambda_5df02c53a8f32f81fd64e5bbb78039f1_ &&,_lambda_2af78c5f5901b1372d98f9ab3177dfa6_ &,_lambda_f51fe5fd7c79a33db34fc9310f277369_ &)]
algn_7FF6E3447D8D:
align 10h
; [0000008E BYTES: COLLAPSED FUNCTION _lambda_2a444430fde8c29194d880d93eed5e8f_::operator()(void)]
algn_7FF6E3447E1E:
align 20h
; [00000077 BYTES: COLLAPSED FUNCTION _expandlocale_locale_name_cache::commit_locale_name(wchar_t const * const,unsigned __int64)]
algn_7FF6E3447E97:
align 8
; [00000082 BYTES: COLLAPSED FUNCTION __acrt_copy_locale_name]
algn_7FF6E3447F1A:
align 4
; [0000000C BYTES: COLLAPSED FUNCTION __acrt_set_locale_changed]
; [0000002E BYTES: COLLAPSED FUNCTION __acrt_uninitialize_locale]
algn_7FF6E3447F56:
align 8
; [000000A2 BYTES: COLLAPSED FUNCTION __lc_lctowcs]
algn_7FF6E3447FFA:
align 4
; [00000163 BYTES: COLLAPSED FUNCTION __lc_wcstolc]
align 20h
; [00000069 BYTES: COLLAPSED FUNCTION sub_7FF6E3448160]
algn_7FF6E34481C9:
align 4
; [000000BE BYTES: COLLAPSED FUNCTION _copytlocinfo_nolock]
algn_7FF6E344828A:
align 4
; [00000481 BYTES: COLLAPSED FUNCTION _expandlocale]
algn_7FF6E344870D:
align 10h



; __int64 __fastcall sub_7FF6E3448710(wchar_t *Destination, rsize_t SizeInWords)
sub_7FF6E3448710 proc near

var_48= qword ptr -48h
arg_10= dword ptr  18h

test    r8d, r8d
jle     short locret_7FF6E3448761
mov     rax, rsp
mov     [rax+18h], r8d
mov     [rax+20h], r9
push    rbx
push    rbp
push    rsi
push    rdi
sub     rsp, 48h
lea     rdi, [rax+20h]
xor     ebx, ebx
add     rdi, 0FFFFFFFFFFFFFFF8h
mov     rsi, rdx
mov     rbp, rcx

loc_7FF6E3448738:
lea     rdi, [rdi+8]
mov     rdx, rsi        ; SizeInWords
mov     r8, [rdi]       ; Source
mov     rcx, rbp        ; Destination
call    wcscat_s
test    eax, eax
jnz     short loc_7FF6E3448762
inc     ebx
cmp     ebx, [rsp+68h+arg_10]
jl      short loc_7FF6E3448738
add     rsp, 48h
pop     rdi
pop     rsi
pop     rbp
pop     rbx

locret_7FF6E3448761:
retn

loc_7FF6E3448762:
and     [rsp+68h+var_48], 0
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
sub_7FF6E3448710 endp

align 8
; [000000A1 BYTES: COLLAPSED FUNCTION _wsetlocale]
algn_7FF6E3448819:
align 4
; [000001EA BYTES: COLLAPSED FUNCTION _wsetlocale_get_all]
algn_7FF6E3448A06:
align 8
; [00000295 BYTES: COLLAPSED FUNCTION _wsetlocale_nolock]
algn_7FF6E3448C9D:
align 20h


; Attributes: bp-based frame fpd=260h

sub_7FF6E3448CA0 proc near

Reserved= qword ptr -340h
var_338= qword ptr -338h
var_330= dword ptr -330h
var_320= qword ptr -320h
var_318= qword ptr -318h
var_310= qword ptr -310h
Source= word ptr -300h
var_2FE= word ptr -2FEh
var_1F0= word ptr -1F0h
Buf1= byte ptr -140h
var_40= qword ptr -40h
arg_18= qword ptr  28h

; __unwind { // __GSHandlerCheck
mov     [rsp-8+arg_18], rbx
push    rbp
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
lea     rbp, [rsp-230h]
sub     rsp, 330h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+260h+var_40], rax
xor     r13d, r13d
movsxd  r12, edx
mov     dword ptr [rsp+360h+var_320], r13d
mov     rbx, r8
mov     rdi, rcx
call    sub_7FF6E344A7BC
lea     r9, [rbp+260h+var_1F0] ; wchar_t *
mov     r8d, 83h        ; SizeInWords
lea     rdx, [rsp+360h+Source] ; Destination
mov     rcx, rbx        ; Source
lea     r14, [rax+2C8h]
lea     rax, [rsp+360h+var_320]
mov     [rsp+360h+var_338], rax ; __int64
mov     [rsp+360h+Reserved], 55h ; 'U' ; rsize_t
call    _expandlocale
test    rax, rax
jz      loc_7FF6E3448F41
mov     r15, r12
lea     rcx, [rsp+360h+Source]
shl     r15, 5
mov     rbx, r12
mov     rax, [r15+rdi+28h]
mov     r9, rax
sub     r9, rcx

loc_7FF6E3448D3A:
movzx   edx, word ptr [rcx]
movzx   r8d, word ptr [rcx+r9]
sub     edx, r8d
jnz     short loc_7FF6E3448D50
add     rcx, 2
test    r8d, r8d
jnz     short loc_7FF6E3448D3A

loc_7FF6E3448D50:
test    edx, edx
jz      loc_7FF6E3448F43
lea     rax, [rsp+360h+Source]
or      rsi, 0FFFFFFFFFFFFFFFFh

loc_7FF6E3448D61:
inc     rsi
cmp     [rax+rsi*2], r13w
jnz     short loc_7FF6E3448D61
lea     rcx, ds:6[rsi*2] ; Size
call    _malloc_base
mov     r13, rax
test    rax, rax
jz      loc_7FF6E3448F41
mov     rcx, [r15+rdi+28h]
lea     r8, [rsp+360h+Source] ; Source
mov     [rsp+360h+var_318], rcx
lea     rdx, [rsi+1]    ; SizeInWords
mov     rcx, [rdi+r12*8+128h]
mov     [rsp+360h+var_310], rcx
mov     ecx, [rdi+0Ch]
mov     dword ptr [rsp+360h+var_320+4], ecx
lea     rcx, [rax+4]    ; Destination
call    wcscpy_s
xor     esi, esi
test    eax, eax
jnz     loc_7FF6E3448FF1
cmp     [rsp+360h+Source], 43h ; 'C'
lea     rax, [r13+4]
mov     [r15+rdi+28h], rax
jnz     short loc_7FF6E3448DDA
cmp     [rsp+360h+var_2FE], si
jnz     short loc_7FF6E3448DDA
mov     eax, esi
jmp     short loc_7FF6E3448DE3

loc_7FF6E3448DDA:       ; Source
lea     rcx, [rbp+260h+var_1F0]
call    __acrt_copy_locale_name

loc_7FF6E3448DE3:
mov     [rdi+r12*8+128h], rax
cmp     r12d, 2
jnz     loc_7FF6E3448ED0
mov     eax, dword ptr [rsp+360h+var_320]
mov     r8d, esi
mov     [rdi+0Ch], eax
mov     rdx, rsi
mov     rcx, [r14+20h]

loc_7FF6E3448E06:
mov     eax, [r14+rdx*8]
cmp     [rdi+0Ch], eax
jz      short loc_7FF6E3448E28
mov     rax, [r14+rdx*8]
inc     r8d
mov     [r14+rdx*8], rcx
inc     rdx
mov     rcx, rax
cmp     rdx, 5
jl      short loc_7FF6E3448E06
jmp     short loc_7FF6E3448E3B

loc_7FF6E3448E28:
test    r8d, r8d
jz      short loc_7FF6E3448E3B
movsxd  rdx, r8d
mov     rax, [r14+rdx*8]
mov     [r14], rax
mov     [r14+rdx*8], rcx

loc_7FF6E3448E3B:
cmp     r8d, 5
jnz     loc_7FF6E3448EC7
mov     eax, [rdi+0Ch]
lea     r9d, [r8+7Ah]
mov     [rsp+360h+var_330], 1 ; int
lea     r8, unk_7FF6E34610D0
mov     dword ptr [rsp+360h+var_338], eax ; int
lea     edx, [r9-7Eh]   ; dwInfoType
lea     rax, [rbp+260h+Buf1]
xor     ecx, ecx        ; struct __crt_locale_pointers *
mov     [rsp+360h+Reserved], rax ; lpCharType
call    __acrt_GetStringTypeA
mov     ecx, esi
test    eax, eax
jz      short loc_7FF6E3448EB6
lea     rax, [rbp+260h+Buf1]

loc_7FF6E3448E83:
mov     edx, 1FFh
inc     ecx
and     [rax], dx
lea     rax, [rax+2]
cmp     ecx, 7Fh
jb      short loc_7FF6E3448E83
mov     rdx, cs:Buf2    ; Buf2
lea     rcx, [rbp+260h+Buf1] ; Buf1
mov     r8d, 0FEh       ; Size
call    memcmp
test    eax, eax
mov     ecx, esi
setz    cl

loc_7FF6E3448EB6:
mov     eax, 4
mov     rdx, r14
mov     [rdx+rax], ecx
mov     eax, [rdi+0Ch]
mov     [r14], eax

loc_7FF6E3448EC7:
mov     eax, [r14+4]
mov     [rdi+1Ch], eax
jmp     short loc_7FF6E3448EEC

loc_7FF6E3448ED0:
cmp     r12d, 1
jnz     short loc_7FF6E3448EDF
mov     eax, dword ptr [rsp+360h+var_320]
mov     [rdi+14h], eax
jmp     short loc_7FF6E3448EEC

loc_7FF6E3448EDF:
cmp     r12d, 5
jnz     short loc_7FF6E3448EEC
mov     eax, dword ptr [rsp+360h+var_320]
mov     [rdi+18h], eax

loc_7FF6E3448EEC:
lea     rdx, funcs_140018EFE
mov     rcx, rdi
lea     rax, [r12+r12*2]
mov     rax, ds:(funcs_140018EFE - 7FF6E3461160h)[rdx+rax*8]
call    j__guard_dispatch_icall_nop
test    eax, eax
jz      short loc_7FF6E3448F6D
mov     rcx, [rsp+360h+var_318]
mov     rax, rbx
shl     rax, 5
mov     [rax+rdi+28h], rcx
mov     rcx, [rdi+r12*8+128h] ; Block
call    _free_base
mov     rax, [rsp+360h+var_310]
mov     rcx, r13        ; Block
mov     [rdi+r12*8+128h], rax
call    _free_base
mov     eax, dword ptr [rsp+360h+var_320+4]
mov     [rdi+0Ch], eax

loc_7FF6E3448F41:
xor     eax, eax

loc_7FF6E3448F43:
mov     rcx, [rbp+260h+var_40]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
mov     rbx, [rsp+360h+arg_18]
add     rsp, 330h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbp
retn

loc_7FF6E3448F6D:
lea     rax, unk_7FF6E346D428
cmp     [rsp+360h+var_318], rax
jz      short loc_7FF6E3448FCF
mov     rdx, rbx
shl     rdx, 5
or      ecx, 0FFFFFFFFh
mov     rax, [rdx+rdi+38h]
lock xadd [rax], ecx
cmp     ecx, 1
jnz     short loc_7FF6E3448FCF
mov     rcx, [rdx+rdi+38h] ; Block
call    _free_base
mov     rcx, rbx
shl     rcx, 5
mov     rcx, [rcx+rdi+30h] ; Block
call    _free_base
mov     rcx, [rdi+r12*8+128h] ; Block
call    _free_base
mov     rcx, rbx
shl     rcx, 5
mov     [rcx+rdi+28h], rsi
mov     [rdi+r12*8+128h], rsi

loc_7FF6E3448FCF:
mov     rcx, rbx
mov     dword ptr [r13+0], 1
shl     rcx, 5
shl     rbx, 5
mov     [rcx+rdi+38h], r13
mov     rax, [rbx+rdi+28h]
jmp     loc_7FF6E3448F43

loc_7FF6E3448FF1:       ; LineNo
xor     r9d, r9d
mov     [rsp+360h+Reserved], rsi ; Reserved
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
db 0CCh
; } // starts at 7FF6E3448CA0
sub_7FF6E3448CA0 endp

algn_7FF6E3449006:
align 8
; [000001FB BYTES: COLLAPSED FUNCTION parse_bcp47]
algn_7FF6E3449203:
align 4
; [00000047 BYTES: COLLAPSED FUNCTION parse_bcp47_code_page]
algn_7FF6E344924B:
align 4
; [00000089 BYTES: COLLAPSED FUNCTION parse_bcp47_language]
algn_7FF6E34492D5:
align 8
; [000000F3 BYTES: COLLAPSED FUNCTION parse_bcp47_region]
algn_7FF6E34493CB:
align 4
; [0000008F BYTES: COLLAPSED FUNCTION parse_bcp47_script]
algn_7FF6E344945B:
align 4
; [00000069 BYTES: COLLAPSED FUNCTION string_is_alpha]
algn_7FF6E34494C5:
align 10h



sub_7FF6E34494D0 proc near
mov     eax, cs:dword_7FF6E346F304
nop
retn
sub_7FF6E34494D0 endp

align 20h
; [0000002B BYTES: COLLAPSED FUNCTION _set_new_mode]
algn_7FF6E344950B:
align 4



sub_7FF6E344950C proc near
lea     rax, unk_7FF6E346F308
retn
sub_7FF6E344950C endp

; [0000003B BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_b8c45f8f788dd370798f47cfe8ac3a86_,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_>(_lambda_b8c45f8f788dd370798f47cfe8ac3a86_ &&,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_ &&)]
algn_7FF6E344954F:
align 10h
; [0000003B BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_b8c45f8f788dd370798f47cfe8ac3a86_,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_>(_lambda_b8c45f8f788dd370798f47cfe8ac3a86_ &&,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_ &&)]
algn_7FF6E344958B:
align 4



sub_7FF6E344958C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 20h
mov     rax, [rcx]
xor     ebp, ebp
mov     r15, rcx
mov     rdx, [rax]
test    rdx, rdx
jz      loc_7FF6E344971E
mov     r10, cs:__security_cookie
mov     ecx, r10d
mov     rsi, r10
xor     rsi, [rdx]
and     ecx, 3Fh
mov     r9, r10
ror     rsi, cl
xor     r9, [rdx+8]
mov     rbx, r10
xor     rbx, [rdx+10h]
ror     r9, cl
ror     rbx, cl
cmp     r9, rbx
jnz     loc_7FF6E3449692
sub     rbx, rsi
mov     eax, 200h
sar     rbx, 3
cmp     rbx, rax
mov     rdi, rbx
cmova   rdi, rax
lea     eax, [rbp+20h]
add     rdi, rbx
cmovz   rdi, rax
cmp     rdi, rbx
jb      short loc_7FF6E344962E
lea     r8d, [rbp+8]    ; Size
mov     rdx, rdi        ; Count
mov     rcx, rsi        ; Block
call    _recalloc_base
xor     ecx, ecx        ; Block
mov     r14, rax
call    _free_base
test    r14, r14
jnz     short loc_7FF6E3449656

loc_7FF6E344962E:
lea     rdi, [rbx+4]
mov     r8d, 8          ; Size
mov     rdx, rdi        ; Count
mov     rcx, rsi        ; Block
call    _recalloc_base
xor     ecx, ecx        ; Block
mov     r14, rax
call    _free_base
test    r14, r14
jz      loc_7FF6E344971E

loc_7FF6E3449656:
mov     r10, cs:__security_cookie
lea     r9, [r14+rbx*8]
lea     rbx, [r14+rdi*8]
mov     rsi, r14
mov     rcx, rbx
sub     rcx, r9
add     rcx, 7
shr     rcx, 3
cmp     r9, rbx
cmova   rcx, rbp
test    rcx, rcx
jz      short loc_7FF6E3449692
mov     rax, r10
mov     rdi, r9
rep stosq
mov     r10, cs:__security_cookie

loc_7FF6E3449692:
mov     r8d, 40h ; '@'
lea     rdi, [r9+8]
mov     ecx, r8d
mov     eax, r10d
and     eax, 3Fh
sub     ecx, eax
mov     rax, [r15+8]
mov     rdx, [rax]
ror     rdx, cl
mov     ecx, r8d
xor     rdx, r10
mov     [r9], rdx
mov     rdx, cs:__security_cookie
mov     eax, edx
and     eax, 3Fh
sub     ecx, eax
mov     rax, [r15]
ror     rsi, cl
xor     rsi, rdx
mov     rcx, [rax]
mov     [rcx], rsi
mov     ecx, r8d
mov     rdx, cs:__security_cookie
mov     eax, edx
and     eax, 3Fh
sub     ecx, eax
mov     rax, [r15]
ror     rdi, cl
xor     rdi, rdx
mov     rdx, [rax]
mov     [rdx+8], rdi
mov     rdx, cs:__security_cookie
mov     eax, edx
and     eax, 3Fh
sub     r8d, eax
mov     rax, [r15]
mov     cl, r8b
ror     rbx, cl
xor     rbx, rdx
mov     rcx, [rax]
xor     eax, eax
mov     [rcx+10h], rbx
jmp     short loc_7FF6E3449721

loc_7FF6E344971E:
or      eax, 0FFFFFFFFh

loc_7FF6E3449721:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     rdi
retn
sub_7FF6E344958C endp

algn_7FF6E344973A:
align 4



sub_7FF6E344973C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 20h
mov     rax, [rcx]
mov     rsi, rcx
mov     rdx, [rax]
test    rdx, rdx
jnz     short loc_7FF6E344976A
or      eax, 0FFFFFFFFh
jmp     loc_7FF6E3449838

loc_7FF6E344976A:
mov     r8, cs:__security_cookie
mov     ecx, r8d
mov     rdi, r8
xor     rdi, [rdx]
and     ecx, 3Fh
ror     rdi, cl
mov     rbx, r8
xor     rbx, [rdx+8]
ror     rbx, cl
lea     rax, [rdi-1]
cmp     rax, 0FFFFFFFFFFFFFFFDh
ja      loc_7FF6E3449836
mov     ecx, r8d
mov     r14, r8
and     ecx, 3Fh
mov     r15, rdi
mov     rbp, rbx

loc_7FF6E34497A7:
sub     rbx, 8
cmp     rbx, rdi
jb      short loc_7FF6E3449804
mov     rax, [rbx]
cmp     rax, r14
jz      short loc_7FF6E34497A7
xor     rax, r8
mov     [rbx], r14
ror     rax, cl
call    j__guard_dispatch_icall_nop
mov     r8, cs:__security_cookie
mov     rax, [rsi]
mov     ecx, r8d
and     ecx, 3Fh
mov     r9, r8
mov     rdx, [rax]
mov     rax, r8
xor     r9, [rdx]
xor     rax, [rdx+8]
ror     r9, cl
ror     rax, cl
cmp     r9, r15
jnz     short loc_7FF6E34497F6
cmp     rax, rbp
jz      short loc_7FF6E34497A7

loc_7FF6E34497F6:
mov     r15, r9
mov     rdi, r9
mov     rbp, rax
mov     rbx, rax
jmp     short loc_7FF6E34497A7

loc_7FF6E3449804:
cmp     rdi, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E3449819
mov     rcx, rdi        ; Block
call    _free_base
mov     r8, cs:__security_cookie

loc_7FF6E3449819:
mov     rax, [rsi]
mov     rcx, [rax]
mov     [rcx], r8
mov     rax, [rsi]
mov     rcx, [rax]
mov     [rcx+8], r8
mov     rax, [rsi]
mov     rcx, [rax]
mov     [rcx+10h], r8

loc_7FF6E3449836:
xor     eax, eax

loc_7FF6E3449838:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     rdi
retn
sub_7FF6E344973C endp

algn_7FF6E3449851:
align 4



; __int64 __fastcall sub_7FF6E3449854(_onexit_t Function)
sub_7FF6E3449854 proc near
mov     rdx, rcx        ; Function
lea     rcx, stru_7FF6E346F310 ; Table
jmp     _register_onexit_function
sub_7FF6E3449854 endp

align 4
; [00000043 BYTES: COLLAPSED FUNCTION _execute_onexit_table]
algn_7FF6E34498A7:
align 8
; [00000027 BYTES: COLLAPSED FUNCTION _initialize_onexit_table]
align 10h
; [00000048 BYTES: COLLAPSED FUNCTION _register_onexit_function]
; [00000011 BYTES: COLLAPSED FUNCTION initialize_global_variables]
align 4
; [00000023 BYTES: COLLAPSED FUNCTION initialize_c]
algn_7FF6E344994F:
align 10h
; [00000010 BYTES: COLLAPSED FUNCTION uninitialize_environment]
; [0000003D BYTES: COLLAPSED FUNCTION initialize_pointers]
algn_7FF6E344999D:
align 20h



sub_7FF6E34499A0 proc near
xor     ecx, ecx
jmp     __vcrt_uninitialize
sub_7FF6E34499A0 endp

align 8
; [00000040 BYTES: COLLAPSED FUNCTION uninitialize_allocated_memory]
; [0000005B BYTES: COLLAPSED FUNCTION uninitialize_allocated_io_buffers]
algn_7FF6E3449A43:
align 4



sub_7FF6E3449A44 proc near
lea     rdx, off_7FF6E34613C0
lea     rcx, off_7FF6E34612C0
jmp     sub_7FF6E3456768
sub_7FF6E3449A44 endp

align 8
; [00000035 BYTES: COLLAPSED FUNCTION __acrt_uninitialize]
algn_7FF6E3449A8D:
align 10h


; Attributes: noreturn

sub_7FF6E3449A90 proc near
; __unwind { // __C_specific_handler_noexcept
sub     rsp, 28h
call    sub_7FF6E344A7BC
mov     rax, [rax+18h]
test    rax, rax
jz      short loc_7FF6E3449AA9
call    j__guard_dispatch_icall_nop
jmp     short $+2

loc_7FF6E3449AA9:
call    abort
db 90h
; } // starts at 7FF6E3449A90
sub_7FF6E3449A90 endp

algn_7FF6E3449AAF:
align 10h
; [0000005F BYTES: COLLAPSED FUNCTION strcpy_s]
algn_7FF6E3449B0F:
align 10h
; [0000079A BYTES: COLLAPSED FUNCTION __crt_strtox::parse_integer<unsigned __int64,__crt_strtox::c_string_character_source<wchar_t>,1>(__crt_cached_ptd_host &,__crt_strtox::c_string_character_source<wchar_t>,int,bool)]
algn_7FF6E344A2AA:
align 4
; [000000B0 BYTES: COLLAPSED FUNCTION unknown_libname_85]
algn_7FF6E344A35C:
align 20h
; [0000002C BYTES: COLLAPSED FUNCTION wcsncmp]
; [0000003F BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_72d1df2b273a38828b1ce30cbf4cdab5_,_lambda_876a65b173b8412d3a47c70a915b0cf4_ &,_lambda_41932305e351933ebe8f8be3ed8bb5dc_>(_lambda_72d1df2b273a38828b1ce30cbf4cdab5_ &&,_lambda_876a65b173b8412d3a47c70a915b0cf4_ &,_lambda_41932305e351933ebe8f8be3ed8bb5dc_ &&)]
algn_7FF6E344A3CB:
align 4
; [0000003D BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_fb3a7dec4e47f37f22dae91bb15c9095_,_lambda_698284760c8add0bfb0756c19673e34b_ &,_lambda_dfb8eca1e75fef3034a8fb18dd509707_>(_lambda_fb3a7dec4e47f37f22dae91bb15c9095_ &&,_lambda_698284760c8add0bfb0756c19673e34b_ &,_lambda_dfb8eca1e75fef3034a8fb18dd509707_ &&)]
algn_7FF6E344A409:
align 4
; [00000045 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_5e887d1dcbef67a5eb4283622ba103bf_,_lambda_4466841279450cc726390878d4a41900_ &,_lambda_341c25c0346d94847f1f3c463c57e077_>(_lambda_5e887d1dcbef67a5eb4283622ba103bf_ &&,_lambda_4466841279450cc726390878d4a41900_ &,_lambda_341c25c0346d94847f1f3c463c57e077_ &&)]
algn_7FF6E344A451:
align 4
; [0000005F BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_46352004c1216016012b18bd6f87e700_,_lambda_3bd07e1a1191394380780325891bf33f_ &,_lambda_334532d3f185bcaa59b5be82d7d22bff_>(_lambda_46352004c1216016012b18bd6f87e700_ &&,_lambda_3bd07e1a1191394380780325891bf33f_ &,_lambda_334532d3f185bcaa59b5be82d7d22bff_ &&)]
algn_7FF6E344A4B3:
align 4
; [000000CD BYTES: COLLAPSED FUNCTION construct_ptd_array(__acrt_ptd * const)]
algn_7FF6E344A581:
align 4
; [00000020 BYTES: COLLAPSED FUNCTION destroy_fls(void *)]
; [000000F5 BYTES: COLLAPSED FUNCTION destroy_ptd_array(__acrt_ptd * const)]
algn_7FF6E344A699:
align 4



sub_7FF6E344A69C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
push    rdi
sub     rsp, 20h
call    cs:GetLastError
mov     ecx, cs:dwFlsIndex ; dwFlsIndex
or      rdx, 0FFFFFFFFFFFFFFFFh ; lpFlsData
mov     edi, eax
call    FlsSetValue
xor     esi, esi
test    eax, eax
jnz     short loc_7FF6E344A6D4

loc_7FF6E344A6C8:       ; dwErrCode
mov     ecx, edi
call    cs:SetLastError
xor     eax, eax
jmp     short loc_7FF6E344A741

loc_7FF6E344A6D4:       ; Size
mov     edx, 3C8h
mov     ecx, 1          ; Count
call    _calloc_base
mov     ecx, cs:dwFlsIndex ; dwFlsIndex
mov     rbx, rax
test    rax, rax
jnz     short loc_7FF6E344A701
xor     edx, edx        ; lpFlsData
call    FlsSetValue
xor     ecx, ecx        ; Block
call    _free_base
jmp     short loc_7FF6E344A6C8

loc_7FF6E344A701:       ; lpFlsData
mov     rdx, rbx
call    FlsSetValue
test    eax, eax
jnz     short loc_7FF6E344A724
mov     ecx, cs:dwFlsIndex ; dwFlsIndex
xor     edx, edx        ; lpFlsData
call    FlsSetValue
mov     rcx, rbx        ; Block
call    _free_base
jmp     short loc_7FF6E344A736

loc_7FF6E344A724:       ; struct __acrt_ptd *
mov     rcx, rbx
call    ?construct_ptd_array@@YAXQEAU__acrt_ptd@@@Z ; construct_ptd_array(__acrt_ptd * const)
xor     ecx, ecx        ; Block
call    _free_base
mov     rsi, rbx

loc_7FF6E344A736:       ; dwErrCode
mov     ecx, edi
call    cs:SetLastError
mov     rax, rsi

loc_7FF6E344A741:
mov     rbx, [rsp+28h+arg_0]
mov     rsi, [rsp+28h+arg_8]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E344A69C endp

algn_7FF6E344A751:
align 4
; [00000067 BYTES: COLLAPSED FUNCTION replace_current_thread_locale_nolock(__acrt_ptd * const,__crt_locale_data * const)]
algn_7FF6E344A7BB:
align 4



sub_7FF6E344A7BC proc near
sub     rsp, 28h
call    sub_7FF6E344A81C
test    rax, rax
jz      short loc_7FF6E344A7CF
add     rsp, 28h
retn

loc_7FF6E344A7CF:
call    abort
db 0CCh
sub_7FF6E344A7BC endp

algn_7FF6E344A7D5:
align 8



sub_7FF6E344A7D8 proc near

var_18= qword ptr -18h

; __unwind { // __CxxFrameHandler3
sub     rsp, 38h
mov     [rsp+38h+var_18], 0FFFFFFFFFFFFFFFEh
mov     ecx, cs:dwFlsIndex ; dwFlsIndex
cmp     ecx, 0FFFFFFFFh
jnz     short loc_7FF6E344A7F4
xor     eax, eax
jmp     short loc_7FF6E344A7FA

loc_7FF6E344A7F4:
call    FlsGetValue
nop

loc_7FF6E344A7FA:
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344A814
test    rax, rax
jnz     short loc_7FF6E344A80F
call    sub_7FF6E344A69C
test    rax, rax
jz      short loc_7FF6E344A814

loc_7FF6E344A80F:
add     rsp, 38h
retn

loc_7FF6E344A814:
call    abort
db 0CCh
; } // starts at 7FF6E344A7D8
sub_7FF6E344A7D8 endp

algn_7FF6E344A81A:
align 4



sub_7FF6E344A81C proc near

var_18= qword ptr -18h
arg_0= qword ptr  8

; __unwind { // __CxxFrameHandler3
push    rdi
sub     rsp, 30h
mov     [rsp+38h+var_18], 0FFFFFFFFFFFFFFFEh
mov     [rsp+38h+arg_0], rbx
xor     edi, edi
cmp     cs:byte_7FF6E346F340, dil
jz      short loc_7FF6E344A865
mov     ecx, cs:dwFlsIndex
cmp     ecx, 0FFFFFFFFh
jnz     short loc_7FF6E344A84A
mov     eax, edi
jmp     short loc_7FF6E344A850

loc_7FF6E344A84A:
call    sub_7FF6E344D4A0
nop

loc_7FF6E344A850:
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344A89E
test    rax, rax
jnz     short loc_7FF6E344A860
call    sub_7FF6E344A69C

loc_7FF6E344A860:
mov     rdi, rax
jmp     short loc_7FF6E344A89E

loc_7FF6E344A865:
call    cs:GetLastError
mov     ebx, eax
mov     ecx, cs:dwFlsIndex ; dwFlsIndex
cmp     ecx, 0FFFFFFFFh
jnz     short loc_7FF6E344A87D
mov     rax, rdi
jmp     short loc_7FF6E344A883

loc_7FF6E344A87D:
call    FlsGetValue
nop

loc_7FF6E344A883:
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344A896
test    rax, rax
jnz     short loc_7FF6E344A893
call    sub_7FF6E344A69C

loc_7FF6E344A893:
mov     rdi, rax

loc_7FF6E344A896:       ; dwErrCode
mov     ecx, ebx
call    cs:SetLastError

loc_7FF6E344A89E:
mov     rax, rdi
mov     rbx, [rsp+38h+arg_0]
add     rsp, 30h
pop     rdi
retn
; } // starts at 7FF6E344A81C
sub_7FF6E344A81C endp




sub_7FF6E344A8AC proc near

var_18= qword ptr -18h
arg_0= qword ptr  8

; __unwind { // __CxxFrameHandler3
push    rdi
sub     rsp, 30h
mov     [rsp+38h+var_18], 0FFFFFFFFFFFFFFFEh
mov     [rsp+38h+arg_0], rbx
mov     rdi, rdx
xor     ebx, ebx
mov     ecx, cs:dwFlsIndex ; dwFlsIndex
cmp     ecx, 0FFFFFFFFh
jnz     short loc_7FF6E344A8D4
mov     eax, ebx
jmp     short loc_7FF6E344A8DA

loc_7FF6E344A8D4:
call    FlsGetValue
nop

loc_7FF6E344A8DA:
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344A8F9
test    rax, rax
jnz     short loc_7FF6E344A8EF
call    sub_7FF6E344A69C
test    rax, rax
jz      short loc_7FF6E344A8F9

loc_7FF6E344A8EF:
imul    rbx, rdi, 3C8h
add     rbx, rax

loc_7FF6E344A8F9:
mov     rax, rbx
mov     rbx, [rsp+38h+arg_0]
add     rsp, 30h
pop     rdi
retn
; } // starts at 7FF6E344A8AC
sub_7FF6E344A8AC endp

algn_7FF6E344A907:
align 8



sub_7FF6E344A908 proc near
sub     rsp, 28h
call    sub_7FF6E344D9F4
lea     rcx, ?destroy_fls@@YAXPEAX@Z ; lpCallback
mov     cs:byte_7FF6E346F340, al
call    FlsAlloc
mov     cs:dwFlsIndex, eax
cmp     eax, 0FFFFFFFFh
jnz     short loc_7FF6E344A932

loc_7FF6E344A92E:
xor     al, al
jmp     short loc_7FF6E344A947

loc_7FF6E344A932:
call    sub_7FF6E344A81C
test    rax, rax
jnz     short loc_7FF6E344A945
xor     ecx, ecx
call    __vcrt_uninitialize_ptd_0
jmp     short loc_7FF6E344A92E

loc_7FF6E344A945:
mov     al, 1

loc_7FF6E344A947:
add     rsp, 28h
retn
sub_7FF6E344A908 endp

; [00000022 BYTES: COLLAPSED FUNCTION __vcrt_uninitialize_ptd_0]
algn_7FF6E344A96E:
align 10h



sub_7FF6E344A970 proc near

var_D8= qword ptr -0D8h
var_D0= qword ptr -0D0h
var_C8= dword ptr -0C8h
var_B8= qword ptr -0B8h
var_B0= qword ptr -0B0h
var_A8= xmmword ptr -0A8h
var_98= xmmword ptr -98h
var_88= xmmword ptr -88h
var_78= xmmword ptr -78h
var_68= xmmword ptr -68h
var_58= xmmword ptr -58h
var_48= xmmword ptr -48h
var_38= qword ptr -38h
var_28= xmmword ptr -28h
arg_20= qword ptr  28h

; __unwind { // __GSHandlerCheck
mov     r11, rsp
push    rbx
push    rsi
push    rdi
sub     rsp, 0E0h
movaps  xmmword ptr [r11-28h], xmm6
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0F8h+var_38], rax
mov     rdi, [r11+28h]
mov     esi, edx
mov     r8, rdi
movsd   [rsp+0F8h+var_B0], xmm2
lea     rdx, [rsp+0F8h+var_B8]
movsd   [rsp+0F8h+var_B8], xmm3
movaps  xmm6, xmm2
mov     ebx, ecx
call    sub_7FF6E344AAF0
test    eax, eax
jnz     short loc_7FF6E344AA26
xorps   xmm0, xmm0
mov     [rsp+0F8h+var_C8], eax
lea     rax, [rsp+0F8h+var_B8]
mov     r9d, esi
mov     [rsp+0F8h+var_D0], rax
lea     rdx, [rsp+0F8h+arg_20]
lea     rax, [rsp+0F8h+var_B0]
mov     r8d, ebx
lea     rcx, [rsp+0F8h+var_A8]
mov     [rsp+0F8h+var_D8], rax
movups  [rsp+0F8h+var_A8], xmm0
movups  [rsp+0F8h+var_98], xmm0
movups  [rsp+0F8h+var_88], xmm0
movups  [rsp+0F8h+var_78], xmm0
movups  [rsp+0F8h+var_68], xmm0
movups  [rsp+0F8h+var_58], xmm0
movups  [rsp+0F8h+var_48], xmm0
call    sub_7FF6E344AEA0
mov     rdi, [rsp+0F8h+arg_20]

loc_7FF6E344AA26:
test    bl, 20h
jz      short loc_7FF6E344AA32
mov     ebx, 5
jmp     short loc_7FF6E344AA5E

loc_7FF6E344AA32:
test    bl, 8
jz      short loc_7FF6E344AA3E
mov     ebx, 1
jmp     short loc_7FF6E344AA5E

loc_7FF6E344AA3E:
test    bl, 4
jz      short loc_7FF6E344AA4A
mov     ebx, 2
jmp     short loc_7FF6E344AA5E

loc_7FF6E344AA4A:
test    bl, 1
jz      short loc_7FF6E344AA56
mov     ebx, 3
jmp     short loc_7FF6E344AA5E

loc_7FF6E344AA56:
movzx   ebx, bl
and     ebx, 2
add     ebx, ebx

loc_7FF6E344AA5E:
call    __acrt_has_user_matherr
test    al, al
jz      short loc_7FF6E344AA8D
test    ebx, ebx
jz      short loc_7FF6E344AAB4
movsd   xmm0, [rsp+0F8h+var_B8]
xorps   xmm3, xmm3
mov     [rsp+0F8h+var_D0], rdi
movaps  xmm2, xmm6
mov     edx, esi
movsd   [rsp+0F8h+var_D8], xmm0
mov     ecx, ebx
call    sub_7FF6E344B1F0
jmp     short loc_7FF6E344AAC7

loc_7FF6E344AA8D:
sub     ebx, 1
jz      short loc_7FF6E344AAA9
sub     ebx, 1
jz      short loc_7FF6E344AA9C
cmp     ebx, 1
jnz     short loc_7FF6E344AAB4

loc_7FF6E344AA9C:
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
jmp     short loc_7FF6E344AAB4

loc_7FF6E344AAA9:
call    sub_7FF6E3444754
mov     dword ptr [rax], 21h ; '!'

loc_7FF6E344AAB4:
mov     edx, 0FFC0h
mov     rcx, rdi
call    sub_7FF6E344B36C
movsd   xmm0, [rsp+0F8h+var_B8]

loc_7FF6E344AAC7:
mov     rcx, [rsp+0F8h+var_38]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
movaps  xmm6, [rsp+0F8h+var_28]
add     rsp, 0E0h
pop     rdi
pop     rsi
pop     rbx
retn
; } // starts at 7FF6E344A970
sub_7FF6E344A970 endp

algn_7FF6E344AAEA:
align 10h



sub_7FF6E344AAF0 proc near

var_58= xmmword ptr -58h
var_48= xmmword ptr -48h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
var_10= qword ptr -10h
arg_0= dword ptr  8
arg_8= qword ptr  10h
arg_18= qword ptr  20h

push    rdi
sub     rsp, 70h

loc_7FF6E344AAF6:
mov     [rsp+78h+var_10], rbp
xor     ebp, ebp
mov     [rsp+78h+var_18], rsi
mov     rsi, rdx
mov     [rsp+78h+var_28], r13
mov     r13, r8
mov     [rsp+78h+var_38], r15
mov     r15d, ecx
mov     edi, r15d
mov     ecx, ebp
and     edi, 1Fh
test    r15b, 8
jz      short loc_7FF6E344AB33
test    r13b, r13b
jns     short loc_7FF6E344AB33
lea     ecx, [rbp+1]
and     edi, 0FFFFFFF7h
jmp     loc_7FF6E344AE20

loc_7FF6E344AB33:
test    r15b, 4
jz      short loc_7FF6E344AB4D
bt      r13, 9
jnb     short loc_7FF6E344AB4D
mov     ecx, 4
and     edi, 0FFFFFFFBh
jmp     loc_7FF6E344AE20

loc_7FF6E344AB4D:
test    r15b, 1
jz      loc_7FF6E344AC56
bt      r13, 0Ah
jnb     loc_7FF6E344AC56
mov     rax, r13
mov     ecx, 8
and     eax, 6000h
jz      loc_7FF6E344AC1A
cmp     rax, 2000h
jz      short loc_7FF6E344ABF9
cmp     rax, 4000h
jz      short loc_7FF6E344ABBD
cmp     rax, 6000h
jnz     loc_7FF6E344AC4E
movsd   xmm1, qword ptr [rdx]
xorps   xmm0, xmm0
comisd  xmm1, xmm0
movsd   xmm0, cs:qword_7FF6E345FAA8
ja      loc_7FF6E344AC4A
xorps   xmm0, cs:xmmword_7FF6E345E930
and     edi, 0FFFFFFFEh
movsd   qword ptr [rdx], xmm0
jmp     loc_7FF6E344AE20

loc_7FF6E344ABBD:
movsd   xmm1, qword ptr [rdx]
xorps   xmm0, xmm0
comisd  xmm1, xmm0
jbe     short loc_7FF6E344ABDE
movsd   xmm0, cs:qword_7FF6E345FAA0
and     edi, 0FFFFFFFEh
movsd   qword ptr [rdx], xmm0
jmp     loc_7FF6E344AE20

loc_7FF6E344ABDE:
movsd   xmm0, cs:qword_7FF6E345FAA8
and     edi, 0FFFFFFFEh
xorps   xmm0, cs:xmmword_7FF6E345E930
movsd   qword ptr [rdx], xmm0
jmp     loc_7FF6E344AE20

loc_7FF6E344ABF9:
movsd   xmm1, qword ptr [rdx]
xorps   xmm0, xmm0
comisd  xmm1, xmm0
jbe     short loc_7FF6E344AC3B
movsd   xmm0, cs:qword_7FF6E345FAA8
and     edi, 0FFFFFFFEh
movsd   qword ptr [rdx], xmm0
jmp     loc_7FF6E344AE20

loc_7FF6E344AC1A:
movsd   xmm1, qword ptr [rdx]
xorps   xmm0, xmm0
comisd  xmm1, xmm0
jbe     short loc_7FF6E344AC3B
movsd   xmm0, cs:qword_7FF6E345FAA0
and     edi, 0FFFFFFFEh
movsd   qword ptr [rdx], xmm0
jmp     loc_7FF6E344AE20

loc_7FF6E344AC3B:
movsd   xmm0, cs:qword_7FF6E345FAA0
xorps   xmm0, cs:xmmword_7FF6E345E930

loc_7FF6E344AC4A:
movsd   qword ptr [rdx], xmm0

loc_7FF6E344AC4E:
and     edi, 0FFFFFFFEh
jmp     loc_7FF6E344AE20

loc_7FF6E344AC56:
test    r15b, 2
jz      loc_7FF6E344AE20
bt      r13, 0Bh
jnb     loc_7FF6E344AE20
movsd   xmm0, qword ptr [rdx]

loc_7FF6E344AC6F:
mov     [rsp+78h+arg_8], rbx
mov     ebx, r15d
shr     ebx, 4
movaps  [rsp+78h+var_58], xmm7
and     ebx, 1
xorps   xmm7, xmm7
ucomisd xmm0, xmm7
jp      short loc_7FF6E344AC9A
jnz     short loc_7FF6E344AC9A
mov     ebx, 1
jmp     loc_7FF6E344AE08

loc_7FF6E344AC9A:
lea     rdx, [rsp+78h+arg_0]

loc_7FF6E344ACA2:
movaps  [rsp+78h+var_48], xmm6
mov     [rsp+78h+arg_0], ebp
call    sub_7FF6E34411A0
mov     ecx, [rsp+78h+arg_0]
add     ecx, 0FFFFFA00h
movsd   [rsp+78h+arg_18], xmm0
cmp     ecx, 0FFFFFBCEh
jge     short loc_7FF6E344ACE2
mulsd   xmm0, xmm7
mov     ebx, 1
movaps  xmm6, xmm0
jmp     loc_7FF6E344ADFF

loc_7FF6E344ACE2:
mov     rax, [rsp+78h+arg_18]
comisd  xmm7, xmm0

loc_7FF6E344ACEE:
mov     [rsp+78h+var_20], r12
mov     [rsp+78h+var_30], r14
setnbe  bpl
shr     rax, 30h
and     ax, 0Fh
xor     r14b, r14b
or      ax, 10h
xor     r12b, r12b
mov     word ptr [rsp+78h+arg_18+6], ax
cmp     ecx, 0FFFFFC03h
jge     short loc_7FF6E344AD82
mov     edx, dword ptr [rsp+78h+arg_18+4]
mov     r9d, 0FFFFFC03h
mov     eax, dword ptr [rsp+78h+arg_18]
sub     r9d, ecx
mov     ecx, 1
nop     word ptr [rax+rax+00h]

loc_7FF6E344AD40:
mov     r8d, eax
and     r8d, ecx
jz      short loc_7FF6E344AD4D
test    ebx, ebx
cmovz   ebx, ecx

loc_7FF6E344AD4D:
test    r12b, r12b
movzx   r14d, r14b
movzx   r12d, r8b
cmovnz  r14d, ecx
shr     eax, 1
mov     dword ptr [rsp+78h+arg_18], eax
test    cl, dl
jz      short loc_7FF6E344AD74
bts     eax, 1Fh
mov     dword ptr [rsp+78h+arg_18], eax

loc_7FF6E344AD74:
shr     edx, 1
sub     r9, rcx
jnz     short loc_7FF6E344AD40
mov     dword ptr [rsp+78h+arg_18+4], edx

loc_7FF6E344AD82:
movsd   xmm6, [rsp+78h+arg_18]
test    ebp, ebp
jz      short loc_7FF6E344AD9F
xorps   xmm6, cs:xmmword_7FF6E345E930
movsd   [rsp+78h+arg_18], xmm6

loc_7FF6E344AD9F:
comisd  xmm7, xmm0
setnbe  bpl
test    r12b, r12b
jnz     short loc_7FF6E344ADB1
test    r14b, r14b
jz      short loc_7FF6E344ADF5

loc_7FF6E344ADB1:
call    fegetround
test    eax, eax
jz      short loc_7FF6E344ADD1
cmp     eax, 100h
jz      short loc_7FF6E344ADCC
cmp     eax, 200h
jnz     short loc_7FF6E344ADF5
xor     bpl, 1

loc_7FF6E344ADCC:
test    bpl, bpl
jmp     short loc_7FF6E344ADE3

loc_7FF6E344ADD1:
test    r12b, r12b
jz      short loc_7FF6E344ADF5
test    r14b, r14b
jnz     short loc_7FF6E344ADE5
test    byte ptr [rsp+78h+arg_18], 1

loc_7FF6E344ADE3:
jz      short loc_7FF6E344ADF5

loc_7FF6E344ADE5:
mov     rax, [rsp+78h+arg_18]
inc     rax
movq    xmm6, rax

loc_7FF6E344ADF5:
mov     r12, [rsp+78h+var_20]
mov     r14, [rsp+78h+var_30]

loc_7FF6E344ADFF:
movsd   qword ptr [rsi], xmm6
movaps  xmm6, [rsp+78h+var_48]

loc_7FF6E344AE08:
movaps  xmm7, [rsp+78h+var_58]
and     edi, 0FFFFFFFDh
neg     ebx
mov     rbx, [rsp+78h+arg_8]
sbb     rcx, rcx
and     ecx, 10h

loc_7FF6E344AE20:
mov     rsi, [rsp+78h+var_18]
test    r15b, 10h
mov     r15, [rsp+78h+var_38]
mov     rbp, [rsp+78h+var_10]
jz      short loc_7FF6E344AE43

loc_7FF6E344AE35:
bt      r13, 0Ch
jnb     short loc_7FF6E344AE43
or      rcx, 20h
and     edi, 0FFFFFFEFh

loc_7FF6E344AE43:
mov     r13, [rsp+78h+var_28]
test    rcx, rcx
jz      short loc_7FF6E344AE52

loc_7FF6E344AE4D:
call    sub_7FF6E344B3F8

loc_7FF6E344AE52:
test    edi, edi
mov     eax, 0
setz    al
add     rsp, 70h
pop     rdi
retn
sub_7FF6E344AAF0 endp

algn_7FF6E344AE62:
align 10h



sub_7FF6E344AE70 proc near

var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= dword ptr -18h
arg_20= qword ptr  28h
arg_28= qword ptr  30h

sub     rsp, 48h
mov     rax, [rsp+48h+arg_28]
mov     [rsp+48h+var_18], 0
mov     [rsp+48h+var_20], rax
mov     rax, [rsp+48h+arg_20]
mov     [rsp+48h+var_28], rax
call    sub_7FF6E344AEA0
add     rsp, 48h
retn
sub_7FF6E344AE70 endp

algn_7FF6E344AE9A:
align 20h


; Attributes: bp-based frame

sub_7FF6E344AEA0 proc near

Arguments= qword ptr  10h
arg_8= qword ptr  18h
arg_10= qword ptr  20h
arg_18= qword ptr  28h
arg_20= qword ptr  30h
arg_28= qword ptr  38h
arg_30= dword ptr  40h

mov     [rsp-8+arg_8], rbx
mov     [rsp-8+arg_10], rsi
mov     [rsp-8+arg_18], rdi
mov     [rsp-8+Arguments], rcx
push    rbp
mov     rbp, rsp
sub     rsp, 20h
mov     rbx, rdx
mov     edi, r9d
xor     edx, edx
mov     esi, 0C000000Dh
mov     [rcx+4], edx
mov     rax, [rbp+Arguments]
mov     [rax+8], edx
mov     rax, [rbp+Arguments]
mov     [rax+0Ch], edx
test    r8b, 10h
jz      short loc_7FF6E344AEED
mov     rax, [rbp+Arguments]
mov     esi, 0C000008Fh
or      dword ptr [rax+4], 1

loc_7FF6E344AEED:
test    r8b, 2
jz      short loc_7FF6E344AF00
mov     rax, [rbp+Arguments]
mov     esi, 0C0000093h
or      dword ptr [rax+4], 2

loc_7FF6E344AF00:
test    r8b, 1
jz      short loc_7FF6E344AF13
mov     rax, [rbp+Arguments]
mov     esi, 0C0000091h
or      dword ptr [rax+4], 4

loc_7FF6E344AF13:
test    r8b, 4
jz      short loc_7FF6E344AF26
mov     rax, [rbp+Arguments]
mov     esi, 0C000008Eh
or      dword ptr [rax+4], 8

loc_7FF6E344AF26:
test    r8b, 8
jz      short loc_7FF6E344AF39
mov     rax, [rbp+Arguments]
mov     esi, 0C0000090h
or      dword ptr [rax+4], 10h

loc_7FF6E344AF39:
mov     rdx, [rbp+Arguments]
mov     rcx, [rbx]
shr     rcx, 7
shl     ecx, 4
not     ecx
xor     ecx, [rdx+8]
and     ecx, 10h
xor     [rdx+8], ecx
mov     rdx, [rbp+Arguments]
mov     rcx, [rbx]
shr     rcx, 9
shl     ecx, 3
not     ecx
xor     ecx, [rdx+8]
and     ecx, 8
xor     [rdx+8], ecx
mov     rdx, [rbp+Arguments]
mov     rcx, [rbx]
shr     rcx, 0Ah
shl     ecx, 2
not     ecx
xor     ecx, [rdx+8]
and     ecx, 4
xor     [rdx+8], ecx
mov     rdx, [rbp+Arguments]
mov     rcx, [rbx]
shr     rcx, 0Bh
add     ecx, ecx
not     ecx
xor     ecx, [rdx+8]
and     ecx, 2
xor     [rdx+8], ecx
mov     ecx, [rbx]
mov     rdx, [rbp+Arguments]
shr     rcx, 0Ch
not     ecx
xor     ecx, [rdx+8]
and     ecx, 1
xor     [rdx+8], ecx
call    ?get_machine_sse_status@@YA?AW4__acrt_fenv_machine_sse_status@@XZ ; get_machine_sse_status(void)
mov     rdx, rax
test    al, 1
jz      short loc_7FF6E344AFC5
mov     rcx, [rbp+Arguments]
or      dword ptr [rcx+0Ch], 10h

loc_7FF6E344AFC5:
test    dl, 4
jz      short loc_7FF6E344AFD2
mov     rcx, [rbp+Arguments]
or      dword ptr [rcx+0Ch], 8

loc_7FF6E344AFD2:
test    dl, 8
jz      short loc_7FF6E344AFDF
mov     rax, [rbp+Arguments]
or      dword ptr [rax+0Ch], 4

loc_7FF6E344AFDF:
test    dl, 10h
jz      short loc_7FF6E344AFEC
mov     rax, [rbp+Arguments]
or      dword ptr [rax+0Ch], 2

loc_7FF6E344AFEC:
test    dl, 20h
jz      short loc_7FF6E344AFF9
mov     rax, [rbp+Arguments]
or      dword ptr [rax+0Ch], 1

loc_7FF6E344AFF9:
mov     eax, [rbx]
and     eax, 6000h
jz      short loc_7FF6E344B043
cmp     rax, 2000h
jz      short loc_7FF6E344B033
cmp     rax, 4000h
jz      short loc_7FF6E344B023
cmp     rax, 6000h
jnz     short loc_7FF6E344B04A
mov     rax, [rbp+Arguments]
or      dword ptr [rax], 3
jmp     short loc_7FF6E344B04A

loc_7FF6E344B023:
mov     rax, [rbp+Arguments]
and     dword ptr [rax], 0FFFFFFFEh
mov     rax, [rbp+Arguments]
or      dword ptr [rax], 2
jmp     short loc_7FF6E344B04A

loc_7FF6E344B033:
mov     rax, [rbp+Arguments]
and     dword ptr [rax], 0FFFFFFFDh
mov     rax, [rbp+Arguments]
or      dword ptr [rax], 1
jmp     short loc_7FF6E344B04A

loc_7FF6E344B043:
mov     rax, [rbp+Arguments]
and     dword ptr [rax], 0FFFFFFFCh

loc_7FF6E344B04A:
mov     rcx, [rbp+Arguments]
shl     edi, 5
xor     edi, [rcx]
and     edi, 1FFE0h
xor     [rcx], edi
mov     rax, [rbp+Arguments]
mov     rdi, [rbp+arg_28]
or      dword ptr [rax+20h], 1
cmp     [rbp+arg_30], 0
jz      short loc_7FF6E344B09D
mov     rax, [rbp+Arguments]
and     dword ptr [rax+20h], 0FFFFFFE1h
mov     rax, [rbp+arg_20]
mov     ecx, [rax]
mov     rax, [rbp+Arguments]
mov     [rax+10h], ecx
mov     rax, [rbp+Arguments]
or      dword ptr [rax+60h], 1
mov     rax, [rbp+Arguments]
and     dword ptr [rax+60h], 0FFFFFFE1h
mov     rax, [rbp+Arguments]
mov     ecx, [rdi]
mov     [rax+50h], ecx
jmp     short loc_7FF6E344B0DF

loc_7FF6E344B09D:
mov     rcx, [rbp+Arguments]
mov     eax, [rcx+20h]
and     eax, 0FFFFFFE3h
or      eax, 2
mov     [rcx+20h], eax
mov     rax, [rbp+arg_20]
mov     rcx, [rax]
mov     rax, [rbp+Arguments]
mov     [rax+10h], rcx
mov     rax, [rbp+Arguments]
or      dword ptr [rax+60h], 1
mov     rdx, [rbp+Arguments]
mov     eax, [rdx+60h]
and     eax, 0FFFFFFE3h
or      eax, 2
mov     [rdx+60h], eax
mov     rax, [rbp+Arguments]
mov     rdx, [rdi]
mov     [rax+50h], rdx

loc_7FF6E344B0DF:
call    sub_7FF6E344B34C
xor     edx, edx        ; dwExceptionFlags
lea     r9, [rbp+Arguments] ; lpArguments
mov     ecx, esi        ; dwExceptionCode
lea     r8d, [rdx+1]    ; nNumberOfArguments
call    cs:RaiseException
mov     rcx, [rbp+Arguments]
test    byte ptr [rcx+8], 10h
jz      short loc_7FF6E344B107
and     qword ptr [rbx], 0FFFFFFFFFFFFFF7Fh

loc_7FF6E344B107:
test    byte ptr [rcx+8], 8
jz      short loc_7FF6E344B114
and     qword ptr [rbx], 0FFFFFFFFFFFFFDFFh

loc_7FF6E344B114:
test    byte ptr [rcx+8], 4
jz      short loc_7FF6E344B121
and     qword ptr [rbx], 0FFFFFFFFFFFFFBFFh

loc_7FF6E344B121:
test    byte ptr [rcx+8], 2
jz      short loc_7FF6E344B12E
and     qword ptr [rbx], 0FFFFFFFFFFFFF7FFh

loc_7FF6E344B12E:
test    byte ptr [rcx+8], 1
jz      short loc_7FF6E344B13B
and     qword ptr [rbx], 0FFFFFFFFFFFFEFFFh

loc_7FF6E344B13B:
mov     eax, [rcx]
and     eax, 3
jz      short loc_7FF6E344B17A
sub     eax, 1
jz      short loc_7FF6E344B16A
sub     eax, 1
jz      short loc_7FF6E344B15A
cmp     eax, 1
jnz     short loc_7FF6E344B181
or      qword ptr [rbx], 6000h
jmp     short loc_7FF6E344B181

loc_7FF6E344B15A:
and     qword ptr [rbx], 0FFFFFFFFFFFFDFFFh
or      qword ptr [rbx], 4000h
jmp     short loc_7FF6E344B181

loc_7FF6E344B16A:
and     qword ptr [rbx], 0FFFFFFFFFFFFBFFFh
or      qword ptr [rbx], 2000h
jmp     short loc_7FF6E344B181

loc_7FF6E344B17A:
and     qword ptr [rbx], 0FFFFFFFFFFFF9FFFh

loc_7FF6E344B181:
cmp     [rbp+arg_30], 0
jz      short loc_7FF6E344B18E
mov     eax, [rcx+50h]
mov     [rdi], eax
jmp     short loc_7FF6E344B195

loc_7FF6E344B18E:
mov     rax, [rcx+50h]
mov     [rdi], rax

loc_7FF6E344B195:
mov     rbx, [rsp+20h+arg_8]
mov     rsi, [rsp+20h+arg_10]
mov     rdi, [rsp+20h+arg_18]
add     rsp, 20h
pop     rbp
retn
sub_7FF6E344AEA0 endp

algn_7FF6E344B1AA:
align 10h



sub_7FF6E344B1B0 proc near
sub     rsp, 28h
sub     ecx, 1
jz      short loc_7FF6E344B1D3
sub     ecx, 1
jz      short loc_7FF6E344B1C3
cmp     ecx, 1
jnz     short loc_7FF6E344B1DE

loc_7FF6E344B1C3:
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
add     rsp, 28h
retn

loc_7FF6E344B1D3:
call    sub_7FF6E3444754
mov     dword ptr [rax], 21h ; '!'

loc_7FF6E344B1DE:
add     rsp, 28h
retn
sub_7FF6E344B1B0 endp

algn_7FF6E344B1E3:
align 10h



sub_7FF6E344B1F0 proc near

var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= xmmword ptr -28h
var_18= qword ptr -18h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h
arg_28= qword ptr  30h

movsd   [rsp+arg_18], xmm3
movsd   [rsp+arg_10], xmm2
push    rbx
sub     rsp, 50h
xor     r9d, r9d
lea     r10, unk_7FF6E3461A40
xorps   xmm0, xmm0
mov     [rsp+58h+var_38], r9
mov     ebx, ecx
mov     [rsp+58h+var_18], r9
movdqu  [rsp+58h+var_28], xmm0
mov     ecx, r9d
lea     r8, unk_7FF6E3461C10
mov     rax, r10
nop     dword ptr [rax]

loc_7FF6E344B230:
cmp     [rax], edx
jz      short loc_7FF6E344B287
inc     ecx
add     rax, 10h
cmp     rax, r8
jl      short loc_7FF6E344B230
mov     [rsp+58h+var_30], r9

loc_7FF6E344B244:
mov     rcx, [rsp+58h+arg_28]
mov     edx, 0FFC0h
call    sub_7FF6E344B36C
sub     ebx, 1
jz      loc_7FF6E344B32F
sub     ebx, 1
jz      short loc_7FF6E344B26D
cmp     ebx, 1
jnz     loc_7FF6E344B33A

loc_7FF6E344B26D:
call    sub_7FF6E3444754
movsd   xmm0, [rsp+58h+arg_20]
mov     dword ptr [rax], 22h ; '"'
add     rsp, 50h
pop     rbx
retn

loc_7FF6E344B287:
movsxd  rax, ecx
add     rax, rax
mov     rax, [r10+rax*8+8]
mov     [rsp+58h+var_30], rax
test    rax, rax
jz      short loc_7FF6E344B244
mov     eax, dword ptr [rsp+58h+arg_10+4]
mov     edx, 0FFC0h
mov     rcx, [rsp+58h+arg_28]
mov     dword ptr [rsp+58h+var_28+4], eax
mov     eax, dword ptr [rsp+58h+arg_18+4]
mov     dword ptr [rsp+58h+var_28+0Ch], eax
mov     eax, dword ptr [rsp+58h+arg_20]
mov     dword ptr [rsp+58h+var_18], eax
mov     eax, dword ptr [rsp+58h+arg_20+4]
mov     dword ptr [rsp+58h+var_18+4], eax
movss   dword ptr [rsp+58h+var_28], xmm2
movss   dword ptr [rsp+58h+var_28+8], xmm3
mov     dword ptr [rsp+58h+var_38], ebx
call    sub_7FF6E344B36C
lea     rcx, [rsp+58h+var_38]
call    sub_7FF6E3447030
test    eax, eax
jnz     short loc_7FF6E344B323
sub     ebx, 1
jz      short loc_7FF6E344B318
sub     ebx, 1
jz      short loc_7FF6E344B301
cmp     ebx, 1
jnz     short loc_7FF6E344B323

loc_7FF6E344B301:
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
movsd   xmm0, [rsp+58h+var_18]
add     rsp, 50h
pop     rbx
retn

loc_7FF6E344B318:
call    sub_7FF6E3444754
mov     dword ptr [rax], 21h ; '!'

loc_7FF6E344B323:
movsd   xmm0, [rsp+58h+var_18]
add     rsp, 50h
pop     rbx
retn

loc_7FF6E344B32F:
call    sub_7FF6E3444754
mov     dword ptr [rax], 21h ; '!'

loc_7FF6E344B33A:
movsd   xmm0, [rsp+58h+arg_20]
add     rsp, 50h
pop     rbx
retn
sub_7FF6E344B1F0 endp

algn_7FF6E344B349:
align 4



sub_7FF6E344B34C proc near

arg_0= dword ptr  8

stmxcsr [rsp+arg_0]
mov     ecx, [rsp+arg_0]
mov     eax, ecx
and     eax, 0FFFFFFC0h
mov     [rsp+arg_0], eax
mov     eax, ecx
ldmxcsr [rsp+arg_0]
and     eax, 3Fh
retn
sub_7FF6E344B34C endp

align 4



sub_7FF6E344B36C proc near

var_28= dword ptr -28h
var_24= dword ptr -24h
arg_0= dword ptr  8

; FUNCTION CHUNK AT 00007FF6E345C364 SIZE 0000002D BYTES

; __unwind { // __C_specific_handler
sub     rsp, 28h
stmxcsr [rsp+28h+arg_0]
mov     r8d, [rsp+28h+arg_0]
mov     [rsp+28h+var_24], r8d
mov     eax, edx
not     eax
or      eax, 0FFFF807Fh
and     eax, r8d
and     ecx, edx
or      eax, ecx
mov     [rsp+28h+var_28], eax
cmp     cs:byte_7FF6E346D430, 0
jz      short loc_7FF6E344B3CA
test    al, 40h
jz      short loc_7FF6E344B3CA

loc_7FF6E344B39F:
;   __try { // __except at loc_7FF6E344B3AA
mov     [rsp+28h+arg_0], eax
ldmxcsr [rsp+28h+arg_0]
jmp     short loc_7FF6E344B3C8
;   } // starts at 7FF6E344B39F

loc_7FF6E344B3AA:
;   __except(loc_7FF6E345C364) // owned by 7FF6E344B39F
mov     cs:byte_7FF6E346D430, 0
mov     eax, [rsp+28h+var_28]
and     eax, 0FFFFFFBFh
mov     [rsp+28h+var_28], eax
mov     [rsp+28h+arg_0], eax
ldmxcsr [rsp+28h+arg_0]
mov     r8d, [rsp+28h+var_24]

loc_7FF6E344B3C8:
jmp     short loc_7FF6E344B3D6

loc_7FF6E344B3CA:
and     eax, 0FFFFFFBFh
mov     [rsp+28h+arg_0], eax
ldmxcsr [rsp+28h+arg_0]

loc_7FF6E344B3D6:
mov     eax, r8d
add     rsp, 28h
retn
; } // starts at 7FF6E344B36C
sub_7FF6E344B36C endp

algn_7FF6E344B3DE:
align 20h
; [0000000A BYTES: COLLAPSED FUNCTION get_fpsw_inline]
align 4
; [0000000A BYTES: COLLAPSED FUNCTION set_fpsw_inline]
align 8



sub_7FF6E344B3F8 proc near

arg_0= dword ptr  8

test    cl, 3Fh
jz      short locret_7FF6E344B414
stmxcsr [rsp+arg_0]
mov     eax, [rsp+arg_0]
and     ecx, 3Fh
or      eax, ecx
mov     [rsp+arg_0], eax
ldmxcsr [rsp+arg_0]

locret_7FF6E344B414:
retn
sub_7FF6E344B3F8 endp

align 8
; [0000000D BYTES: COLLAPSED FUNCTION get_machine_sse_status(void)]
align 10h
; [00000075 BYTES: COLLAPSED FUNCTION _calloc_base]
algn_7FF6E344B4A5:
align 10h
; [0000003C BYTES: COLLAPSED FUNCTION _free_base]
algn_7FF6E344B4EC:
align 20h



sub_7FF6E344B500 proc near
mov     rax, cs:hHeap
retn
sub_7FF6E344B500 endp

align 10h
; [0000005E BYTES: COLLAPSED FUNCTION _malloc_base]
algn_7FF6E344B56E:
align 10h



sub_7FF6E344B570 proc near
push    rbx
sub     rsp, 20h
mov     rax, cs:qword_7FF6E346F348
mov     rbx, rdx
cmp     [rdx], rax
jz      short loc_7FF6E344B59B
mov     eax, [rcx+3A8h]
test    cs:dword_7FF6E346D488, eax
jnz     short loc_7FF6E344B59B
call    __acrt_update_thread_locale_data
mov     [rbx], rax

loc_7FF6E344B59B:
add     rsp, 20h
pop     rbx
retn
sub_7FF6E344B570 endp

algn_7FF6E344B5A1:
align 4



sub_7FF6E344B5A4 proc near
push    rbx
sub     rsp, 20h
lea     rax, qword_7FF6E346F348
mov     rbx, rdx
mov     rax, [rax+r8*8]
cmp     [rdx], rax
jz      short loc_7FF6E344B5D3
mov     eax, [rcx+3A8h]
test    cs:dword_7FF6E346D488, eax
jnz     short loc_7FF6E344B5D3
call    __acrt_update_thread_locale_data
mov     [rbx], rax

loc_7FF6E344B5D3:
add     rsp, 20h
pop     rbx
retn
sub_7FF6E344B5A4 endp

algn_7FF6E344B5D9:
align 4



sub_7FF6E344B5DC proc near
push    rbx
sub     rsp, 20h
mov     rax, cs:qword_7FF6E346F960
mov     rbx, rdx
cmp     [rdx], rax
jz      short loc_7FF6E344B607
mov     eax, [rcx+3A8h]
test    cs:dword_7FF6E346D488, eax
jnz     short loc_7FF6E344B607
call    __acrt_update_thread_multibyte_data
mov     [rbx], rax

loc_7FF6E344B607:
add     rsp, 20h
pop     rbx
retn
sub_7FF6E344B5DC endp

algn_7FF6E344B60D:
align 10h



sub_7FF6E344B610 proc near
push    rbx
sub     rsp, 20h
lea     rax, qword_7FF6E346F960
mov     rbx, rdx
mov     rax, [rax+r8*8]
cmp     [rdx], rax
jz      short loc_7FF6E344B63F
mov     eax, [rcx+3A8h]
test    cs:dword_7FF6E346D488, eax
jnz     short loc_7FF6E344B63F
call    __acrt_update_thread_multibyte_data
mov     [rbx], rax

loc_7FF6E344B63F:
add     rsp, 20h
pop     rbx
retn
sub_7FF6E344B610 endp

algn_7FF6E344B645:
align 8
; [00000393 BYTES: COLLAPSED FUNCTION fp_format_a(double const * const,char *,unsigned __int64,char * const,unsigned __int64,int,bool,uint,__acrt_rounding_mode,__crt_cached_ptd_host &)]
algn_7FF6E344B9DB:
align 4
; [00000104 BYTES: COLLAPSED FUNCTION sub_7FF6E344B9DC]
; [000001E1 BYTES: COLLAPSED FUNCTION fp_format_e_internal(char * const,unsigned __int64,int,bool,uint,_strflt * const,bool,__crt_cached_ptd_host &)]
algn_7FF6E344BCC1:
align 4
; [000000D5 BYTES: COLLAPSED FUNCTION fp_format_f(double const * const,char * const,unsigned __int64,char * const,unsigned __int64,int,__acrt_rounding_mode,__crt_cached_ptd_host &)]
algn_7FF6E344BD99:
align 4



; __int64 __usercall sub_7FF6E344BD9C@<rax>(void *Src@<rcx>, char, __crt_cached_ptd_host *)
sub_7FF6E344BD9C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_20= byte ptr  28h
arg_28= qword ptr  30h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 20h
cmp     [rsp+38h+arg_20], 0
mov     rbx, rcx
movsxd  rcx, dword ptr [r9+4]
mov     rbp, r9
mov     esi, r8d
jz      short loc_7FF6E344BDE3
lea     eax, [rcx-1]
cmp     eax, r8d
jnz     short loc_7FF6E344BDE3
xor     eax, eax
cmp     dword ptr [r9], 2Dh ; '-'
setz    al
add     rax, rbx
mov     word ptr [rcx+rax-1], 30h ; '0'

loc_7FF6E344BDE3:
cmp     dword ptr [r9], 2Dh ; '-'
jnz     short loc_7FF6E344BDEF
mov     byte ptr [rbx], 2Dh ; '-'
inc     rbx

loc_7FF6E344BDEF:
movsxd  rax, dword ptr [r9+4]
or      rdi, 0FFFFFFFFFFFFFFFFh
test    eax, eax
jg      short loc_7FF6E344BE3B
jnz     short loc_7FF6E344BE0A
mov     rax, [r9+8]
cmp     byte ptr [rax], 30h ; '0'
jnz     short loc_7FF6E344BE0A
mov     al, 1
jmp     short loc_7FF6E344BE0C

loc_7FF6E344BE0A:
xor     al, al

loc_7FF6E344BE0C:
cmp     [rsp+38h+arg_20], 0
jz      short loc_7FF6E344BE17
test    al, al
jnz     short loc_7FF6E344BE33

loc_7FF6E344BE17:
mov     r8, rdi

loc_7FF6E344BE1A:
inc     r8
cmp     byte ptr [rbx+r8], 0
jnz     short loc_7FF6E344BE1A
inc     r8              ; Size
lea     rcx, [rbx+1]    ; void *
mov     rdx, rbx        ; Src
call    memcpy

loc_7FF6E344BE33:
mov     byte ptr [rbx], 30h ; '0'
inc     rbx
jmp     short loc_7FF6E344BE3E

loc_7FF6E344BE3B:
add     rbx, rax

loc_7FF6E344BE3E:
test    esi, esi
jle     loc_7FF6E344BECE
lea     r14, [rbx+1]
mov     r8, rdi

loc_7FF6E344BE4D:
inc     r8
cmp     byte ptr [rbx+r8], 0
jnz     short loc_7FF6E344BE4D
inc     r8              ; Size
mov     rdx, rbx        ; Src
mov     rcx, r14        ; void *
call    memcpy
mov     r15, [rsp+38h+arg_28]
cmp     byte ptr [r15+28h], 0
jnz     short loc_7FF6E344BE79
mov     rcx, r15        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)

loc_7FF6E344BE79:
mov     rax, [r15+18h]
mov     rcx, [rax+0F8h]
mov     rax, [rcx]
mov     cl, [rax]
mov     [rbx], cl
mov     eax, [rbp+4]
test    eax, eax
jns     short loc_7FF6E344BECE
neg     eax
cmp     [rsp+38h+arg_20], 0
jnz     short loc_7FF6E344BE9F
cmp     eax, esi
jge     short loc_7FF6E344BEA1

loc_7FF6E344BE9F:
mov     esi, eax

loc_7FF6E344BEA1:
movsxd  rbx, esi

loc_7FF6E344BEA4:
inc     rdi
cmp     byte ptr [r14+rdi], 0
jnz     short loc_7FF6E344BEA4
lea     r8, [rdi+1]     ; Size
mov     rdx, r14        ; Src
lea     rcx, [rbx+r14]  ; void *
call    memcpy
mov     r8, rbx         ; Size
mov     edx, 30h ; '0'  ; Val
mov     rcx, r14        ; void *
call    memset

loc_7FF6E344BECE:
mov     rbx, [rsp+38h+arg_0]
xor     eax, eax
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     rdi
retn
sub_7FF6E344BD9C endp

algn_7FF6E344BEE9:
align 4
; [00000152 BYTES: COLLAPSED FUNCTION fp_format_g(double const * const,char * const,unsigned __int64,char * const,unsigned __int64,int,bool,uint,__acrt_rounding_mode,__crt_cached_ptd_host &)]
algn_7FF6E344C03E:
align 20h
; [00000116 BYTES: COLLAPSED FUNCTION should_round_up(double const * const,unsigned __int64,short,__acrt_rounding_mode)]
algn_7FF6E344C156:
align 8
; [000002E5 BYTES: COLLAPSED FUNCTION __acrt_fp_format]
algn_7FF6E344C43D:
align 20h
; [000001B0 BYTES: COLLAPSED FUNCTION _wctomb_internal]
; [00000178 BYTES: COLLAPSED FUNCTION _mbtowc_internal]



sub_7FF6E344C768 proc near
mov     dl, [rcx]
xor     eax, eax
test    dl, dl
js      short loc_7FF6E344C774
setnz   al
retn

loc_7FF6E344C774:
mov     al, dl
and     al, 0E0h
cmp     al, 0C0h
jnz     short loc_7FF6E344C782
mov     eax, 2
retn

loc_7FF6E344C782:
mov     al, dl
and     al, 0F0h
cmp     al, 0E0h
jnz     short loc_7FF6E344C790
mov     eax, 3
retn

loc_7FF6E344C790:
or      eax, 0FFFFFFFFh
and     dl, 0F8h
cmp     dl, 0F0h
lea     ecx, [rax+5]
cmovz   eax, ecx
retn
sub_7FF6E344C768 endp




sub_7FF6E344C7A0 proc near

var_60= dword ptr -60h
var_58= dword ptr -58h
var_54= dword ptr -54h
var_50= dword ptr -50h
var_48= qword ptr -48h
arg_20= qword ptr  28h

; __unwind { // __GSHandlerCheck
push    rbx
push    rbp
push    rsi
push    rdi
push    r12
push    r14
push    r15
sub     rsp, 40h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+78h+var_48], rax
mov     rsi, [rsp+78h+arg_20]
lea     rbx, unk_7FF6E346F358
xor     r12d, r12d
lea     rdi, unk_7FF6E345D5A8
test    r9, r9
mov     rax, rdx
mov     r15, rdx
cmovnz  rbx, r9
test    rdx, rdx
lea     ebp, [r12+1]
cmovnz  rbp, r8
cmovnz  rdi, rdx
neg     rax
sbb     r14, r14
and     r14, rcx
test    rbp, rbp
jnz     short loc_7FF6E344C80E

loc_7FF6E344C802:
mov     rax, 0FFFFFFFFFFFFFFFEh
jmp     loc_7FF6E344C941

loc_7FF6E344C80E:
cmp     [rbx+6], r12w
jnz     short loc_7FF6E344C864
mov     rcx, rdi
call    sub_7FF6E344C768
movsxd  r8, eax         ; struct __crt_cached_ptd_host *
movzx   eax, byte ptr [rdi]
inc     rdi
cmp     r8d, 1
jbe     short loc_7FF6E344C854
lea     ecx, [r8-2]
cmp     ecx, 2
ja      loc_7FF6E344C936
movzx   edx, r8b
mov     ecx, 7
sub     ecx, edx
mov     r9b, r8b
mov     edx, 1
shl     edx, cl
dec     edx
and     edx, eax
jmp     short loc_7FF6E344C88D

loc_7FF6E344C854:
test    r14, r14
jz      short loc_7FF6E344C85C
mov     [r14], eax

loc_7FF6E344C85C:
mov     rax, r8
jmp     loc_7FF6E344C941

loc_7FF6E344C864:       ; struct _Mbstatet *
mov     r8b, [rbx+4]
mov     edx, [rbx]
mov     r9b, [rbx+6]
lea     eax, [r8-2]
cmp     al, 2
ja      loc_7FF6E344C936
cmp     r9b, 1
jb      loc_7FF6E344C936
cmp     r9b, r8b
jnb     loc_7FF6E344C936

loc_7FF6E344C88D:
movzx   r11d, r9b
cmp     r11, rbp
mov     r10d, r11d
cmovnb  r10, rbp
jmp     short loc_7FF6E344C8BB

loc_7FF6E344C89D:
movzx   ecx, byte ptr [rdi]
inc     rdi
mov     al, cl
and     al, 0C0h
cmp     al, 80h
jnz     loc_7FF6E344C936
mov     eax, edx
and     ecx, 3Fh
shl     eax, 6
mov     edx, ecx
or      edx, eax

loc_7FF6E344C8BB:
mov     rax, rdi
sub     rax, r15
cmp     rax, r10
jb      short loc_7FF6E344C89D
cmp     r10, r11
jnb     short loc_7FF6E344C8E5
movzx   eax, r8b
sub     r9b, r10b
mov     [rbx+4], ax
movzx   eax, r9b
mov     [rbx+6], ax
mov     [rbx], edx
jmp     loc_7FF6E344C802

loc_7FF6E344C8E5:
lea     eax, [rdx-0D800h]
cmp     eax, 7FFh
jbe     short loc_7FF6E344C936
cmp     edx, 110000h
jnb     short loc_7FF6E344C936
movzx   eax, r8b
mov     [rsp+78h+var_58], 80h
mov     [rsp+78h+var_54], 800h
mov     [rsp+78h+var_50], 10000h
cmp     edx, [rsp+rax*4+78h+var_60]
jb      short loc_7FF6E344C936
test    r14, r14
jz      short loc_7FF6E344C924
mov     [r14], edx

loc_7FF6E344C924:
neg     edx
mov     rdx, rbx        ; unsigned __int64
sbb     rcx, rcx
and     rcx, r11        ; this
call    ?reset_and_return@__crt_mbstring@@YA_K_KPEAU_Mbstatet@@@Z ; __crt_mbstring::reset_and_return(unsigned __int64,_Mbstatet *)
jmp     short loc_7FF6E344C941

loc_7FF6E344C936:       ; struct _Mbstatet *
mov     rdx, rsi
mov     rcx, rbx        ; this
call    ?return_illegal_sequence@__crt_mbstring@@YA_KPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z ; __crt_mbstring::return_illegal_sequence(_Mbstatet *,__crt_cached_ptd_host &)

loc_7FF6E344C941:
mov     rcx, [rsp+78h+var_48]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 40h
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rsi
pop     rbp
pop     rbx
retn
; } // starts at 7FF6E344C7A0
sub_7FF6E344C7A0 endp

algn_7FF6E344C95D:
align 20h
; [000000A3 BYTES: COLLAPSED FUNCTION __crt_mbstring::__c16rtomb_utf8(char *,char16_t,_Mbstatet *,__crt_cached_ptd_host &)]
algn_7FF6E344CA03:
align 4



sub_7FF6E344CA04 proc near

var_28= qword ptr -28h
var_18= dword ptr -18h
arg_20= qword ptr  28h

push    rbx
sub     rsp, 40h
mov     rax, [rsp+48h+arg_20]
mov     rbx, rcx
and     [rsp+48h+var_18], 0
lea     rcx, [rsp+48h+var_18]
mov     [rsp+48h+var_28], rax
call    sub_7FF6E344C7A0
cmp     rax, 4
ja      short loc_7FF6E344CA45
mov     ecx, [rsp+48h+var_18]
cmp     ecx, 0FFFFh
jbe     short loc_7FF6E344CA3D
mov     ecx, 0FFFDh

loc_7FF6E344CA3D:
test    rbx, rbx
jz      short loc_7FF6E344CA45
mov     [rbx], cx

loc_7FF6E344CA45:
add     rsp, 40h
pop     rbx
retn
sub_7FF6E344CA04 endp

algn_7FF6E344CA4B:
align 4



sub_7FF6E344CA4C proc near

var_38= qword ptr -38h
arg_0= dword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h
arg_20= qword ptr  28h

mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rbp
mov     [rsp+arg_18], rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 30h
mov     rdi, [rdx]
xor     r13d, r13d
mov     r12, r9
mov     rsi, r8
mov     r14, rdx
mov     rbp, rcx
test    rcx, rcx
jz      loc_7FF6E344CB6E
mov     rbx, rcx
test    r8, r8
jz      loc_7FF6E344CB42
mov     r15, [rsp+58h+arg_20]

loc_7FF6E344CA97:
cmp     [rdi], r13b
jnz     short loc_7FF6E344CAA4
mov     r8d, 1
jmp     short loc_7FF6E344CAC1

loc_7FF6E344CAA4:
cmp     [rdi+1], r13b
jnz     short loc_7FF6E344CAB2
mov     r8d, 2
jmp     short loc_7FF6E344CAC1

loc_7FF6E344CAB2:
mov     al, [rdi+2]
neg     al
sbb     r8, r8
neg     r8
add     r8, 3

loc_7FF6E344CAC1:
mov     r9, r12
mov     [rsp+58h+arg_0], r13d
mov     rdx, rdi
mov     [rsp+58h+var_38], r15
lea     rcx, [rsp+58h+arg_0]
call    sub_7FF6E344C7A0
mov     rdx, rax
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344CB5C
test    rax, rax
jz      short loc_7FF6E344CB53
mov     ecx, [rsp+58h+arg_0]
cmp     ecx, 0FFFFh
jbe     short loc_7FF6E344CB2E
cmp     rsi, 1
jbe     short loc_7FF6E344CB42
add     ecx, 0FFFF0000h
mov     r8d, 0D800h
mov     eax, ecx
mov     [rsp+58h+arg_0], ecx
shr     eax, 0Ah
dec     rsi
or      ax, r8w
mov     [rbx], ax
mov     eax, 3FFh
and     cx, ax
add     rbx, 2
mov     eax, 0DC00h
or      cx, ax

loc_7FF6E344CB2E:
mov     [rbx], cx
add     rdi, rdx
add     rbx, 2
sub     rsi, 1
jnz     loc_7FF6E344CA97

loc_7FF6E344CB42:
sub     rbx, rbp
mov     [r14], rdi
sar     rbx, 1

loc_7FF6E344CB4B:
mov     rax, rbx
jmp     loc_7FF6E344CBE4

loc_7FF6E344CB53:
mov     rdi, r13
mov     [rbx], r13w
jmp     short loc_7FF6E344CB42

loc_7FF6E344CB5C:
mov     [r14], rdi
mov     byte ptr [r15+30h], 1
mov     dword ptr [r15+2Ch], 2Ah ; '*'
jmp     short loc_7FF6E344CBE0

loc_7FF6E344CB6E:
mov     rsi, [rsp+58h+arg_20]
mov     rbx, r13

loc_7FF6E344CB79:
cmp     [rdi], r13b
jnz     short loc_7FF6E344CB86
mov     r8d, 1
jmp     short loc_7FF6E344CBA3

loc_7FF6E344CB86:
cmp     [rdi+1], r13b
jnz     short loc_7FF6E344CB94
mov     r8d, 2
jmp     short loc_7FF6E344CBA3

loc_7FF6E344CB94:
mov     al, [rdi+2]
neg     al
sbb     r8, r8
neg     r8
add     r8, 3

loc_7FF6E344CBA3:
mov     r9, r12
mov     [rsp+58h+var_38], rsi
mov     rdx, rdi
xor     ecx, ecx
call    sub_7FF6E344C7A0
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344CBD5
test    rax, rax
jz      short loc_7FF6E344CB4B
lea     rcx, [rbx+1]
add     rdi, rax
cmp     rax, 4
cmovnz  rcx, rbx
lea     rbx, [rcx+1]
jmp     short loc_7FF6E344CB79

loc_7FF6E344CBD5:
mov     byte ptr [rsi+30h], 1
mov     dword ptr [rsi+2Ch], 2Ah ; '*'

loc_7FF6E344CBE0:
or      rax, 0FFFFFFFFFFFFFFFFh

loc_7FF6E344CBE4:
mov     rbx, [rsp+58h+arg_8]
mov     rbp, [rsp+58h+arg_10]
mov     rsi, [rsp+58h+arg_18]
add     rsp, 30h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
retn
sub_7FF6E344CA4C endp

algn_7FF6E344CC01:
align 4
; [00000027 BYTES: COLLAPSED FUNCTION _fileno]
algn_7FF6E344CC2B:
align 4
; [00000018 BYTES: COLLAPSED FUNCTION _get_printf_count_output]
; [00000049 BYTES: COLLAPSED FUNCTION __acrt_should_use_temporary_buffer]
algn_7FF6E344CC8D:
align 10h
; [000000C7 BYTES: COLLAPSED FUNCTION __acrt_stdio_begin_temporary_buffering_nolock]
algn_7FF6E344CD57:
align 8
; [0000003D BYTES: COLLAPSED FUNCTION __acrt_stdio_end_temporary_buffering_nolock]
algn_7FF6E344CD95:
align 8



sub_7FF6E344CD98 proc near

StartupInfo= _STARTUPINFOW ptr -78h
var_8= byte ptr -8

mov     rax, rsp
mov     [rax+8], rbx
mov     [rax+10h], rbp
mov     [rax+18h], rsi
mov     [rax+20h], rdi
push    r14
sub     rsp, 90h
xor     edx, edx        ; Val
lea     rcx, [rax-78h]  ; void *
lea     r8d, [rdx+68h]  ; Size
call    memset
lea     rcx, [rsp+98h+StartupInfo] ; lpStartupInfo
call    cs:GetStartupInfoW
xor     r14d, r14d
cmp     [rsp+98h+StartupInfo.cbReserved2], r14w
jz      loc_7FF6E344CE77
mov     rax, [rsp+98h+StartupInfo.lpReserved2]
test    rax, rax
jz      loc_7FF6E344CE77
movsxd  rbx, dword ptr [rax]
lea     rsi, [rax+4]
mov     edi, 2000h
add     rbx, rsi
cmp     [rax], edi
cmovl   edi, [rax]
mov     ecx, edi
call    __acrt_lowio_ensure_fh_exists
cmp     edi, cs:dword_7FF6E346F780
cmovg   edi, cs:dword_7FF6E346F780
test    edi, edi
jz      short loc_7FF6E344CE77
mov     ebp, r14d

loc_7FF6E344CE1A:
cmp     qword ptr [rbx], 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344CE67
cmp     qword ptr [rbx], 0FFFFFFFFFFFFFFFEh
jz      short loc_7FF6E344CE67
test    byte ptr [rsi], 1
jz      short loc_7FF6E344CE67
test    byte ptr [rsi], 8
jnz     short loc_7FF6E344CE3D
mov     rcx, [rbx]      ; hFile
call    cs:GetFileType
test    eax, eax
jz      short loc_7FF6E344CE67

loc_7FF6E344CE3D:
mov     rax, rbp
lea     r8, qword_7FF6E346F380
mov     rcx, rbp
sar     rcx, 6
and     eax, 3Fh
mov     rcx, [r8+rcx*8]
lea     rdx, [rax+rax*8]
mov     rax, [rbx]
mov     [rcx+rdx*8+28h], rax
mov     al, [rsi]
mov     [rcx+rdx*8+38h], al

loc_7FF6E344CE67:
inc     rbp
inc     rsi
add     rbx, 8
sub     rdi, 1
jnz     short loc_7FF6E344CE1A

loc_7FF6E344CE77:
lea     r11, [rsp+98h+var_8]
mov     rbx, [r11+10h]
mov     rbp, [r11+18h]
mov     rsi, [r11+20h]
mov     rdi, [r11+28h]
mov     rsp, r11
pop     r14
retn
sub_7FF6E344CD98 endp

algn_7FF6E344CE95:
align 8
; [00000108 BYTES: COLLAPSED FUNCTION initialize_stdio_handles_nolock(void)]
; [0000003B BYTES: COLLAPSED FUNCTION __acrt_initialize_lowio]
algn_7FF6E344CFDB:
align 4
; [00000040 BYTES: COLLAPSED FUNCTION __acrt_uninitialize_lowio]



; BOOL __stdcall LocaleEnumProc(LPWSTR)
LocaleEnumProc proc near
mov     rax, cs:qword_7FF6E346F848
xor     r8d, r8d
xor     edx, edx
jmp     j__guard_dispatch_icall_nop
LocaleEnumProc endp

align 10h



sub_7FF6E344D030 proc near

arg_0= qword ptr  8
arg_18= qword ptr  20h

; FUNCTION CHUNK AT 00007FF6E345C1FA SIZE 0000001A BYTES

; __unwind { // __C_specific_handler
mov     [rsp+arg_0], rbx
mov     [rsp+arg_18], r9
push    rdi
sub     rsp, 20h
mov     rbx, r9
mov     rdi, r8
mov     ecx, [rdx]
call    __vcrt_lock
nop

loc_7FF6E344D04D:
;   __try { // __finally(loc_7FF6E345C1FA)
mov     rax, [rdi]
mov     rcx, [rax]
mov     cs:qword_7FF6E346F848, rcx
mov     edx, 1          ; dwFlags
lea     rcx, LocaleEnumProc ; lpLocaleEnumProc
call    cs:EnumSystemLocalesW
mov     edi, eax
and     cs:qword_7FF6E346F848, 0
;   } // starts at 7FF6E344D04D

loc_7FF6E344D076:
mov     ecx, [rbx]
call    __vcrt_unlock
mov     eax, edi
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
; } // starts at 7FF6E344D030
sub_7FF6E344D030 endp

algn_7FF6E344D08A:
align 4



sub_7FF6E344D08C proc near
mov     rcx, cs:qword_7FF6E3473008
cmp     rcx, 0FFFFFFFFFFFFFFFFh
jnz     short loc_7FF6E344D09C
xor     eax, eax
retn

loc_7FF6E344D09C:
test    rcx, rcx
jz      short loc_7FF6E344D0A5
mov     rax, rcx
retn

loc_7FF6E344D0A5:
lea     r9, aComparestringe ; "CompareStringEx"
mov     ecx, 1
lea     r8, asc_7FF6E34623C0 ; "\b"
lea     rdx, aComparestringe ; "CompareStringEx"
jmp     $+5
sub_7FF6E344D08C endp




sub_7FF6E344D0C4 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
flOldProtect= dword ptr  18h
arg_18= qword ptr  20h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_18], rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 20h
or      rax, 0FFFFFFFFFFFFFFFFh
mov     r12d, ecx
mov     r14, r9
mov     rsi, r8
mov     r15, rdx
cmp     r8, r9
jz      loc_7FF6E344D1B4
lea     r13, cs:7FF6E3430000h

loc_7FF6E344D100:
mov     edi, [rsi]
mov     rbx, rva qword_7FF6E346F790[r13+rdi*8]
nop
test    rbx, rbx
jz      short loc_7FF6E344D11E
cmp     rbx, rax
jnz     loc_7FF6E344D25C
jmp     loc_7FF6E344D1A7

loc_7FF6E344D11E:
mov     rbp, ds:rva off_7FF6E3461DC0[r13+rdi*8] ; "api-ms-win-core-datetime-l1-1-1"
xor     edx, edx        ; hFile
mov     rcx, rbp        ; lpLibFileName
mov     r8d, 800h       ; dwFlags
call    cs:LoadLibraryExW
mov     rbx, rax
test    rax, rax
jnz     loc_7FF6E344D243
call    cs:GetLastError
cmp     eax, 57h ; 'W'
jnz     short loc_7FF6E344D197
lea     ebx, [rax-50h]
mov     rcx, rbp        ; String1
mov     r8d, ebx        ; MaxCount
lea     rdx, String2    ; "api-ms-"
call    wcsncmp
test    eax, eax
jz      short loc_7FF6E344D197
mov     r8d, ebx        ; MaxCount
lea     rdx, aExtMs     ; "ext-ms-"
mov     rcx, rbp        ; String1
call    wcsncmp
test    eax, eax
jz      short loc_7FF6E344D197
xor     r8d, r8d        ; dwFlags
xor     edx, edx        ; hFile
mov     rcx, rbp        ; lpLibFileName
call    cs:LoadLibraryExW
mov     rbx, rax
test    rax, rax
jnz     loc_7FF6E344D243

loc_7FF6E344D197:
or      rax, 0FFFFFFFFFFFFFFFFh
xchg    rax, rva qword_7FF6E346F790[r13+rdi*8]
or      rax, 0FFFFFFFFFFFFFFFFh

loc_7FF6E344D1A7:
add     rsi, 4
cmp     rsi, r14
jnz     loc_7FF6E344D100

loc_7FF6E344D1B4:
xor     ebx, ebx

loc_7FF6E344D1B6:
mov     edi, 0Eh
mov     ecx, edi
call    __vcrt_lock
and     [rsp+48h+flOldProtect], 0
lea     rsi, qword_7FF6E3473000
mov     ebp, 100h
lea     r9, [rsp+48h+flOldProtect] ; lpflOldProtect
mov     edx, ebp        ; dwSize
lea     r8d, [rdi-0Ah]  ; flNewProtect
mov     rcx, rsi        ; lpAddress
call    cs:VirtualProtect
test    eax, eax
jz      loc_7FF6E344D270
test    rbx, rbx
mov     rax, rbx
mov     rcx, 0FFFFFFFFFFFFFFFFh
cmovz   rax, rcx
xchg    rax, [rsi+r12*8]
lea     r9, [rsp+48h+flOldProtect] ; lpflOldProtect
mov     edx, ebp        ; dwSize
lea     r8d, [rdi-0Ch]  ; flNewProtect
mov     rcx, rsi        ; lpAddress
call    cs:VirtualProtect
test    eax, eax
jz      short loc_7FF6E344D270
mov     ecx, edi
call    __vcrt_unlock
mov     rbp, [rsp+48h+arg_8]
mov     rax, rbx
mov     rbx, [rsp+48h+arg_0]
mov     rsi, [rsp+48h+arg_18]
add     rsp, 20h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
retn

loc_7FF6E344D243:
mov     rax, rbx
xchg    rax, rva qword_7FF6E346F790[r13+rdi*8]
test    rax, rax
jz      short loc_7FF6E344D25C
mov     rcx, rbx        ; hLibModule
call    cs:FreeLibrary

loc_7FF6E344D25C:       ; lpProcName
mov     rdx, r15
mov     rcx, rbx        ; hModule
call    cs:GetProcAddress
mov     rbx, rax
jmp     loc_7FF6E344D1B6

loc_7FF6E344D270:
call    abort
db 0CCh
sub_7FF6E344D0C4 endp

algn_7FF6E344D276:
align 8



sub_7FF6E344D278 proc near
push    rbx
sub     rsp, 20h
mov     rax, cs:qword_7FF6E34730D0
mov     rbx, rcx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D2C9
test    rax, rax
jnz     short loc_7FF6E344D2B5
lea     r9, aApppolicygetpr ; "AppPolicyGetProcessTerminationMethod"
lea     r8, unk_7FF6E34624F4
lea     rdx, aApppolicygetpr ; "AppPolicyGetProcessTerminationMethod"
lea     ecx, [rax+1Ah]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D2C9

loc_7FF6E344D2B5:
mov     rdx, rbx
mov     rcx, 0FFFFFFFFFFFFFFFAh
add     rsp, 20h
pop     rbx
jmp     j__guard_dispatch_icall_nop

loc_7FF6E344D2C9:
mov     eax, 0C0000225h
add     rsp, 20h
pop     rbx
retn
sub_7FF6E344D278 endp




sub_7FF6E344D2D4 proc near
sub     rsp, 28h
mov     rax, cs:qword_7FF6E3473000
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D314
test    rax, rax
jnz     short loc_7FF6E344D30B
lea     r9, unk_7FF6E34623AC
xor     ecx, ecx
lea     r8, unk_7FF6E34623A8
lea     rdx, aArefileapisans ; "AreFileApisANSI"
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D314

loc_7FF6E344D30B:
add     rsp, 28h
jmp     j__guard_dispatch_icall_nop

loc_7FF6E344D314:
mov     eax, 1
add     rsp, 28h
retn
sub_7FF6E344D2D4 endp

algn_7FF6E344D31E:
align 20h



sub_7FF6E344D320 proc near

lpString2= qword ptr -38h
cchCount2= dword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_20= qword ptr  28h
arg_28= dword ptr  30h
arg_30= qword ptr  38h
arg_38= qword ptr  40h
arg_40= qword ptr  48h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 50h
mov     ebx, r9d
mov     rdi, r8
mov     esi, edx
mov     rbp, rcx
call    sub_7FF6E344D08C
test    rax, rax
jz      short loc_7FF6E344D39A
mov     r10, [rsp+58h+arg_40]
mov     r9d, ebx
mov     r8, [rsp+58h+arg_30]
mov     edx, esi
mov     ecx, [rsp+58h+arg_28]
mov     [rsp+58h+var_18], r10
mov     r10, [rsp+58h+arg_38]
mov     [rsp+58h+var_20], r10
mov     [rsp+58h+var_28], r8
mov     r8, rdi
mov     [rsp+58h+cchCount2], ecx
mov     rcx, [rsp+58h+arg_20]
mov     [rsp+58h+lpString2], rcx
mov     rcx, rbp
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D3CC

loc_7FF6E344D39A:
xor     edx, edx
mov     rcx, rbp
call    sub_7FF6E344D7A4
mov     ecx, eax        ; Locale
mov     r9d, ebx        ; cchCount1
mov     eax, [rsp+58h+arg_28]
mov     r8, rdi         ; lpString1
mov     [rsp+58h+cchCount2], eax ; cchCount2
mov     edx, esi        ; dwCmpFlags
mov     rax, [rsp+58h+arg_20]
mov     [rsp+58h+lpString2], rax ; lpString2
call    cs:CompareStringW

loc_7FF6E344D3CC:
mov     rbx, [rsp+58h+arg_0]
mov     rbp, [rsp+58h+arg_8]
mov     rsi, [rsp+58h+arg_10]
add     rsp, 50h
pop     rdi
retn
sub_7FF6E344D320 endp

algn_7FF6E344D3E1:
align 4



sub_7FF6E344D3E4 proc near

var_28= byte ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rsi
mov     [rsp+arg_0], rcx
push    rdi
sub     rsp, 50h
mov     rax, cs:qword_7FF6E3473010
mov     rbx, r9
mov     rdi, r8
mov     esi, edx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D448
test    rax, rax
jnz     short loc_7FF6E344D434
lea     r9, aEnumsystemloca ; "EnumSystemLocalesEx"
lea     r8, unk_7FF6E34623D8
lea     rdx, aEnumsystemloca ; "EnumSystemLocalesEx"
lea     ecx, [rax+2]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D448

loc_7FF6E344D434:
mov     rcx, [rsp+58h+arg_0]
mov     r9, rbx
mov     r8, rdi
mov     edx, esi
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D478

loc_7FF6E344D448:
lea     rax, [rsp+58h+arg_0]
mov     [rsp+58h+var_18], rax
lea     r9, [rsp+58h+var_24]
mov     eax, 4
lea     r8, [rsp+58h+var_18]
lea     rdx, [rsp+58h+var_20]
mov     [rsp+58h+var_24], eax
lea     rcx, [rsp+58h+var_28]
mov     [rsp+58h+var_20], eax
call    sub_7FF6E344D030

loc_7FF6E344D478:
mov     rbx, [rsp+58h+arg_8]
mov     rsi, [rsp+58h+arg_10]
add     rsp, 50h
pop     rdi
retn
sub_7FF6E344D3E4 endp

; [00000007 BYTES: COLLAPSED FUNCTION FlsAlloc]
align 10h
; [00000007 BYTES: COLLAPSED FUNCTION FlsFree]
align 8
; [00000007 BYTES: COLLAPSED FUNCTION FlsGetValue]
align 20h



sub_7FF6E344D4A0 proc near
mov     rax, cs:qword_7FF6E3473018
jmp     rax
sub_7FF6E344D4A0 endp

align 4
; [00000007 BYTES: COLLAPSED FUNCTION FlsSetValue]
align 4



sub_7FF6E344D4B4 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 30h
mov     rax, cs:qword_7FF6E3473050
mov     ebx, r9d
mov     rdi, r8
mov     esi, edx
mov     rbp, rcx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D519
test    rax, rax
jnz     short loc_7FF6E344D507
lea     r9, aGetlocaleinfoe ; "GetLocaleInfoEx"
lea     r8, unk_7FF6E3462428
lea     rdx, aGetlocaleinfoe ; "GetLocaleInfoEx"
lea     ecx, [rax+0Ah]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D519

loc_7FF6E344D507:
mov     r9d, ebx
mov     r8, rdi
mov     edx, esi
mov     rcx, rbp
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D533

loc_7FF6E344D519:
xor     edx, edx
mov     rcx, rbp
call    sub_7FF6E344D7A4
mov     ecx, eax        ; Locale
mov     r9d, ebx        ; cchData
mov     r8, rdi         ; lpLCData
mov     edx, esi        ; LCType
call    cs:GetLocaleInfoW

loc_7FF6E344D533:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 30h
pop     rdi
retn
sub_7FF6E344D4B4 endp




sub_7FF6E344D548 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     rax, cs:qword_7FF6E3473070
mov     ebx, edx
mov     rdi, rcx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D597
test    rax, rax
jnz     short loc_7FF6E344D58B
lea     r9, aGetuserdefault ; "GetUserDefaultLocaleName"
lea     r8, unk_7FF6E3462458
lea     rdx, aGetuserdefault ; "GetUserDefaultLocaleName"
lea     ecx, [rax+0Eh]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D597

loc_7FF6E344D58B:
mov     edx, ebx
mov     rcx, rdi
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D5AD

loc_7FF6E344D597:
call    cs:GetUserDefaultLCID
xor     r9d, r9d
mov     r8d, ebx
mov     ecx, eax
mov     rdx, rdi
call    sub_7FF6E344D628

loc_7FF6E344D5AD:
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E344D548 endp

; [00000007 BYTES: COLLAPSED FUNCTION InitializeCriticalSectionEx]
align 20h



sub_7FF6E344D5C0 proc near
push    rbx
sub     rsp, 20h
mov     rax, cs:qword_7FF6E3473088
mov     rbx, rcx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D60A
test    rax, rax
jnz     short loc_7FF6E344D5FD
lea     r9, aIsvalidlocalen ; "IsValidLocaleName"
lea     r8, unk_7FF6E3462480
lea     rdx, aIsvalidlocalen ; "IsValidLocaleName"
lea     ecx, [rax+11h]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D60A

loc_7FF6E344D5FD:
mov     rcx, rbx
add     rsp, 20h
pop     rbx
jmp     j__guard_dispatch_icall_nop

loc_7FF6E344D60A:
xor     edx, edx
mov     rcx, rbx
call    sub_7FF6E344D7A4
mov     ecx, eax
mov     edx, 1
add     rsp, 20h
pop     rbx
jmp     cs:IsValidLocale
sub_7FF6E344D5C0 endp

algn_7FF6E344D627:
align 8



sub_7FF6E344D628 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 30h
mov     rax, cs:qword_7FF6E3473098
mov     ebp, r9d
mov     ebx, r8d
mov     rdi, rdx
mov     esi, ecx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D68D
test    rax, rax
jnz     short loc_7FF6E344D67B
lea     r9, aLcidtolocalena ; "LCIDToLocaleName"
lea     r8, unk_7FF6E34624B8
lea     rdx, aLcidtolocalena ; "LCIDToLocaleName"
lea     ecx, [rax+13h]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D68D

loc_7FF6E344D67B:
mov     r9d, ebp
mov     r8d, ebx
mov     rdx, rdi
mov     ecx, esi
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D69A

loc_7FF6E344D68D:
mov     r8d, ebx
mov     rdx, rdi
mov     ecx, esi
call    __acrt_DownlevelLCIDToLocaleName

loc_7FF6E344D69A:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 30h
pop     rdi
retn
sub_7FF6E344D628 endp

algn_7FF6E344D6AF:
align 10h



sub_7FF6E344D6B0 proc near

lpDestStr= qword ptr -38h
cchDest= dword ptr -30h
var_28= qword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_20= qword ptr  28h
arg_28= dword ptr  30h
arg_30= qword ptr  38h
arg_38= qword ptr  40h
arg_40= qword ptr  48h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 50h
mov     r10, cs:qword_7FF6E3473090
mov     ebx, r9d
mov     rdi, r8
mov     esi, edx
mov     rbp, rcx
cmp     r10, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D75B
test    r10, r10
jnz     short loc_7FF6E344D707
lea     r9, aLcmapstringex ; "LCMapStringEx"
lea     r8, unk_7FF6E34624A0
lea     rdx, aLcmapstringex ; "LCMapStringEx"
lea     ecx, [r10+12h]
call    sub_7FF6E344D0C4
mov     r10, rax
test    rax, rax
jz      short loc_7FF6E344D75B

loc_7FF6E344D707:
mov     rcx, [rsp+58h+arg_40]
mov     r9d, ebx
mov     eax, [rsp+58h+arg_28]
mov     r8, rdi
mov     [rsp+58h+var_18], rcx
mov     edx, esi
mov     rcx, [rsp+58h+arg_38]
mov     [rsp+58h+var_20], rcx
mov     rcx, [rsp+58h+arg_30]
mov     [rsp+58h+var_28], rcx
mov     rcx, rbp
mov     [rsp+58h+cchDest], eax
mov     rax, [rsp+58h+arg_20]
mov     [rsp+58h+lpDestStr], rax
mov     rax, r10
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D78D

loc_7FF6E344D75B:
xor     edx, edx
mov     rcx, rbp
call    sub_7FF6E344D7A4
mov     ecx, eax        ; Locale
mov     r9d, ebx        ; cchSrc
mov     eax, [rsp+58h+arg_28]
mov     r8, rdi         ; lpSrcStr
mov     [rsp+58h+cchDest], eax ; cchDest
mov     edx, esi        ; dwMapFlags
mov     rax, [rsp+58h+arg_20]
mov     [rsp+58h+lpDestStr], rax ; lpDestStr
call    cs:LCMapStringW

loc_7FF6E344D78D:
mov     rbx, [rsp+58h+arg_0]
mov     rbp, [rsp+58h+arg_8]
mov     rsi, [rsp+58h+arg_10]
add     rsp, 50h
pop     rdi
retn
sub_7FF6E344D6B0 endp

algn_7FF6E344D7A2:
align 4



sub_7FF6E344D7A4 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     rax, cs:qword_7FF6E34730A0
mov     edi, edx
mov     rbx, rcx
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E344D7F3
test    rax, rax
jnz     short loc_7FF6E344D7E7
lea     r9, aLocalenametolc ; "LocaleNameToLCID"
lea     r8, unk_7FF6E34624D8
lea     rdx, aLocalenametolc ; "LocaleNameToLCID"
lea     ecx, [rax+14h]
call    sub_7FF6E344D0C4
test    rax, rax
jz      short loc_7FF6E344D7F3

loc_7FF6E344D7E7:
mov     edx, edi
mov     rcx, rbx
call    j__guard_dispatch_icall_nop
jmp     short loc_7FF6E344D7FB

loc_7FF6E344D7F3:
mov     rcx, rbx
call    sub_7FF6E345818C

loc_7FF6E344D7FB:
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E344D7A4 endp

algn_7FF6E344D806:
align 8
; [00000014 BYTES: COLLAPSED FUNCTION __vcrt_thread_attach]



sub_7FF6E344D81C proc near
sub     rsp, 28h
mov     rax, cs:qword_7FF6E3473000
test    rax, rax
jnz     short loc_7FF6E344D848
lea     r9, unk_7FF6E34623AC
xor     ecx, ecx
lea     r8, unk_7FF6E34623A8
lea     rdx, aArefileapisans ; "AreFileApisANSI"
call    sub_7FF6E344D0C4

loc_7FF6E344D848:
call    sub_7FF6E344D08C
mov     rax, cs:qword_7FF6E3473010
test    rax, rax
jnz     short loc_7FF6E344D876
lea     r9, aEnumsystemloca ; "EnumSystemLocalesEx"
lea     r8, unk_7FF6E34623D8
lea     rdx, aEnumsystemloca ; "EnumSystemLocalesEx"
lea     ecx, [rax+2]
call    sub_7FF6E344D0C4

loc_7FF6E344D876:
mov     rax, cs:qword_7FF6E3473028
test    rax, rax
jnz     short loc_7FF6E344D89F
lea     r9, aGetdateformate ; "GetDateFormatEx"
lea     r8, unk_7FF6E3462410
lea     rdx, aGetdateformate ; "GetDateFormatEx"
lea     ecx, [rax+5]
call    sub_7FF6E344D0C4

loc_7FF6E344D89F:
mov     rax, cs:qword_7FF6E3473050
test    rax, rax
jnz     short loc_7FF6E344D8C8
lea     r9, aGetlocaleinfoe ; "GetLocaleInfoEx"
lea     r8, unk_7FF6E3462428
lea     rdx, aGetlocaleinfoe ; "GetLocaleInfoEx"
lea     ecx, [rax+0Ah]
call    sub_7FF6E344D0C4

loc_7FF6E344D8C8:
mov     rax, cs:qword_7FF6E3473068
test    rax, rax
jnz     short loc_7FF6E344D8F1
lea     r9, aGettimeformate ; "GetTimeFormatEx"
lea     r8, unk_7FF6E3462440
lea     rdx, aGettimeformate ; "GetTimeFormatEx"
lea     ecx, [rax+0Dh]
call    sub_7FF6E344D0C4

loc_7FF6E344D8F1:
mov     rax, cs:qword_7FF6E3473070
test    rax, rax
jnz     short loc_7FF6E344D91A
lea     r9, aGetuserdefault ; "GetUserDefaultLocaleName"
lea     r8, unk_7FF6E3462458
lea     rdx, aGetuserdefault ; "GetUserDefaultLocaleName"
lea     ecx, [rax+0Eh]
call    sub_7FF6E344D0C4

loc_7FF6E344D91A:
mov     rax, cs:qword_7FF6E3473088
test    rax, rax
jnz     short loc_7FF6E344D943
lea     r9, aIsvalidlocalen ; "IsValidLocaleName"
lea     r8, unk_7FF6E3462480
lea     rdx, aIsvalidlocalen ; "IsValidLocaleName"
lea     ecx, [rax+11h]
call    sub_7FF6E344D0C4

loc_7FF6E344D943:
mov     rax, cs:qword_7FF6E3473090
test    rax, rax
jnz     short loc_7FF6E344D96C
lea     r9, aLcmapstringex ; "LCMapStringEx"
lea     r8, unk_7FF6E34624A0
lea     rdx, aLcmapstringex ; "LCMapStringEx"
lea     ecx, [rax+12h]
call    sub_7FF6E344D0C4

loc_7FF6E344D96C:
mov     rax, cs:qword_7FF6E3473098
test    rax, rax
jnz     short loc_7FF6E344D995
lea     r9, aLcidtolocalena ; "LCIDToLocaleName"
lea     r8, unk_7FF6E34624B8
lea     rdx, aLcidtolocalena ; "LCIDToLocaleName"
lea     ecx, [rax+13h]
call    sub_7FF6E344D0C4

loc_7FF6E344D995:
mov     rax, cs:qword_7FF6E34730A0
test    rax, rax
jnz     short loc_7FF6E344D9BE
lea     r9, aLocalenametolc ; "LocaleNameToLCID"
lea     r8, unk_7FF6E34624D8
lea     rdx, aLocalenametolc ; "LocaleNameToLCID"
lea     ecx, [rax+14h]
call    sub_7FF6E344D0C4

loc_7FF6E344D9BE:
add     rsp, 28h
retn
sub_7FF6E344D81C endp

algn_7FF6E344D9C3:
align 4



sub_7FF6E344D9C4 proc near

flOldProtect= dword ptr  8

sub     rsp, 28h
and     [rsp+28h+flOldProtect], 0
lea     r9, [rsp+28h+flOldProtect] ; lpflOldProtect
mov     edx, 100h       ; dwSize
lea     rcx, qword_7FF6E3473000 ; lpAddress
mov     r8d, 2          ; flNewProtect
call    cs:VirtualProtect
test    eax, eax
setnz   al
add     rsp, 28h
retn
sub_7FF6E344D9C4 endp




sub_7FF6E344D9F4 proc near
sub     rsp, 28h
mov     rax, cs:qword_7FF6E3473018
cmp     rax, 0FFFFFFFFFFFFFFFFh
jnz     short loc_7FF6E344DA09
xor     eax, eax
jmp     short loc_7FF6E344DA2B

loc_7FF6E344DA09:
test    rax, rax
jnz     short loc_7FF6E344DA2E
lea     r9, aFlsgetvalue2 ; "FlsGetValue2"
lea     r8, unk_7FF6E34623F8
lea     rdx, aFlsgetvalue2 ; "FlsGetValue2"
lea     ecx, [rax+3]
call    sub_7FF6E344D0C4

loc_7FF6E344DA2B:
test    rax, rax

loc_7FF6E344DA2E:
setnz   al
add     rsp, 28h
retn
sub_7FF6E344D9F4 endp

algn_7FF6E344DA36:
align 8
; [00000041 BYTES: COLLAPSED FUNCTION __acrt_uninitialize_winapi_thunks]
algn_7FF6E344DA79:
align 4
; [0000011F BYTES: COLLAPSED FUNCTION _mbstowcs_internal(unsigned __int64 *,wchar_t *,unsigned __int64,char const *,unsigned __int64,__crt_cached_ptd_host &)]
algn_7FF6E344DB9B:
align 4



sub_7FF6E344DB9C proc near

var_38= qword ptr -38h
var_30= qword ptr -30h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

; __unwind { // __CxxFrameHandler3
mov     rax, rsp
mov     [rax+10h], rdx
push    rsi
push    rdi
push    r14
sub     rsp, 40h
mov     qword ptr [rax-28h], 0FFFFFFFFFFFFFFFEh
mov     [rax+18h], rbx
mov     [rax+20h], rbp
mov     rbx, r9
mov     rbp, r8
mov     rsi, rcx
xor     r14d, r14d
mov     edi, r14d
test    rcx, rcx
jz      short loc_7FF6E344DBDF
test    r8, r8
jnz     short loc_7FF6E344DBDB
xor     eax, eax
jmp     loc_7FF6E344DD81

loc_7FF6E344DBDB:
mov     [rcx], r14w

loc_7FF6E344DBDF:
test    rdx, rdx
jnz     short loc_7FF6E344DC11
mov     byte ptr [r9+30h], 1
mov     dword ptr [r9+2Ch], 16h
mov     [rsp+58h+var_30], rbx ; __crt_cached_ptd_host *
mov     [rsp+58h+var_38], r14 ; uintptr_t
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     ecx, ecx        ; Expression
call    sub_7FF6E3440FDC
or      rax, 0FFFFFFFFFFFFFFFFh
jmp     loc_7FF6E344DD81

loc_7FF6E344DC11:
cmp     [r9+28h], r14b
jnz     short loc_7FF6E344DC24
mov     rcx, rbx        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)
mov     rdx, [rsp+58h+arg_8]

loc_7FF6E344DC24:
mov     rax, [rbx+18h]
mov     ecx, [rax+0Ch]
cmp     ecx, 0FDE9h
jnz     short loc_7FF6E344DC57
mov     [rsp+58h+arg_0], r14
mov     [rsp+58h+var_38], rbx
lea     r9, [rsp+58h+arg_0]
mov     r8, rbp
lea     rdx, [rsp+58h+arg_8]
mov     rcx, rsi

loc_7FF6E344DC4D:
call    sub_7FF6E344CA4C
jmp     loc_7FF6E344DD81

loc_7FF6E344DC57:
mov     rax, [rax+138h]
test    rsi, rsi
jz      loc_7FF6E344DD36
test    rax, rax
jnz     short loc_7FF6E344DC92
test    rbp, rbp
jz      short loc_7FF6E344DC8A

loc_7FF6E344DC71:
movzx   eax, byte ptr [rdi+rdx]
mov     [rsi], ax
cmp     [rdi+rdx], r14b
jz      short loc_7FF6E344DC8A
inc     rdi
add     rsi, 2
cmp     rdi, rbp
jb      short loc_7FF6E344DC71

loc_7FF6E344DC8A:
mov     rax, rdi
jmp     loc_7FF6E344DD81

loc_7FF6E344DC92:
mov     dword ptr [rsp+58h+var_30], ebp
mov     [rsp+58h+var_38], rsi
or      rdi, 0FFFFFFFFFFFFFFFFh
mov     r9d, edi
mov     r8, rdx
lea     edx, [rdi+0Ah]
call    sub_7FF6E3451998
cdqe
test    rax, rax
jnz     loc_7FF6E344DD7E
call    cs:GetLastError
cmp     eax, 7Ah ; 'z'
jz      short loc_7FF6E344DCD4

loc_7FF6E344DCC3:
mov     byte ptr [rbx+30h], 1
mov     dword ptr [rbx+2Ch], 2Ah ; '*'
mov     [rsi], r14w
jmp     short loc_7FF6E344DC8A

loc_7FF6E344DCD4:
mov     r8d, ebp
mov     r10, [rsp+58h+arg_8]
mov     r9, r10
test    ebp, ebp
jz      short loc_7FF6E344DD0D

loc_7FF6E344DCE3:
dec     r8d
cmp     [r9], r14b
jz      short loc_7FF6E344DD0D
movzx   edx, byte ptr [r9]
mov     rax, [rbx+18h]
mov     rcx, [rax]
cmp     [rcx+rdx*2], r14w
jge     short loc_7FF6E344DD05
inc     r9
cmp     [r9], r14b
jz      short loc_7FF6E344DCC3

loc_7FF6E344DD05:
inc     r9
test    r8d, r8d
jnz     short loc_7FF6E344DCE3

loc_7FF6E344DD0D:
sub     r9d, r10d
mov     rcx, [rbx+18h]
mov     dword ptr [rsp+58h+var_30], ebp
mov     [rsp+58h+var_38], rsi
mov     r8, r10
mov     edx, 1
mov     ecx, [rcx+0Ch]
call    sub_7FF6E3451998
cdqe
test    rax, rax
jnz     short loc_7FF6E344DD81
jmp     short loc_7FF6E344DCC3

loc_7FF6E344DD36:
or      rdi, 0FFFFFFFFFFFFFFFFh
test    rax, rax
jnz     short loc_7FF6E344DD4D

loc_7FF6E344DD3F:
inc     rdi
cmp     [rdx+rdi], r14b
jnz     short loc_7FF6E344DD3F
jmp     loc_7FF6E344DC8A

loc_7FF6E344DD4D:
mov     dword ptr [rsp+58h+var_30], r14d
mov     [rsp+58h+var_38], r14
mov     r9d, edi
mov     r8, rdx
mov     edx, 9
call    sub_7FF6E3451998
cdqe
test    rax, rax
jnz     short loc_7FF6E344DD7E
mov     byte ptr [rbx+30h], 1
mov     dword ptr [rbx+2Ch], 2Ah ; '*'
jmp     loc_7FF6E344DC8A

loc_7FF6E344DD7E:
dec     rax

loc_7FF6E344DD81:
mov     rbx, [rsp+58h+arg_10]
mov     rbp, [rsp+58h+arg_18]
add     rsp, 40h
pop     r14
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E344DB9C
sub_7FF6E344DB9C endp

; [000000A8 BYTES: COLLAPSED FUNCTION mbstowcs_s]
; [00000113 BYTES: COLLAPSED FUNCTION _wcstombs_internal(unsigned __int64 *,char *,unsigned __int64,wchar_t const *,unsigned __int64,__crt_cached_ptd_host &)]
algn_7FF6E344DF4F:
align 10h
; [0000033F BYTES: COLLAPSED FUNCTION _wcstombs_l_helper(char *,wchar_t const *,unsigned __int64,__crt_cached_ptd_host &)]
algn_7FF6E344E28F:
align 10h
; [000000B6 BYTES: COLLAPSED FUNCTION _wcstombs_s_l]
algn_7FF6E344E346:
align 8
; [00000108 BYTES: COLLAPSED FUNCTION _isctype_l]
; [0000017B BYTES: COLLAPSED FUNCTION InternalGetLocaleInfoA(__crt_locale_pointers * const,wchar_t const * const,ulong,char * const,int)]
algn_7FF6E344E5CB:
align 4
; [000001C8 BYTES: COLLAPSED FUNCTION __acrt_GetLocaleInfoA]
; [0000018F BYTES: COLLAPSED FUNCTION __acrt_GetStringTypeA]
algn_7FF6E344E923:
align 4
; [00000331 BYTES: COLLAPSED FUNCTION __acrt_LCMapStringA_stat(__crt_locale_pointers *,wchar_t const *,ulong,char const *,int,char *,int,int,int)]
algn_7FF6E344EC55:
align 8
; [00000096 BYTES: COLLAPSED FUNCTION __acrt_LCMapStringA]
algn_7FF6E344ECEE:
align 10h
; [00000065 BYTES: COLLAPSED FUNCTION wcscpy_s]
algn_7FF6E344ED55:
align 8
; [000000B2 BYTES: COLLAPSED FUNCTION _fcloseall]
algn_7FF6E344EE0A:
align 4
; [00000042 BYTES: COLLAPSED FUNCTION __acrt_stdio_free_buffer_nolock]
algn_7FF6E344EE4E:
align 10h
; [00000077 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_ad8af0d99a0adf03d037d7dffe354bb5_,_lambda_c9ba49e555ba839a7b07aa3fbecb7617_ &,_lambda_2f1ebd5d68526518146ae959c9e734c8_>(_lambda_ad8af0d99a0adf03d037d7dffe354bb5_ &&,_lambda_c9ba49e555ba839a7b07aa3fbecb7617_ &,_lambda_2f1ebd5d68526518146ae959c9e734c8_ &&)]
algn_7FF6E344EEC7:
align 8



sub_7FF6E344EEC8 proc near

var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= dword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
arg_0= dword ptr  8
arg_10= byte ptr  18h
arg_18= dword ptr  20h

mov     [rsp+arg_0], ecx
sub     rsp, 58h
movsxd  r8, ecx
xor     r9d, r9d        ; LineNo
cmp     r8d, 0FFFFFFFEh
jnz     short loc_7FF6E344EEF4
mov     byte ptr [rdx+38h], 1
mov     [rdx+34h], r9d
mov     byte ptr [rdx+30h], 1
mov     dword ptr [rdx+2Ch], 9
jmp     loc_7FF6E344EF81

loc_7FF6E344EEF4:
test    ecx, ecx
js      short loc_7FF6E344EF58
cmp     r8d, cs:dword_7FF6E346F780
jnb     short loc_7FF6E344EF58
mov     rcx, r8
lea     r10, qword_7FF6E346F380
and     ecx, 3Fh
mov     rax, r8
sar     rax, 6
lea     rcx, [rcx+rcx*8]
mov     rax, [r10+rax*8]
test    byte ptr [rax+rcx*8+38h], 1
jz      short loc_7FF6E344EF58
lea     rax, [rsp+58h+arg_0]
mov     [rsp+58h+var_18], rdx
mov     [rsp+58h+arg_18], r8d
lea     rdx, [rsp+58h+var_28]
mov     [rsp+58h+var_28], r8d
lea     r9, [rsp+58h+arg_18]
lea     r8, [rsp+58h+var_20]
mov     [rsp+58h+var_20], rax
lea     rcx, [rsp+58h+arg_10]
call    ??$?RV_lambda_ad8af0d99a0adf03d037d7dffe354bb5_@@AEAV_lambda_c9ba49e555ba839a7b07aa3fbecb7617_@@V_lambda_2f1ebd5d68526518146ae959c9e734c8_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_ad8af0d99a0adf03d037d7dffe354bb5_@@AEAV_lambda_c9ba49e555ba839a7b07aa3fbecb7617_@@$$QEAV_lambda_2f1ebd5d68526518146ae959c9e734c8_@@@Z ; __crt_seh_guarded_call<int>::operator()<_lambda_ad8af0d99a0adf03d037d7dffe354bb5_,_lambda_c9ba49e555ba839a7b07aa3fbecb7617_ &,_lambda_2f1ebd5d68526518146ae959c9e734c8_>(_lambda_ad8af0d99a0adf03d037d7dffe354bb5_ &&,_lambda_c9ba49e555ba839a7b07aa3fbecb7617_ &,_lambda_2f1ebd5d68526518146ae959c9e734c8_ &&)
jmp     short loc_7FF6E344EF84

loc_7FF6E344EF58:
mov     byte ptr [rdx+38h], 1
xor     r8d, r8d        ; FileName
mov     [rdx+34h], r9d
xor     ecx, ecx        ; Expression
mov     byte ptr [rdx+30h], 1
mov     [rsp+58h+var_30], rdx ; __crt_cached_ptd_host *
mov     dword ptr [rdx+2Ch], 9
xor     edx, edx        ; FunctionName
mov     [rsp+58h+var_38], r9 ; uintptr_t
call    sub_7FF6E3440FDC

loc_7FF6E344EF81:
or      eax, 0FFFFFFFFh

loc_7FF6E344EF84:
add     rsp, 58h
retn
sub_7FF6E344EEC8 endp

algn_7FF6E344EF89:
align 4
; [000000CD BYTES: COLLAPSED FUNCTION _close_nolock_internal]
algn_7FF6E344F059:
align 4
; [0000001C BYTES: COLLAPSED FUNCTION __acrt_stdio_free_stream(__crt_stdio_stream)]
; [0000008B BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_a37b2b86f63e897a80ea819b0eb08c01_,_lambda_38ce7e780aa69e748d6df282ebc68efe_ &,_lambda_99fb1378e971ab6e7edea83e3a7a83a2_>(_lambda_a37b2b86f63e897a80ea819b0eb08c01_ &&,_lambda_38ce7e780aa69e748d6df282ebc68efe_ &,_lambda_99fb1378e971ab6e7edea83e3a7a83a2_ &&)]
algn_7FF6E344F103:
align 4
; [00000091 BYTES: COLLAPSED FUNCTION _commit]
algn_7FF6E344F195:
align 8
; [00000493 BYTES: COLLAPSED FUNCTION write_double_translated_ansi_nolock(int,char const * const,uint,__crt_cached_ptd_host &)]
algn_7FF6E344F62B:
align 4
; [00000107 BYTES: COLLAPSED FUNCTION write_text_ansi_nolock(int,char const * const,uint)]
algn_7FF6E344F733:
align 4
; [0000011B BYTES: COLLAPSED FUNCTION write_text_utf16le_nolock(int,char const * const,uint)]
algn_7FF6E344F84F:
align 10h
; [00000174 BYTES: COLLAPSED FUNCTION write_text_utf8_nolock(int,char const * const,uint)]
; [0000011D BYTES: COLLAPSED FUNCTION _write_internal]
algn_7FF6E344FAE1:
align 4


; Attributes: bp-based frame

sub_7FF6E344FAE4 proc near

var_48= qword ptr -48h
var_40= qword ptr -40h
var_38= word ptr -38h
NumberOfBytesWritten= dword ptr -30h
var_28= dword ptr -28h
var_20= qword ptr -20h
Mode= dword ptr -10h

push    rbp
push    rbx
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
mov     rbp, rsp
sub     rsp, 68h
xor     edi, edi
mov     r14d, r8d
movsxd  r13, ecx
mov     rbx, r9
mov     rsi, rdx
test    r8d, r8d
jz      loc_7FF6E344FE00
test    rdx, rdx
jnz     short loc_7FF6E344FB4B

loc_7FF6E344FB14:
mov     byte ptr [r9+38h], 1
xor     r8d, r8d        ; FileName
mov     [r9+34h], edi
xor     edx, edx        ; FunctionName
mov     byte ptr [r9+30h], 1
xor     ecx, ecx        ; Expression
mov     dword ptr [r9+2Ch], 16h
xor     r9d, r9d        ; LineNo
mov     [rsp+68h+var_40], rbx ; __crt_cached_ptd_host *
mov     [rsp+68h+var_48], rdi ; uintptr_t
call    sub_7FF6E3440FDC

loc_7FF6E344FB43:
or      eax, 0FFFFFFFFh
jmp     loc_7FF6E344FE02

loc_7FF6E344FB4B:
mov     rax, r13
lea     rcx, qword_7FF6E346F380
and     eax, 3Fh
mov     r12, r13
sar     r12, 6
lea     r15, [rax+rax*8]
mov     rcx, [rcx+r12*8]
mov     al, [rcx+r15*8+39h]
mov     byte ptr [rbp+var_38], al
dec     al
cmp     al, 1
ja      short loc_7FF6E344FB7E
mov     eax, r14d
not     eax
test    al, 1
jz      short loc_7FF6E344FB14

loc_7FF6E344FB7E:
test    byte ptr [rcx+r15*8+38h], 20h
jz      short loc_7FF6E344FB94
xor     edx, edx
mov     ecx, r13d
lea     r8d, [rdx+2]
call    j_??$common_lseek_nolock@_J@@YA_JH_JHAEAV__crt_cached_ptd_host@@@Z ; common_lseek_nolock<__int64>(int,__int64,int,__crt_cached_ptd_host &)

loc_7FF6E344FB94:       ; FileHandle
mov     ecx, r13d
mov     [rbp+var_20], rdi
call    _isatty
xor     ecx, ecx
lea     r8, qword_7FF6E346F380
test    eax, eax
jz      loc_7FF6E344FCCC
mov     rax, [r8+r12*8]
cmp     [rax+r15*8+38h], cl
jge     loc_7FF6E344FCCC
cmp     [rbx+28h], cl
jnz     short loc_7FF6E344FBD6
mov     rcx, rbx        ; this
call    ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ ; __crt_cached_ptd_host::update_locale_slow(void)
xor     ecx, ecx
lea     r8, qword_7FF6E346F380

loc_7FF6E344FBD6:
mov     rax, [rbx+18h]
cmp     [rax+138h], rcx
jnz     short loc_7FF6E344FBF2
mov     rax, [r8+r12*8]
cmp     [rax+r15*8+39h], cl
jz      loc_7FF6E344FCCC

loc_7FF6E344FBF2:
mov     [rbp+Mode], ecx
lea     rdx, [rbp+Mode] ; lpMode
mov     rcx, [r8+r12*8]
mov     rcx, [rcx+r15*8+28h] ; hConsoleHandle
call    cs:GetConsoleMode
test    eax, eax
jz      loc_7FF6E344FCC5
movsx   ecx, byte ptr [rbp+var_38]
test    ecx, ecx
jz      loc_7FF6E344FCA2
sub     ecx, 1
jz      short loc_7FF6E344FC2A
cmp     ecx, 1
jnz     loc_7FF6E344FD7A

loc_7FF6E344FC2A:
lea     r12, [rsi+r14]
mov     qword ptr [rbp+NumberOfBytesWritten], rdi
mov     r15, rsi
cmp     rsi, r12
jnb     loc_7FF6E344FD70
mov     r14d, [rbp+NumberOfBytesWritten+4]

loc_7FF6E344FC42:
movzx   eax, word ptr [r15]
movzx   ecx, ax
mov     [rbp+var_38], ax
call    sub_7FF6E3458478
movzx   ecx, [rbp+var_38]
cmp     ax, cx
jnz     short loc_7FF6E344FC94
add     r14d, 2
mov     [rbp+NumberOfBytesWritten+4], r14d
cmp     cx, 0Ah
jnz     short loc_7FF6E344FC86
mov     ecx, 0Dh
call    sub_7FF6E3458478
mov     ecx, 0Dh
cmp     ax, cx
jnz     short loc_7FF6E344FC94
inc     r14d
mov     [rbp+NumberOfBytesWritten+4], r14d
inc     edi

loc_7FF6E344FC86:
add     r15, 2
cmp     r15, r12
jb      short loc_7FF6E344FC42
jmp     loc_7FF6E344FD70

loc_7FF6E344FC94:
call    cs:GetLastError
mov     [rbp+NumberOfBytesWritten], eax
jmp     loc_7FF6E344FD70

loc_7FF6E344FCA2:
mov     r9d, r14d
mov     [rsp+68h+var_48], rbx
mov     r8, rsi
lea     rcx, [rbp+NumberOfBytesWritten]
mov     edx, r13d
call    ?write_double_translated_ansi_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDIAEAV__crt_cached_ptd_host@@@Z ; write_double_translated_ansi_nolock(int,char const * const,uint,__crt_cached_ptd_host &)

loc_7FF6E344FCB9:
movsd   xmm0, qword ptr [rax]
mov     edi, [rax+8]
jmp     loc_7FF6E344FD75

loc_7FF6E344FCC5:
lea     r8, qword_7FF6E346F380

loc_7FF6E344FCCC:
mov     rcx, r13
mov     rax, r13
sar     rax, 6
and     ecx, 3Fh
mov     rdx, [r8+rax*8]
lea     rcx, [rcx+rcx*8]
cmp     [rdx+rcx*8+38h], dil
jge     short loc_7FF6E344FD3D
movsx   ecx, byte ptr [rbp+var_38]
test    ecx, ecx
jz      short loc_7FF6E344FD26
sub     ecx, 1
jz      short loc_7FF6E344FD12
cmp     ecx, 1
jnz     loc_7FF6E344FD81
mov     r9d, r14d
lea     rcx, [rbp+NumberOfBytesWritten]
mov     r8, rsi
mov     edx, r13d
call    ?write_text_utf16le_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDI@Z ; write_text_utf16le_nolock(int,char const * const,uint)
jmp     short loc_7FF6E344FCB9

loc_7FF6E344FD12:
mov     r9d, r14d
lea     rcx, [rbp+NumberOfBytesWritten]
mov     r8, rsi
mov     edx, r13d
call    ?write_text_utf8_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDI@Z ; write_text_utf8_nolock(int,char const * const,uint)
jmp     short loc_7FF6E344FCB9

loc_7FF6E344FD26:
mov     r9d, r14d
lea     rcx, [rbp+NumberOfBytesWritten]
mov     r8, rsi
mov     edx, r13d
call    ?write_text_ansi_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDI@Z ; write_text_ansi_nolock(int,char const * const,uint)
jmp     loc_7FF6E344FCB9

loc_7FF6E344FD3D:       ; hFile
mov     rcx, [rdx+rcx*8+28h]
lea     r9, [rbp+NumberOfBytesWritten+4] ; lpNumberOfBytesWritten
xor     eax, eax
mov     rdx, rsi        ; lpBuffer
and     [rsp+68h+var_48], rax
mov     r8d, r14d       ; nNumberOfBytesToWrite
mov     qword ptr [rbp+NumberOfBytesWritten], rax
mov     [rbp+var_28], eax
call    cs:WriteFile
test    eax, eax
jnz     short loc_7FF6E344FD6D
call    cs:GetLastError
mov     [rbp+NumberOfBytesWritten], eax

loc_7FF6E344FD6D:
mov     edi, [rbp+var_28]

loc_7FF6E344FD70:
movsd   xmm0, qword ptr [rbp+NumberOfBytesWritten]

loc_7FF6E344FD75:
movsd   [rbp+var_20], xmm0

loc_7FF6E344FD7A:
lea     r8, qword_7FF6E346F380

loc_7FF6E344FD81:
mov     rax, [rbp+var_20]
shr     rax, 20h
test    eax, eax
jnz     short loc_7FF6E344FDF9
mov     eax, dword ptr [rbp+var_20]
test    eax, eax
jz      short loc_7FF6E344FDC0
cmp     eax, 5
jnz     short loc_7FF6E344FDB0
mov     byte ptr [rbx+30h], 1
mov     dword ptr [rbx+2Ch], 9
mov     byte ptr [rbx+38h], 1
mov     [rbx+34h], eax
jmp     loc_7FF6E344FB43

loc_7FF6E344FDB0:
mov     ecx, dword ptr [rbp+var_20]
mov     rdx, rbx
call    __acrt_errno_map_os_error_ptd
jmp     loc_7FF6E344FB43

loc_7FF6E344FDC0:
mov     rcx, r13
mov     rax, r13
sar     rax, 6
and     ecx, 3Fh
mov     rax, [r8+rax*8]
lea     rcx, [rcx+rcx*8]
test    byte ptr [rax+rcx*8+38h], 40h
jz      short loc_7FF6E344FDE1
cmp     byte ptr [rsi], 1Ah
jz      short loc_7FF6E344FE00

loc_7FF6E344FDE1:
and     dword ptr [rbx+34h], 0
mov     byte ptr [rbx+30h], 1
mov     dword ptr [rbx+2Ch], 1Ch
mov     byte ptr [rbx+38h], 1
jmp     loc_7FF6E344FB43

loc_7FF6E344FDF9:
mov     eax, dword ptr [rbp+var_20+4]
sub     eax, edi
jmp     short loc_7FF6E344FE02

loc_7FF6E344FE00:
xor     eax, eax

loc_7FF6E344FE02:
add     rsp, 68h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbx
pop     rbp
retn
sub_7FF6E344FAE4 endp

algn_7FF6E344FE13:
align 4
; [0000016A BYTES: COLLAPSED FUNCTION __acrt_stdio_refill_and_read_narrow_nolock]
algn_7FF6E344FF7E:
align 20h
; [0000006B BYTES: COLLAPSED FUNCTION common_ftell<__int64>(__crt_stdio_stream,__crt_cached_ptd_host &)]
algn_7FF6E344FFEB:
align 4
; [00000150 BYTES: COLLAPSED FUNCTION common_ftell_nolock<__int64>(__crt_stdio_stream,__crt_cached_ptd_host &)]
; [0000015B BYTES: COLLAPSED FUNCTION common_ftell_read_mode_nolock(__crt_stdio_stream,__int64,__int64,__crt_cached_ptd_host &)]
algn_7FF6E3450297:
align 8
; [00000186 BYTES: COLLAPSED FUNCTION common_ftell_translated_utf8_nolock(__crt_stdio_stream,__int64,__crt_cached_ptd_host &)]
algn_7FF6E345041E:
align 20h
; [00000055 BYTES: COLLAPSED FUNCTION count_newline_bytes(char const * const,char const * const,__crt_lowio_text_mode)]
align 8
; [0000009A BYTES: COLLAPSED FUNCTION _ftelli64]
algn_7FF6E3450512:
align 4
; [00000005 BYTES: COLLAPSED FUNCTION common_ftell_nolock<__int64>(__crt_stdio_stream,__crt_cached_ptd_host &)]
align 4
; [000000F7 BYTES: COLLAPSED FUNCTION write_buffer_nolock<char>(char,__crt_stdio_stream,__crt_cached_ptd_host &)]
algn_7FF6E3450613:
align 4



sub_7FF6E3450614 proc near

FileSize= LARGE_INTEGER ptr  8
NewFilePointer= LARGE_INTEGER ptr  10h

push    rbx
sub     rsp, 20h
mov     edx, [rcx+14h]
nop
shr     edx, 3
test    dl, 1
jz      short loc_7FF6E345062A
mov     al, 1
jmp     short loc_7FF6E3450696

loc_7FF6E345062A:
mov     eax, [rcx+14h]
nop
test    al, 0C0h
jz      short loc_7FF6E345063B
mov     rax, [rcx+8]
cmp     [rcx], rax
jz      short loc_7FF6E3450694

loc_7FF6E345063B:       ; FileHandle
mov     ecx, [rcx+18h]
nop
call    _get_osfhandle
mov     rbx, rax
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E3450694
and     qword ptr [rsp+28h+NewFilePointer], 0
lea     r8, [rsp+28h+NewFilePointer] ; lpNewFilePointer
mov     r9d, 1          ; dwMoveMethod
xor     edx, edx        ; liDistanceToMove
mov     rcx, rax        ; hFile
call    cs:SetFilePointerEx
test    eax, eax
jz      short loc_7FF6E3450694
and     qword ptr [rsp+28h+FileSize], 0
lea     rdx, [rsp+28h+FileSize] ; lpFileSize
mov     rcx, rbx        ; hFile
call    cs:GetFileSizeEx
test    eax, eax
jz      short loc_7FF6E3450694
mov     rax, qword ptr [rsp+28h+FileSize]
cmp     qword ptr [rsp+28h+NewFilePointer], rax
setz    al
jmp     short loc_7FF6E3450696

loc_7FF6E3450694:
xor     al, al

loc_7FF6E3450696:
add     rsp, 20h
pop     rbx
retn
sub_7FF6E3450614 endp

; [000000CB BYTES: COLLAPSED FUNCTION unknown_libname_86]
algn_7FF6E3450767:
align 8



sub_7FF6E3450768 proc near

lpOverlapped= qword ptr -48h
Buffer= word ptr  8
arg_8= word ptr  10h
NumberOfBytesRead= dword ptr  18h
arg_18= qword ptr  20h

mov     [rsp+arg_18], rbx
push    rbp
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 30h
movsxd  r15, ecx
xor     edi, edi
mov     rax, r15
lea     rcx, qword_7FF6E346F380
and     eax, 3Fh
mov     r12, r15
sar     r12, 6
mov     rsi, rdx
lea     r9d, [rdi+0Ah]
mov     r14, r15
lea     rbp, [rax+rax*8]
mov     rax, [rcx+r12*8]
mov     r10, [rax+rbp*8+28h]
test    r8, r8
jz      short loc_7FF6E34507BE
cmp     [rdx], r9w
jnz     short loc_7FF6E34507BE
or      byte ptr [rax+rbp*8+38h], 4
jmp     short loc_7FF6E34507C3

loc_7FF6E34507BE:
and     byte ptr [rax+rbp*8+38h], 0FBh

loc_7FF6E34507C3:
lea     r8, [rdx+r8*2]
mov     rax, rsi
mov     rbx, rsi
cmp     rsi, r8
jnb     loc_7FF6E3450942
mov     r11d, 0Dh
lea     r13d, [r11-0Bh]

loc_7FF6E34507E0:
movzx   edx, word ptr [rax]
cmp     dx, 1Ah
jz      loc_7FF6E345090D
lea     rcx, [rax+2]
cmp     dx, r11w
jnz     short loc_7FF6E345080B
cmp     rcx, r8
jnb     short loc_7FF6E345082B
cmp     [rcx], r9w
jnz     short loc_7FF6E345080B
add     rax, 4
mov     edx, r9d
jmp     short loc_7FF6E345080E

loc_7FF6E345080B:
mov     rax, rcx

loc_7FF6E345080E:
mov     [rbx], dx
mov     r9, r13
mov     rcx, rbx
mov     r9d, 0Ah
lea     rbx, [rbx+r13]
cmp     rax, r8
jb      short loc_7FF6E34507E0
jmp     loc_7FF6E3450942

loc_7FF6E345082B:       ; lpNumberOfBytesRead
lea     r9, [rsp+68h+NumberOfBytesRead]
mov     [rsp+68h+Buffer], di
mov     r8d, r13d       ; nNumberOfBytesToRead
mov     [rsp+68h+NumberOfBytesRead], edi
lea     rdx, [rsp+68h+Buffer] ; lpBuffer
mov     [rsp+68h+lpOverlapped], rdi ; lpOverlapped
mov     rcx, r10        ; hFile
call    cs:ReadFile
test    eax, eax
jz      loc_7FF6E3450906
cmp     [rsp+68h+NumberOfBytesRead], edi
jz      loc_7FF6E3450906
lea     r9, qword_7FF6E346F380
mov     rax, [r9+r12*8]
test    byte ptr [rax+rbp*8+38h], 48h
mov     ebp, 0Ah
jz      short loc_7FF6E34508E0
movzx   eax, [rsp+68h+Buffer]
cmp     ax, bp
jnz     short loc_7FF6E3450893

loc_7FF6E345088B:
mov     [rbx], bp
jmp     loc_7FF6E345093F

loc_7FF6E3450893:
mov     [rsp+68h+arg_8], ax
mov     rdx, r14
mov     rax, r14
sar     rdx, 6
and     eax, 3Fh
mov     word ptr [rbx], 0Dh
lea     r8, [rax+rax*8]

loc_7FF6E34508AE:
mov     rax, [r9+rdx*8]
lea     rcx, [rax+r8*8]
mov     al, byte ptr [rsp+rdi+68h+arg_8]
mov     [rcx+rdi+3Ah], al
inc     rdi
cmp     rdi, r13
jl      short loc_7FF6E34508AE
mov     rax, r14
sar     rax, 6
and     r14d, 3Fh
mov     rax, [r9+rax*8]
lea     rcx, [r14+r14*8]
mov     [rax+rcx*8+3Ch], bpl
jmp     short loc_7FF6E345093F

loc_7FF6E34508E0:
cmp     [rsp+68h+Buffer], bp
jnz     short loc_7FF6E34508EC
cmp     rbx, rsi
jz      short loc_7FF6E345088B

loc_7FF6E34508EC:
mov     rdx, 0FFFFFFFFFFFFFFFEh
mov     ecx, r15d
lea     r8d, [rdx+3]
call    _lseeki64_nolock
cmp     [rsp+68h+Buffer], bp
jz      short loc_7FF6E3450942

loc_7FF6E3450906:
mov     word ptr [rbx], 0Dh
jmp     short loc_7FF6E345093F

loc_7FF6E345090D:
mov     rcx, r15
lea     r9, qword_7FF6E346F380
and     ecx, 3Fh
mov     rax, r15
sar     rax, 6
lea     r8, [rcx+rcx*8]
mov     rcx, [r9+rax*8]
mov     al, [rcx+r8*8+38h]
test    al, 40h
jnz     short loc_7FF6E345093C
or      al, r13b
mov     [rcx+r8*8+38h], al
jmp     short loc_7FF6E3450942

loc_7FF6E345093C:
mov     [rbx], dx

loc_7FF6E345093F:
add     rbx, r13

loc_7FF6E3450942:
sub     rbx, rsi
sar     rbx, 1
lea     eax, [rbx+rbx]
mov     rbx, [rsp+68h+arg_18]
add     rsp, 30h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbp
retn
sub_7FF6E3450768 endp

algn_7FF6E3450963:
align 4



sub_7FF6E3450964 proc near

lpOverlapped= qword ptr -48h
var_40= dword ptr -40h
Buffer= byte ptr  8
NumberOfBytesRead= dword ptr  10h
arg_10= qword ptr  18h
arg_20= dword ptr  28h

mov     [rsp+arg_10], rbx
push    rbp
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 30h
movsxd  rbp, ecx
lea     r11, cs:7FF6E3430000h
mov     r14, rbp
mov     r15, rbp
sar     r15, 6
and     r14d, 3Fh
mov     r12, r9
mov     rdi, rdx
mov     rax, rva qword_7FF6E346F380[r11+r15*8]
lea     rsi, [r14+r14*8]
mov     r10, [rax+rsi*8+28h]
test    r8, r8
jz      short loc_7FF6E34509B8
cmp     byte ptr [rdx], 0Ah
jnz     short loc_7FF6E34509B8
or      byte ptr [rax+rsi*8+38h], 4
jmp     short loc_7FF6E34509BD

loc_7FF6E34509B8:
and     byte ptr [rax+rsi*8+38h], 0FBh

loc_7FF6E34509BD:
lea     r9, [rdx+r8]
mov     rax, rdi
mov     rbx, rdi
mov     r13d, 1
cmp     rdi, r9
jnb     loc_7FF6E3450AD0

loc_7FF6E34509D6:
mov     cl, [rax]
cmp     cl, 1Ah
jz      loc_7FF6E3450AAD
lea     rdx, [rax+1]
cmp     cl, 0Dh
jnz     short loc_7FF6E34509FD
cmp     rdx, r9
jnb     short loc_7FF6E3450A0F
cmp     byte ptr [rdx], 0Ah
jnz     short loc_7FF6E34509FD
add     rax, 2
mov     byte ptr [rbx], 0Ah
jmp     short loc_7FF6E3450A02

loc_7FF6E34509FD:
mov     [rbx], cl
mov     rax, rdx

loc_7FF6E3450A02:
inc     rbx
cmp     rax, r9
jb      short loc_7FF6E34509D6
jmp     loc_7FF6E3450AD0

loc_7FF6E3450A0F:
xor     eax, eax
lea     r9, [rsp+68h+NumberOfBytesRead] ; lpNumberOfBytesRead
mov     r8d, r13d       ; nNumberOfBytesToRead
mov     [rsp+68h+Buffer], al
lea     rdx, [rsp+68h+Buffer] ; lpBuffer
mov     [rsp+68h+NumberOfBytesRead], eax
mov     rcx, r10        ; hFile
mov     [rsp+68h+lpOverlapped], rax ; lpOverlapped
call    cs:ReadFile
test    eax, eax
jz      short loc_7FF6E3450AA1
cmp     [rsp+68h+NumberOfBytesRead], 0
jz      short loc_7FF6E3450AA1
lea     r11, cs:7FF6E3430000h
mov     rax, rva qword_7FF6E346F380[r11+r15*8]
test    byte ptr [rax+rsi*8+38h], 48h
jz      short loc_7FF6E3450A74
mov     cl, [rsp+68h+Buffer]
cmp     cl, 0Ah
jnz     short loc_7FF6E3450A63

loc_7FF6E3450A5E:
mov     byte ptr [rbx], 0Ah
jmp     short loc_7FF6E3450ACD

loc_7FF6E3450A63:
mov     byte ptr [rbx], 0Dh
mov     rax, rva qword_7FF6E346F380[r11+r15*8]
mov     [rax+rsi*8+3Ah], cl
jmp     short loc_7FF6E3450ACD

loc_7FF6E3450A74:
cmp     [rsp+68h+Buffer], 0Ah
jnz     short loc_7FF6E3450A80
cmp     rbx, rdi
jz      short loc_7FF6E3450A5E

loc_7FF6E3450A80:
mov     r8d, r13d
or      rdx, 0FFFFFFFFFFFFFFFFh
mov     ecx, ebp
call    _lseeki64_nolock
cmp     [rsp+68h+Buffer], 0Ah
lea     r11, cs:7FF6E3430000h
jz      short loc_7FF6E3450AD0
mov     byte ptr [rbx], 0Dh
jmp     short loc_7FF6E3450ACD

loc_7FF6E3450AA1:
mov     byte ptr [rbx], 0Dh
lea     r11, cs:7FF6E3430000h
jmp     short loc_7FF6E3450ACD

loc_7FF6E3450AAD:
mov     r8, rva qword_7FF6E346F380[r11+r15*8]
lea     rdx, [r14+r14*8]
mov     al, [r8+rdx*8+38h]
test    al, 40h
jnz     short loc_7FF6E3450ACB
or      al, 2
mov     [r8+rdx*8+38h], al
jmp     short loc_7FF6E3450AD0

loc_7FF6E3450ACB:
mov     [rbx], cl

loc_7FF6E3450ACD:
add     rbx, r13

loc_7FF6E3450AD0:
sub     ebx, edi
jnz     short loc_7FF6E3450ADB
xor     eax, eax
jmp     loc_7FF6E3450C7B

loc_7FF6E3450ADB:
mov     rcx, rva qword_7FF6E346F380[r11+r15*8]
lea     rdx, [r14+r14*8]
cmp     byte ptr [rcx+rdx*8+39h], 0
jnz     short loc_7FF6E3450AF5
mov     eax, ebx
jmp     loc_7FF6E3450C7B

loc_7FF6E3450AF5:
movsxd  rcx, ebx
add     rcx, rdi
lea     rbx, [rcx-1]
cmp     byte ptr [rbx], 0
jl      short loc_7FF6E3450B0C
mov     rbx, rcx
jmp     loc_7FF6E3450C00

loc_7FF6E3450B0C:
mov     r8d, r13d
jmp     short loc_7FF6E3450B22

loc_7FF6E3450B11:
cmp     r8d, 4
ja      short loc_7FF6E3450B30
cmp     rbx, rdi
jb      short loc_7FF6E3450B30
sub     rbx, r13
add     r8d, r13d

loc_7FF6E3450B22:
movzx   eax, byte ptr [rbx]
cmp     byte ptr [rax+r11+3D490h], 0
jz      short loc_7FF6E3450B11

loc_7FF6E3450B30:
movzx   edx, byte ptr [rbx]
movsx   eax, byte ptr [rdx+r11+3D490h]
test    eax, eax
jnz     short loc_7FF6E3450B53
call    sub_7FF6E3444754
mov     dword ptr [rax], 2Ah ; '*'

loc_7FF6E3450B4B:
or      eax, 0FFFFFFFFh
jmp     loc_7FF6E3450C7B

loc_7FF6E3450B53:
inc     eax
cmp     eax, r8d
jnz     short loc_7FF6E3450B65
mov     eax, r8d
add     rbx, rax
jmp     loc_7FF6E3450C00

loc_7FF6E3450B65:
mov     rcx, rbp
mov     rax, rbp
sar     rax, 6
and     ecx, 3Fh
mov     r9, rva qword_7FF6E346F380[r11+rax*8]
lea     rax, [rcx+rcx*8]
test    byte ptr [r9+rax*8+38h], 48h
jz      short loc_7FF6E3450BF0
mov     rax, rbp
add     rbx, r13
and     eax, 3Fh
lea     rax, [rax+rax*8]
mov     [r9+rax*8+3Ah], dl
cmp     r8d, 2
jb      short loc_7FF6E3450BC0
mov     dl, [rbx]
mov     rcx, rbp
mov     rax, rbp
add     rbx, r13
sar     rax, 6
and     ecx, 3Fh
mov     rax, rva qword_7FF6E346F380[r11+rax*8]
lea     rcx, [rcx+rcx*8]
mov     [rax+rcx*8+3Bh], dl

loc_7FF6E3450BC0:
cmp     r8d, 3
jnz     short loc_7FF6E3450BE8
mov     dl, [rbx]
mov     rcx, rbp
mov     rax, rbp
add     rbx, r13
sar     rax, 6
and     ecx, 3Fh
mov     rax, rva qword_7FF6E346F380[r11+rax*8]
lea     rcx, [rcx+rcx*8]
mov     [rax+rcx*8+3Ch], dl

loc_7FF6E3450BE8:
mov     eax, r8d
sub     rbx, rax
jmp     short loc_7FF6E3450C00

loc_7FF6E3450BF0:
neg     r8d
mov     ecx, ebp
movsxd  rdx, r8d
mov     r8d, r13d
call    _lseeki64_nolock

loc_7FF6E3450C00:
mov     eax, [rsp+68h+arg_20]
sub     ebx, edi
mov     [rsp+68h+var_40], eax
mov     r9d, ebx
mov     r8, rdi
mov     [rsp+68h+lpOverlapped], r12
xor     edx, edx
mov     ecx, 0FDE9h
call    sub_7FF6E3451998
mov     r9d, eax
test    eax, eax
jnz     short loc_7FF6E3450C3D
call    cs:GetLastError
mov     ecx, eax
call    sub_7FF6E34446E4
jmp     loc_7FF6E3450B4B

loc_7FF6E3450C3D:
mov     rcx, rbp
lea     rdx, cs:7FF6E3430000h
and     ecx, 3Fh
mov     rax, rbp
sar     rax, 6
lea     r8, [rcx+rcx*8]
mov     rdx, rva qword_7FF6E346F380[rdx+rax*8]
mov     eax, r9d
sub     eax, ebx
neg     eax
mov     al, [rdx+r8*8+3Dh]
sbb     cl, cl
and     al, 0FDh
and     cl, 2
or      cl, al
lea     eax, [r9+r9]
mov     [rdx+r8*8+3Dh], cl

loc_7FF6E3450C7B:
mov     rbx, [rsp+68h+arg_10]
add     rsp, 30h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbp
retn
sub_7FF6E3450964 endp

algn_7FF6E3450C93:
align 4
; [0000011E BYTES: COLLAPSED FUNCTION _read]
algn_7FF6E3450DB2:
align 4



sub_7FF6E3450DB4 proc near

pInputControl= qword ptr -78h
Mode= dword ptr -68h
hConsoleHandle= qword ptr -60h
var_58= qword ptr -58h
var_50= qword ptr -50h
var_48= qword ptr -48h
arg_0= byte ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
NumberOfCharsRead= dword ptr  20h

mov     [rsp+arg_10], rbx
mov     [rsp+arg_8], rdx
push    rbp
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 60h
movsxd  r13, ecx
mov     r9, rdx
mov     r12d, r8d
cmp     r13d, 0FFFFFFFEh
jnz     short loc_7FF6E3450DF5
call    sub_7FF6E3444730
xor     esi, esi
mov     [rax], esi
call    sub_7FF6E3444754
mov     dword ptr [rax], 9
jmp     loc_7FF6E34511F8

loc_7FF6E3450DF5:
xor     esi, esi
test    ecx, ecx
js      loc_7FF6E34511E1
cmp     r13d, cs:dword_7FF6E346F780
jnb     loc_7FF6E34511E1
mov     rax, r13
lea     edx, [rsi+1]
and     eax, 3Fh
mov     [rsp+98h+var_50], rdx
mov     r8, r13
lea     r11, qword_7FF6E346F380
shr     r8, 6
mov     [rsp+98h+var_58], r8
lea     r14, [rax+rax*8]
mov     rax, [r11+r8*8]
test    [rax+r14*8+38h], dl
jz      loc_7FF6E34511E1
cmp     r12d, 7FFFFFFFh
jbe     short loc_7FF6E3450E60

loc_7FF6E3450E49:
call    sub_7FF6E3444730
mov     [rax], esi
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
jmp     loc_7FF6E34511F3

loc_7FF6E3450E60:
test    r12d, r12d
jz      loc_7FF6E34511DD
test    byte ptr [rax+r14*8+38h], 2
jnz     loc_7FF6E34511DD
test    r9, r9
jz      short loc_7FF6E3450E49
mov     rcx, [rax+r14*8+28h]
mov     rbx, rsi
movsx   r10d, byte ptr [rax+r14*8+39h]
mov     edi, 4
mov     [rsp+98h+hConsoleHandle], rcx
mov     ecx, r10d
mov     [rsp+98h+arg_0], r10b
sub     ecx, edx
jz      short loc_7FF6E3450ED2
cmp     ecx, edx
jnz     short loc_7FF6E3450ECA
mov     eax, r12d
not     eax
test    dl, al
jnz     short loc_7FF6E3450ECA

loc_7FF6E3450EAE:
call    sub_7FF6E3444730
mov     [rax], esi
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo
jmp     loc_7FF6E3451063

loc_7FF6E3450ECA:
mov     ebp, r12d
mov     r15, r9
jmp     short loc_7FF6E3450F50

loc_7FF6E3450ED2:
mov     eax, r12d
not     eax
test    dl, al
jz      short loc_7FF6E3450EAE
mov     ebp, r12d
shr     ebp, 1
cmp     ebp, edi
cmovb   ebp, edi
mov     ecx, ebp        ; Size
call    _malloc_base
xor     ecx, ecx        ; Block
mov     rbx, rax
call    _free_base
xor     ecx, ecx        ; Block
call    _free_base
mov     r15, rbx
test    rbx, rbx
jnz     short loc_7FF6E3450F20
call    sub_7FF6E3444754
mov     dword ptr [rax], 0Ch
call    sub_7FF6E3444730
mov     dword ptr [rax], 8
jmp     loc_7FF6E3451063

loc_7FF6E3450F20:
xor     edx, edx
mov     ecx, r13d
lea     r8d, [rdx+1]
call    _lseeki64_nolock
mov     r8, [rsp+98h+var_58]
lea     r11, qword_7FF6E346F380
mov     r10b, [rsp+98h+arg_0]
mov     edx, 1
mov     rcx, [r11+r8*8]
mov     [rcx+r14*8+30h], rax

loc_7FF6E3450F50:
mov     rax, [r11+r8*8]
mov     edi, esi
mov     [rsp+98h+var_48], r15
mov     r9d, 0Ah
test    byte ptr [rax+r14*8+38h], 48h
jz      short loc_7FF6E3450FE2
mov     al, [rax+r14*8+3Ah]
cmp     al, r9b
jz      short loc_7FF6E3450FE2
test    ebp, ebp
jz      short loc_7FF6E3450FE2
mov     [r15], al
dec     ebp
mov     rax, [r11+r8*8]
add     r15, rdx
mov     edi, edx
mov     [rax+r14*8+3Ah], r9b
test    r10b, r10b
jz      short loc_7FF6E3450FE2
mov     rax, [r11+r8*8]
mov     cl, [rax+r14*8+3Bh]
cmp     cl, r9b
jz      short loc_7FF6E3450FE2
test    ebp, ebp
jz      short loc_7FF6E3450FE2
mov     [r15], cl
lea     edi, [r9-8]
mov     rax, [r11+r8*8]
add     r15, rdx
dec     ebp
mov     [rax+r14*8+3Bh], r9b
cmp     r10b, dl
jnz     short loc_7FF6E3450FE2
mov     rax, [r11+r8*8]
mov     cl, [rax+r14*8+3Ch]
cmp     cl, r9b
jz      short loc_7FF6E3450FE2
test    ebp, ebp
jz      short loc_7FF6E3450FE2
mov     [r15], cl
lea     edi, [r9-7]
mov     rax, [r11+r8*8]
add     r15, rdx
dec     ebp
mov     [rax+r14*8+3Ch], r9b

loc_7FF6E3450FE2:       ; FileHandle
mov     ecx, r13d
mov     [rsp+98h+Mode], esi
call    _isatty
test    eax, eax
jz      loc_7FF6E3451081
mov     rax, [rsp+98h+var_58]
lea     rcx, qword_7FF6E346F380
mov     rax, [rcx+rax*8]
cmp     [rax+r14*8+38h], sil
jge     short loc_7FF6E3451081
mov     rcx, [rsp+98h+hConsoleHandle] ; hConsoleHandle
lea     rdx, [rsp+98h+Mode] ; lpMode
call    cs:GetConsoleMode
test    eax, eax
jz      short loc_7FF6E3451081
cmp     [rsp+98h+arg_0], 2
jnz     short loc_7FF6E3451086
mov     rcx, [rsp+98h+hConsoleHandle] ; hConsoleInput
lea     r9, [rsp+98h+NumberOfCharsRead] ; lpNumberOfCharsRead
shr     ebp, 1
mov     rdx, r15        ; lpBuffer
mov     r8d, ebp        ; nNumberOfCharsToRead
mov     [rsp+98h+NumberOfCharsRead], esi
mov     [rsp+98h+pInputControl], rsi ; pInputControl
call    cs:ReadConsoleW
test    eax, eax
jnz     short loc_7FF6E3451075
call    cs:GetLastError

loc_7FF6E345105C:
mov     ecx, eax
call    sub_7FF6E34446E4

loc_7FF6E3451063:
or      edi, 0FFFFFFFFh

loc_7FF6E3451066:       ; Block
mov     rcx, rbx
call    _free_base
mov     eax, edi
jmp     loc_7FF6E34511FB

loc_7FF6E3451075:
mov     eax, [rsp+98h+NumberOfCharsRead]
lea     edi, [rdi+rax*2]
jmp     short loc_7FF6E34510C8

loc_7FF6E3451081:
mov     byte ptr [rsp+98h+var_50], sil

loc_7FF6E3451086:       ; hFile
mov     rcx, [rsp+98h+hConsoleHandle]
lea     r9, [rsp+98h+NumberOfCharsRead] ; lpNumberOfBytesRead
mov     r8d, ebp        ; nNumberOfBytesToRead
mov     [rsp+98h+NumberOfCharsRead], esi
mov     rdx, r15        ; lpBuffer
mov     [rsp+98h+pInputControl], rsi ; lpOverlapped
call    cs:ReadFile
test    eax, eax
jz      loc_7FF6E34511A7
cmp     [rsp+98h+NumberOfCharsRead], r12d
ja      loc_7FF6E34511A7
add     edi, [rsp+98h+NumberOfCharsRead]

loc_7FF6E34510C8:
mov     rdx, [rsp+98h+var_58]
lea     r11, qword_7FF6E346F380
mov     rax, [r11+rdx*8]
cmp     [rax+r14*8+38h], sil
jge     short loc_7FF6E3451066
cmp     [rsp+98h+arg_0], 2
movsxd  r8, edi
jz      short loc_7FF6E3451111
mov     r9, [rsp+98h+arg_8]
mov     rax, r12
shr     rax, 1
mov     rdx, r15
mov     ecx, r13d
mov     [rsp+98h+pInputControl], rax
call    sub_7FF6E3450964

loc_7FF6E345110A:
mov     edi, eax
jmp     loc_7FF6E3451066

loc_7FF6E3451111:
shr     r8, 1
cmp     byte ptr [rsp+98h+var_50], sil
jz      short loc_7FF6E3451195
mov     r10, [rsp+98h+var_48]
mov     rax, r10
mov     rdi, r10
lea     r9, [r10+r8*2]
cmp     r10, r9
jnb     short loc_7FF6E3451188
mov     esi, 0Ah

loc_7FF6E3451134:
movzx   ecx, word ptr [rax]
cmp     cx, 1Ah
jz      short loc_7FF6E3451177
cmp     cx, 0Dh
jnz     short loc_7FF6E345115D
lea     r8, [rax+2]
cmp     r8, r9
jnb     short loc_7FF6E345115D
cmp     [r8], si
jnz     short loc_7FF6E345115D
movzx   ecx, si
mov     r11d, 4
jmp     short loc_7FF6E3451163

loc_7FF6E345115D:
mov     r11d, 2

loc_7FF6E3451163:
add     rax, r11
mov     [rdi], cx
lea     r8, [rdi+2]
mov     rdi, r8
cmp     rax, r9
jb      short loc_7FF6E3451134
jmp     short loc_7FF6E3451188

loc_7FF6E3451177:
lea     rcx, qword_7FF6E346F380
mov     rax, [rcx+rdx*8]
or      byte ptr [rax+r14*8+38h], 2

loc_7FF6E3451188:
sub     rdi, r10
sar     rdi, 1
add     edi, edi
jmp     loc_7FF6E3451066

loc_7FF6E3451195:
mov     rdx, [rsp+98h+var_48]
mov     ecx, r13d
call    sub_7FF6E3450768
jmp     loc_7FF6E345110A

loc_7FF6E34511A7:
call    cs:GetLastError
cmp     eax, 5
jnz     short loc_7FF6E34511CD
call    sub_7FF6E3444754
mov     dword ptr [rax], 9
call    sub_7FF6E3444730
mov     dword ptr [rax], 5
jmp     loc_7FF6E3451063

loc_7FF6E34511CD:
cmp     eax, 6Dh ; 'm'
jnz     loc_7FF6E345105C
mov     edi, esi
jmp     loc_7FF6E3451066

loc_7FF6E34511DD:
xor     eax, eax
jmp     short loc_7FF6E34511FB

loc_7FF6E34511E1:
call    sub_7FF6E3444730
mov     [rax], esi
call    sub_7FF6E3444754
mov     dword ptr [rax], 9

loc_7FF6E34511F3:
call    _invalid_parameter_noinfo

loc_7FF6E34511F8:
or      eax, 0FFFFFFFFh

loc_7FF6E34511FB:
mov     rbx, [rsp+98h+arg_10]
add     rsp, 60h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbp
retn
sub_7FF6E3450DB4 endp

algn_7FF6E3451213:
align 4
; [0000011E BYTES: COLLAPSED FUNCTION common_lseek<__int64>(int,__int64,int,__crt_cached_ptd_host &)]
algn_7FF6E3451332:
align 4
; [000000AF BYTES: COLLAPSED FUNCTION common_lseek_nolock<__int64>(int,__int64,int,__crt_cached_ptd_host &)]
algn_7FF6E34513E3:
align 4
; [0000009A BYTES: COLLAPSED FUNCTION _lseeki64]
algn_7FF6E345147E:
align 20h
; [00000005 BYTES: COLLAPSED FUNCTION common_lseek<__int64>(int,__int64,int,__crt_cached_ptd_host &)]
align 8
; [0000009A BYTES: COLLAPSED FUNCTION _lseeki64_nolock]
algn_7FF6E3451522:
align 4
; [00000005 BYTES: COLLAPSED FUNCTION common_lseek_nolock<__int64>(int,__int64,int,__crt_cached_ptd_host &)]
align 4
; [0000006B BYTES: COLLAPSED FUNCTION __acrt_stdio_allocate_buffer_nolock]
algn_7FF6E3451597:
align 20h
; [0000007A BYTES: COLLAPSED FUNCTION _realloc_base]
algn_7FF6E345161A:
align 4
; [0000006C BYTES: COLLAPSED FUNCTION iswctype]
algn_7FF6E3451688:
align 10h
; [00000014 BYTES: COLLAPSED FUNCTION fegetround]
; [00000048 BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void (*)(int)>::operator()<_lambda_450d765d439847d4c735a33c368b5fc0_,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_>(_lambda_450d765d439847d4c735a33c368b5fc0_ &&,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_ &&)]
; [0000002E BYTES: COLLAPSED FUNCTION __acrt_get_sigabrt_handler]
algn_7FF6E345171A:
align 4
; [0000001D BYTES: COLLAPSED FUNCTION __acrt_initialize_signal_handlers]
align 4
; [0000025C BYTES: COLLAPSED FUNCTION raise]
; [00000090 BYTES: COLLAPSED FUNCTION sub_7FF6E3451998]
; [000000DE BYTES: COLLAPSED FUNCTION __acrt_WideCharToMultiByte]
algn_7FF6E3451B06:
align 8



sub_7FF6E3451B08 proc near
mov     r10, rdx
mov     r9, rcx

loc_7FF6E3451B0E:
movzx   r8d, word ptr [r9]
lea     r9, [r9+2]
movzx   edx, word ptr [r10]
lea     r10, [r10+2]
cmp     r8d, edx
jz      short loc_7FF6E3451B43
lea     eax, [r8-41h]
cmp     eax, 19h
lea     ecx, [r8+20h]
lea     eax, [rdx-41h]
cmova   ecx, r8d
cmp     eax, 19h
mov     r8d, ecx
lea     ecx, [rdx+20h]
cmova   ecx, edx
mov     edx, ecx

loc_7FF6E3451B43:
mov     eax, r8d
sub     eax, edx
jnz     short locret_7FF6E3451B4F
test    r8d, r8d
jnz     short loc_7FF6E3451B0E

locret_7FF6E3451B4F:
retn
sub_7FF6E3451B08 endp




sub_7FF6E3451B50 proc near
sub     rsp, 28h
cmp     cs:dword_7FF6E346F300, 0
jnz     short loc_7FF6E3451B8A
test    rcx, rcx
jnz     short loc_7FF6E3451B7C

loc_7FF6E3451B62:
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo
mov     eax, 7FFFFFFFh
add     rsp, 28h
retn

loc_7FF6E3451B7C:
test    rdx, rdx
jz      short loc_7FF6E3451B62
add     rsp, 28h
jmp     sub_7FF6E3451B08

loc_7FF6E3451B8A:
xor     r8d, r8d
add     rsp, 28h
jmp     sub_7FF6E3451B98
sub_7FF6E3451B50 endp

algn_7FF6E3451B96:
align 8



sub_7FF6E3451B98 proc near

var_38= qword ptr -38h
var_30= qword ptr -30h
var_20= byte ptr -20h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 40h
mov     rsi, rdx
mov     rbp, rcx
test    rcx, rcx
jnz     short loc_7FF6E3451BD5

loc_7FF6E3451BBB:
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo
mov     eax, 7FFFFFFFh
jmp     loc_7FF6E3451CBA

loc_7FF6E3451BD5:
test    rsi, rsi
jz      short loc_7FF6E3451BBB
mov     rdx, r8         ; struct __crt_locale_pointers *
lea     rcx, [rsp+58h+var_38] ; this
call    ??0_LocaleUpdate@@QEAA@QEAU__crt_locale_pointers@@@Z ; _LocaleUpdate::_LocaleUpdate(__crt_locale_pointers * const)
mov     rdx, [rsp+58h+var_30]
cmp     qword ptr [rdx+138h], 0
jnz     short loc_7FF6E3451C08
mov     rdx, rsi
mov     rcx, rbp
call    sub_7FF6E3451B08
mov     ecx, eax
jmp     loc_7FF6E3451CA5

loc_7FF6E3451C08:
mov     r14d, 100h
lea     r15, _wctype

loc_7FF6E3451C15:
movzx   ebx, word ptr [rbp+0]
lea     rbp, [rbp+2]
movzx   edi, word ptr [rsi]
lea     rsi, [rsi+2]
cmp     ebx, edi
jz      short loc_7FF6E3451C97
cmp     bx, r14w
jnb     short loc_7FF6E3451C48
movzx   ecx, bl
test    byte ptr [r15+rcx*2+2], 1
jz      short loc_7FF6E3451C43
mov     rax, [rdx+110h]
mov     cl, [rcx+rax]

loc_7FF6E3451C43:
movzx   eax, cl
jmp     short loc_7FF6E3451C5A

loc_7FF6E3451C48:
lea     rdx, [rsp+58h+var_30]
movzx   ecx, bx
call    sub_7FF6E34584C0
mov     rdx, [rsp+58h+var_30]

loc_7FF6E3451C5A:
movzx   ebx, ax
cmp     ebx, edi
jz      short loc_7FF6E3451C97
cmp     di, r14w
jnb     short loc_7FF6E3451C82
movzx   ecx, dil
test    byte ptr [r15+rcx*2+2], 1
jz      short loc_7FF6E3451C7D
mov     rax, [rdx+110h]
mov     cl, [rcx+rax]

loc_7FF6E3451C7D:
movzx   eax, cl
jmp     short loc_7FF6E3451C94

loc_7FF6E3451C82:
lea     rdx, [rsp+58h+var_30]
movzx   ecx, di
call    sub_7FF6E34584C0
mov     rdx, [rsp+58h+var_30]

loc_7FF6E3451C94:
movzx   edi, ax

loc_7FF6E3451C97:
mov     ecx, ebx
sub     ecx, edi
jnz     short loc_7FF6E3451CA5
test    ebx, ebx
jnz     loc_7FF6E3451C15

loc_7FF6E3451CA5:
cmp     [rsp+58h+var_20], 0
jz      short loc_7FF6E3451CB8
mov     rax, [rsp+58h+var_38]
and     dword ptr [rax+3A8h], 0FFFFFFFDh

loc_7FF6E3451CB8:
mov     eax, ecx

loc_7FF6E3451CBA:
mov     rbx, [rsp+58h+arg_0]
mov     rbp, [rsp+58h+arg_8]
mov     rsi, [rsp+58h+arg_10]
add     rsp, 40h
pop     r15
pop     r14
pop     rdi
retn
sub_7FF6E3451B98 endp

algn_7FF6E3451CD3:
align 4
; [0000004F BYTES: COLLAPSED FUNCTION __acrt_initialize_timeset]
align 4
; [00000075 BYTES: COLLAPSED FUNCTION wcscat_s]
algn_7FF6E3451D99:
align 4
; [000000FC BYTES: COLLAPSED FUNCTION wcsncpy_s]
; [00000012 BYTES: COLLAPSED FUNCTION unknown_libname_87]
align 4
; [000001AC BYTES: COLLAPSED FUNCTION __acrt_convert_wcs_mbs_cp<wchar_t,char,_lambda_d8593a27d1aa8c02be35c86a17d324c4_,__crt_win32_buffer_internal_dynamic_resizing>(wchar_t const * const,__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &,_lambda_d8593a27d1aa8c02be35c86a17d324c4_ const &,uint)]
; [0000023A BYTES: COLLAPSED FUNCTION common_expand_argv_wildcards<char>(char * * const,char * * * const)]
algn_7FF6E3452292:
align 4
; [00000183 BYTES: COLLAPSED FUNCTION sub_7FF6E3452294]
align 8
; [0000035E BYTES: COLLAPSED FUNCTION expand_argument_wildcards<char>(char * const,char * const,`anonymous namespace'::argument_list<char> &)]
algn_7FF6E3452776:
align 8
; [00000005 BYTES: COLLAPSED FUNCTION common_expand_argv_wildcards<char>(char * * const,char * * * const)]
align 20h
; [00000121 BYTES: COLLAPSED FUNCTION __acrt_GetModuleFileNameA]
algn_7FF6E34528A1:
align 4
; [000001CE BYTES: COLLAPSED FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_efdfa57d1f175319df784efa44bb7b81_,_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_ &,_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_>(_lambda_efdfa57d1f175319df784efa44bb7b81_ &&,_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_ &,_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_ &&)]
algn_7FF6E3452A72:
align 4
; [0000007D BYTES: COLLAPSED FUNCTION getSystemCP(int)]
algn_7FF6E3452AF1:
align 4
; [00000098 BYTES: COLLAPSED FUNCTION setSBCS(__crt_multibyte_data *)]
; [000001F5 BYTES: COLLAPSED FUNCTION setSBUpLow(__crt_multibyte_data *)]
algn_7FF6E3452D81:
align 4
; [0000026F BYTES: COLLAPSED FUNCTION setmbcp_internal(int,bool,__acrt_ptd * const,__crt_multibyte_data * * const)]
algn_7FF6E3452FF3:
align 4
; [000000B8 BYTES: COLLAPSED FUNCTION update_thread_multibyte_data_internal(__acrt_ptd * const,__crt_multibyte_data * * const)]
; [00000060 BYTES: COLLAPSED FUNCTION __acrt_initialize_multibyte]
; [0000001C BYTES: COLLAPSED FUNCTION __acrt_update_thread_multibyte_data]



sub_7FF6E3453128 proc near

CPInfo= _cpinfo ptr -48h
var_30= qword ptr -30h
var_28= byte ptr -28h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_10], rbx
mov     [rsp+arg_18], rbp
push    rsi
push    rdi
push    r12
push    r14
push    r15
sub     rsp, 40h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+68h+var_30], rax
xorps   xmm0, xmm0
xor     eax, eax
movups  xmmword ptr [rsp+68h+CPInfo.MaxCharSize], xmm0
mov     dword ptr [rsp+68h+CPInfo.LeadByte+0Ah], eax
mov     rsi, rdx
call    ?getSystemCP@@YAHH@Z ; getSystemCP(int)
xor     ebx, ebx
mov     edi, eax
test    eax, eax
jz      loc_7FF6E34533C0
lea     r12, unk_7FF6E346DB80
mov     r14d, ebx
mov     rax, r12
lea     ebp, [rbx+1]

loc_7FF6E345317F:
cmp     [rax], edi
jz      loc_7FF6E34532CD
add     r14d, ebp
add     rax, 30h ; '0'
cmp     r14d, 5
jb      short loc_7FF6E345317F
cmp     edi, 0FDE8h
jz      loc_7FF6E34532C5
movzx   ecx, di         ; CodePage
call    cs:IsValidCodePage
test    eax, eax
jz      loc_7FF6E34532C5
mov     eax, 0FDE9h
cmp     edi, eax
jnz     short loc_7FF6E34531E0
mov     [rsi+4], rax
mov     [rsi+220h], rbx
mov     [rsi+18h], ebx
mov     [rsi+1Ch], bx

loc_7FF6E34531CC:
lea     rdi, [rsi+0Ch]
movzx   eax, bx
mov     ecx, 6
rep stosw
jmp     loc_7FF6E34533B6

loc_7FF6E34531E0:       ; lpCPInfo
lea     rdx, [rsp+68h+CPInfo]
mov     ecx, edi        ; CodePage
call    cs:GetCPInfo
test    eax, eax
jz      loc_7FF6E34532B9
lea     rcx, [rsi+18h]  ; void *
xor     edx, edx        ; Val
mov     r8d, 101h       ; Size
call    memset
cmp     [rsp+68h+CPInfo.MaxCharSize], 2
mov     [rsi+4], edi
mov     [rsi+220h], rbx
jnz     loc_7FF6E34532AF
lea     rcx, [rsp+68h+CPInfo.LeadByte]
cmp     [rsp+68h+CPInfo.LeadByte], bl
jz      short loc_7FF6E3453252

loc_7FF6E3453226:
cmp     [rcx+1], bl
jz      short loc_7FF6E3453252
movzx   eax, byte ptr [rcx+1]
movzx   edx, byte ptr [rcx]
cmp     edx, eax
ja      short loc_7FF6E345324A
sub     eax, edx
lea     edi, [rdx+1]
lea     edx, [rax+rbp]

loc_7FF6E345323E:
or      byte ptr [rdi+rsi+18h], 4
add     edi, ebp
sub     rdx, rbp
jnz     short loc_7FF6E345323E

loc_7FF6E345324A:
add     rcx, 2
cmp     [rcx], bl
jnz     short loc_7FF6E3453226

loc_7FF6E3453252:
lea     rax, [rsi+1Ah]
mov     ecx, 0FEh

loc_7FF6E345325B:
or      byte ptr [rax], 8
add     rax, rbp
sub     rcx, rbp
jnz     short loc_7FF6E345325B
mov     ecx, [rsi+4]
sub     ecx, 3A4h
jz      short loc_7FF6E345329F
sub     ecx, 4
jz      short loc_7FF6E3453296
sub     ecx, 0Dh
jz      short loc_7FF6E345328D
cmp     ecx, ebp
jz      short loc_7FF6E3453284
mov     rax, rbx
jmp     short loc_7FF6E34532A6

loc_7FF6E3453284:
mov     rax, cs:off_7FF6E3462588 ; "zh-TW"
jmp     short loc_7FF6E34532A6

loc_7FF6E345328D:
mov     rax, cs:off_7FF6E3462580 ; "ko-KR"
jmp     short loc_7FF6E34532A6

loc_7FF6E3453296:
mov     rax, cs:off_7FF6E3462578 ; "zh-CN"
jmp     short loc_7FF6E34532A6

loc_7FF6E345329F:
mov     rax, cs:off_7FF6E3462570 ; "ja-JP"

loc_7FF6E34532A6:
mov     [rsi+220h], rax
jmp     short loc_7FF6E34532B1

loc_7FF6E34532AF:
mov     ebp, ebx

loc_7FF6E34532B1:
mov     [rsi+8], ebp
jmp     loc_7FF6E34531CC

loc_7FF6E34532B9:
cmp     cs:dword_7FF6E346F968, ebx
jnz     loc_7FF6E34533C0

loc_7FF6E34532C5:
or      eax, 0FFFFFFFFh
jmp     loc_7FF6E34533CA

loc_7FF6E34532CD:       ; void *
lea     rcx, [rsi+18h]
xor     edx, edx        ; Val
mov     r8d, 101h       ; Size
call    memset
mov     eax, r14d
lea     r9, [r12+10h]
lea     r15, unk_7FF6E346DB70
mov     r14d, 4
lea     r11, [rax+rax*2]
shl     r11, 4
add     r9, r11

loc_7FF6E34532FE:
mov     rdx, r9
cmp     [r9], bl
jz      short loc_7FF6E3453344

loc_7FF6E3453306:
cmp     [rdx+1], bl
jz      short loc_7FF6E3453344
movzx   r8d, byte ptr [rdx]
movzx   eax, byte ptr [rdx+1]
cmp     r8d, eax
ja      short loc_7FF6E345333C
lea     r10d, [r8+1]

loc_7FF6E345331C:
cmp     r10d, 101h
jnb     short loc_7FF6E345333C
mov     al, [r15]
add     r8d, ebp
or      [r10+rsi+18h], al
add     r10d, ebp
movzx   eax, byte ptr [rdx+1]
cmp     r8d, eax
jbe     short loc_7FF6E345331C

loc_7FF6E345333C:
add     rdx, 2
cmp     [rdx], bl
jnz     short loc_7FF6E3453306

loc_7FF6E3453344:
add     r9, 8
add     r15, rbp
sub     r14, rbp
jnz     short loc_7FF6E34532FE
mov     [rsi+4], edi
mov     [rsi+8], ebp
sub     edi, 3A4h
jz      short loc_7FF6E3453387
sub     edi, 4
jz      short loc_7FF6E345337E
sub     edi, 0Dh
jz      short loc_7FF6E3453375
cmp     edi, ebp
jnz     short loc_7FF6E345338E
mov     rbx, cs:off_7FF6E3462588 ; "zh-TW"
jmp     short loc_7FF6E345338E

loc_7FF6E3453375:
mov     rbx, cs:off_7FF6E3462580 ; "ko-KR"
jmp     short loc_7FF6E345338E

loc_7FF6E345337E:
mov     rbx, cs:off_7FF6E3462578 ; "zh-CN"
jmp     short loc_7FF6E345338E

loc_7FF6E3453387:
mov     rbx, cs:off_7FF6E3462570 ; "ja-JP"

loc_7FF6E345338E:
sub     r11, rsi
mov     [rsi+220h], rbx
lea     rdx, [rsi+0Ch]
mov     ecx, 6
lea     rdi, [r11+r12]

loc_7FF6E34533A5:
movzx   eax, word ptr [rdi+rdx-8]
mov     [rdx], ax
lea     rdx, [rdx+2]
sub     rcx, rbp
jnz     short loc_7FF6E34533A5

loc_7FF6E34533B6:       ; struct __crt_multibyte_data *
mov     rcx, rsi
call    ?setSBUpLow@@YAXPEAU__crt_multibyte_data@@@Z ; setSBUpLow(__crt_multibyte_data *)
jmp     short loc_7FF6E34533C8

loc_7FF6E34533C0:       ; struct __crt_multibyte_data *
mov     rcx, rsi
call    ?setSBCS@@YAXPEAU__crt_multibyte_data@@@Z ; setSBCS(__crt_multibyte_data *)

loc_7FF6E34533C8:
xor     eax, eax

loc_7FF6E34533CA:
mov     rcx, [rsp+68h+var_30]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
lea     r11, [rsp+68h+var_28]
mov     rbx, [r11+40h]
mov     rbp, [r11+48h]
mov     rsp, r11
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3453128
sub_7FF6E3453128 endp

; [00000073 BYTES: COLLAPSED FUNCTION x_ismbbtype_l(__crt_locale_pointers *,uint,int,int)]
algn_7FF6E3453463:
align 4
; [00000012 BYTES: COLLAPSED FUNCTION _ismbblead]
align 8
; [0000010E BYTES: COLLAPSED FUNCTION __dcrt_get_narrow_environment_from_os]
algn_7FF6E3453586:
align 8
; [00000357 BYTES: COLLAPSED FUNCTION common_set_variable_in_environment_nolock<char>(char * const,int)]
align 20h
; [000000E5 BYTES: COLLAPSED FUNCTION copy_environment<char>(char * * const)]
algn_7FF6E34539C5:
align 8
; [00000005 BYTES: COLLAPSED FUNCTION common_set_variable_in_environment_nolock<char>(char * const,int)]
align 10h
; [00000019 BYTES: COLLAPSED FUNCTION __acrt_app_verifier_enabled]
align 4
; [00000018 BYTES: COLLAPSED FUNCTION __acrt_is_secure_process]
; [0000002F BYTES: COLLAPSED FUNCTION __acrt_get_process_end_policy]
algn_7FF6E3453A33:
align 4
; [000000A5 BYTES: COLLAPSED FUNCTION __acrt_lowio_create_handle_array]
algn_7FF6E3453AD9:
align 4
; [00000050 BYTES: COLLAPSED FUNCTION __acrt_lowio_destroy_handle_array]
; [000000A8 BYTES: COLLAPSED FUNCTION __acrt_lowio_ensure_fh_exists]
; [00000027 BYTES: COLLAPSED FUNCTION __acrt_lowio_lock_fh]
align 4
; [00000027 BYTES: COLLAPSED FUNCTION __acrt_lowio_unlock_fh]
align 4
; [000000BA BYTES: COLLAPSED FUNCTION _free_osfhnd]
algn_7FF6E3453CDE:
align 20h
; [00000075 BYTES: COLLAPSED FUNCTION _get_osfhandle]
algn_7FF6E3453D55:
align 8



sub_7FF6E3453D58 proc near
cmp     cs:dword_7FF6E346F970, 0
jnz     short loc_7FF6E3453D6B
mov     cs:dword_7FF6E346F970, 4000h

loc_7FF6E3453D6B:
xor     eax, eax
retn
sub_7FF6E3453D58 endp

align 10h
; [0000010A BYTES: COLLAPSED FUNCTION __acrt_locale_free_monetary]
algn_7FF6E3453E7A:
align 4
; [0000051B BYTES: COLLAPSED FUNCTION __acrt_locale_initialize_monetary]
algn_7FF6E3454397:
align 8
; [0000006C BYTES: COLLAPSED FUNCTION __acrt_locale_free_numeric]
; [000002E7 BYTES: COLLAPSED FUNCTION __acrt_locale_initialize_numeric]
algn_7FF6E34546EB:
align 4
; [00000032 BYTES: COLLAPSED FUNCTION free_crt_array_internal(void const * * const,unsigned __int64)]
algn_7FF6E345471E:
align 20h
; [0000033E BYTES: COLLAPSED FUNCTION initialize_lc_time(__crt_lc_time_data * const,__crt_locale_data * const)]
algn_7FF6E3454A5E:
align 20h
; [00000108 BYTES: COLLAPSED FUNCTION __acrt_locale_free_time]
; [0000009C BYTES: COLLAPSED FUNCTION __acrt_locale_initialize_time]
; [000000F8 BYTES: COLLAPSED FUNCTION wcsncat_s]



sub_7FF6E3454CFC proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 20h
movzx   eax, word ptr [rcx]
mov     rsi, rdx
mov     rdi, rcx
mov     rbx, rcx
xor     ebp, ebp
jmp     short loc_7FF6E3454D37

loc_7FF6E3454D20:       ; Ch
movzx   edx, ax
mov     rcx, rsi        ; Str
call    wcschr
test    rax, rax
jnz     short loc_7FF6E3454D3C
add     rbx, 2
movzx   eax, word ptr [rbx]

loc_7FF6E3454D37:
test    ax, ax
jnz     short loc_7FF6E3454D20

loc_7FF6E3454D3C:
mov     rbp, [rsp+28h+arg_8]
sub     rbx, rdi
mov     rsi, [rsp+28h+arg_10]
sar     rbx, 1
mov     rax, rbx
mov     rbx, [rsp+28h+arg_0]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E3454CFC endp

algn_7FF6E3454D5A:
align 4



sub_7FF6E3454D5C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
push    rdi
sub     rsp, 20h
movzx   eax, word ptr [rcx]
mov     rdi, rdx
mov     rbx, rcx
jmp     short loc_7FF6E3454D8D

loc_7FF6E3454D76:       ; Ch
movzx   edx, ax
mov     rcx, rdi        ; Str
call    wcschr
test    rax, rax
jnz     short loc_7FF6E3454DA4
add     rbx, 2
movzx   eax, word ptr [rbx]

loc_7FF6E3454D8D:
test    ax, ax
jnz     short loc_7FF6E3454D76
xor     eax, eax

loc_7FF6E3454D94:
mov     rbx, [rsp+28h+arg_0]
mov     rsi, [rsp+28h+arg_8]
add     rsp, 20h
pop     rdi
retn

loc_7FF6E3454DA4:
mov     rax, rbx
jmp     short loc_7FF6E3454D94
sub_7FF6E3454D5C endp

algn_7FF6E3454DA9:
align 4
; [0000008B BYTES: COLLAPSED FUNCTION __acrt_add_locale_ref]
align 8
; [00000176 BYTES: COLLAPSED FUNCTION __acrt_free_locale]
algn_7FF6E3454FAE:
align 10h
; [00000027 BYTES: COLLAPSED CHUNK OF FUNCTION __acrt_add_locale_ref]
align 8
; [00000037 BYTES: COLLAPSED FUNCTION __acrt_locale_free_lc_time_if_unreferenced]
algn_7FF6E345500F:
align 10h
; [00000025 BYTES: COLLAPSED FUNCTION __acrt_locale_release_lc_time_reference]
align 8
; [000000A8 BYTES: COLLAPSED FUNCTION __acrt_release_locale_ref]
; [0000006E BYTES: COLLAPSED FUNCTION __acrt_update_thread_locale_data]
algn_7FF6E345514E:
align 10h
; [00000065 BYTES: COLLAPSED FUNCTION _updatetlocinfoEx_nolock]
algn_7FF6E34551B5:
align 8
; [000000A5 BYTES: COLLAPSED FUNCTION GetLocaleNameFromDefault]
algn_7FF6E345525D:
align 20h
; [000000CF BYTES: COLLAPSED FUNCTION GetLocaleNameFromLangCountry]
algn_7FF6E345532F:
align 10h
; [00000098 BYTES: COLLAPSED FUNCTION GetLocaleNameFromLanguage]



; __int64 __fastcall sub_7FF6E34553C8(wchar_t *String2)
sub_7FF6E34553C8 proc near

Reserved= qword ptr -0A8h
String2= word ptr -98h
var_18= qword ptr -18h
var_8= byte ptr -8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rbp
mov     [rsp+arg_18], rdi
push    r14
sub     rsp, 0C0h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+0C8h+var_18], rax
mov     rbp, rcx
call    sub_7FF6E344A7BC
mov     r9d, 40h ; '@'
lea     r8, [rsp+0C8h+String2]
lea     rbx, [rax+98h]
mov     ecx, [rbx+1Ch]
neg     ecx
mov     rcx, rbp
sbb     edx, edx
and     edx, 0FFFFF005h
add     edx, 1002h
call    sub_7FF6E344D4B4
xor     r14d, r14d
test    eax, eax
jnz     short loc_7FF6E345543C

loc_7FF6E345542E:
mov     [rbx+10h], r14d
mov     eax, 1
jmp     loc_7FF6E345565A

loc_7FF6E345543C:
mov     rcx, [rbx+8]
lea     rdx, [rsp+0C8h+String2]
call    sub_7FF6E3451B50
or      rdi, 0FFFFFFFFFFFFFFFFh
test    eax, eax
jnz     loc_7FF6E3455522
mov     eax, [rbx+18h]
lea     r9d, [rdi+41h]
neg     eax
lea     r8, [rsp+0C8h+String2]
mov     rcx, rbp
sbb     edx, edx
and     edx, 0FFFFF002h
add     edx, 1001h
call    sub_7FF6E344D4B4
test    eax, eax
jz      short loc_7FF6E345542E
mov     rcx, [rbx]
lea     rdx, [rsp+0C8h+String2]
call    sub_7FF6E3451B50
mov     ecx, [rbx+10h]
test    eax, eax
jnz     short loc_7FF6E34554AB
or      ecx, 304h
mov     r9, rdi
mov     [rbx+10h], ecx

loc_7FF6E345549E:
inc     r9
cmp     [rbp+r9*2+0], r14w
jnz     short loc_7FF6E345549E
jmp     short loc_7FF6E3455503

loc_7FF6E34554AB:
test    cl, 2
jnz     short loc_7FF6E3455522
cmp     [rbx+14h], r14d
jz      short loc_7FF6E34554DF
movsxd  r8, dword ptr [rbx+14h] ; MaxCount
lea     rdx, [rsp+0C8h+String2] ; String2
mov     rcx, [rbx]      ; String1
call    _wcsnicmp
test    eax, eax
jnz     short loc_7FF6E34554DF
or      dword ptr [rbx+10h], 2
mov     r9, rdi

loc_7FF6E34554D2:
inc     r9
cmp     [rbp+r9*2+0], r14w
jnz     short loc_7FF6E34554D2
jmp     short loc_7FF6E3455503

loc_7FF6E34554DF:
test    byte ptr [rbx+10h], 1
jnz     short loc_7FF6E3455522
mov     rcx, rbp        ; String2
call    TestDefaultCountry
test    eax, eax
jz      short loc_7FF6E3455522
or      dword ptr [rbx+10h], 1
mov     r9, rdi

loc_7FF6E34554F8:
inc     r9
cmp     [rbp+r9*2+0], r14w
jnz     short loc_7FF6E34554F8

loc_7FF6E3455503:       ; MaxCount
inc     r9
lea     rcx, [rbx+258h] ; Destination
mov     r8, rbp         ; Source
mov     edx, 55h ; 'U'  ; SizeInWords
call    wcsncpy_s
test    eax, eax
jnz     loc_7FF6E34556A5

loc_7FF6E3455522:
mov     eax, [rbx+10h]
mov     ecx, 300h
and     eax, ecx
cmp     eax, ecx
jz      loc_7FF6E345564F
mov     eax, [rbx+18h]
lea     r8, [rsp+0C8h+String2]
neg     eax
mov     r9d, 40h ; '@'
mov     rcx, rbp
sbb     edx, edx
and     edx, 0FFFFF002h
add     edx, 1001h
call    sub_7FF6E344D4B4
test    eax, eax
jz      loc_7FF6E345542E
mov     rcx, [rbx]
lea     rdx, [rsp+0C8h+String2]
call    sub_7FF6E3451B50
test    eax, eax
jnz     loc_7FF6E345564F
mov     eax, [rbx+10h]
bts     eax, 9
mov     [rbx+10h], eax
cmp     [rbx+18h], r14d
jz      short loc_7FF6E34555AF
bts     eax, 8
lea     rcx, [rbx+258h]
mov     [rbx+10h], eax
cmp     [rcx], r14w
jnz     loc_7FF6E345564F

loc_7FF6E345559F:
inc     rdi
cmp     [rbp+rdi*2+0], r14w
jnz     short loc_7FF6E345559F
jmp     loc_7FF6E345563A

loc_7FF6E34555AF:
cmp     [rbx+14h], r14d
jz      loc_7FF6E3455684
mov     rdx, [rbx]
mov     rcx, rdi

loc_7FF6E34555BF:
inc     rcx
cmp     [rdx+rcx*2], r14w
jnz     short loc_7FF6E34555BF
cmp     ecx, [rbx+14h]
jnz     loc_7FF6E3455684
mov     rcx, rbp        ; String2
call    TestDefaultCountry
test    eax, eax
jnz     short loc_7FF6E345561D
mov     rcx, [rbx]
mov     r8d, r14d
test    rcx, rcx
jz      short loc_7FF6E3455608

loc_7FF6E34555E9:
movzx   edx, word ptr [rcx]
add     rcx, 2
lea     eax, [rdx-41h]
cmp     ax, 19h
jbe     short loc_7FF6E3455603
sub     dx, 61h ; 'a'
cmp     dx, 19h
ja      short loc_7FF6E3455608

loc_7FF6E3455603:
inc     r8d
jmp     short loc_7FF6E34555E9

loc_7FF6E3455608:
mov     rcx, [rbx]
mov     rax, rdi

loc_7FF6E345560E:
inc     rax
cmp     [rcx+rax*2], r14w
jnz     short loc_7FF6E345560E
cmp     r8d, eax
jz      short loc_7FF6E345564F

loc_7FF6E345561D:
bts     dword ptr [rbx+10h], 8
lea     rcx, [rbx+258h] ; Destination
cmp     [rcx], r14w
jnz     short loc_7FF6E345564F

loc_7FF6E345562F:
inc     rdi
cmp     [rbp+rdi*2+0], r14w
jnz     short loc_7FF6E345562F

loc_7FF6E345563A:       ; MaxCount
lea     r9, [rdi+1]
mov     r8, rbp         ; Source
mov     edx, 55h ; 'U'  ; SizeInWords
call    wcsncpy_s
test    eax, eax
jnz     short loc_7FF6E34556A5

loc_7FF6E345564F:
mov     eax, [rbx+10h]
shr     eax, 2
not     eax
and     eax, 1

loc_7FF6E345565A:
mov     rcx, [rsp+0C8h+var_18]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
lea     r11, [rsp+0C8h+var_8]
mov     rbx, [r11+18h]
mov     rbp, [r11+20h]
mov     rdi, [r11+28h]
mov     rsp, r11
pop     r14
retn

loc_7FF6E3455684:
bts     eax, 8
lea     rcx, [rbx+258h]
mov     [rbx+10h], eax
cmp     [rcx], r14w
jnz     short loc_7FF6E345564F

loc_7FF6E3455698:
inc     rdi
cmp     [rbp+rdi*2+0], r14w
jnz     short loc_7FF6E3455698
jmp     short loc_7FF6E345563A

loc_7FF6E34556A5:       ; LineNo
xor     r9d, r9d
mov     [rsp+0C8h+Reserved], r14 ; Reserved
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
db 0CCh
; } // starts at 7FF6E34553C8
sub_7FF6E34553C8 endp

algn_7FF6E34556BA:
align 4
; [000000EA BYTES: COLLAPSED FUNCTION LanguageEnumProcEx]
algn_7FF6E34557A6:
align 8



; __int64 __fastcall sub_7FF6E34557A8(wchar_t *String1)
sub_7FF6E34557A8 proc near

arg_0= dword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 20h
xor     esi, esi
mov     rdi, rdx
mov     [rsp+28h+arg_0], esi
mov     rbx, rcx
test    rcx, rcx
jz      short loc_7FF6E3455845
cmp     [rcx], si
jz      short loc_7FF6E3455845
lea     rdx, aAcp       ; "ACP"
call    wcscmp
test    eax, eax
jz      short loc_7FF6E3455845
lea     rdx, aUtf8      ; "utf8"
mov     rcx, rbx
call    sub_7FF6E3451B50
test    eax, eax
jz      short loc_7FF6E3455826
lea     rdx, aUtf8_0    ; "utf-8"
mov     rcx, rbx
call    sub_7FF6E3451B50
test    eax, eax
jz      short loc_7FF6E3455826
lea     rdx, aOcp       ; "OCP"
mov     rcx, rbx        ; String1
call    wcscmp
test    eax, eax
jnz     short loc_7FF6E345583B
mov     edx, 2000000Bh
jmp     short loc_7FF6E345584A

loc_7FF6E345581D:
mov     eax, [rsp+28h+arg_0]
cmp     eax, 3
jge     short loc_7FF6E345582B

loc_7FF6E3455826:
mov     eax, 0FDE9h

loc_7FF6E345582B:
mov     rbx, [rsp+28h+arg_8]
mov     rsi, [rsp+28h+arg_10]
add     rsp, 20h
pop     rdi
retn

loc_7FF6E345583B:
mov     rcx, rbx
call    unknown_libname_85 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E345582B

loc_7FF6E3455845:
mov     edx, 20001004h

loc_7FF6E345584A:
mov     r9d, 2
lea     r8, [rsp+28h+arg_0]
lea     rcx, [rdi+258h]
call    sub_7FF6E344D4B4
test    eax, eax
jnz     short loc_7FF6E345581D
jmp     short loc_7FF6E345582B
sub_7FF6E34557A8 endp

algn_7FF6E3455867:
align 8
; [0000006A BYTES: COLLAPSED FUNCTION TestDefaultCountry]
algn_7FF6E34558D2:
align 4
; [00000099 BYTES: COLLAPSED FUNCTION TranslateName]
algn_7FF6E345596D:
align 10h



sub_7FF6E3455970 proc near

Reserved= qword ptr -38h
arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 30h
mov     r14, r8
mov     r15, rdx
mov     rdi, rcx
call    sub_7FF6E344A7BC
xor     r13d, r13d
lea     r8, [rdi+80h]
mov     rbp, rax
lea     rbx, [rax+98h]
mov     [rax+0A8h], r13d
lea     r12, [rax+2F0h]
mov     [rbx], rdi
lea     rsi, [rax+0A0h]
mov     [r12], r13w
mov     [rsi], r8
cmp     [r8], r13w
jz      short loc_7FF6E34559E7
mov     r8, rsi
lea     edx, [r13+16h]
lea     rcx, off_7FF6E34629F0 ; "america"
call    TranslateName

loc_7FF6E34559E7:
mov     rax, [rbx]
mov     rcx, rbx
cmp     [rax], r13w
jz      short loc_7FF6E3455A43
mov     rax, [rsi]
cmp     [rax], r13w
jz      short loc_7FF6E3455A03
call    GetLocaleNameFromLangCountry
jmp     short loc_7FF6E3455A08

loc_7FF6E3455A03:
call    GetLocaleNameFromLanguage

loc_7FF6E3455A08:
cmp     [rbp+0A8h], r13d
jnz     short loc_7FF6E3455A55
mov     r8, rbx
lea     rcx, off_7FF6E34625D0 ; "american"
mov     edx, 40h ; '@'
call    TranslateName
test    eax, eax
jz      short loc_7FF6E3455A48
mov     rax, [rsi]
mov     rcx, rbx
cmp     [rax], r13w
jz      short loc_7FF6E3455A3C
call    GetLocaleNameFromLangCountry
jmp     short loc_7FF6E3455A48

loc_7FF6E3455A3C:
call    GetLocaleNameFromLanguage
jmp     short loc_7FF6E3455A48

loc_7FF6E3455A43:
call    GetLocaleNameFromDefault

loc_7FF6E3455A48:
cmp     [rbp+0A8h], r13d
jz      loc_7FF6E3455BB5

loc_7FF6E3455A55:
test    rdi, rdi
jz      short loc_7FF6E3455A72
cmp     [rdi], r13w
jnz     short loc_7FF6E3455A72
cmp     [rdi+100h], r13w
jnz     short loc_7FF6E3455A72
call    cs:GetACP
jmp     short loc_7FF6E3455A8A

loc_7FF6E3455A72:
lea     rax, [rdi+100h]
mov     rdx, rbx
neg     rdi
sbb     rcx, rcx
and     rcx, rax        ; String1
call    sub_7FF6E34557A8

loc_7FF6E3455A8A:
mov     ebx, eax
test    eax, eax
jz      loc_7FF6E3455BB5
cmp     eax, 0FDE8h
jz      loc_7FF6E3455BB5
movzx   ecx, bx         ; CodePage
call    cs:IsValidCodePage
test    eax, eax
jz      loc_7FF6E3455BB5
test    r15, r15
jz      short loc_7FF6E3455AB8
mov     [r15], ebx

loc_7FF6E3455AB8:
test    r14, r14
jz      loc_7FF6E3455B98
lea     rsi, [r14+120h]
or      r9, 0FFFFFFFFFFFFFFFFh
mov     [rsi], r13w

loc_7FF6E3455AD0:
inc     r9
cmp     [r12+r9*2], r13w
jnz     short loc_7FF6E3455AD0
inc     r9              ; MaxCount
mov     r8, r12         ; Source
mov     edx, 55h ; 'U'  ; SizeInWords
mov     rcx, rsi        ; Destination
call    wcsncpy_s
test    eax, eax
jnz     loc_7FF6E3455BD4
lea     ebp, [rax+40h]
mov     r8, r14
mov     r9d, ebp
mov     edx, 1001h
mov     rcx, rsi
call    sub_7FF6E344D4B4
test    eax, eax
jz      loc_7FF6E3455BB5
lea     rdi, [r14+80h]
mov     r9d, ebp
mov     r8, rdi
mov     edx, 1002h
mov     rcx, rsi
call    sub_7FF6E344D4B4
test    eax, eax
jz      loc_7FF6E3455BB5
lea     edx, [rbp+1Fh]  ; Ch
mov     rcx, rdi        ; Str
call    wcschr
test    rax, rax
jnz     short loc_7FF6E3455B55
lea     edx, [rbp-12h]  ; Ch
mov     rcx, rdi        ; Str
call    wcschr
test    rax, rax
jz      short loc_7FF6E3455B6C

loc_7FF6E3455B55:
mov     r9d, ebp
mov     r8, rdi
mov     edx, 7
mov     rcx, rsi
call    sub_7FF6E344D4B4
test    eax, eax
jz      short loc_7FF6E3455BB5

loc_7FF6E3455B6C:
lea     rax, [r14+100h]
cmp     ebx, 0FDE9h
jnz     short loc_7FF6E3455B9F
mov     r9d, 5          ; MaxCount
lea     r8, aUtf8       ; "utf8"
mov     rcx, rax        ; Destination
lea     edx, [r9+0Bh]   ; SizeInWords
call    wcsncpy_s
test    eax, eax
jnz     short loc_7FF6E3455BD4

loc_7FF6E3455B98:
mov     eax, 1
jmp     short loc_7FF6E3455BB7

loc_7FF6E3455B9F:       ; Radix
mov     r9d, 0Ah
mov     rdx, rax        ; Buffer
mov     ecx, ebx        ; Value
lea     r8d, [r9+6]     ; BufferCount
call    _itow_s
jmp     short loc_7FF6E3455B98

loc_7FF6E3455BB5:
xor     eax, eax

loc_7FF6E3455BB7:
mov     rbx, [rsp+58h+arg_0]
mov     rbp, [rsp+58h+arg_8]
mov     rsi, [rsp+58h+arg_10]
add     rsp, 30h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
retn

loc_7FF6E3455BD4:       ; LineNo
xor     r9d, r9d
mov     [rsp+58h+Reserved], r13 ; Reserved
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
db 0CCh
sub_7FF6E3455970 endp

algn_7FF6E3455BE9:
align 4
; [000000E8 BYTES: COLLAPSED FUNCTION CountryEnumProc]
; [000000CD BYTES: COLLAPSED FUNCTION GetLcidFromLangCountry]
algn_7FF6E3455DA1:
align 4
; [00000096 BYTES: COLLAPSED FUNCTION GetLcidFromLanguage]
algn_7FF6E3455E3A:
align 4



; BOOL __stdcall sub_7FF6E3455E3C(LPWSTR)
sub_7FF6E3455E3C proc near

LCData= word ptr -118h
var_28= qword ptr -28h
var_18= byte ptr -18h
arg_8= qword ptr  10h
arg_10= qword ptr  18h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rbp
push    rsi
push    rdi
push    r14
sub     rsp, 120h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+138h+var_28], rax
mov     rbx, rcx
call    sub_7FF6E344A7BC
lea     rsi, [rax+98h]
call    sub_7FF6E344A7BC
mov     rcx, rbx
mov     rdi, [rax+3A0h]
call    LcidFromHexString
mov     ecx, [rsi+1Ch]
lea     r8, [rsp+138h+LCData] ; lpLCData
neg     ecx
mov     r9d, 78h ; 'x'  ; cchData
mov     ecx, eax        ; Locale
mov     ebx, eax
sbb     edx, edx
and     edx, 0FFFFF005h
add     edx, 1002h      ; LCType
call    cs:GetLocaleInfoW
xor     r14d, r14d
test    eax, eax
jz      loc_7FF6E345604F
mov     rcx, [rsi+8]
lea     rdx, [rsp+138h+LCData]
call    sub_7FF6E3451B50
or      rbp, 0FFFFFFFFFFFFFFFFh
test    eax, eax
jnz     loc_7FF6E3455F84
mov     eax, [rsi+18h]
lea     r9d, [r14+78h]  ; cchData
neg     eax
lea     r8, [rsp+138h+LCData] ; lpLCData
mov     ecx, ebx        ; Locale
sbb     edx, edx
and     edx, 0FFFFF002h
add     edx, 1001h      ; LCType
call    cs:GetLocaleInfoW
test    eax, eax
jz      loc_7FF6E345604F
mov     rcx, [rsi]
lea     rdx, [rsp+138h+LCData]
call    sub_7FF6E3451B50
mov     ecx, [rdi]
test    eax, eax
jnz     short loc_7FF6E3455F1F
or      ecx, 304h
mov     [rdi+4], ebx
mov     [rdi], ecx
jmp     short loc_7FF6E3455F81

loc_7FF6E3455F1F:
test    cl, 2
jnz     short loc_7FF6E3455F84
cmp     [rsi+14h], r14d
jz      short loc_7FF6E3455F5F
movsxd  r8, dword ptr [rsi+14h] ; MaxCount
lea     rdx, [rsp+138h+LCData] ; String2
mov     rcx, [rsi]      ; String1
call    _wcsnicmp
test    eax, eax
jnz     short loc_7FF6E3455F5F
or      dword ptr [rdi], 2
mov     rax, rbp
mov     [rdi+8], ebx
mov     rcx, [rsi]

loc_7FF6E3455F4B:
inc     rax
cmp     [rcx+rax*2], r14w
jnz     short loc_7FF6E3455F4B
cmp     eax, [rsi+14h]
jnz     short loc_7FF6E3455F84
mov     [rdi+4], ebx
jmp     short loc_7FF6E3455F84

loc_7FF6E3455F5F:
test    byte ptr [rdi], 1
jnz     short loc_7FF6E3455F84
mov     ecx, r14d
lea     rax, unk_7FF6E34635A8

loc_7FF6E3455F6E:
cmp     bx, [rax]
jz      short loc_7FF6E3455F84
inc     ecx
add     rax, 2
cmp     ecx, 0Ah
jb      short loc_7FF6E3455F6E
or      dword ptr [rdi], 1

loc_7FF6E3455F81:
mov     [rdi+8], ebx

loc_7FF6E3455F84:
mov     eax, [rdi]
mov     ecx, 300h
and     eax, ecx
cmp     eax, ecx
jz      loc_7FF6E3456043
mov     eax, [rsi+18h]
lea     r8, [rsp+138h+LCData] ; lpLCData
neg     eax
mov     r9d, 78h ; 'x'  ; cchData
mov     ecx, ebx        ; Locale
sbb     edx, edx
and     edx, 0FFFFF002h
add     edx, 1001h      ; LCType
call    cs:GetLocaleInfoW
test    eax, eax
jz      loc_7FF6E345604F
mov     rcx, [rsi]
lea     rdx, [rsp+138h+LCData]
call    sub_7FF6E3451B50
test    eax, eax
jnz     short loc_7FF6E3456009
mov     eax, [rdi]
bts     eax, 9
mov     [rdi], eax
cmp     [rsi+18h], r14d
jz      short loc_7FF6E3455FEA

loc_7FF6E3455FE2:
bts     eax, 8
mov     [rdi], eax
jmp     short loc_7FF6E345603A

loc_7FF6E3455FEA:
cmp     [rsi+14h], r14d
jz      short loc_7FF6E3455FE2
mov     rcx, [rsi]

loc_7FF6E3455FF3:
inc     rbp
cmp     [rcx+rbp*2], r14w
jnz     short loc_7FF6E3455FF3
cmp     ebp, [rsi+14h]
jnz     short loc_7FF6E3455FE2
mov     edx, 1
jmp     short loc_7FF6E3456028

loc_7FF6E3456009:
cmp     [rsi+18h], r14d
jnz     short loc_7FF6E3456043
cmp     [rsi+14h], r14d
jz      short loc_7FF6E3456043
mov     rcx, [rsi]
lea     rdx, [rsp+138h+LCData]
call    sub_7FF6E3451B50
test    eax, eax
jnz     short loc_7FF6E3456043
xor     edx, edx

loc_7FF6E3456028:
mov     r8, rdi
mov     ecx, ebx
call    sub_7FF6E345628C
test    eax, eax
jz      short loc_7FF6E3456043
bts     dword ptr [rdi], 8

loc_7FF6E345603A:
cmp     [rdi+4], r14d
jnz     short loc_7FF6E3456043
mov     [rdi+4], ebx

loc_7FF6E3456043:
mov     eax, [rdi]
shr     eax, 2
not     eax
and     eax, 1
jmp     short loc_7FF6E3456057

loc_7FF6E345604F:
mov     [rdi], r14d
mov     eax, 1

loc_7FF6E3456057:
mov     rcx, [rsp+138h+var_28]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
lea     r11, [rsp+138h+var_18]
mov     rbx, [r11+28h]
mov     rbp, [r11+30h]
mov     rsp, r11
pop     r14
pop     rdi
pop     rsi
retn
; } // starts at 7FF6E3455E3C
sub_7FF6E3455E3C endp

algn_7FF6E345607F:
align 20h
; [00000108 BYTES: COLLAPSED FUNCTION LanguageEnumProc]
; [0000004F BYTES: COLLAPSED FUNCTION LcidFromHexString]
align 8



; __int64 __fastcall sub_7FF6E34561D8(wchar_t *String1)
sub_7FF6E34561D8 proc near

LCData= word ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rsi
push    rdi
sub     rsp, 20h
xor     esi, esi
mov     rdi, rdx
mov     dword ptr [rsp+28h+LCData], esi
mov     rbx, rcx
test    rcx, rcx
jz      short loc_7FF6E345624B
cmp     [rcx], si
jz      short loc_7FF6E345624B
lea     rdx, aAcp       ; "ACP"
call    wcscmp
test    eax, eax
jz      short loc_7FF6E345624B
lea     rdx, aOcp       ; "OCP"
mov     rcx, rbx        ; String1
call    wcscmp
test    eax, eax
jnz     short loc_7FF6E3456241
mov     ecx, [rdi+8]    ; Locale
lea     r9d, [rsi+2]    ; cchData
lea     r8, [rsp+28h+LCData] ; lpLCData
mov     edx, 2000000Bh  ; LCType
call    cs:GetLocaleInfoW
test    eax, eax
jz      short loc_7FF6E3456268
mov     eax, dword ptr [rsp+28h+LCData]
jmp     short loc_7FF6E345627A

loc_7FF6E3456241:
mov     rcx, rbx
call    unknown_libname_85 ; Microsoft VisualC 64bit universal runtime
jmp     short loc_7FF6E345627A

loc_7FF6E345624B:       ; Locale
mov     ecx, [rdi+8]
lea     r8, [rsp+28h+LCData] ; lpLCData
mov     r9d, 2          ; cchData
mov     edx, 20001004h  ; LCType
call    cs:GetLocaleInfoW
test    eax, eax
jnz     short loc_7FF6E345626C

loc_7FF6E3456268:
xor     eax, eax
jmp     short loc_7FF6E345627A

loc_7FF6E345626C:
mov     eax, dword ptr [rsp+28h+LCData]
test    eax, eax
jnz     short loc_7FF6E345627A
call    cs:GetACP

loc_7FF6E345627A:
mov     rbx, [rsp+28h+arg_8]
mov     rsi, [rsp+28h+arg_10]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E34561D8 endp

algn_7FF6E345628A:
align 4



sub_7FF6E345628C proc near

LCData= word ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     rax, rsp
mov     [rax+10h], rbx
mov     [rax+18h], rbp
mov     [rax+20h], rsi
push    rdi
sub     rsp, 20h
xor     ebx, ebx
mov     ebp, edx
mov     [rax+8], ebx
mov     edi, ecx
call    sub_7FF6E344A7BC
mov     ecx, edi
lea     r9d, [rbx+2]    ; cchData
and     ecx, 3FFh
lea     r8, [rsp+28h+LCData] ; lpLCData
bts     ecx, 0Ah        ; Locale
mov     edx, 20000001h  ; LCType
mov     rsi, rax
call    cs:GetLocaleInfoW
test    eax, eax
jz      short loc_7FF6E345632F
cmp     edi, dword ptr [rsp+28h+LCData]
jz      short loc_7FF6E3456328
test    ebp, ebp
jz      short loc_7FF6E3456328
mov     r9, [rsi+98h]
mov     r8d, ebx
movzx   edx, word ptr [r9]
lea     rcx, [r9+2]

loc_7FF6E34562F1:
lea     eax, [rdx-41h]
cmp     ax, 19h
jbe     short loc_7FF6E3456304
sub     dx, 61h ; 'a'
cmp     dx, 19h
ja      short loc_7FF6E3456310

loc_7FF6E3456304:
movzx   edx, word ptr [rcx]
inc     r8d
add     rcx, 2
jmp     short loc_7FF6E34562F1

loc_7FF6E3456310:
or      rax, 0FFFFFFFFFFFFFFFFh

loc_7FF6E3456314:
inc     rax
cmp     [r9+rax*2], bx
jnz     short loc_7FF6E3456314
cmp     r8d, eax
setnz   bl
mov     eax, ebx
jmp     short loc_7FF6E3456331

loc_7FF6E3456328:
mov     eax, 1
jmp     short loc_7FF6E3456331

loc_7FF6E345632F:
xor     eax, eax

loc_7FF6E3456331:
mov     rbx, [rsp+28h+arg_8]
mov     rbp, [rsp+28h+arg_10]
mov     rsi, [rsp+28h+arg_18]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E345628C endp

algn_7FF6E3456346:
align 8



sub_7FF6E3456348 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 20h
xor     esi, esi
mov     r14, r8
mov     ebx, edx
mov     rbp, rcx
test    edx, edx
js      short loc_7FF6E34563A4

loc_7FF6E345636E:
mov     rcx, [r14]
lea     eax, [rsi+rbx]
cdq
sub     eax, edx
sar     eax, 1
movsxd  r15, eax
mov     rdi, r15
shl     rdi, 4
mov     rdx, [rdi+rbp]
call    sub_7FF6E3451B50
test    eax, eax
jz      short loc_7FF6E34563BF
lea     ecx, [r15-1]
cmovns  ecx, ebx
mov     ebx, ecx
lea     ecx, [r15+1]
cmovns  esi, ecx
cmp     esi, ebx
jle     short loc_7FF6E345636E

loc_7FF6E34563A4:
xor     al, al

loc_7FF6E34563A6:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     rdi
retn

loc_7FF6E34563BF:
lea     rax, [rbp+8]
add     rax, rdi
mov     [r14], rax
mov     al, 1
jmp     short loc_7FF6E34563A6
sub_7FF6E3456348 endp

algn_7FF6E34563CD:
align 10h


; Attributes: bp-based frame

sub_7FF6E34563D0 proc near

Locale= dword ptr -20h
var_18= dword ptr -18h
var_10= qword ptr -10h

; __unwind { // __GSHandlerCheck
push    rbp
push    rbx
push    rsi
push    rdi
push    r12
push    r14
push    r15
mov     rbp, rsp
sub     rsp, 40h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+var_10], rax
mov     rdi, r8
mov     r15, rdx
mov     r14, rcx
call    sub_7FF6E344A7BC
mov     rsi, rax
xor     eax, eax
mov     qword ptr [rbp+Locale], rax
mov     [rbp+var_18], eax
call    sub_7FF6E344A7BC
lea     rcx, [rbp+Locale]
xor     r12d, r12d
lea     rbx, [rsi+0A0h]
mov     [rax+3A0h], rcx
lea     rax, [r14+80h]
mov     [rsi+98h], r14
mov     [rbx], rax
test    rax, rax
jz      short loc_7FF6E3456458
cmp     [rax], r12w
jz      short loc_7FF6E3456458
mov     rdx, cs:qword_7FF6E3462B60
lea     rcx, off_7FF6E34629F0 ; "america"
dec     edx
mov     r8, rbx
call    sub_7FF6E3456348

loc_7FF6E3456458:
mov     [rbp+Locale], r12d
mov     rax, [rsi+98h]
test    rax, rax
jz      short loc_7FF6E34564E2
cmp     [rax], r12w
jz      short loc_7FF6E34564E2
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E3456487
cmp     [rax], r12w
jz      short loc_7FF6E3456487
lea     rcx, [rbp+Locale]
call    GetLcidFromLangCountry
jmp     short loc_7FF6E3456490

loc_7FF6E3456487:
lea     rcx, [rbp+Locale]
call    GetLcidFromLanguage

loc_7FF6E3456490:
cmp     [rbp+Locale], r12d
jnz     loc_7FF6E3456558
mov     rdx, cs:qword_7FF6E34629E0
lea     r8, [rsi+98h]
dec     edx
lea     rcx, off_7FF6E34625D0 ; "american"
call    sub_7FF6E3456348
test    al, al
jz      loc_7FF6E345654E
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E34564D7
cmp     [rax], r12w
jz      short loc_7FF6E34564D7
lea     rcx, [rbp+Locale]
call    GetLcidFromLangCountry
jmp     short loc_7FF6E345654E

loc_7FF6E34564D7:
lea     rcx, [rbp+Locale]
call    GetLcidFromLanguage
jmp     short loc_7FF6E345654E

loc_7FF6E34564E2:
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E345653B
cmp     [rax], r12w
jz      short loc_7FF6E345653B
call    sub_7FF6E344A7BC
mov     rdx, rax
or      rcx, 0FFFFFFFFFFFFFFFFh
mov     rax, [rax+0A0h]

loc_7FF6E3456503:
inc     rcx
cmp     [rax+rcx*2], r12w
jnz     short loc_7FF6E3456503
cmp     rcx, 3
mov     eax, r12d
lea     rcx, CountryEnumProc ; lpLocaleEnumProc
setz    al
mov     [rdx+0B4h], eax
mov     edx, 1          ; dwFlags
call    cs:EnumSystemLocalesW
test    byte ptr [rbp+Locale], 4
jnz     short loc_7FF6E345654E
mov     [rbp+Locale], r12d
jmp     short loc_7FF6E345654E

loc_7FF6E345653B:
mov     [rbp+Locale], 104h
call    cs:GetUserDefaultLCID
mov     [rbp+var_18], eax
mov     [rbp+Locale+4], eax

loc_7FF6E345654E:
cmp     [rbp+Locale], r12d
jz      loc_7FF6E3456633

loc_7FF6E3456558:
lea     rax, [r14+100h]
neg     r14
lea     rdx, [rbp+Locale]
sbb     rcx, rcx
and     rcx, rax        ; String1
call    sub_7FF6E34561D8
mov     ebx, eax
test    eax, eax
jz      loc_7FF6E3456633
movzx   ecx, bx         ; CodePage
call    cs:IsValidCodePage
test    eax, eax
jz      loc_7FF6E3456633
mov     ecx, [rbp+Locale+4] ; Locale
mov     edx, 1          ; dwFlags
call    cs:IsValidLocale
test    eax, eax
jz      loc_7FF6E3456633
test    r15, r15
jz      short loc_7FF6E34565AA
mov     [r15], ebx

loc_7FF6E34565AA:
mov     ecx, [rbp+Locale+4]
lea     rdx, [rsi+2F0h]
xor     r9d, r9d
lea     esi, [r9+55h]
mov     r8d, esi
call    sub_7FF6E344D628
test    rdi, rdi
jz      short loc_7FF6E345662C
mov     ecx, [rbp+Locale+4]
lea     rdx, [rdi+120h]
xor     r9d, r9d
mov     r8d, esi
call    sub_7FF6E344D628
mov     ecx, [rbp+Locale+4] ; Locale
mov     esi, 40h ; '@'
mov     r9d, esi        ; cchData
mov     r8, rdi         ; lpLCData
mov     edx, 1001h      ; LCType
call    cs:GetLocaleInfoW
test    eax, eax
jz      short loc_7FF6E3456633
mov     ecx, [rbp+var_18] ; Locale
lea     r8, [rdi+80h]   ; lpLCData
mov     r9d, esi        ; cchData
mov     edx, 1002h      ; LCType
call    cs:GetLocaleInfoW
test    eax, eax
jz      short loc_7FF6E3456633
lea     rdx, [rdi+100h] ; Buffer
mov     ecx, ebx        ; Value
lea     r9d, [rsi-36h]  ; Radix
lea     r8d, [rsi-30h]  ; BufferCount
call    _itow_s

loc_7FF6E345662C:
mov     eax, 1
jmp     short loc_7FF6E3456635

loc_7FF6E3456633:
xor     eax, eax

loc_7FF6E3456635:
mov     rcx, [rbp+var_10]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 40h
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rsi
pop     rbx
pop     rbp
retn
; } // starts at 7FF6E34563D0
sub_7FF6E34563D0 endp

; [00000095 BYTES: COLLAPSED FUNCTION _recalloc_base]
algn_7FF6E34566E5:
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j__recalloc_base]
align 20h



sub_7FF6E3456700 proc near
mov     rax, cs:hHeap
retn
sub_7FF6E3456700 endp

align 10h
; [0000001C BYTES: COLLAPSED FUNCTION __acrt_initialize_heap]
algn_7FF6E345672C:
align 20h



sub_7FF6E3456740 proc near
and     cs:hHeap, 0
mov     al, 1
retn
sub_7FF6E3456740 endp

align 20h



sub_7FF6E3456760 proc near
mov     rax, cs:hHeap
retn
sub_7FF6E3456760 endp




sub_7FF6E3456768 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rsi
push    rdi
sub     rsp, 20h
mov     rsi, rdx
mov     rdi, rcx
cmp     rcx, rdx
jz      short loc_7FF6E34567D4
mov     rbx, rcx

loc_7FF6E3456785:
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E3456796
call    j__guard_dispatch_icall_nop
test    al, al
jz      short loc_7FF6E345679F

loc_7FF6E3456796:
add     rbx, 10h
cmp     rbx, rsi
jnz     short loc_7FF6E3456785

loc_7FF6E345679F:
cmp     rbx, rsi
jz      short loc_7FF6E34567D4
cmp     rbx, rdi
jz      short loc_7FF6E34567D0
add     rbx, 0FFFFFFFFFFFFFFF8h

loc_7FF6E34567AD:
cmp     qword ptr [rbx-8], 0
jz      short loc_7FF6E34567C3
mov     rax, [rbx]
test    rax, rax
jz      short loc_7FF6E34567C3
xor     ecx, ecx
call    j__guard_dispatch_icall_nop

loc_7FF6E34567C3:
sub     rbx, 10h
lea     rax, [rbx+8]
cmp     rax, rdi
jnz     short loc_7FF6E34567AD

loc_7FF6E34567D0:
xor     al, al
jmp     short loc_7FF6E34567D6

loc_7FF6E34567D4:
mov     al, 1

loc_7FF6E34567D6:
mov     rbx, [rsp+28h+arg_0]
mov     rsi, [rsp+28h+arg_8]
add     rsp, 20h
pop     rdi
retn
sub_7FF6E3456768 endp

algn_7FF6E34567E6:
align 8



sub_7FF6E34567E8 proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
push    rdi
sub     rsp, 20h
mov     rbx, rdx
mov     rdi, rcx
cmp     rcx, rdx
jz      short loc_7FF6E3456816

loc_7FF6E34567FD:
mov     rax, [rbx-8]
test    rax, rax
jz      short loc_7FF6E345680D
xor     ecx, ecx
call    j__guard_dispatch_icall_nop

loc_7FF6E345680D:
sub     rbx, 10h
cmp     rbx, rdi
jnz     short loc_7FF6E34567FD

loc_7FF6E3456816:
mov     rbx, [rsp+28h+arg_0]
mov     al, 1
add     rsp, 20h
pop     rdi
retn
sub_7FF6E34567E8 endp

algn_7FF6E3456823:
align 10h
; [00000009 BYTES: COLLAPSED FUNCTION __acrt_fenv_get_common_round_control]
align 20h



sub_7FF6E3456840 proc near

arg_0= dword ptr  8

stmxcsr [rsp+arg_0]
mov     r9d, [rsp+arg_0]
mov     r10d, 8040h
movzx   eax, r9w
mov     ecx, 8000h
and     ax, r10w
xor     edx, edx
mov     r11d, 400h
cmp     ax, cx
jnz     short loc_7FF6E3456872
mov     r8d, 0C00h
jmp     short loc_7FF6E345688B

loc_7FF6E3456872:
cmp     ax, 40h ; '@'
jnz     short loc_7FF6E3456880
mov     r8d, 800h
jmp     short loc_7FF6E345688B

loc_7FF6E3456880:
cmp     ax, r10w
mov     r8d, edx
cmovz   r8d, r11d

loc_7FF6E345688B:
mov     eax, r9d
and     eax, 6000h
jz      short loc_7FF6E34568C0
cmp     eax, 2000h
jz      short loc_7FF6E34568B9
cmp     eax, 4000h
jz      short loc_7FF6E34568B2
cmp     eax, 6000h
mov     ecx, 300h
cmovnz  ecx, edx
jmp     short loc_7FF6E34568C2

loc_7FF6E34568B2:
mov     ecx, 200h
jmp     short loc_7FF6E34568C2

loc_7FF6E34568B9:
mov     ecx, 100h
jmp     short loc_7FF6E34568C2

loc_7FF6E34568C0:
mov     ecx, edx

loc_7FF6E34568C2:
mov     edx, r9d
mov     eax, r9d
shr     edx, 2
and     eax, 800h
and     edx, r11d
or      edx, eax
mov     eax, r9d
and     eax, r11d
shr     edx, 2
or      edx, eax
mov     eax, r9d
and     eax, 200h
shr     edx, 2
or      edx, eax
and     r9d, 180h
shr     edx, 3
or      edx, r9d
shr     edx, 3
or      edx, r8d
or      edx, ecx
mov     eax, edx
and     eax, 0FFFFFF00h
lea     ecx, ds:0[rdx*4]
or      eax, ecx
shl     eax, 16h
or      eax, edx
retn
sub_7FF6E3456840 endp

align 20h
; [00000055 BYTES: COLLAPSED FUNCTION __acrt_fenv_get_status]
align 20h



sub_7FF6E3456980 proc near

arg_0= dword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_10], rbx
push    rsi
mov     eax, ecx

loc_7FF6E3456988:
mov     [rsp+8+arg_8], rdi
mov     edx, ecx
shr     eax, 16h
shr     edx, 18h
and     eax, 300h
and     edx, 3Fh
and     ecx, 0C00h
or      edx, eax
xor     esi, esi
mov     edi, 400h
mov     r11d, 800h
cmp     ecx, edi
jz      short loc_7FF6E34569D9
cmp     ecx, r11d
jz      short loc_7FF6E34569D1
cmp     ecx, 0C00h
jz      short loc_7FF6E34569C9
movzx   r9d, si
jmp     short loc_7FF6E34569DF

loc_7FF6E34569C9:
mov     r9d, 8000h
jmp     short loc_7FF6E34569DF

loc_7FF6E34569D1:
mov     r9d, 40h ; '@'
jmp     short loc_7FF6E34569DF

loc_7FF6E34569D9:
mov     r9d, 8040h

loc_7FF6E34569DF:
mov     eax, edx
mov     ebx, 100h
mov     r10d, 200h
and     eax, 300h
jz      short loc_7FF6E3456A1B
cmp     eax, ebx
jz      short loc_7FF6E3456A13
cmp     eax, r10d
jz      short loc_7FF6E3456A0B
cmp     eax, 300h
jnz     short loc_7FF6E3456A1B
mov     r8d, 6000h
jmp     short loc_7FF6E3456A1F

loc_7FF6E3456A0B:
mov     r8d, 4000h
jmp     short loc_7FF6E3456A1F

loc_7FF6E3456A13:
mov     r8d, 2000h
jmp     short loc_7FF6E3456A1F

loc_7FF6E3456A1B:
movzx   r8d, si

loc_7FF6E3456A1F:
bt      edx, 0
jnb     short loc_7FF6E3456A2C
mov     ecx, 1000h
jmp     short loc_7FF6E3456A2F

loc_7FF6E3456A2C:
movzx   ecx, si

loc_7FF6E3456A2F:
bt      edx, 1
jb      short loc_7FF6E3456A39
movzx   r11d, si

loc_7FF6E3456A39:
or      cx, r11w
bt      edx, 2
jb      short loc_7FF6E3456A46
movzx   edi, si

loc_7FF6E3456A46:
or      cx, di
mov     rdi, [rsp+8+arg_8]
bt      edx, 3
jb      short loc_7FF6E3456A58

loc_7FF6E3456A54:
movzx   r10d, si

loc_7FF6E3456A58:
or      cx, r10w
bt      edx, 4
jnb     short loc_7FF6E3456A69
mov     eax, 80h
jmp     short loc_7FF6E3456A6C

loc_7FF6E3456A69:
movzx   eax, si

loc_7FF6E3456A6C:
or      cx, ax
bt      edx, 5
jb      short loc_7FF6E3456A78
movzx   ebx, si

loc_7FF6E3456A78:
or      cx, bx
mov     eax, 0FFC0h
or      r8w, cx
or      r8w, r9w
and     r8w, ax
movzx   ecx, r8w
stmxcsr [rsp+8+arg_0]
mov     eax, [rsp+8+arg_0]
mov     rbx, [rsp+8+arg_10]
and     eax, 0FFFF003Fh
or      eax, ecx
mov     [rsp+8+arg_0], eax
ldmxcsr [rsp+8+arg_0]
pop     rsi
retn
sub_7FF6E3456980 endp




sub_7FF6E3456AB0 proc near

arg_0= dword ptr  8

mov     edx, ecx
shr     edx, 18h
and     edx, 3Fh
mov     eax, edx
and     eax, 1
neg     eax
mov     eax, edx
sbb     ecx, ecx
and     eax, 2
and     ecx, 20h
neg     eax
sbb     eax, eax
and     eax, 10h
or      ecx, eax
mov     eax, edx
and     eax, 4
neg     eax
sbb     eax, eax
and     eax, 8
or      ecx, eax
mov     eax, edx
and     eax, 8
neg     eax
sbb     eax, eax
and     eax, 4
or      ecx, eax
mov     eax, 0
bt      edx, 4
setb    al
and     edx, 20h
or      ecx, eax
neg     edx
sbb     eax, eax
and     eax, 2
or      ecx, eax
and     ecx, 3Fh
stmxcsr [rsp+arg_0]
mov     eax, [rsp+arg_0]
and     eax, 0FFFFFFC0h
or      eax, ecx
mov     [rsp+arg_0], eax
ldmxcsr [rsp+arg_0]
retn
sub_7FF6E3456AB0 endp

align 4
; [000000D0 BYTES: COLLAPSED FUNCTION should_round_up(char const * const,char const * const,int,__acrt_has_trailing_digits,__acrt_rounding_mode)]
; [00000110 BYTES: COLLAPSED FUNCTION __acrt_fp_strflt_to_string]


; Attributes: bp-based frame fpd=720h

; __int64 __fastcall sub_7FF6E3456D04(int, int, int, int, char *, rsize_t SizeInBytes)
sub_7FF6E3456D04 proc near

var_808= qword ptr -808h
var_7F8= dword ptr -7F8h
var_7F4= dword ptr -7F4h
var_7F0= dword ptr -7F0h
var_7EC= dword ptr -7ECh
var_7E8= qword ptr -7E8h
var_7E0= dword ptr -7E0h
var_7DC= dword ptr -7DCh
var_7D8= dword ptr -7D8h
var_7D0= dword ptr -7D0h
var_7CC= dword ptr -7CCh
var_7C8= qword ptr -7C8h
var_7C0= dword ptr -7C0h
Env= fenv_t ptr -7B8h
var_7B0= qword ptr -7B0h
var_7A0= qword ptr -7A0h
var_798= qword ptr -798h
var_790= dword ptr -790h
Destination= dword ptr -78Ch
var_788= dword ptr -788h
var_5C0= dword ptr -5C0h
var_5BC= dword ptr -5BCh
var_3F0= dword ptr -3F0h
Source= dword ptr -3ECh
var_3E8= dword ptr -3E8h
var_220= dword ptr -220h
Src= dword ptr -21Ch
var_50= qword ptr -50h
var_48= xmmword ptr -48h
arg_20= qword ptr  30h
SizeInBytes= qword ptr  38h

; __unwind { // __GSHandlerCheck
mov     rax, rsp
push    rbp
push    rbx
push    rsi
push    rdi
push    r12
push    r14
push    r15
lea     rbp, [rax-728h]
sub     rsp, 7F0h
movaps  xmmword ptr [rax-48h], xmm6
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+720h+var_50], rax
mov     r14, [rbp+720h+arg_20]
movq    xmm6, rcx
lea     rcx, [rsp+820h+Env] ; Env
mov     [rbp+720h+var_7A0], r14
mov     r12, r9
mov     [rbp+720h+var_798], r9
mov     [rsp+4Ch], r8d
mov     esi, edx
call    fegetenv
mov     eax, [rsp+820h+Env._Fe_ctl]
mov     r15d, 1
and     eax, 1Fh
cmp     al, 1Fh
jnz     short loc_7FF6E3456D74
mov     byte ptr [rsp+820h+var_7B0], 0
jmp     short loc_7FF6E3456D83

loc_7FF6E3456D74:
lea     rcx, [rsp+820h+Env]
call    sub_7FF6E34595C0
mov     byte ptr [rsp+820h+var_7B0], r15b

loc_7FF6E3456D83:
mov     ebx, 20h ; ' '
mov     [r12+8], r14
movq    rdi, xmm6
mov     eax, ebx
test    rdi, rdi
lea     ecx, [rbx+0Dh]
cmovs   eax, ecx
and     [rsp+820h+var_7D0], 0
xor     r8d, r8d
mov     [r12], eax
xor     edx, edx
lea     rcx, [rsp+820h+var_7D0]
call    sub_7FF6E34594C0
mov     rax, rdi
mov     edx, 7FFh
shr     rax, 34h
mov     rcx, 0FFFFFFFFFFFFFh
and     rax, rdx
jnz     short loc_7FF6E3456DF2
test    rcx, rdi
jz      short loc_7FF6E3456DE3
test    [rsp+820h+var_7D0], 1000000h
jz      loc_7FF6E3456EA6

loc_7FF6E3456DE3:
and     dword ptr [r12+4], 0
lea     r8, unk_7FF6E34635BC
jmp     short loc_7FF6E3456E52

loc_7FF6E3456DF2:
cmp     rax, rdx
jnz     loc_7FF6E3456EA6
mov     rax, rdi
and     rax, rcx
jnz     short loc_7FF6E3456E08
mov     eax, r15d
jmp     short loc_7FF6E3456E32

loc_7FF6E3456E08:
test    rdi, rdi
jns     short loc_7FF6E3456E23
mov     rcx, 8000000000000h
cmp     rax, rcx
jnz     short loc_7FF6E3456E23
mov     eax, 4
jmp     short loc_7FF6E3456E32

loc_7FF6E3456E23:
mov     rax, rdi
shr     rax, 33h
not     eax
and     eax, r15d
or      eax, 2

loc_7FF6E3456E32:
mov     [r12+4], r15d
sub     eax, r15d
jz      short loc_7FF6E3456E80
sub     eax, r15d
jz      short loc_7FF6E3456E77
sub     eax, r15d
jz      short loc_7FF6E3456E6E
cmp     eax, r15d
jnz     short loc_7FF6E3456EA6
lea     r8, a1Ind       ; "1#IND"

loc_7FF6E3456E52:       ; SizeInBytes
mov     rdx, [rbp+720h+SizeInBytes]
mov     rcx, r14        ; Destination
call    strcpy_s
test    eax, eax
jnz     loc_7FF6E3457F6D
jmp     loc_7FF6E3457F30

loc_7FF6E3456E6E:
lea     r8, a1Snan      ; "1#SNAN"
jmp     short loc_7FF6E3456E52

loc_7FF6E3456E77:
lea     r8, a1Qnan      ; "1#QNAN"
jmp     short loc_7FF6E3456E52

loc_7FF6E3456E80:       ; SizeInBytes
mov     rdx, [rbp+720h+SizeInBytes]
lea     r8, a1Inf       ; "1#INF"
mov     rcx, r14        ; Destination
call    strcpy_s
test    eax, eax
jnz     loc_7FF6E3457F6D
xor     r15d, r15d
jmp     loc_7FF6E3457F30

loc_7FF6E3456EA6:
and     dword ptr [rsp+820h+var_7E8+4], 0
lea     rcx, [rsp+820h+var_7C8]
mov     rax, 7FFFFFFFFFFFFFFFh
mov     r14d, 8001Fh
xor     r8d, r8d
mov     dword ptr [rsp+820h+var_7C8+4], r14d
xor     edx, edx
and     rdi, rax
call    sub_7FF6E34594C0
mov     r8d, dword ptr [rsp+820h+var_7C8+4]
lea     rcx, [rsp+820h+var_7E8+4]
mov     edx, r14d
call    sub_7FF6E34594C0
movq    xmm0, rdi       ; X
inc     esi
movq    rdx, xmm0
mov     dword ptr [rsp+820h+var_7E8+4], esi
mov     r8, rdx
mov     r9d, 7FFh
shr     r8, 34h
mov     esi, 2
mov     rcx, r8
and     rcx, r9
mov     rax, rcx
neg     rax
mov     rax, 10000000000000h
sbb     rdi, rdi
and     rdi, rax
mov     rax, 0FFFFFFFFFFFFFh
and     rdx, rax
add     rdi, rdx
neg     rcx
sbb     eax, eax
and     r8d, r9d
lea     r12d, [rsi+rax]
add     r12d, r8d
mov     [rsp+820h+var_7F0], r12d
call    log10
call    sub_7FF6E3459620
cvttsd2si ecx, xmm0
mov     [rbp+720h+Destination], edi
lea     eax, [rcx-7FFFFFFFh]
and     eax, 0FFFFFFFEh
neg     eax
sbb     eax, eax
shr     rdi, 20h
and     eax, ecx
mov     [rbp+720h+var_788], edi
mov     [rsp+820h+var_7EC], eax
mov     eax, edi
neg     eax
sbb     edx, edx
neg     edx
add     edx, r15d
mov     [rbp+720h+var_790], edx
cmp     r12d, 434h
jb      loc_7FF6E3457215
xor     eax, eax
mov     [rbp+720h+var_3E8], 100000h
mov     [rbp+720h+Source], eax
mov     [rbp+720h+var_3F0], esi
test    edi, edi
jz      loc_7FF6E34570FD
xor     r8d, r8d

loc_7FF6E3456FAF:
mov     eax, [rbp+r8*4+720h+Destination]
cmp     [rbp+r8*4+720h+Source], eax
jnz     loc_7FF6E34570FD
add     r8d, r15d
cmp     r8d, esi
jnz     short loc_7FF6E3456FAF
and     [rsp+820h+var_7E0], 0
lea     r11d, [r12-432h]
mov     r8d, r11d
mov     esi, ebx
and     r11d, 1Fh
shr     r8d, 5
sub     esi, r11d
mov     rdi, r15
mov     ecx, esi
shl     rdi, cl
sub     edi, r15d
mov     eax, edi
not     eax
mov     [rsp+820h+var_7F0], eax
lea     eax, [rdx-1]
bsr     ecx, [rbp+rax*4+720h+Destination]
jz      short loc_7FF6E3457008
inc     ecx
jmp     short loc_7FF6E345700A

loc_7FF6E3457008:
xor     ecx, ecx

loc_7FF6E345700A:
lea     eax, [rdx+r8]
mov     r12d, 1CCh
cmp     eax, 73h ; 's'
jbe     short loc_7FF6E3457043

loc_7FF6E3457019:
and     [rbp+720h+var_3F0], 0
lea     r8, [rbp+720h+Source] ; Source
and     [rbp+720h+var_790], 0
lea     rcx, [rbp+720h+Destination] ; Destination
xor     r9d, r9d        ; SourceSize
mov     rdx, r12        ; DestinationSize
call    memcpy_s
mov     r14d, [rbp+720h+var_790]
jmp     loc_7FF6E34570D3

loc_7FF6E3457043:
xor     r14d, r14d
sub     ebx, ecx
cmp     r11d, ebx
setnbe  r14b
add     r14d, edx
add     r14d, r8d
cmp     r14d, 73h ; 's'
ja      short loc_7FF6E3457019
lea     ebx, [r8-1]
lea     r9d, [r14-1]
cmp     r9d, ebx
jz      short loc_7FF6E34570BB
mov     r15d, [rsp+820h+var_7F0]

loc_7FF6E345706D:
mov     eax, r9d
sub     eax, r8d
lea     ecx, [rax-1]
cmp     eax, edx
jnb     short loc_7FF6E3457081
mov     r10d, [rbp+rax*4+720h+Destination]
jmp     short loc_7FF6E3457084

loc_7FF6E3457081:
xor     r10d, r10d

loc_7FF6E3457084:
cmp     ecx, edx
jnb     short loc_7FF6E345708E
mov     edx, [rbp+rcx*4+720h+Destination]
jmp     short loc_7FF6E3457090

loc_7FF6E345708E:
xor     edx, edx

loc_7FF6E3457090:
and     edx, r15d
mov     ecx, esi
shr     edx, cl
and     r10d, edi
mov     ecx, r11d
shl     r10d, cl
or      edx, r10d
mov     [rbp+r9*4+720h+Destination], edx
dec     r9d
cmp     r9d, ebx
jz      short loc_7FF6E34570B5
mov     edx, [rbp+720h+var_790]
jmp     short loc_7FF6E345706D

loc_7FF6E34570B5:
mov     r15d, 1

loc_7FF6E34570BB:
xor     ecx, ecx
test    r8d, r8d
jz      short loc_7FF6E34570CF

loc_7FF6E34570C2:
and     [rbp+rcx*4+720h+Destination], 0
add     ecx, r15d
cmp     ecx, r8d
jnz     short loc_7FF6E34570C2

loc_7FF6E34570CF:
mov     [rbp+720h+var_790], r14d

loc_7FF6E34570D3:
mov     [rbp+720h+Source], 4

loc_7FF6E34570DD:
and     [rbp+720h+var_3E8], 0
mov     r9d, 4
mov     [rbp+720h+var_3F0], r15d
mov     [rbp+720h+var_5C0], r15d
jmp     loc_7FF6E34573CE

loc_7FF6E34570FD:
and     [rsp+820h+var_7E0], 0
lea     r11d, [r12-433h]
mov     r8d, r11d
mov     esi, ebx
and     r11d, 1Fh
shr     r8d, 5
sub     esi, r11d
mov     rdi, r15
mov     ecx, esi
shl     rdi, cl
sub     edi, r15d
mov     eax, edi
not     eax
mov     [rsp+820h+var_7F0], eax
lea     eax, [rdx-1]
bsr     ecx, [rbp+rax*4+720h+Destination]
jz      short loc_7FF6E345713B
inc     ecx
jmp     short loc_7FF6E345713D

loc_7FF6E345713B:
xor     ecx, ecx

loc_7FF6E345713D:
lea     eax, [rdx+r8]
mov     r12d, 1CCh
cmp     eax, 73h ; 's'
jbe     short loc_7FF6E3457176

loc_7FF6E345714C:
and     [rbp+720h+var_3F0], 0
lea     r8, [rbp+720h+Source] ; Source
and     [rbp+720h+var_790], 0
lea     rcx, [rbp+720h+Destination] ; Destination
xor     r9d, r9d        ; SourceSize
mov     rdx, r12        ; DestinationSize
call    memcpy_s
mov     r14d, [rbp+720h+var_790]
jmp     loc_7FF6E3457206

loc_7FF6E3457176:
xor     r14d, r14d
sub     ebx, ecx
cmp     r11d, ebx
setnbe  r14b
add     r14d, edx
add     r14d, r8d
cmp     r14d, 73h ; 's'
ja      short loc_7FF6E345714C
lea     ebx, [r8-1]
lea     r10d, [r14-1]
cmp     r10d, ebx
jz      short loc_7FF6E34571EE
mov     r15d, [rsp+820h+var_7F0]

loc_7FF6E34571A0:
mov     eax, r10d
sub     eax, r8d
lea     ecx, [rax-1]
cmp     eax, edx
jnb     short loc_7FF6E34571B4
mov     r9d, [rbp+rax*4+720h+Destination]
jmp     short loc_7FF6E34571B7

loc_7FF6E34571B4:
xor     r9d, r9d

loc_7FF6E34571B7:
cmp     ecx, edx
jnb     short loc_7FF6E34571C1
mov     edx, [rbp+rcx*4+720h+Destination]
jmp     short loc_7FF6E34571C3

loc_7FF6E34571C1:
xor     edx, edx

loc_7FF6E34571C3:
and     edx, r15d
mov     ecx, esi
shr     edx, cl
and     r9d, edi
mov     ecx, r11d
shl     r9d, cl
or      edx, r9d
mov     [rbp+r10*4+720h+Destination], edx
dec     r10d
cmp     r10d, ebx
jz      short loc_7FF6E34571E8
mov     edx, [rbp+720h+var_790]
jmp     short loc_7FF6E34571A0

loc_7FF6E34571E8:
mov     r15d, 1

loc_7FF6E34571EE:
xor     ecx, ecx
test    r8d, r8d
jz      short loc_7FF6E3457202

loc_7FF6E34571F5:
and     [rbp+rcx*4+720h+Destination], 0
add     ecx, r15d
cmp     ecx, r8d
jnz     short loc_7FF6E34571F5

loc_7FF6E3457202:
mov     [rbp+720h+var_790], r14d

loc_7FF6E3457206:
mov     [rbp+720h+Source], 2
jmp     loc_7FF6E34570DD

loc_7FF6E3457215:
cmp     r12d, 36h ; '6'
jz      loc_7FF6E345733C
xor     eax, eax
mov     [rbp+720h+var_3E8], 100000h
mov     [rbp+720h+Source], eax
mov     [rbp+720h+var_3F0], esi
test    edi, edi
jz      loc_7FF6E345733C
xor     r8d, r8d

loc_7FF6E3457242:
mov     eax, [rbp+r8*4+720h+Destination]
cmp     [rbp+r8*4+720h+Source], eax
jnz     loc_7FF6E345733C
add     r8d, r15d
cmp     r8d, esi
jnz     short loc_7FF6E3457242
and     [rsp+820h+var_7E0], 0
bsr     eax, edi
jz      short loc_7FF6E345726B
inc     eax
jmp     short loc_7FF6E345726D

loc_7FF6E345726B:
xor     eax, eax

loc_7FF6E345726D:
xor     r14d, r14d
sub     ebx, eax
cmp     ebx, esi
mov     r12d, 1CCh
setb    r14b
or      r11d, 0FFFFFFFFh
add     r14d, edx
cmp     r14d, 73h ; 's'
jbe     short loc_7FF6E34572B2
and     [rbp+720h+var_3F0], 0
lea     r8, [rbp+720h+Source] ; Source
and     [rbp+720h+var_790], 0
lea     rcx, [rbp+720h+Destination] ; Destination
xor     r9d, r9d        ; SourceSize
mov     edx, r12d       ; DestinationSize
call    memcpy_s
mov     r14d, [rbp+720h+var_790]
jmp     short loc_7FF6E3457301

loc_7FF6E34572B2:
lea     eax, [r14-1]
cmp     eax, r11d
jz      short loc_7FF6E34572FD

loc_7FF6E34572BB:
mov     r10d, eax
lea     r8d, [rax-1]
cmp     eax, edx
jnb     short loc_7FF6E34572CD
mov     r9d, [rbp+r10*4+720h+Destination]
jmp     short loc_7FF6E34572D0

loc_7FF6E34572CD:
xor     r9d, r9d

loc_7FF6E34572D0:
cmp     r8d, edx
jnb     short loc_7FF6E34572DC
mov     ecx, [rbp+r8*4+720h+Destination]
jmp     short loc_7FF6E34572DE

loc_7FF6E34572DC:
xor     ecx, ecx

loc_7FF6E34572DE:
shr     ecx, 1Eh
lea     eax, ds:0[r9*4]
or      ecx, eax
mov     eax, r8d
mov     [rbp+r10*4+720h+Destination], ecx
cmp     r8d, r11d
jz      short loc_7FF6E34572FD
mov     edx, [rbp+720h+var_790]
jmp     short loc_7FF6E34572BB

loc_7FF6E34572FD:
mov     [rbp+720h+var_790], r14d

loc_7FF6E3457301:
mov     esi, 436h
lea     rcx, [rbp+720h+Source] ; void *
sub     esi, [rsp+820h+var_7F0]
xor     edx, edx        ; Val
mov     edi, esi
shr     edi, 5
lea     rbx, ds:0[rdi*4]
mov     r8, rbx         ; Size
call    memset
and     esi, 1Fh
mov     eax, r15d
mov     cl, sil
shl     eax, cl
mov     [rbp+rbx+720h+Source], eax
jmp     short loc_7FF6E34573B8

loc_7FF6E345733C:
neg     edi
sbb     rax, rax
and     [rsp+820h+var_7E0], 0
and     eax, 4
bsr     eax, [rbp+rax+720h+Destination]
jz      short loc_7FF6E3457354
inc     eax
jmp     short loc_7FF6E3457356

loc_7FF6E3457354:
xor     eax, eax

loc_7FF6E3457356:
xor     r14d, r14d
sub     ebx, eax
cmp     ebx, r15d
setb    r14b
or      r11d, 0FFFFFFFFh
add     r14d, edx
cmp     r14d, 73h ; 's'
jbe     loc_7FF6E34574B8
xor     r14d, r14d

loc_7FF6E3457376:
mov     esi, 435h
mov     [rbp+720h+var_790], r14d
sub     esi, r12d
lea     rcx, [rbp+720h+Source] ; void *
mov     edi, esi
xor     edx, edx        ; Val
shr     edi, 5
lea     rbx, ds:0[rdi*4]
mov     r8, rbx         ; Size
call    memset
and     esi, 1Fh
mov     eax, r15d
mov     cl, sil
mov     r12d, 1CCh
shl     eax, cl
mov     [rbp+rbx+720h+Source], eax

loc_7FF6E34573B8:
lea     eax, [rdi+1]
mov     r9d, eax
shl     r9, 2           ; SourceSize
mov     [rbp+720h+var_5C0], eax
mov     [rbp+720h+var_3F0], eax

loc_7FF6E34573CE:       ; Source
lea     r8, [rbp+720h+Source]
mov     rdx, r12        ; DestinationSize
lea     rcx, [rbp+720h+var_5BC] ; Destination
call    memcpy_s
mov     ecx, [rsp+820h+var_7EC]
lea     r8, cs:7FF6E3430000h
mov     eax, 0CCCCCCCDh
test    ecx, ecx
js      loc_7FF6E34578DD
mov     r12d, [rbp+720h+var_5C0]
mul     ecx
mov     eax, edx
shr     eax, 3
mov     [rsp+820h+var_7F0], eax
test    eax, eax
jz      loc_7FF6E3457838
mov     edx, 26h ; '&'

loc_7FF6E345741B:
cmp     eax, edx
mov     ecx, eax
cmova   ecx, edx
xor     edx, edx        ; Val
mov     [rsp+820h+var_7D8], ecx
lea     eax, [rcx-1]
movzx   ecx, ds:rva byte_7FF6E3460E92[r8+rax*4]
movzx   esi, ds:rva byte_7FF6E3460E93[r8+rax*4]
mov     edi, eax
lea     rbx, ds:0[rcx*4]
lea     eax, [rsi+rcx]
mov     r8, rbx         ; Size
lea     rcx, [rbp+720h+Source] ; void *
mov     [rbp+720h+var_3F0], eax
call    memset
lea     rcx, cs:7FF6E3430000h
shl     rsi, 2
movzx   eax, ds:rva word_7FF6E3460E90[rcx+rdi*4]
lea     rdx, rva unk_7FF6E3460580[rcx]
lea     rcx, [rbp+720h+Source]
mov     r8, rsi         ; Size
add     rcx, rbx        ; void *
lea     rdx, [rdx+rax*4] ; Src
call    memcpy
mov     r9d, [rbp+720h+var_3F0]
cmp     r9d, r15d
ja      loc_7FF6E345758B
mov     eax, [rbp+720h+Source]
test    eax, eax
jnz     short loc_7FF6E3457507

loc_7FF6E34574A9:
xor     r12d, r12d

loc_7FF6E34574AC:
mov     [rbp+720h+var_5C0], r12d
jmp     loc_7FF6E3457804

loc_7FF6E34574B8:
lea     eax, [r14-1]
cmp     eax, r11d
jz      loc_7FF6E3457376

loc_7FF6E34574C5:
mov     r10d, eax
lea     r8d, [rax-1]
cmp     eax, edx
jnb     short loc_7FF6E34574D7
mov     r9d, [rbp+r10*4+720h+Destination]
jmp     short loc_7FF6E34574DA

loc_7FF6E34574D7:
xor     r9d, r9d

loc_7FF6E34574DA:
cmp     r8d, edx
jnb     short loc_7FF6E34574E6
mov     ecx, [rbp+r8*4+720h+Destination]
jmp     short loc_7FF6E34574E8

loc_7FF6E34574E6:
xor     ecx, ecx

loc_7FF6E34574E8:
shr     ecx, 1Fh
lea     eax, [r9+r9]
or      ecx, eax
mov     eax, r8d
mov     [rbp+r10*4+720h+Destination], ecx
cmp     r8d, r11d
jz      loc_7FF6E3457376
mov     edx, [rbp+720h+var_790]
jmp     short loc_7FF6E34574C5

loc_7FF6E3457507:
cmp     eax, r15d
jz      loc_7FF6E3457804
test    r12d, r12d
jz      loc_7FF6E3457804
xor     r8d, r8d
mov     r10, rax
xor     r9d, r9d

loc_7FF6E3457522:
mov     ecx, [rbp+r9*4+720h+var_5BC]
mov     eax, r8d
imul    rcx, r10
add     rcx, rax
mov     r8, rcx
mov     [rbp+r9*4+720h+var_5BC], ecx
shr     r8, 20h
add     r9d, r15d
cmp     r9d, r12d
jnz     short loc_7FF6E3457522

loc_7FF6E345754B:
test    r8d, r8d
jz      loc_7FF6E34577FD
cmp     [rbp+720h+var_5C0], 73h ; 's'
jnb     short loc_7FF6E345757A
mov     eax, [rbp+720h+var_5C0]
mov     [rbp+rax*4+720h+var_5BC], r8d
mov     r12d, [rbp+720h+var_5C0]
add     r12d, r15d
jmp     loc_7FF6E34574AC

loc_7FF6E345757A:
xor     r12d, r12d
mov     [rbp+720h+var_5C0], r12d
xor     al, al
jmp     loc_7FF6E3457807

loc_7FF6E345758B:
cmp     r12d, r15d
ja      loc_7FF6E3457641
mov     ebx, [rbp+720h+var_5BC]
mov     r8, r9
shl     r8, 2           ; Size
mov     r12d, r9d
mov     [rbp+720h+var_5C0], r9d
test    r8, r8
jz      short loc_7FF6E34575F0
mov     eax, 1CCh
lea     rcx, [rbp+720h+var_5BC] ; void *
cmp     r8, rax
ja      short loc_7FF6E34575CF
lea     rdx, [rbp+720h+Source] ; Src
call    memcpy
jmp     short loc_7FF6E34575E9

loc_7FF6E34575CF:       ; Size
mov     r8, rax
xor     edx, edx        ; Val
call    memset
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
call    _invalid_parameter_noinfo

loc_7FF6E34575E9:
mov     r12d, [rbp+720h+var_5C0]

loc_7FF6E34575F0:
test    ebx, ebx
jz      loc_7FF6E34574A9
cmp     ebx, r15d
jz      loc_7FF6E3457804
test    r12d, r12d
jz      loc_7FF6E3457804
xor     r8d, r8d
mov     r10, rbx
xor     r9d, r9d

loc_7FF6E3457613:
mov     ecx, [rbp+r9*4+720h+var_5BC]
mov     eax, r8d
imul    rcx, r10
add     rcx, rax
mov     r8, rcx
mov     [rbp+r9*4+720h+var_5BC], ecx
shr     r8, 20h
add     r9d, r15d
cmp     r9d, r12d
jnz     short loc_7FF6E3457613
jmp     loc_7FF6E345754B

loc_7FF6E3457641:
cmp     r9d, r12d
lea     rdx, [rbp+720h+var_5BC]
mov     ebx, r12d
lea     rcx, [rbp+720h+Source]
cmovnb  rcx, rdx
lea     r8, [rbp+720h+Source]
cmovb   ebx, r9d
mov     qword ptr [rsp+820h+var_7C0], rcx
setb    al
mov     dword ptr [rsp+820h+var_7E8], ebx
lea     rdx, [rbp+720h+var_5BC]
cmovnb  rdx, r8
test    al, al
mov     qword ptr [rsp+820h+var_7E0], rdx
cmovnz  r9d, r12d
xor     r12d, r12d
xor     r10d, r10d
mov     [rbp+720h+var_220], r12d
test    ebx, ebx
jz      loc_7FF6E34577B1

loc_7FF6E345769B:
mov     esi, [rcx+r10*4]
test    esi, esi
jnz     short loc_7FF6E34576C4
cmp     r10d, r12d
jnz     loc_7FF6E34577A5
and     [rbp+r10*4+720h+Src], esi
lea     r12d, [r10+1]
mov     [rbp+720h+var_220], r12d
jmp     loc_7FF6E34577A5

loc_7FF6E34576C4:
xor     r11d, r11d
mov     r8d, r10d
test    r9d, r9d
jz      loc_7FF6E3457791
mov     edi, r10d
neg     edi

loc_7FF6E34576D8:
cmp     r8d, 73h ; 's'
jz      short loc_7FF6E345773B
mov     ebx, r8d
cmp     r8d, r12d
jnz     short loc_7FF6E34576F8
and     [rbp+rbx*4+720h+Src], 0
lea     eax, [r8+1]
mov     [rbp+720h+var_220], eax

loc_7FF6E34576F8:
lea     eax, [r8+rdi]
add     r8d, r15d
mov     edx, [rdx+rax*4]
mov     eax, [rbp+rbx*4+720h+Src]
imul    rdx, rsi
add     rdx, rax
mov     eax, r11d
add     rdx, rax
lea     eax, [r8+rdi]
mov     r11, rdx
mov     [rbp+rbx*4+720h+Src], edx
mov     r12d, [rbp+720h+var_220]
shr     r11, 20h
cmp     eax, r9d
jz      short loc_7FF6E345773B
mov     rdx, qword ptr [rsp+820h+var_7E0]
jmp     short loc_7FF6E34576D8

loc_7FF6E345773B:
test    r11d, r11d
jz      short loc_7FF6E345778D

loc_7FF6E3457740:
cmp     r8d, 73h ; 's'
jz      loc_7FF6E34578CE
mov     edx, r8d
cmp     r8d, r12d
jnz     short loc_7FF6E3457764
and     [rbp+rdx*4+720h+Src], 0
lea     eax, [r8+1]
mov     [rbp+720h+var_220], eax

loc_7FF6E3457764:
mov     ecx, [rbp+rdx*4+720h+Src]
add     r8d, r15d
mov     eax, r11d
add     rcx, rax
mov     [rbp+rdx*4+720h+Src], ecx
mov     r12d, [rbp+720h+var_220]
shr     rcx, 20h
mov     r11d, ecx
test    ecx, ecx
jnz     short loc_7FF6E3457740

loc_7FF6E345778D:
mov     ebx, dword ptr [rsp+820h+var_7E8]

loc_7FF6E3457791:
cmp     r8d, 73h ; 's'
jz      loc_7FF6E34578CE
mov     rcx, qword ptr [rsp+820h+var_7C0]
mov     rdx, qword ptr [rsp+820h+var_7E0]

loc_7FF6E34577A5:
add     r10d, r15d
cmp     r10d, ebx
jnz     loc_7FF6E345769B

loc_7FF6E34577B1:
mov     r8d, r12d
shl     r8, 2           ; Size
mov     [rbp+720h+var_5C0], r12d
test    r8, r8
jz      short loc_7FF6E3457804
mov     eax, 1CCh
lea     rcx, [rbp+720h+var_5BC] ; void *
cmp     r8, rax
ja      short loc_7FF6E34577E3
lea     rdx, [rbp+720h+Src] ; Src
call    memcpy
jmp     short loc_7FF6E34577FD

loc_7FF6E34577E3:       ; Size
mov     r8, rax
xor     edx, edx        ; Val
call    memset
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
call    _invalid_parameter_noinfo

loc_7FF6E34577FD:
mov     r12d, [rbp+720h+var_5C0]

loc_7FF6E3457804:
mov     al, r15b

loc_7FF6E3457807:
test    al, al
jz      loc_7FF6E34578CE
mov     eax, [rsp+820h+var_7F0]
lea     r8, cs:7FF6E3430000h
sub     eax, [rsp+820h+var_7D8]
mov     edx, 26h ; '&'
mov     [rsp+820h+var_7F0], eax
jnz     loc_7FF6E345741B
mov     ecx, [rsp+820h+var_7EC]
lea     r8, cs:7FF6E3430000h

loc_7FF6E3457838:
mov     eax, 0CCCCCCCDh
mul     ecx
shr     edx, 3
lea     eax, [rdx+rdx*4]
add     eax, eax
sub     ecx, eax
jz      loc_7FF6E3457D04
lea     eax, [rcx-1]
mov     eax, ds:rva dword_7FF6E3460F28[r8+rax*4]
test    eax, eax
jz      short loc_7FF6E34578CE
cmp     eax, r15d
jz      loc_7FF6E3457D04
test    r12d, r12d
jz      loc_7FF6E3457D04
xor     r8d, r8d
mov     r10d, eax
xor     r9d, r9d

loc_7FF6E3457879:
mov     ecx, [rbp+r9*4+720h+var_5BC]
mov     eax, r8d
imul    rcx, r10
add     rcx, rax
mov     r8, rcx
mov     [rbp+r9*4+720h+var_5BC], ecx
shr     r8, 20h
add     r9d, r15d
cmp     r9d, r12d
jnz     short loc_7FF6E3457879
test    r8d, r8d
jz      loc_7FF6E3457CFD
cmp     [rbp+720h+var_5C0], 73h ; 's'
jnb     short loc_7FF6E34578CE
mov     eax, [rbp+720h+var_5C0]
mov     [rbp+rax*4+720h+var_5BC], r8d
mov     r12d, [rbp+720h+var_5C0]
add     r12d, r15d
jmp     short loc_7FF6E34578D1

loc_7FF6E34578CE:
xor     r12d, r12d

loc_7FF6E34578D1:
mov     [rbp+720h+var_5C0], r12d
jmp     loc_7FF6E3457D04

loc_7FF6E34578DD:
neg     ecx
mul     ecx
mov     [rsp+820h+var_7E0], ecx
mov     eax, edx
shr     eax, 3
mov     dword ptr [rsp+820h+var_7E8], eax
test    eax, eax
jz      loc_7FF6E3457C7C
mov     edx, 26h ; '&'

loc_7FF6E34578FB:
cmp     eax, edx
mov     ecx, eax
cmova   ecx, edx
xor     edx, edx        ; Val
mov     [rsp+820h+var_7D8], ecx
lea     eax, [rcx-1]
movzx   ecx, ds:rva byte_7FF6E3460E92[r8+rax*4]
movzx   esi, ds:rva byte_7FF6E3460E93[r8+rax*4]
mov     edi, eax
lea     rbx, ds:0[rcx*4]
lea     eax, [rsi+rcx]
mov     r8, rbx         ; Size
lea     rcx, [rbp+720h+Source] ; void *
mov     [rbp+720h+var_3F0], eax
call    memset
lea     rcx, cs:7FF6E3430000h
shl     rsi, 2
movzx   eax, ds:rva word_7FF6E3460E90[rcx+rdi*4]
lea     rdx, rva unk_7FF6E3460580[rcx]
lea     rcx, [rbp+720h+Source]
mov     r8, rsi         ; Size
add     rcx, rbx        ; void *
lea     rdx, [rdx+rax*4] ; Src
call    memcpy
mov     r9d, [rbp+720h+var_3F0]
cmp     r9d, r15d
ja      loc_7FF6E3457A01
mov     eax, [rbp+720h+Source]
test    eax, eax
jnz     short loc_7FF6E3457995

loc_7FF6E3457989:
xor     r14d, r14d

loc_7FF6E345798C:
mov     [rbp+720h+var_790], r14d
jmp     loc_7FF6E3457C4F

loc_7FF6E3457995:
cmp     eax, r15d
jz      loc_7FF6E3457C4F
test    r14d, r14d
jz      loc_7FF6E3457C4F
xor     r8d, r8d
mov     r10, rax
xor     r9d, r9d

loc_7FF6E34579B0:
mov     ecx, [rbp+r9*4+720h+Destination]
mov     eax, r8d
imul    rcx, r10
add     rcx, rax
mov     r8, rcx
mov     [rbp+r9*4+720h+Destination], ecx
shr     r8, 20h
add     r9d, r15d
cmp     r9d, r14d
jnz     short loc_7FF6E34579B0

loc_7FF6E34579D3:
test    r8d, r8d
jz      loc_7FF6E3457C4B
cmp     [rbp+720h+var_790], 73h ; 's'
jnb     short loc_7FF6E34579F3
mov     eax, [rbp+720h+var_790]
mov     [rbp+rax*4+720h+Destination], r8d
mov     r14d, [rbp+720h+var_790]
add     r14d, r15d
jmp     short loc_7FF6E345798C

loc_7FF6E34579F3:
xor     r14d, r14d
mov     [rbp+720h+var_790], r14d
xor     al, al
jmp     loc_7FF6E3457C52

loc_7FF6E3457A01:
cmp     r14d, r15d
ja      loc_7FF6E3457AA0
mov     ebx, [rbp+720h+Destination]
mov     r8, r9
shl     r8, 2           ; Size
mov     r14d, r9d
mov     [rbp+720h+var_790], r9d
test    r8, r8
jz      short loc_7FF6E3457A55
lea     rcx, [rbp+720h+Destination] ; void *
cmp     r8, r12
ja      short loc_7FF6E3457A37
lea     rdx, [rbp+720h+Source] ; Src
call    memcpy
jmp     short loc_7FF6E3457A51

loc_7FF6E3457A37:       ; Size
mov     r8, r12
xor     edx, edx        ; Val
call    memset
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
call    _invalid_parameter_noinfo

loc_7FF6E3457A51:
mov     r14d, [rbp+720h+var_790]

loc_7FF6E3457A55:
test    ebx, ebx
jz      loc_7FF6E3457989
cmp     ebx, r15d
jz      loc_7FF6E3457C4F
test    r14d, r14d
jz      loc_7FF6E3457C4F
xor     r8d, r8d
mov     r10, rbx
xor     r9d, r9d

loc_7FF6E3457A78:
mov     ecx, [rbp+r9*4+720h+Destination]
mov     eax, r8d
imul    rcx, r10
add     rcx, rax
mov     r8, rcx
mov     [rbp+r9*4+720h+Destination], ecx
shr     r8, 20h
add     r9d, r15d
cmp     r9d, r14d
jnz     short loc_7FF6E3457A78
jmp     loc_7FF6E34579D3

loc_7FF6E3457AA0:
cmp     r9d, r14d
lea     rdx, [rbp+720h+Destination]
mov     ebx, r14d
lea     rcx, [rbp+720h+Source]
cmovnb  rcx, rdx
lea     r8, [rbp+720h+Source]
cmovb   ebx, r9d
mov     [rsp+78h], rcx
setb    al
mov     [rsp+820h+var_7F0], ebx
lea     rdx, [rbp+720h+Destination]
cmovnb  rdx, r8
test    al, al
mov     qword ptr [rsp+820h+var_7C0], rdx
cmovnz  r9d, r14d
xor     r14d, r14d
xor     r10d, r10d
mov     [rbp+720h+var_220], r14d
test    ebx, ebx
jz      loc_7FF6E3457C0A

loc_7FF6E3457AF4:
mov     esi, [rcx+r10*4]
test    esi, esi
jnz     short loc_7FF6E3457B1D
cmp     r10d, r14d
jnz     loc_7FF6E3457BFE
and     [rbp+r10*4+720h+Src], esi
lea     r14d, [r10+1]
mov     [rbp+720h+var_220], r14d
jmp     loc_7FF6E3457BFE

loc_7FF6E3457B1D:
xor     r11d, r11d
mov     r8d, r10d
test    r9d, r9d
jz      loc_7FF6E3457BEA
mov     edi, r10d
neg     edi

loc_7FF6E3457B31:
cmp     r8d, 73h ; 's'
jz      short loc_7FF6E3457B94
mov     ebx, r8d
cmp     r8d, r14d
jnz     short loc_7FF6E3457B51
and     [rbp+rbx*4+720h+Src], 0
lea     eax, [r8+1]
mov     [rbp+720h+var_220], eax

loc_7FF6E3457B51:
lea     eax, [r8+rdi]
add     r8d, r15d
mov     edx, [rdx+rax*4]
mov     eax, r11d
imul    rdx, rsi
add     rdx, rax
mov     eax, [rbp+rbx*4+720h+Src]
add     rdx, rax
lea     eax, [r8+rdi]
mov     r11, rdx
mov     [rbp+rbx*4+720h+Src], edx
mov     r14d, [rbp+720h+var_220]
shr     r11, 20h
cmp     eax, r9d
jz      short loc_7FF6E3457B94
mov     rdx, qword ptr [rsp+820h+var_7C0]
jmp     short loc_7FF6E3457B31

loc_7FF6E3457B94:
test    r11d, r11d
jz      short loc_7FF6E3457BE6

loc_7FF6E3457B99:
cmp     r8d, 73h ; 's'
jz      loc_7FF6E3457CF6
mov     edx, r8d
cmp     r8d, r14d
jnz     short loc_7FF6E3457BBD
and     [rbp+rdx*4+720h+Src], 0
lea     eax, [r8+1]
mov     [rbp+720h+var_220], eax

loc_7FF6E3457BBD:
mov     ecx, [rbp+rdx*4+720h+Src]
add     r8d, r15d
mov     eax, r11d
add     rcx, rax
mov     [rbp+rdx*4+720h+Src], ecx
mov     r14d, [rbp+720h+var_220]
shr     rcx, 20h
mov     r11d, ecx
test    ecx, ecx
jnz     short loc_7FF6E3457B99

loc_7FF6E3457BE6:
mov     ebx, [rsp+820h+var_7F0]

loc_7FF6E3457BEA:
cmp     r8d, 73h ; 's'
jz      loc_7FF6E3457CF6
mov     rcx, [rsp+78h]
mov     rdx, qword ptr [rsp+820h+var_7C0]

loc_7FF6E3457BFE:
add     r10d, r15d
cmp     r10d, ebx
jnz     loc_7FF6E3457AF4

loc_7FF6E3457C0A:
mov     r8d, r14d
shl     r8, 2           ; Size
mov     [rbp+720h+var_790], r14d
test    r8, r8
jz      short loc_7FF6E3457C4F
lea     rcx, [rbp+720h+Destination] ; void *
cmp     r8, r12
ja      short loc_7FF6E3457C31
lea     rdx, [rbp+720h+Src] ; Src
call    memcpy
jmp     short loc_7FF6E3457C4B

loc_7FF6E3457C31:       ; Size
mov     r8, r12
xor     edx, edx        ; Val
call    memset
call    sub_7FF6E3444754
mov     dword ptr [rax], 22h ; '"'
call    _invalid_parameter_noinfo

loc_7FF6E3457C4B:
mov     r14d, [rbp+720h+var_790]

loc_7FF6E3457C4F:
mov     al, r15b

loc_7FF6E3457C52:
test    al, al
jz      loc_7FF6E3457CF6
mov     eax, dword ptr [rsp+820h+var_7E8]
lea     r8, cs:7FF6E3430000h
sub     eax, [rsp+820h+var_7D8]
mov     edx, 26h ; '&'
mov     dword ptr [rsp+820h+var_7E8], eax
jnz     loc_7FF6E34578FB
mov     ecx, [rsp+820h+var_7E0]

loc_7FF6E3457C7C:
mov     eax, 0CCCCCCCDh
mul     ecx
shr     edx, 3
lea     eax, [rdx+rdx*4]
add     eax, eax
sub     ecx, eax
jz      short loc_7FF6E3457CFD
lea     eax, [rcx-1]
mov     eax, ds:rva dword_7FF6E3460F28[r8+rax*4]
test    eax, eax
jz      short loc_7FF6E3457CF6
cmp     eax, r15d
jz      short loc_7FF6E3457CFD
test    r14d, r14d
jz      short loc_7FF6E3457CFD
xor     r8d, r8d
mov     r10d, eax
xor     r9d, r9d

loc_7FF6E3457CB1:
mov     ecx, [rbp+r9*4+720h+Destination]
mov     eax, r8d
imul    rcx, r10
add     rcx, rax
mov     r8, rcx
mov     [rbp+r9*4+720h+Destination], ecx
shr     r8, 20h
add     r9d, r15d
cmp     r9d, r14d
jnz     short loc_7FF6E3457CB1
test    r8d, r8d
jz      short loc_7FF6E3457CF0
cmp     [rbp+720h+var_790], 73h ; 's'
jnb     short loc_7FF6E3457CF6
mov     eax, [rbp+720h+var_790]
mov     [rbp+rax*4+720h+Destination], r8d
mov     r14d, [rbp+720h+var_790]
add     r14d, r15d
jmp     short loc_7FF6E3457CF9

loc_7FF6E3457CF0:
mov     r14d, [rbp+720h+var_790]
jmp     short loc_7FF6E3457CFD

loc_7FF6E3457CF6:
xor     r14d, r14d

loc_7FF6E3457CF9:
mov     [rbp+720h+var_790], r14d

loc_7FF6E3457CFD:
mov     r12d, [rbp+720h+var_5C0]

loc_7FF6E3457D04:
mov     rsi, [rbp+720h+var_7A0]
mov     rbx, rsi
test    r14d, r14d
jz      short loc_7FF6E3457D54
xor     r8d, r8d
xor     r9d, r9d

loc_7FF6E3457D16:
mov     eax, [rbp+r9*4+720h+Destination]
lea     rcx, [rax+rax*4]
mov     eax, r8d
lea     r8, [rax+rcx*2]
mov     [rbp+r9*4+720h+Destination], r8d
add     r9d, r15d
shr     r8, 20h
cmp     r9d, r14d
jnz     short loc_7FF6E3457D16
test    r8d, r8d
jz      short loc_7FF6E3457D54
cmp     [rbp+720h+var_790], 73h ; 's'
jnb     short loc_7FF6E3457D50
mov     eax, [rbp+720h+var_790]
mov     [rbp+rax*4+720h+Destination], r8d
add     [rbp+720h+var_790], r15d
jmp     short loc_7FF6E3457D54

loc_7FF6E3457D50:
and     [rbp+720h+var_790], 0

loc_7FF6E3457D54:
lea     rdx, [rbp+720h+var_5C0]
lea     rcx, [rbp+720h+var_790]
call    sub_7FF6E34461E0
mov     r10d, [rsp+820h+var_7EC]
mov     r14b, 30h ; '0'
cmp     eax, 0Ah
jnz     short loc_7FF6E3457DDB
add     r10d, r15d
mov     byte ptr [rsi], 31h ; '1'
lea     rbx, [rsi+1]
test    r12d, r12d
jz      short loc_7FF6E3457DED
xor     r8d, r8d
xor     r9d, r9d

loc_7FF6E3457D86:
mov     eax, [rbp+r9*4+720h+var_5BC]
lea     rcx, [rax+rax*4]
mov     eax, r8d
lea     r8, [rax+rcx*2]
mov     [rbp+r9*4+720h+var_5BC], r8d
add     r9d, r15d
shr     r8, 20h
cmp     r9d, r12d
jnz     short loc_7FF6E3457D86
test    r8d, r8d
jz      short loc_7FF6E3457DED
cmp     [rbp+720h+var_5C0], 73h ; 's'
jnb     short loc_7FF6E3457DD2
mov     eax, [rbp+720h+var_5C0]
mov     [rbp+rax*4+720h+var_5BC], r8d
add     [rbp+720h+var_5C0], r15d
jmp     short loc_7FF6E3457DED

loc_7FF6E3457DD2:
and     [rbp+720h+var_5C0], 0
jmp     short loc_7FF6E3457DED

loc_7FF6E3457DDB:
test    eax, eax
jnz     short loc_7FF6E3457DE4
sub     r10d, r15d
jmp     short loc_7FF6E3457DED

loc_7FF6E3457DE4:
add     al, r14b
lea     rbx, [rsi+1]
mov     [rsi], al

loc_7FF6E3457DED:
mov     rax, [rbp+720h+var_798]
mov     [rax+4], r10d
mov     eax, dword ptr [rsp+820h+var_7E8+4]
test    r10d, r10d
js      short loc_7FF6E3457E0F
cmp     eax, 7FFFFFFFh
ja      short loc_7FF6E3457E0F
cmp     dword ptr [rsp+4Ch], 0
jnz     short loc_7FF6E3457E0F
add     eax, r10d

loc_7FF6E3457E0F:
mov     edi, eax
mov     rax, [rbp+720h+SizeInBytes]
dec     rax
cmp     rax, rdi
cmovb   rdi, rax
add     rdi, rsi
xor     sil, sil
cmp     rbx, rdi
jz      loc_7FF6E3457F04
mov     r12d, 9

loc_7FF6E3457E37:
mov     r9d, [rbp+720h+var_790]
test    r9d, r9d
jz      loc_7FF6E3457F08
xor     r8d, r8d
xor     r10d, r10d

loc_7FF6E3457E4A:
mov     eax, [rbp+r10*4+720h+Destination]
imul    rcx, rax, 3B9ACA00h
mov     eax, r8d
add     rcx, rax
mov     r8, rcx
mov     [rbp+r10*4+720h+Destination], ecx
shr     r8, 20h
add     r10d, r15d
cmp     r10d, r9d
jnz     short loc_7FF6E3457E4A
test    r8d, r8d
jz      short loc_7FF6E3457E8D
cmp     [rbp+720h+var_790], 73h ; 's'
jnb     short loc_7FF6E3457E89
mov     eax, [rbp+720h+var_790]
mov     [rbp+rax*4+720h+Destination], r8d
add     [rbp+720h+var_790], r15d
jmp     short loc_7FF6E3457E8D

loc_7FF6E3457E89:
and     [rbp+720h+var_790], 0

loc_7FF6E3457E8D:
lea     rdx, [rbp+720h+var_5C0]
lea     rcx, [rbp+720h+var_790]
call    sub_7FF6E34461E0
mov     r10d, edi
mov     r8, rax
sub     r10d, ebx
mov     r9d, 8

loc_7FF6E3457EAC:
mov     eax, 0CCCCCCCDh
mul     r8d
shr     edx, 3
mov     cl, dl
shl     cl, 2
lea     eax, [rcx+rdx]
add     al, al
sub     r8b, al
lea     ecx, [r14+r8]
mov     r8d, edx
cmp     r10d, r9d
ja      short loc_7FF6E3457EDA
cmp     cl, r14b
jz      short loc_7FF6E3457EE0
mov     sil, r15b
jmp     short loc_7FF6E3457EE0

loc_7FF6E3457EDA:
mov     eax, r9d
mov     [rax+rbx], cl

loc_7FF6E3457EE0:
or      eax, 0FFFFFFFFh
add     r9d, eax
cmp     r9d, eax
jnz     short loc_7FF6E3457EAC
mov     rax, rdi
sub     rax, rbx
cmp     rax, r12
cmovg   rax, r12
add     rbx, rax
cmp     rbx, rdi
jnz     loc_7FF6E3457E37

loc_7FF6E3457F04:
mov     r9d, [rbp+720h+var_790]

loc_7FF6E3457F08:
mov     byte ptr [rbx], 0
test    r9d, r9d
jnz     short loc_7FF6E3457F15
test    sil, sil
jz      short loc_7FF6E3457F18

loc_7FF6E3457F15:
xor     r15d, r15d

loc_7FF6E3457F18:
and     dword ptr [rsp+4Ch], 0
lea     rcx, [rsp+4Ch]
mov     r8d, dword ptr [rsp+820h+var_7C8+4]
mov     edx, dword ptr [rsp+820h+var_7C8]
call    sub_7FF6E34594C0

loc_7FF6E3457F30:
cmp     byte ptr [rsp+820h+var_7B0], 0
jz      short loc_7FF6E3457F41
lea     rcx, [rsp+820h+Env] ; Env
call    fesetenv

loc_7FF6E3457F41:
mov     eax, r15d
mov     rcx, [rbp+720h+var_50]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
movaps  xmm6, [rsp+820h+var_48+8]
add     rsp, 7F0h
pop     r15
pop     r14
pop     r12
pop     rdi
pop     rsi
pop     rbx
pop     rbp
retn

loc_7FF6E3457F6D:
and     qword ptr [rsp+20h], 0
xor     r9d, r9d        ; LineNo
xor     r8d, r8d        ; FileName
xor     edx, edx        ; FunctionName
xor     ecx, ecx        ; Expression
call    _invoke_watson
db 0CCh
; } // starts at 7FF6E3456D04
sub_7FF6E3456D04 endp

algn_7FF6E3457F83:
align 4



sub_7FF6E3457F84 proc near
xor     eax, eax
mov     r10, rcx
test    rcx, rcx
jnz     short loc_7FF6E3457F97

loc_7FF6E3457F8E:
mov     [r8], rax

loc_7FF6E3457F91:
mov     eax, 1
retn

loc_7FF6E3457F97:
test    edx, edx
jnz     short loc_7FF6E3457F9F
mov     [rcx], al
jmp     short loc_7FF6E3457F8E

loc_7FF6E3457F9F:
test    edx, 0FFFFFF80h
jnz     short loc_7FF6E3457FAB
mov     [rcx], dl
jmp     short loc_7FF6E3457F91

loc_7FF6E3457FAB:
test    edx, 0FFFFF800h
jnz     short loc_7FF6E3457FBD
mov     r9d, 1
mov     cl, 0C0h
jmp     short loc_7FF6E3457FF4

loc_7FF6E3457FBD:
test    edx, 0FFFF0000h
jnz     short loc_7FF6E3457FDC
lea     eax, [rdx-0D800h]
cmp     eax, 7FFh
jbe     short loc_7FF6E345801B
mov     r9d, 2
mov     cl, 0E0h
jmp     short loc_7FF6E3457FF4

loc_7FF6E3457FDC:
test    edx, 0FFE00000h
jnz     short loc_7FF6E345801B
cmp     edx, 10FFFFh
ja      short loc_7FF6E345801B
mov     r9d, 3
mov     cl, 0F0h

loc_7FF6E3457FF4:
mov     r11, r9

loc_7FF6E3457FF7:
mov     al, dl
shr     edx, 6
and     al, 3Fh
or      al, 80h
mov     [r11+r10], al
sub     r11, 1
jnz     short loc_7FF6E3457FF7
or      cl, dl
mov     rdx, r8         ; unsigned __int64
mov     [r10], cl
lea     rcx, [r9+1]     ; this
jmp     ?reset_and_return@__crt_mbstring@@YA_K_KPEAU_Mbstatet@@@Z ; __crt_mbstring::reset_and_return(unsigned __int64,_Mbstatet *)

loc_7FF6E345801B:       ; struct _Mbstatet *
mov     rdx, r9
mov     rcx, r8         ; this
jmp     ?return_illegal_sequence@__crt_mbstring@@YA_KPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z ; __crt_mbstring::return_illegal_sequence(_Mbstatet *,__crt_cached_ptd_host &)
sub_7FF6E3457F84 endp

align 8
; [00000008 BYTES: COLLAPSED FUNCTION __crt_mbstring::reset_and_return(unsigned __int64,_Mbstatet *)]
; [00000014 BYTES: COLLAPSED FUNCTION __crt_mbstring::return_illegal_sequence(_Mbstatet *,__crt_cached_ptd_host &)]
; [0000005F BYTES: COLLAPSED FUNCTION _isatty]
algn_7FF6E34580A3:
align 4
; [000000E5 BYTES: COLLAPSED FUNCTION __acrt_DownlevelLCIDToLocaleName]
algn_7FF6E3458189:
align 4



sub_7FF6E345818C proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 20h
mov     rdi, rcx
test    rcx, rcx
jz      short loc_7FF6E34581F7
xor     ebx, ebx
lea     r15, cs:7FF6E3430000h
mov     esi, 0E3h

loc_7FF6E34581BA:
lea     eax, [rsi+rbx]
mov     r8d, 55h ; 'U'
cdq
mov     rcx, rdi
sub     eax, edx
sar     eax, 1
movsxd  rbp, eax
mov     r14, rbp
add     r14, r14
mov     rdx, ds:rva off_7FF6E3465030[r15+r14*8]
call    __ascii_wcsnicmp
test    eax, eax
jz      short loc_7FF6E3458212
lea     ecx, [rbp-1]
cmovns  ecx, esi
mov     esi, ecx
lea     ecx, [rbp+1]
cmovns  ebx, ecx
cmp     ebx, esi
jle     short loc_7FF6E34581BA

loc_7FF6E34581F7:
xor     eax, eax

loc_7FF6E34581F9:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     rdi
retn

loc_7FF6E3458212:
movsxd  rax, ds:rva dword_7FF6E3465038[r15+r14*8]
test    eax, eax
js      short loc_7FF6E34581F7
cmp     rax, 0E4h
jnb     short loc_7FF6E34581F7
add     rax, rax
mov     eax, ds:rva dword_7FF6E34635E0[r15+rax*8]
jmp     short loc_7FF6E34581F9
sub_7FF6E345818C endp

algn_7FF6E3458233:
align 4



; __int64 __usercall sub_7FF6E3458234@<rax>(__crt_mbstring *this@<rcx>, struct _Mbstatet *)
sub_7FF6E3458234 proc near

var_58= qword ptr -58h
var_50= qword ptr -50h
var_48= byte ptr -48h
var_40= qword ptr -40h
arg_10= qword ptr  18h
arg_20= qword ptr  28h

; __unwind { // __GSHandlerCheck
mov     [rsp+arg_10], rbx
push    rbp
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 40h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+78h+var_40], rax
mov     rax, [rsp+78h+arg_20]
mov     rsi, r9
mov     rdi, [rdx]
mov     r15, r8
mov     [rsp+78h+var_58], rax ; struct __crt_cached_ptd_host *
mov     r14, rdx
mov     [rsp+78h+var_50], r9
mov     r12, rcx
test    rcx, rcx
jz      loc_7FF6E345830E
mov     rbx, rcx
mov     rbp, rdi

loc_7FF6E3458287:       ; char *
movzx   edx, word ptr [rdi]
lea     r13, [rsp+78h+var_48]
cmp     r15, 4
mov     r9, rax         ; struct _Mbstatet *
mov     r8, rsi         ; char16_t
cmovnb  r13, rbx
mov     rcx, r13        ; this
call    ?__c16rtomb_utf8@__crt_mbstring@@YA_KPEAD_SPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z ; __crt_mbstring::__c16rtomb_utf8(char *,char16_t,_Mbstatet *,__crt_cached_ptd_host &)
mov     rsi, rax
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E3458305
cmp     r13, rbx
jz      short loc_7FF6E34582C6
cmp     r15, rax
jb      short loc_7FF6E34582FA
mov     r8, rax         ; Size
mov     rdx, r13        ; Src
mov     rcx, rbx        ; void *
call    memcpy

loc_7FF6E34582C6:
test    rsi, rsi
jz      short loc_7FF6E34582DE
lea     rax, [rsi+rbx]
cmp     byte ptr [rax-1], 0
jz      short loc_7FF6E34582F4
add     rdi, 2
mov     rbp, rdi
jmp     short loc_7FF6E34582E2

loc_7FF6E34582DE:
add     rdi, 2

loc_7FF6E34582E2:
mov     rax, [rsp+78h+var_58]
sub     r15, rsi
add     rbx, rsi
mov     rsi, [rsp+78h+var_50]
jmp     short loc_7FF6E3458287

loc_7FF6E34582F4:
xor     ebp, ebp
lea     rbx, [rax-1]

loc_7FF6E34582FA:
sub     rbx, r12
mov     [r14], rbp
mov     rax, rbx
jmp     short loc_7FF6E3458362

loc_7FF6E3458305:
mov     [r14], rbp
or      rax, 0FFFFFFFFFFFFFFFFh
jmp     short loc_7FF6E3458362

loc_7FF6E345830E:       ; char *
movzx   edx, word ptr [rdi]
lea     rcx, [rsp+78h+var_48] ; this
mov     r9, rax         ; struct _Mbstatet *
mov     r8, rsi         ; char16_t
xor     ebx, ebx
call    ?__c16rtomb_utf8@__crt_mbstring@@YA_KPEAD_SPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z ; __crt_mbstring::__c16rtomb_utf8(char *,char16_t,_Mbstatet *,__crt_cached_ptd_host &)
cmp     rax, 0FFFFFFFFFFFFFFFFh
jz      short loc_7FF6E3458362
mov     rbp, [rsp+78h+var_58]

loc_7FF6E345832E:
test    rax, rax
jz      short loc_7FF6E345833A
cmp     byte ptr [rsp+rax+78h+var_50+7], 0
jz      short loc_7FF6E345835C

loc_7FF6E345833A:
add     rdi, 2
lea     rcx, [rsp+78h+var_48] ; this
mov     r9, rbp         ; struct _Mbstatet *
mov     r8, rsi         ; char16_t
add     rbx, rax
movzx   edx, word ptr [rdi] ; char *
call    ?__c16rtomb_utf8@__crt_mbstring@@YA_KPEAD_SPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z ; __crt_mbstring::__c16rtomb_utf8(char *,char16_t,_Mbstatet *,__crt_cached_ptd_host &)
cmp     rax, 0FFFFFFFFFFFFFFFFh
jnz     short loc_7FF6E345832E
jmp     short loc_7FF6E3458362

loc_7FF6E345835C:
dec     rax
add     rax, rbx

loc_7FF6E3458362:
mov     rcx, [rsp+78h+var_40]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
mov     rbx, [rsp+78h+arg_10]
add     rsp, 40h
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbp
retn
; } // starts at 7FF6E3458234
sub_7FF6E3458234 endp

algn_7FF6E3458387:
align 8
; [000000EF BYTES: COLLAPSED FUNCTION strncpy_s]
algn_7FF6E3458477:
align 8



sub_7FF6E3458478 proc near

Buffer= word ptr  8
NumberOfCharsWritten= dword ptr  10h

mov     [rsp+Buffer], cx
sub     rsp, 28h
call    __dcrt_lowio_ensure_console_output_initialized
test    eax, eax
jz      short loc_7FF6E34584AE
and     [rsp+28h+NumberOfCharsWritten], 0
lea     r8, [rsp+28h+NumberOfCharsWritten] ; lpNumberOfCharsWritten
mov     edx, 1          ; nNumberOfCharsToWrite
lea     rcx, [rsp+28h+Buffer] ; lpBuffer
call    unknown_libname_88 ; Microsoft VisualC 64bit universal runtime
test    eax, eax
jz      short loc_7FF6E34584AE
movzx   eax, [rsp+28h+Buffer]
jmp     short loc_7FF6E34584B3

loc_7FF6E34584AE:
mov     eax, 0FFFFh

loc_7FF6E34584B3:
add     rsp, 28h
retn
sub_7FF6E3458478 endp

; [00000007 BYTES: COLLAPSED FUNCTION GetStringTypeW]
align 20h


; Attributes: bp-based frame

sub_7FF6E34584C0 proc near

var_30= qword ptr -30h
var_28= dword ptr -28h
var_20= qword ptr -20h
var_18= qword ptr -18h
var_8= byte ptr -8
arg_0= word ptr  10h
arg_8= qword ptr  18h
arg_10= word ptr  20h

mov     [rsp-8+arg_8], rbx
mov     [rsp-8+arg_0], cx
push    rbp
mov     rbp, rsp
sub     rsp, 50h
mov     eax, 0FFFFh
cmp     cx, ax
jz      loc_7FF6E34585AF
lea     rcx, [rbp+var_20] ; this
call    ??0_LocaleUpdate@@QEAA@QEAU__crt_locale_pointers@@@Z ; _LocaleUpdate::_LocaleUpdate(__crt_locale_pointers * const)
mov     r10, [rbp+var_18]
xor     ebx, ebx
mov     r11d, 100h
cmp     dword ptr [r10+0Ch], 0FDE9h
jnz     short loc_7FF6E3458528
movzx   ecx, [rbp+arg_0]
lea     eax, [r11-80h]
cmp     cx, ax
jnb     short loc_7FF6E3458562
movzx   eax, cl
lea     r8, _wctype
test    byte ptr [r8+rax*2+2], 1
jz      short loc_7FF6E3458523
movzx   ecx, cl
jmp     short loc_7FF6E3458547

loc_7FF6E3458523:
movzx   edx, cl
jmp     short loc_7FF6E345859C

loc_7FF6E3458528:
movzx   edx, [rbp+arg_0]
cmp     dx, r11w
jnb     short loc_7FF6E3458559
movzx   eax, dl
lea     r8, _wctype
test    byte ptr [r8+rax*2+2], 1
jz      short loc_7FF6E3458554
movzx   ecx, dl

loc_7FF6E3458547:
mov     rax, [r10+110h]
movzx   edx, byte ptr [rax+rcx]
jmp     short loc_7FF6E345859C

loc_7FF6E3458554:
movzx   edx, dl
jmp     short loc_7FF6E345859C

loc_7FF6E3458559:
cmp     [r10+138h], rbx
jz      short loc_7FF6E345859C

loc_7FF6E3458562:
mov     [rbp+arg_10], bx
lea     rax, [rbp+arg_10]
mov     rcx, [r10+138h]
lea     r8, [rbp+arg_0]
mov     [rsp+50h+var_28], 1
mov     r9d, 1
mov     edx, r11d
mov     [rsp+50h+var_30], rax
call    __crtLCMapStringW
movzx   edx, [rbp+arg_0]
test    eax, eax
jz      short loc_7FF6E345859C
movzx   edx, [rbp+arg_10]

loc_7FF6E345859C:
cmp     [rbp+var_8], bl
jz      short loc_7FF6E34585AC
mov     rcx, [rbp+var_20]
and     dword ptr [rcx+3A8h], 0FFFFFFFDh

loc_7FF6E34585AC:
movzx   eax, dx

loc_7FF6E34585AF:
mov     rbx, [rsp+50h+arg_8]
add     rsp, 50h
pop     rbp
retn
sub_7FF6E34584C0 endp

algn_7FF6E34585BA:
align 20h



sub_7FF6E34585C0 proc near

var_448= qword ptr -448h
var_438= qword ptr -438h
var_248= qword ptr -248h
var_58= qword ptr -58h
var_40= qword ptr -40h
var_38= qword ptr -38h
var_30= qword ptr -30h
var_28= qword ptr -28h

; __unwind { // __GSHandlerCheck
push    r12
push    r13
push    r14
push    r15
sub     rsp, 448h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+468h+var_58], rax
mov     r12, r9
mov     r14, r8
mov     r15, rdx
mov     r13, rcx
test    rcx, rcx
jnz     short loc_7FF6E345860C
test    rdx, rdx
jz      short loc_7FF6E345860C

loc_7FF6E34585F7:
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo
jmp     loc_7FF6E3458938

loc_7FF6E345860C:
test    r14, r14
jz      short loc_7FF6E34585F7
test    r12, r12
jz      short loc_7FF6E34585F7
mov     rcx, r12
call    sub_7FF6E3459E54
xor     edx, edx        ; Val
lea     rcx, [rsp+468h+var_438] ; void *
mov     r8d, 1F0h       ; Size
call    memset
xor     edx, edx        ; Val
lea     rcx, [rsp+468h+var_248] ; void *
mov     r8d, 1F0h       ; Size
call    memset
cmp     r15, 2
jb      loc_7FF6E3458938
dec     r15
; } // starts at 7FF6E34585C0

loc_7FF6E3458652:
; __unwind { // __GSHandlerCheck
mov     [rsp+468h+var_28], rbx
imul    r15, r14
mov     [rsp+468h+var_30], rbp
add     r15, r13
mov     [rsp+468h+var_38], rsi
xor     ecx, ecx
mov     [rsp+468h+var_40], rdi
mov     [rsp+468h+var_448], rcx

loc_7FF6E3458680:
xor     edx, edx
mov     rax, r15
sub     rax, r13
div     r14
lea     rbx, [rax+1]
cmp     rbx, 8
ja      loc_7FF6E3458724
cmp     r15, r13
jbe     short loc_7FF6E3458703
lea     rsi, [r14+r13]

loc_7FF6E34586A2:
mov     rbx, r13
mov     rdi, rsi
cmp     rsi, r15
ja      short loc_7FF6E34586CD
nop     dword ptr [rax]

loc_7FF6E34586B0:
mov     rdx, rbx
mov     rcx, rdi
call    r12
test    eax, eax
mov     rcx, rdi
cmovle  rcx, rbx
add     rdi, r14
mov     rbx, rcx
cmp     rdi, r15
jbe     short loc_7FF6E34586B0

loc_7FF6E34586CD:
mov     r8, r14
mov     rdx, r15
cmp     rbx, r15
jz      short loc_7FF6E34586F6
sub     rbx, r15
nop     dword ptr [rax+rax+00h]

loc_7FF6E34586E0:
movzx   eax, byte ptr [rdx]
movzx   ecx, byte ptr [rbx+rdx]
mov     [rbx+rdx], al
mov     [rdx], cl
lea     rdx, [rdx+1]
sub     r8, 1
jnz     short loc_7FF6E34586E0

loc_7FF6E34586F6:
sub     r15, r14
cmp     r15, r13
ja      short loc_7FF6E34586A2
mov     rcx, [rsp+468h+var_448]

loc_7FF6E3458703:
sub     rcx, 1
mov     [rsp+468h+var_448], rcx
js      loc_7FF6E3458918
mov     r13, [rsp+rcx*8+468h+var_438]
mov     r15, [rsp+rcx*8+468h+var_248]
jmp     loc_7FF6E3458680

loc_7FF6E3458724:
shr     rbx, 1
mov     rcx, r13
imul    rbx, r14
lea     rdi, [rbx+r13]
mov     rdx, rdi
call    r12
test    eax, eax
jle     short loc_7FF6E345876B
mov     r9, r14
mov     r8, rdi
cmp     r13, rdi
jz      short loc_7FF6E345876B
nop     word ptr [rax+rax+00000000h]

loc_7FF6E3458750:
movzx   eax, byte ptr [r8]
mov     rdx, r8
sub     rdx, rbx
movzx   ecx, byte ptr [rdx]
mov     [rdx], al
mov     [r8], cl
inc     r8
sub     r9, 1
jnz     short loc_7FF6E3458750

loc_7FF6E345876B:
mov     rdx, r15
mov     rcx, r13
call    r12
test    eax, eax
jle     short loc_7FF6E34587A8
mov     r8, r14
mov     rdx, r15
cmp     r13, r15
jz      short loc_7FF6E34587A8
mov     r9, r13
sub     r9, r15
nop     dword ptr [rax+00000000h]

loc_7FF6E3458790:
movzx   eax, byte ptr [rdx]
movzx   ecx, byte ptr [r9+rdx]
mov     [r9+rdx], al
mov     [rdx], cl
lea     rdx, [rdx+1]
sub     r8, 1
jnz     short loc_7FF6E3458790

loc_7FF6E34587A8:
mov     rdx, r15
mov     rcx, rdi
call    r12
test    eax, eax
jle     short loc_7FF6E34587E8
mov     r8, r14
mov     rdx, r15
cmp     rdi, r15
jz      short loc_7FF6E34587E8
mov     r9, rdi
sub     r9, r15
db      66h, 66h
nop     word ptr [rax+rax+00000000h]

loc_7FF6E34587D0:
movzx   eax, byte ptr [rdx]
movzx   ecx, byte ptr [r9+rdx]
mov     [r9+rdx], al
mov     [rdx], cl
lea     rdx, [rdx+1]
sub     r8, 1
jnz     short loc_7FF6E34587D0

loc_7FF6E34587E8:
mov     rbx, r13
mov     rsi, r15
xchg    ax, ax

loc_7FF6E34587F0:
cmp     rdi, rbx
jbe     short loc_7FF6E3458810

loc_7FF6E34587F5:
add     rbx, r14
cmp     rbx, rdi
jnb     short loc_7FF6E3458810
mov     rdx, rdi
mov     rcx, rbx
call    r12
test    eax, eax
jle     short loc_7FF6E34587F5
jmp     short loc_7FF6E3458825
align 10h

loc_7FF6E3458810:
add     rbx, r14
cmp     rbx, r15
ja      short loc_7FF6E3458825
mov     rdx, rdi
mov     rcx, rbx
call    r12
test    eax, eax
jle     short loc_7FF6E3458810

loc_7FF6E3458825:
mov     rbp, rsi
sub     rsi, r14
cmp     rsi, rdi
jbe     short loc_7FF6E345883D
mov     rdx, rdi
mov     rcx, rsi
call    r12
test    eax, eax
jg      short loc_7FF6E3458825

loc_7FF6E345883D:
cmp     rsi, rbx
jb      short loc_7FF6E345887A
mov     r8, r14
mov     rdx, rsi
jz      short loc_7FF6E3458868
mov     r9, rbx
sub     r9, rsi

loc_7FF6E3458850:
movzx   eax, byte ptr [rdx]
movzx   ecx, byte ptr [r9+rdx]
mov     [r9+rdx], al
mov     [rdx], cl
lea     rdx, [rdx+1]
sub     r8, 1
jnz     short loc_7FF6E3458850

loc_7FF6E3458868:
cmp     rdi, rsi
mov     rax, rbx
cmovnz  rax, rdi
mov     rdi, rax
jmp     loc_7FF6E34587F0

loc_7FF6E345887A:
cmp     rdi, rbp
jnb     short loc_7FF6E3458897
nop

loc_7FF6E3458880:
sub     rbp, r14
cmp     rbp, rdi
jbe     short loc_7FF6E3458897
mov     rdx, rdi
mov     rcx, rbp
call    r12
test    eax, eax
jz      short loc_7FF6E3458880
jmp     short loc_7FF6E34588AC

loc_7FF6E3458897:
sub     rbp, r14
cmp     rbp, r13
jbe     short loc_7FF6E34588AC
mov     rdx, rdi
mov     rcx, rbp
call    r12
test    eax, eax
jz      short loc_7FF6E3458897

loc_7FF6E34588AC:
mov     rcx, r15
mov     rax, rbp
sub     rcx, rbx
sub     rax, r13
cmp     rax, rcx
mov     rcx, [rsp+468h+var_448]
jl      short loc_7FF6E34588ED
cmp     r13, rbp
jnb     short loc_7FF6E34588DC
mov     [rsp+rcx*8+468h+var_438], r13
mov     [rsp+rcx*8+468h+var_248], rbp
inc     rcx
mov     [rsp+468h+var_448], rcx

loc_7FF6E34588DC:
cmp     rbx, r15
jnb     loc_7FF6E3458703
mov     r13, rbx
jmp     loc_7FF6E3458680

loc_7FF6E34588ED:
cmp     rbx, r15
jnb     short loc_7FF6E3458907
mov     [rsp+rcx*8+468h+var_438], rbx
mov     [rsp+rcx*8+468h+var_248], r15
inc     rcx
mov     [rsp+468h+var_448], rcx

loc_7FF6E3458907:
cmp     r13, rbp
jnb     loc_7FF6E3458703
mov     r15, rbp
jmp     loc_7FF6E3458680

loc_7FF6E3458918:
mov     rsi, [rsp+468h+var_38]
mov     rbp, [rsp+468h+var_30]
mov     rbx, [rsp+468h+var_28]
mov     rdi, [rsp+468h+var_40]
; } // starts at 7FF6E3458652

loc_7FF6E3458938:
; __unwind { // __GSHandlerCheck
mov     rcx, [rsp+468h+var_58]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 448h
pop     r15
pop     r14
pop     r13
pop     r12
retn
; } // starts at 7FF6E3458938
sub_7FF6E34585C0 endp




sub_7FF6E3458958 proc near

var_38= xmmword ptr -38h
var_28= xmmword ptr -28h
var_18= qword ptr -18h

; __unwind { // __GSHandlerCheck
sub     rsp, 38h
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rsp+38h+var_18], rax
xorps   xmm0, xmm0
mov     r8, rcx
movups  [rsp+38h+var_38], xmm0
movups  [rsp+38h+var_28], xmm0
jmp     short loc_7FF6E3458989

loc_7FF6E345897C:
movzx   eax, al
lea     rcx, [rsp+38h+var_38]
bts     [rcx], eax
inc     rdx

loc_7FF6E3458989:
mov     al, [rdx]
test    al, al
jnz     short loc_7FF6E345897C
jmp     short loc_7FF6E34589A8

loc_7FF6E3458991:
movzx   eax, cl
and     cl, 7
shr     rax, 3
mov     dl, byte ptr [rsp+rax+38h+var_38]
shr     dl, cl
test    dl, 1
jnz     short loc_7FF6E34589C3
inc     r8

loc_7FF6E34589A8:
mov     cl, [r8]
test    cl, cl
jnz     short loc_7FF6E3458991
xor     eax, eax

loc_7FF6E34589B1:
mov     rcx, [rsp+38h+var_18]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
add     rsp, 38h
retn

loc_7FF6E34589C3:
mov     rax, r8
jmp     short loc_7FF6E34589B1
; } // starts at 7FF6E3458958
sub_7FF6E3458958 endp

algn_7FF6E34589C8:
align 10h



sub_7FF6E34589D0 proc near

arg_0= qword ptr  8
arg_10= qword ptr  18h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_10], rsi
push    rdi
mov     r10, rdx
lea     rsi, cs:7FF6E3430000h
and     r10d, 0Fh
mov     rbx, rdx
sub     rbx, r10
xor     edi, edi
mov     r11, rdx
mov     r8, rcx
xorps   xmm3, xmm3
lea     rax, [r10-1]    ; switch 15 cases
movdqu  xmm1, xmmword ptr [rbx]
cmp     rax, 0Eh
ja      short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case
mov     eax, ds:(jpt_7FF6E3458A12 - 7FF6E3430000h)[rsi+rax*4]
add     rax, rsi
jmp     rax             ; switch jump

loc_7FF6E3458A14:       ; jumptable 00007FF6E3458A12 case 1
psrldq  xmm1, 1
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A1B:       ; jumptable 00007FF6E3458A12 case 2
psrldq  xmm1, 2
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A22:       ; jumptable 00007FF6E3458A12 case 3
psrldq  xmm1, 3
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A29:       ; jumptable 00007FF6E3458A12 case 4
psrldq  xmm1, 4
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A30:       ; jumptable 00007FF6E3458A12 case 5
psrldq  xmm1, 5
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A37:       ; jumptable 00007FF6E3458A12 case 6
psrldq  xmm1, 6
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A3E:       ; jumptable 00007FF6E3458A12 case 7
psrldq  xmm1, 7
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A45:       ; jumptable 00007FF6E3458A12 case 8
psrldq  xmm1, 8
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A4C:       ; jumptable 00007FF6E3458A12 case 9
psrldq  xmm1, 9
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A53:       ; jumptable 00007FF6E3458A12 case 10
psrldq  xmm1, 0Ah
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A5A:       ; jumptable 00007FF6E3458A12 case 11
psrldq  xmm1, 0Bh
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A61:       ; jumptable 00007FF6E3458A12 case 12
psrldq  xmm1, 0Ch
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A68:       ; jumptable 00007FF6E3458A12 case 13
psrldq  xmm1, 0Dh
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A6F:       ; jumptable 00007FF6E3458A12 case 14
psrldq  xmm1, 0Eh
jmp     short def_7FF6E3458A12 ; jumptable 00007FF6E3458A12 default case

loc_7FF6E3458A76:       ; jumptable 00007FF6E3458A12 case 15
psrldq  xmm1, 0Fh

def_7FF6E3458A12:       ; jumptable 00007FF6E3458A12 default case
xorps   xmm0, xmm0
mov     r9d, 0Fh
pcmpeqb xmm0, xmm1
pmovmskb eax, xmm0
test    eax, eax
jz      loc_7FF6E3458BC3
bsf     edx, eax
test    r10, r10
jnz     short loc_7FF6E3458AA2
lea     edi, [r9-0Eh]
jmp     short loc_7FF6E3458AB3

loc_7FF6E3458AA2:
mov     ecx, 10h
mov     eax, edx
sub     rcx, r10
cmp     rax, rcx
setb    dil

loc_7FF6E3458AB3:
mov     eax, r9d
sub     eax, edx
cmp     eax, r9d
ja      loc_7FF6E3458B90
mov     ecx, ds:(jpt_7FF6E3458ACB - 7FF6E3430000h)[rsi+rax*4] ; switch 16 cases
add     rcx, rsi
jmp     rcx             ; switch jump

loc_7FF6E3458ACD:       ; jumptable 00007FF6E3458ACB case 0
pslldq  xmm1, 1
psrldq  xmm1, 1
jmp     loc_7FF6E3458B90

loc_7FF6E3458ADC:       ; jumptable 00007FF6E3458ACB case 1
pslldq  xmm1, 2
psrldq  xmm1, 2
jmp     loc_7FF6E3458B90

loc_7FF6E3458AEB:       ; jumptable 00007FF6E3458ACB case 2
pslldq  xmm1, 3
psrldq  xmm1, 3
jmp     loc_7FF6E3458B90

loc_7FF6E3458AFA:       ; jumptable 00007FF6E3458ACB case 3
pslldq  xmm1, 4
psrldq  xmm1, 4
jmp     loc_7FF6E3458B90

loc_7FF6E3458B09:       ; jumptable 00007FF6E3458ACB case 4
pslldq  xmm1, 5
psrldq  xmm1, 5
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B15:       ; jumptable 00007FF6E3458ACB case 5
pslldq  xmm1, 6
psrldq  xmm1, 6
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B21:       ; jumptable 00007FF6E3458ACB case 6
pslldq  xmm1, 7
psrldq  xmm1, 7
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B2D:       ; jumptable 00007FF6E3458ACB case 7
pslldq  xmm1, 8
psrldq  xmm1, 8
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B39:       ; jumptable 00007FF6E3458ACB case 8
pslldq  xmm1, 9
psrldq  xmm1, 9
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B45:       ; jumptable 00007FF6E3458ACB case 9
pslldq  xmm1, 0Ah
psrldq  xmm1, 0Ah
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B51:       ; jumptable 00007FF6E3458ACB case 10
pslldq  xmm1, 0Bh
psrldq  xmm1, 0Bh
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B5D:       ; jumptable 00007FF6E3458ACB case 11
pslldq  xmm1, 0Ch
psrldq  xmm1, 0Ch
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B69:       ; jumptable 00007FF6E3458ACB case 12
pslldq  xmm1, 0Dh
psrldq  xmm1, 0Dh
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B75:       ; jumptable 00007FF6E3458ACB case 13
pslldq  xmm1, 0Eh
psrldq  xmm1, 0Eh
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B81:       ; jumptable 00007FF6E3458ACB case 14
pslldq  xmm1, 0Fh
psrldq  xmm1, 0Fh
jmp     short loc_7FF6E3458B90

loc_7FF6E3458B8D:       ; jumptable 00007FF6E3458ACB case 15
xorps   xmm1, xmm1

loc_7FF6E3458B90:
test    edi, edi
jnz     loc_7FF6E3458C79

loc_7FF6E3458B98:
movdqu  xmm2, xmmword ptr [rbx+10h]
movdqa  xmm0, xmm2
pcmpeqb xmm0, xmm3
pmovmskb eax, xmm0
test    eax, eax
jnz     short loc_7FF6E3458BE2

loc_7FF6E3458BAD:
mov     rdx, r11
mov     rcx, r8
mov     rbx, [rsp+8+arg_0]
mov     rsi, [rsp+8+arg_10]
pop     rdi
jmp     sub_7FF6E3458958

loc_7FF6E3458BC3:
test    r10, r10
jnz     short loc_7FF6E3458B98
cmp     [rbx+1], dil
jz      loc_7FF6E3458C79
mov     rbx, [rsp+8+arg_0]
mov     rsi, [rsp+8+arg_10]
pop     rdi
jmp     sub_7FF6E3458958

loc_7FF6E3458BE2:
bsf     ecx, eax
mov     eax, ecx
sub     rax, r10
add     rax, 10h
cmp     rax, 10h
ja      short loc_7FF6E3458BAD
sub     r9d, ecx
cmp     r9d, 0Fh        ; switch 16 cases
ja      short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case
mov     ecx, ds:(jpt_7FF6E3458C08 - 7FF6E3430000h)[rsi+r9*4]
add     rcx, rsi
jmp     rcx             ; switch jump

loc_7FF6E3458C0A:       ; jumptable 00007FF6E3458C08 case 0
pslldq  xmm2, 1
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C11:       ; jumptable 00007FF6E3458C08 case 1
pslldq  xmm2, 2
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C18:       ; jumptable 00007FF6E3458C08 case 2
pslldq  xmm2, 3
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C1F:       ; jumptable 00007FF6E3458C08 case 3
pslldq  xmm2, 4
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C26:       ; jumptable 00007FF6E3458C08 case 4
pslldq  xmm2, 5
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C2D:       ; jumptable 00007FF6E3458C08 case 5
pslldq  xmm2, 6
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C34:       ; jumptable 00007FF6E3458C08 case 6
pslldq  xmm2, 7
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C3B:       ; jumptable 00007FF6E3458C08 case 7
pslldq  xmm2, 8
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C42:       ; jumptable 00007FF6E3458C08 case 8
pslldq  xmm2, 9
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C49:       ; jumptable 00007FF6E3458C08 case 9
pslldq  xmm2, 0Ah
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C50:       ; jumptable 00007FF6E3458C08 case 10
pslldq  xmm2, 0Bh
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C57:       ; jumptable 00007FF6E3458C08 case 11
pslldq  xmm2, 0Ch
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C5E:       ; jumptable 00007FF6E3458C08 case 12
pslldq  xmm2, 0Dh
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C65:       ; jumptable 00007FF6E3458C08 case 13
pslldq  xmm2, 0Eh
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C6C:       ; jumptable 00007FF6E3458C08 case 14
pslldq  xmm2, 0Fh
jmp     short def_7FF6E3458C08 ; jumptable 00007FF6E3458C08 default case

loc_7FF6E3458C73:       ; jumptable 00007FF6E3458C08 case 15
xorps   xmm2, xmm2

def_7FF6E3458C08:       ; jumptable 00007FF6E3458C08 default case
orps    xmm1, xmm2

loc_7FF6E3458C79:
movzx   eax, byte ptr [r8]
test    al, al
jz      short loc_7FF6E3458CAD

loc_7FF6E3458C81:
movsx   eax, al
movd    xmm0, eax
punpcklbw xmm0, xmm0
punpcklbw xmm0, xmm0
pshufd  xmm0, xmm0, 0
pcmpeqb xmm0, xmm1
pmovmskb eax, xmm0
test    eax, eax
jnz     short loc_7FF6E3458CBB
movzx   eax, byte ptr [r8+1]
inc     r8
test    al, al
jnz     short loc_7FF6E3458C81

loc_7FF6E3458CAD:
xor     eax, eax
mov     rbx, [rsp+8+arg_0]
mov     rsi, [rsp+8+arg_10]
pop     rdi
retn

loc_7FF6E3458CBB:
mov     rbx, [rsp+8+arg_0]
mov     rax, r8
mov     rsi, [rsp+8+arg_10]
pop     rdi
retn
align 4
jpt_7FF6E3458A12 dd offset loc_7FF6E3458A14 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E3458A1B - 7FF6E3430000h
dd offset loc_7FF6E3458A22 - 7FF6E3430000h
dd offset loc_7FF6E3458A29 - 7FF6E3430000h
dd offset loc_7FF6E3458A30 - 7FF6E3430000h
dd offset loc_7FF6E3458A37 - 7FF6E3430000h
dd offset loc_7FF6E3458A3E - 7FF6E3430000h
dd offset loc_7FF6E3458A45 - 7FF6E3430000h
dd offset loc_7FF6E3458A4C - 7FF6E3430000h
dd offset loc_7FF6E3458A53 - 7FF6E3430000h
dd offset loc_7FF6E3458A5A - 7FF6E3430000h
dd offset loc_7FF6E3458A61 - 7FF6E3430000h
dd offset loc_7FF6E3458A68 - 7FF6E3430000h
dd offset loc_7FF6E3458A6F - 7FF6E3430000h
dd offset loc_7FF6E3458A76 - 7FF6E3430000h
jpt_7FF6E3458ACB dd offset loc_7FF6E3458ACD - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E3458ADC - 7FF6E3430000h
dd offset loc_7FF6E3458AEB - 7FF6E3430000h
dd offset loc_7FF6E3458AFA - 7FF6E3430000h
dd offset loc_7FF6E3458B09 - 7FF6E3430000h
dd offset loc_7FF6E3458B15 - 7FF6E3430000h
dd offset loc_7FF6E3458B21 - 7FF6E3430000h
dd offset loc_7FF6E3458B2D - 7FF6E3430000h
dd offset loc_7FF6E3458B39 - 7FF6E3430000h
dd offset loc_7FF6E3458B45 - 7FF6E3430000h
dd offset loc_7FF6E3458B51 - 7FF6E3430000h
dd offset loc_7FF6E3458B5D - 7FF6E3430000h
dd offset loc_7FF6E3458B69 - 7FF6E3430000h
dd offset loc_7FF6E3458B75 - 7FF6E3430000h
dd offset loc_7FF6E3458B81 - 7FF6E3430000h
dd offset loc_7FF6E3458B8D - 7FF6E3430000h
jpt_7FF6E3458C08 dd offset loc_7FF6E3458C0A - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E3458C11 - 7FF6E3430000h
dd offset loc_7FF6E3458C18 - 7FF6E3430000h
dd offset loc_7FF6E3458C1F - 7FF6E3430000h
dd offset loc_7FF6E3458C26 - 7FF6E3430000h
dd offset loc_7FF6E3458C2D - 7FF6E3430000h
dd offset loc_7FF6E3458C34 - 7FF6E3430000h
dd offset loc_7FF6E3458C3B - 7FF6E3430000h
dd offset loc_7FF6E3458C42 - 7FF6E3430000h
dd offset loc_7FF6E3458C49 - 7FF6E3430000h
dd offset loc_7FF6E3458C50 - 7FF6E3430000h
dd offset loc_7FF6E3458C57 - 7FF6E3430000h
dd offset loc_7FF6E3458C5E - 7FF6E3430000h
dd offset loc_7FF6E3458C65 - 7FF6E3430000h
dd offset loc_7FF6E3458C6C - 7FF6E3430000h
dd offset loc_7FF6E3458C73 - 7FF6E3430000h
sub_7FF6E34589D0 endp

; [00000008 BYTES: COLLAPSED FUNCTION _mbsdec]
; [00000094 BYTES: COLLAPSED FUNCTION _mbsdec_l]



sub_7FF6E3458E24 proc near
sub     rsp, 28h
call    __acrt_initialize_multibyte
movzx   eax, al
xor     eax, 1
add     rsp, 28h
retn
sub_7FF6E3458E24 endp

; [00000015 BYTES: COLLAPSED FUNCTION _strnicoll]
align 10h
; [00000100 BYTES: COLLAPSED FUNCTION _strnicoll_l]
; [0000019F BYTES: COLLAPSED FUNCTION __acrt_SetEnvironmentVariableA]
algn_7FF6E34590EF:
align 10h



sub_7FF6E34590F0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_20= byte ptr  28h

mov     [rsp+arg_0], rbx
mov     [rsp+arg_8], rbp
mov     [rsp+arg_10], rsi
push    rdi
push    r14
push    r15
sub     rsp, 20h
xor     r15d, r15d
mov     ebp, r9d
mov     rdi, r8
mov     r11, rdx
mov     r10, rdx
mov     ebx, r15d
cmp     [rsp+38h+arg_20], r15b
jz      short loc_7FF6E3459130
mov     word ptr [rdx], 2Dh ; '-'
lea     r10, [rdx+2]
lea     ebx, [r15+1]
neg     ecx

loc_7FF6E3459130:
mov     r8, r10

loc_7FF6E3459133:
xor     edx, edx
lea     rsi, [r10+2]
mov     eax, ecx
mov     r9, r10
div     ebp
mov     ecx, eax
cmp     edx, 9
mov     eax, 57h ; 'W'
lea     r14d, [rax-27h]
cmovbe  ax, r14w
inc     rbx
add     ax, dx
mov     [r10], ax
test    ecx, ecx
jz      short loc_7FF6E3459169
mov     r10, rsi
cmp     rbx, rdi
jb      short loc_7FF6E3459133

loc_7FF6E3459169:
cmp     rbx, rdi
jb      short loc_7FF6E3459187
mov     [r11], r15w
call    sub_7FF6E3444754
mov     ebx, 22h ; '"'
mov     [rax], ebx
call    _invalid_parameter_noinfo
mov     eax, ebx
jmp     short loc_7FF6E34591AA

loc_7FF6E3459187:
mov     [rsi], r15w

loc_7FF6E345918B:
movzx   eax, word ptr [r8]
movzx   ecx, word ptr [r9]
mov     [r9], ax
sub     r9, 2
mov     [r8], cx
add     r8, 2
cmp     r8, r9
jb      short loc_7FF6E345918B
xor     eax, eax

loc_7FF6E34591AA:
mov     rbx, [rsp+38h+arg_0]
mov     rbp, [rsp+38h+arg_8]
mov     rsi, [rsp+38h+arg_10]
add     rsp, 20h
pop     r15
pop     r14
pop     rdi
retn
sub_7FF6E34590F0 endp

algn_7FF6E34591C3:
align 4
; [00000069 BYTES: COLLAPSED FUNCTION common_xtox_s<ulong,wchar_t>(ulong,wchar_t * const,unsigned __int64,uint,bool)]
algn_7FF6E345922D:
align 10h
; [00000020 BYTES: COLLAPSED FUNCTION _itow_s]
; [0000004B BYTES: COLLAPSED FUNCTION __ascii_wcsnicmp]
align 4
; [00000046 BYTES: COLLAPSED FUNCTION _wcsnicmp]
algn_7FF6E34592E2:
align 4
; [00000151 BYTES: COLLAPSED FUNCTION _wcsnicmp_l]
algn_7FF6E3459435:
align 8
; [00000035 BYTES: COLLAPSED FUNCTION wcscmp]
align 10h
; [00000039 BYTES: COLLAPSED FUNCTION _msize]
algn_7FF6E34594A9:
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j__msize]
align 20h



sub_7FF6E34594C0 proc near
push    rbx
sub     rsp, 20h
btr     r8d, 13h
mov     eax, edx
and     eax, r8d
mov     r9d, edx
mov     rbx, rcx
test    eax, 0FCF0FCE0h
jz      short loc_7FF6E3459508
test    rcx, rcx
jz      short loc_7FF6E34594ED
xor     edx, edx
xor     ecx, ecx
call    j_common_control87
mov     [rbx], eax

loc_7FF6E34594ED:
call    sub_7FF6E3444754
mov     dword ptr [rax], 16h
call    _invalid_parameter_noinfo
mov     eax, 16h
add     rsp, 20h
pop     rbx
retn

loc_7FF6E3459508:
mov     edx, r8d
mov     ecx, r9d
test    rbx, rbx
jz      short loc_7FF6E3459522
call    j_common_control87
mov     [rbx], eax
xor     eax, eax
add     rsp, 20h
pop     rbx
retn

loc_7FF6E3459522:
call    j_common_control87
xor     eax, eax
add     rsp, 20h
pop     rbx
retn
sub_7FF6E34594C0 endp

algn_7FF6E345952F:
align 10h
; [00000020 BYTES: COLLAPSED FUNCTION fegetenv]
; [00000061 BYTES: COLLAPSED FUNCTION fesetenv]
algn_7FF6E34595B1:
align 20h



sub_7FF6E34595C0 proc near

Env= fenv_t ptr  10h

push    rbx
sub     rsp, 20h
mov     rbx, rcx
xor     eax, eax
lea     rcx, [rsp+28h+Env] ; Env
mov     qword ptr [rsp+28h+Env._Fe_ctl], rax
call    fegetenv
test    eax, eax
jnz     short loc_7FF6E3459606
mov     rax, qword ptr [rsp+28h+Env._Fe_ctl]
lea     rcx, [rsp+28h+Env] ; Env
or      [rsp+28h+Env._Fe_ctl], 1Fh
mov     [rbx], rax
call    fesetenv
test    eax, eax
jnz     short loc_7FF6E3459606
call    sub_7FF6E345A3D4
xor     eax, eax
add     rsp, 20h
pop     rbx
retn

loc_7FF6E3459606:
mov     eax, 1
add     rsp, 20h
pop     rbx
retn
sub_7FF6E34595C0 endp

algn_7FF6E3459611:
align 20h



sub_7FF6E3459620 proc near

; FUNCTION CHUNK AT 00007FF6E345A930 SIZE 00000013 BYTES
; FUNCTION CHUNK AT 00007FF6E345A950 SIZE 00000007 BYTES

cmp     cs:dword_7FF6E346D098, 2
jge     loc_7FF6E345A950
jmp     loc_7FF6E3459640
align 20h

loc_7FF6E3459640:
xor     r9d, r9d
xorps   xmm2, xmm2
movsd   xmm2, xmm0
mov     rcx, 7FFFFFFFFFFFFFFFh
movq    rdx, xmm2
mov     rax, rdx
and     rax, rcx
cmp     rdx, rax
mov     r8, rax
setnz   r9b
shr     r8, 34h
cmp     r8, 433h
jb      short loc_7FF6E345968D
mov     rcx, 7FF0000000000000h
cmp     rax, rcx
jbe     short locret_7FF6E34596E9
mov     rcx, rdx
jmp     loc_7FF6E345A930

loc_7FF6E345968D:
cmp     r8, 3FFh
jnb     short loc_7FF6E34596B9
test    rax, rax
jz      short locret_7FF6E34596E9
test    r9, r9
jz      short loc_7FF6E34596B0
mov     rax, 8000000000000000h
movq    xmm0, rax
retn

loc_7FF6E34596B0:
movsd   xmm0, cs:qword_7FF6E345FAB0
retn

loc_7FF6E34596B9:
mov     ecx, 33h ; '3'
mov     eax, 1
sub     cl, r8b
shl     rax, cl
dec     rax
not     rax
and     rax, rdx
movq    xmm0, rax
test    r9, r9
jnz     short locret_7FF6E34596E9
cmp     rax, rdx
jz      short locret_7FF6E34596E9
addsd   xmm0, cs:qword_7FF6E345FAB0

locret_7FF6E34596E9:
retn
sub_7FF6E3459620 endp

align 10h
; [000005AB BYTES: COLLAPSED FUNCTION log10]
algn_7FF6E3459C9B:
align 4
; [00000052 BYTES: COLLAPSED FUNCTION __dcrt_lowio_ensure_console_output_initialized]
algn_7FF6E3459CEE:
align 10h



sub_7FF6E3459CF0 proc near
sub     rsp, 28h
mov     rcx, cs:hObject ; hObject
cmp     rcx, 0FFFFFFFFFFFFFFFDh
ja      short loc_7FF6E3459D07
call    cs:CloseHandle

loc_7FF6E3459D07:
add     rsp, 28h
retn
sub_7FF6E3459CF0 endp

; [000000BE BYTES: COLLAPSED FUNCTION unknown_libname_88]
algn_7FF6E3459DCA:
align 4
; [00000087 BYTES: COLLAPSED FUNCTION __crtLCMapStringW]
algn_7FF6E3459E53:
align 4



sub_7FF6E3459E54 proc near
sub     rsp, 28h
mov     rax, cs:__guard_check_icall_fptr
call    rax ; _guard_check_icall_nop
nop     dword ptr [rax]
add     rsp, 28h
retn
db 0CCh
sub_7FF6E3459E54 endp

algn_7FF6E3459E6A:
align 4
; [00000049 BYTES: COLLAPSED FUNCTION __ascii_strnicmp]
align 8
; [0000004F BYTES: COLLAPSED FUNCTION _strnicmp]
algn_7FF6E3459F07:
align 8
; [000000AD BYTES: COLLAPSED FUNCTION _strnicmp_l]
algn_7FF6E3459FB5:
align 8


; Attributes: bp-based frame fpd=80h

sub_7FF6E3459FB8 proc near

var_B0= qword ptr -0B0h
var_A8= dword ptr -0A8h
var_A0= qword ptr -0A0h
var_98= qword ptr -98h
var_90= qword ptr -90h
var_80= dword ptr -80h
var_78= qword ptr -78h
var_70= qword ptr -70h
CPInfo= _cpinfo ptr -68h
var_50= qword ptr -50h
arg_20= dword ptr  30h
String= qword ptr  38h
arg_30= dword ptr  40h
CodePage= dword ptr  48h

; __unwind { // __GSHandlerCheck
push    rbp
push    rbx
push    rsi
push    rdi
push    r12
push    r13
push    r14
push    r15
sub     rsp, 98h
lea     rbp, [rsp+50h]
mov     rax, cs:__security_cookie
xor     rax, rbp
mov     [rbp+80h+var_50], rax
movsxd  rdi, [rbp+80h+arg_20]
xor     r13d, r13d
mov     r12, [rbp+80h+String]
mov     r14, r9
mov     [rbp+80h+var_80], r8d
mov     rbx, rcx
mov     [rbp+80h+var_70], rdx
mov     [rbp+80h+var_78], r12
test    edi, edi
jle     short loc_7FF6E345A016
mov     rdx, rdi        ; Count
mov     rcx, r9         ; String
call    __strncnt
mov     rdi, rax
jmp     short loc_7FF6E345A01F

loc_7FF6E345A016:
cmp     edi, 0FFFFFFFFh
jl      loc_7FF6E345A321

loc_7FF6E345A01F:
movsxd  rsi, [rbp+80h+arg_30]
test    esi, esi
jle     short loc_7FF6E345A03A
mov     rdx, rsi        ; Count
mov     rcx, r12        ; String
call    __strncnt
mov     rsi, rax
jmp     short loc_7FF6E345A043

loc_7FF6E345A03A:
cmp     esi, 0FFFFFFFFh
jl      loc_7FF6E345A321

loc_7FF6E345A043:
mov     r15d, [rbp+80h+CodePage]
test    r15d, r15d
jnz     short loc_7FF6E345A056
mov     rax, [rbx]
mov     r15d, [rax+0Ch]

loc_7FF6E345A056:
test    edi, edi
jz      short loc_7FF6E345A062
test    esi, esi
jnz     loc_7FF6E345A114

loc_7FF6E345A062:
xor     eax, eax
xorps   xmm0, xmm0
mov     dword ptr [rbp+80h+CPInfo.LeadByte+0Ah], eax
movups  xmmword ptr [rbp+80h+CPInfo.MaxCharSize], xmm0
cmp     edi, esi
jz      loc_7FF6E345A340
cmp     esi, 1
jg      loc_7FF6E345A10A
cmp     edi, 1
jg      short loc_7FF6E345A0CC
lea     rdx, [rbp+80h+CPInfo] ; lpCPInfo
mov     ecx, r15d       ; CodePage
call    cs:GetCPInfo
test    eax, eax
jz      loc_7FF6E345A321
test    edi, edi
jle     short loc_7FF6E345A0D6
cmp     [rbp+80h+CPInfo.MaxCharSize], 2
jb      short loc_7FF6E345A0CC
lea     rax, [rbp+80h+CPInfo.LeadByte]
cmp     [rbp+80h+CPInfo.LeadByte], r13b
jz      short loc_7FF6E345A0CC

loc_7FF6E345A0AD:
cmp     [rax+1], r13b
jz      short loc_7FF6E345A0CC
mov     cl, [r14]
cmp     cl, [rax]
jb      short loc_7FF6E345A0C3
cmp     cl, [rax+1]
jbe     loc_7FF6E345A340

loc_7FF6E345A0C3:
add     rax, 2
cmp     [rax], r13b
jnz     short loc_7FF6E345A0AD

loc_7FF6E345A0CC:
mov     eax, 3
jmp     loc_7FF6E345A323

loc_7FF6E345A0D6:
test    esi, esi
jle     short loc_7FF6E345A114
cmp     [rbp+80h+CPInfo.MaxCharSize], 2
jb      short loc_7FF6E345A10A
lea     rax, [rbp+80h+CPInfo.LeadByte]
cmp     [rbp+80h+CPInfo.LeadByte], r13b
jz      short loc_7FF6E345A10A

loc_7FF6E345A0EA:
cmp     [rax+1], r13b
jz      short loc_7FF6E345A10A
mov     cl, [r12]
cmp     cl, [rax]
jb      short loc_7FF6E345A101
cmp     cl, [rax+1]
jbe     loc_7FF6E345A340

loc_7FF6E345A101:
add     rax, 2
cmp     [rax], r13b
jnz     short loc_7FF6E345A0EA

loc_7FF6E345A10A:
mov     eax, 1
jmp     loc_7FF6E345A323

loc_7FF6E345A114:
mov     [rsp+0D0h+var_A8], r13d
mov     r9d, edi
mov     r8, r14
mov     [rsp+0D0h+var_B0], r13
mov     edx, 9
mov     ecx, r15d
call    sub_7FF6E3451998
movsxd  r13, eax
test    eax, eax
jz      loc_7FF6E345A321
mov     rdx, r13
add     rdx, rdx
lea     rcx, [rdx+10h]
cmp     rdx, rcx
sbb     rdx, rdx
and     rdx, rcx
jz      loc_7FF6E345A321
mov     rcx, 0FFFFFFFFFFFFFF0h
cmp     rdx, 400h
ja      short loc_7FF6E345A196
lea     rax, [rdx+0Fh]
cmp     rax, rdx
ja      short loc_7FF6E345A174
mov     rax, rcx

loc_7FF6E345A174:
and     rax, 0FFFFFFFFFFFFFFF0h
call    __alloca_probe
sub     rsp, rax
lea     rbx, [rsp+0D0h+var_80]
test    rbx, rbx
jz      loc_7FF6E345A321
mov     dword ptr [rbx], 0CCCCh
jmp     short loc_7FF6E345A1AC

loc_7FF6E345A196:       ; Size
mov     rcx, rdx
call    _malloc_base
mov     rbx, rax
test    rax, rax
jz      short loc_7FF6E345A1B0
mov     dword ptr [rax], 0DDDDh

loc_7FF6E345A1AC:
add     rbx, 10h

loc_7FF6E345A1B0:
test    rbx, rbx
jz      loc_7FF6E345A321
mov     [rsp+0D0h+var_A8], r13d
mov     r9d, edi
mov     r8, r14
mov     [rsp+0D0h+var_B0], rbx
mov     edx, 1
mov     ecx, r15d
call    sub_7FF6E3451998
test    eax, eax
jz      loc_7FF6E345A310
and     [rsp+0D0h+var_A8], 0
mov     r9d, esi
and     [rsp+0D0h+var_B0], 0
mov     r8, r12
mov     edx, 9
mov     ecx, r15d
call    sub_7FF6E3451998
movsxd  r12, eax
test    eax, eax
jz      loc_7FF6E345A310
mov     rcx, r12
add     rcx, rcx
lea     rax, [rcx+10h]
cmp     rcx, rax
sbb     rcx, rcx
and     rcx, rax        ; Size
jz      loc_7FF6E345A310
cmp     rcx, 400h
ja      short loc_7FF6E345A25E
lea     rax, [rcx+0Fh]
cmp     rax, rcx
ja      short loc_7FF6E345A23C
mov     rax, 0FFFFFFFFFFFFFF0h

loc_7FF6E345A23C:
and     rax, 0FFFFFFFFFFFFFFF0h
call    __alloca_probe
sub     rsp, rax
lea     rdi, [rsp+0D0h+var_80]
test    rdi, rdi
jz      loc_7FF6E345A310
mov     dword ptr [rdi], 0CCCCh
jmp     short loc_7FF6E345A271

loc_7FF6E345A25E:
call    _malloc_base
mov     rdi, rax
test    rax, rax
jz      short loc_7FF6E345A275
mov     dword ptr [rax], 0DDDDh

loc_7FF6E345A271:
add     rdi, 10h

loc_7FF6E345A275:
test    rdi, rdi
jz      loc_7FF6E345A310
mov     r8, [rbp+80h+var_78]
lea     r14, [rdi-10h]
mov     [rsp+0D0h+var_A8], r12d
mov     r9d, esi
mov     edx, 1
mov     [rsp+0D0h+var_B0], rdi
mov     ecx, r15d
call    sub_7FF6E3451998
xor     ecx, ecx
test    eax, eax
jnz     short loc_7FF6E345A2C0
mov     edi, 0DDDDh
cmp     [r14], edi
jnz     short loc_7FF6E345A2B8
mov     rcx, r14        ; Block
call    _free_base

loc_7FF6E345A2B8:
lea     rcx, [rbx-10h]
cmp     [rcx], edi
jmp     short loc_7FF6E345A31A

loc_7FF6E345A2C0:
mov     edx, [rbp+80h+var_80]
mov     r9d, r13d
mov     [rsp+0D0h+var_90], rcx
mov     r8, rbx
mov     [rsp+0D0h+var_98], rcx
mov     [rsp+0D0h+var_A0], rcx
mov     rcx, [rbp+80h+var_70]
mov     [rsp+0D0h+var_A8], r12d
mov     [rsp+0D0h+var_B0], rdi
call    sub_7FF6E344D320
mov     esi, 0DDDDh
mov     edi, eax
cmp     [r14], esi
jnz     short loc_7FF6E345A2FF
mov     rcx, r14        ; Block
call    _free_base

loc_7FF6E345A2FF:       ; Block
lea     rcx, [rbx-10h]
cmp     [rcx], esi
jnz     short loc_7FF6E345A30C
call    _free_base

loc_7FF6E345A30C:
mov     eax, edi
jmp     short loc_7FF6E345A323

loc_7FF6E345A310:       ; Block
lea     rcx, [rbx-10h]
cmp     dword ptr [rcx], 0DDDDh

loc_7FF6E345A31A:
jnz     short loc_7FF6E345A321
call    _free_base

loc_7FF6E345A321:
xor     eax, eax

loc_7FF6E345A323:
mov     rcx, [rbp+80h+var_50]
xor     rcx, rbp        ; StackCookie
call    __security_check_cookie
lea     rsp, [rbp+48h]
pop     r15
pop     r14
pop     r13
pop     r12
pop     rdi
pop     rsi
pop     rbx
pop     rbp
retn

loc_7FF6E345A340:
mov     eax, 2
jmp     short loc_7FF6E345A323
; } // starts at 7FF6E3459FB8
sub_7FF6E3459FB8 endp

algn_7FF6E345A347:
align 8
; [00000089 BYTES: COLLAPSED FUNCTION __acrt_CompareStringA]
algn_7FF6E345A3D1:
align 4



sub_7FF6E345A3D4 proc near
sub     rsp, 28h
call    sub_7FF6E344B34C
xor     r9d, r9d
test    al, 3Fh
jz      short loc_7FF6E345A425
mov     edx, eax
and     edx, 1
shl     edx, 4
mov     r8d, edx
or      r8d, 8
test    al, 4
cmovz   r8d, edx
mov     ecx, r8d
or      ecx, 4
test    al, 8
cmovz   ecx, r8d
mov     edx, ecx
or      edx, 2
test    al, 10h
cmovz   edx, ecx
mov     r9d, edx
or      r9d, 1
test    al, 20h
cmovz   r9d, edx
test    al, 2
jz      short loc_7FF6E345A425
bts     r9d, 13h

loc_7FF6E345A425:
mov     eax, r9d
add     rsp, 28h
retn
sub_7FF6E345A3D4 endp

algn_7FF6E345A42D:
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION j_common_control87]
align 8
; [0000029A BYTES: COLLAPSED FUNCTION common_control87]
algn_7FF6E345A6D2:
align 20h



sub_7FF6E345A6E0 proc near

arg_0= qword ptr  8
arg_8= qword ptr  10h
arg_10= qword ptr  18h
arg_18= qword ptr  20h

mov     [rsp+arg_8], rbx
mov     [rsp+arg_10], rbp
mov     [rsp+arg_18], rdi
push    r14
sub     rsp, 20h
mov     ebx, ecx
xor     edi, edi
and     ebx, 1Fh
mov     r14, rdx
mov     ebp, ecx
test    ecx, ecx
jnz     short loc_7FF6E345A70C
xor     eax, eax
jmp     loc_7FF6E345A7CB

loc_7FF6E345A70C:
mov     [rsp+28h+arg_0], rsi
call    get_fpsw_inline
mov     [r14], rax
mov     rsi, rax
test    bpl, 8
jz      short loc_7FF6E345A731
test    sil, sil
jns     short loc_7FF6E345A731
mov     edi, 1
and     ebx, 0FFFFFFF7h
jmp     short loc_7FF6E345A774

loc_7FF6E345A731:
test    bpl, 4
jz      short loc_7FF6E345A748
bt      rsi, 9
jnb     short loc_7FF6E345A748
mov     edi, 4
and     ebx, 0FFFFFFFBh
jmp     short loc_7FF6E345A774

loc_7FF6E345A748:
test    bpl, 1
jz      short loc_7FF6E345A75F
bt      rsi, 0Ah
jnb     short loc_7FF6E345A75F
mov     edi, 8
and     ebx, 0FFFFFFFEh
jmp     short loc_7FF6E345A774

loc_7FF6E345A75F:
test    bpl, 2
jz      short loc_7FF6E345A774
bt      rsi, 0Bh
jnb     short loc_7FF6E345A774
and     ebx, 0FFFFFFFDh
mov     edi, ebp
and     edi, 10h

loc_7FF6E345A774:
test    bpl, 10h
jz      short loc_7FF6E345A788
bt      rsi, 0Ch
jnb     short loc_7FF6E345A788
or      rdi, 20h
and     ebx, 0FFFFFFEFh

loc_7FF6E345A788:
test    ebx, ebx
jz      short loc_7FF6E345A79B
mov     edx, 0FFC0h
mov     ecx, 1F80h
call    sub_7FF6E344B36C

loc_7FF6E345A79B:
test    rdi, rdi
jz      short loc_7FF6E345A7C4
mov     rax, rsi
not     rax
test    rdi, rax
jz      short loc_7FF6E345A7C4
test    ebx, ebx
jnz     short loc_7FF6E345A7BC
or      rsi, rdi
mov     rcx, rsi
call    set_fpsw_inline
jmp     short loc_7FF6E345A7C4

loc_7FF6E345A7BC:
mov     rcx, rdi
call    sub_7FF6E344B3F8

loc_7FF6E345A7C4:
mov     rsi, [rsp+28h+arg_0]
mov     eax, ebx

loc_7FF6E345A7CB:
mov     rbx, [rsp+28h+arg_8]
mov     rbp, [rsp+28h+arg_10]
mov     rdi, [rsp+28h+arg_18]
add     rsp, 20h
pop     r14
retn
sub_7FF6E345A6E0 endp

algn_7FF6E345A7E1:
align 10h


; Attributes: bp-based frame fpd=20h

sub_7FF6E345A7F0 proc near

var_100= qword ptr -100h
var_F8= qword ptr -0F8h
var_F0= qword ptr -0F0h
var_E8= qword ptr -0E8h
var_E0= dword ptr -0E0h
var_DC= dword ptr -0DCh
var_D8= qword ptr -0D8h
var_D0= qword ptr -0D0h
var_C8= qword ptr -0C8h
var_C0= qword ptr -0C0h
var_B0= xmmword ptr -0B0h
var_A0= xmmword ptr -0A0h
var_90= xmmword ptr -90h
var_80= xmmword ptr -80h
var_70= xmmword ptr -70h
var_60= xmmword ptr -60h
var_50= xmmword ptr -50h
var_40= qword ptr -40h
var_30= xmmword ptr -30h
arg_20= dword ptr  30h
arg_30= qword ptr  40h
arg_38= qword ptr  48h
arg_40= dword ptr  50h

; __unwind { // __GSHandlerCheck
push    rbp
push    rbx
push    rsi
push    r14
lea     rbp, [rsp-8]
sub     rsp, 108h
movaps  [rsp+120h+var_30], xmm6
mov     rax, cs:__security_cookie
xor     rax, rsp
mov     [rbp+20h+var_40], rax
mov     esi, edx
mov     [rsp+120h+var_E8], 0
mov     r14, rcx
mov     [rsp+120h+var_F0], r8
mov     ecx, [rbp+20h+arg_20]
lea     rdx, [rsp+120h+var_E8]
mov     ebx, r9d
call    sub_7FF6E345A6E0
movsd   xmm6, [rbp+20h+arg_38]
test    eax, eax
jz      short loc_7FF6E345A89F
cmp     [rbp+20h+arg_40], 2
xorps   xmm0, xmm0
movups  [rsp+120h+var_B0], xmm0
movups  [rbp+20h+var_A0], xmm0
movups  [rbp+20h+var_90], xmm0
movups  [rbp+20h+var_80], xmm0
movups  [rbp+20h+var_70], xmm0
movups  [rbp+20h+var_60], xmm0
movups  [rbp+20h+var_50], xmm0
jnz     short loc_7FF6E345A876
movsd   qword ptr [rbp+20h+var_80], xmm6
mov     dword ptr [rbp+20h+var_70], 3

loc_7FF6E345A876:
mov     r8d, [rbp+20h+arg_20]
lea     rax, [rsp+120h+var_F0]
mov     [rsp+120h+var_F8], rax
lea     rdx, [rsp+120h+var_E8]
lea     rax, [rbp+20h+arg_30]
mov     r9d, esi
lea     rcx, [rsp+120h+var_B0]
mov     [rsp+120h+var_100], rax
call    sub_7FF6E344AE70

loc_7FF6E345A89F:
call    __acrt_has_user_matherr
test    al, al
jz      short loc_7FF6E345A8F5
test    ebx, ebx
jz      short loc_7FF6E345A8F5
movsd   xmm0, [rbp+20h+arg_30]
lea     rcx, [rsp+120h+var_E0]
movsd   xmm1, [rsp+120h+var_F0]
xor     eax, eax
movsd   [rsp+120h+var_D0], xmm0
movsd   [rsp+120h+var_C0], xmm1
mov     [rsp+120h+var_DC], eax
movsd   [rsp+120h+var_C8], xmm6
mov     [rsp+120h+var_E0], ebx
mov     [rsp+120h+var_D8], r14
call    sub_7FF6E3447030
test    eax, eax
jnz     short loc_7FF6E345A8ED
mov     ecx, ebx
call    sub_7FF6E344B1B0

loc_7FF6E345A8ED:
movsd   xmm0, [rsp+120h+var_C0]
jmp     short loc_7FF6E345A902

loc_7FF6E345A8F5:
mov     ecx, ebx
call    sub_7FF6E344B1B0
movsd   xmm0, [rsp+120h+var_F0]

loc_7FF6E345A902:
mov     rcx, [rbp+20h+var_40]
xor     rcx, rsp        ; StackCookie
call    __security_check_cookie
movaps  xmm6, [rsp+120h+var_30]
add     rsp, 108h
pop     r14
pop     rsi
pop     rbx
pop     rbp
retn
; } // starts at 7FF6E345A7F0
sub_7FF6E345A7F0 endp

algn_7FF6E345A923:
align 10h
; START OF FUNCTION CHUNK FOR sub_7FF6E3459620

loc_7FF6E345A930:
mov     rax, 8000000000000h
or      rcx, rax
movq    xmm0, rcx
retn
; END OF FUNCTION CHUNK FOR sub_7FF6E3459620
align 10h
; START OF FUNCTION CHUNK FOR sub_7FF6E3459620

loc_7FF6E345A950:
roundsd xmm0, xmm0, 0Ah
retn
; END OF FUNCTION CHUNK FOR sub_7FF6E3459620
align 20h



sub_7FF6E345A960 proc near

var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
arg_0= qword ptr  8

push    rbx
sub     rsp, 10h
xor     ecx, ecx
xor     r8d, r8d
mov     eax, 1
mov     cs:dword_7FF6E346F984, r8d
cpuid
mov     [rsp+18h+var_10], ecx
and     ecx, 18001000h
mov     [rsp+18h+var_18], eax
mov     [rsp+18h+var_14], ebx
mov     [rsp+18h+var_C], edx
cmp     ecx, 18001000h
jnz     short loc_7FF6E345A9C8
xor     ecx, ecx
xgetbv
shl     rdx, 20h
or      rdx, rax
mov     [rsp+18h+arg_0], rdx
mov     rax, [rsp+18h+arg_0]
and     al, 6
cmp     al, 6
jnz     short loc_7FF6E345A9C1
mov     r8d, 1
mov     cs:dword_7FF6E346F984, r8d
jmp     short loc_7FF6E345A9C8

loc_7FF6E345A9C1:
mov     r8d, cs:dword_7FF6E346F984

loc_7FF6E345A9C8:
xor     eax, eax
test    r8b, 1
jz      short loc_7FF6E345AA05
xor     ecx, ecx
cpuid
cmp     eax, 7
jl      short loc_7FF6E345AA03
xor     ecx, ecx
mov     eax, 7
cpuid
xor     eax, eax
test    bl, 20h
jz      short loc_7FF6E345AA05
mov     cs:dword_7FF6E346F984, 3
mov     cs:dword_7FF6E346F980, 3
add     rsp, 10h
pop     rbx
retn

loc_7FF6E345AA03:
xor     eax, eax

loc_7FF6E345AA05:
mov     cs:dword_7FF6E346F980, r8d
add     rsp, 10h
pop     rbx
retn
sub_7FF6E345A960 endp

algn_7FF6E345AA12:
align 4
; [00000020 BYTES: COLLAPSED FUNCTION _log10_special]
; [00000096 BYTES: COLLAPSED FUNCTION _log_special_common]
algn_7FF6E345AACA:
align 10h
; [00000044 BYTES: COLLAPSED FUNCTION _FindPESection]
align 20h
; [0000004D BYTES: COLLAPSED FUNCTION _IsNonwritableInCurrentImage]
algn_7FF6E345AB6D:
align 10h
; [0000002B BYTES: COLLAPSED FUNCTION _ValidateImageBase]
align 4
; [00000085 BYTES: COLLAPSED FUNCTION __GSHandlerCheck_SEH]
algn_7FF6E345AC21:
align 4
; [0000007F BYTES: COLLAPSED FUNCTION __GSHandlerCheck_EH]
algn_7FF6E345ACA3:
align 4
; [0000002A BYTES: COLLAPSED FUNCTION _local_unwind]
algn_7FF6E345ACCE:
align 10h
; [0000004B BYTES: COLLAPSED FUNCTION __C_specific_handler_noexcept]
algn_7FF6E345AD1B:
align 4



sub_7FF6E345AD1C proc near

arg_0= qword ptr  8

mov     [rsp+arg_0], rbx
xor     r9d, r9d
mov     r8, rcx
test    dl, dl
jnz     short loc_7FF6E345AD6E
mov     rdx, rcx
and     r8d, 0Fh
and     rdx, 0FFFFFFFFFFFFFFF0h
or      r10d, 0FFFFFFFFh
xorps   xmm0, xmm0
mov     ecx, r8d
shl     r10d, cl
pcmpeqb xmm0, xmmword ptr [rdx]
pmovmskb eax, xmm0
and     eax, r10d
jnz     short loc_7FF6E345AD63

loc_7FF6E345AD50:
add     rdx, 10h
xorps   xmm0, xmm0
pcmpeqb xmm0, xmmword ptr [rdx]
pmovmskb eax, xmm0
test    eax, eax
jz      short loc_7FF6E345AD50

loc_7FF6E345AD63:
bsf     eax, eax
add     rax, rdx
jmp     loc_7FF6E345AE13

loc_7FF6E345AD6E:
cmp     cs:dword_7FF6E346D098, 2
jge     loc_7FF6E345AE29
movzx   eax, dl
or      r10d, 0FFFFFFFFh
mov     ecx, eax
mov     r11, r8
shl     ecx, 8
and     r11, 0FFFFFFFFFFFFFFF0h
or      ecx, eax
and     r8d, 0Fh
mov     eax, r10d
movd    xmm0, ecx
mov     ecx, r8d
pshuflw xmm1, xmm0, 0
xorps   xmm0, xmm0
pcmpeqb xmm0, xmmword ptr [r11]
pmovmskb ebx, xmm0
shl     r10d, cl
pshufd  xmm2, xmm1, 0
movdqa  xmm0, xmm2
shl     eax, cl
pcmpeqb xmm0, xmmword ptr [r11]
pmovmskb edx, xmm0
and     edx, r10d
and     ebx, eax
jnz     short loc_7FF6E345ADFA

loc_7FF6E345ADCD:
bsr     ecx, edx
xorps   xmm1, xmm1
movdqa  xmm0, xmm2
add     rcx, r11
test    edx, edx
cmovnz  r9, rcx
add     r11, 10h
pcmpeqb xmm1, xmmword ptr [r11]
pcmpeqb xmm0, xmmword ptr [r11]
pmovmskb ebx, xmm1
pmovmskb edx, xmm0
test    ebx, ebx
jz      short loc_7FF6E345ADCD

loc_7FF6E345ADFA:
mov     eax, ebx
neg     eax
and     eax, ebx
dec     eax
and     edx, eax
bsr     ecx, edx
add     rcx, r11
test    edx, edx
cmovnz  r9, rcx

loc_7FF6E345AE10:
mov     rax, r9

loc_7FF6E345AE13:
mov     rbx, [rsp+arg_0]
retn

loc_7FF6E345AE19:
cmp     [r8], dl
cmovz   r9, r8
cmp     byte ptr [r8], 0
jz      short loc_7FF6E345AE10
inc     r8

loc_7FF6E345AE29:
test    r8b, 0Fh
jnz     short loc_7FF6E345AE19
movzx   eax, dl
movd    xmm0, eax

loc_7FF6E345AE36:
pcmpistri xmm0, xmmword ptr [r8], 40h ; '@'
jnb     short loc_7FF6E345AE4C
movsxd  r9, ecx
add     r9, r8
pcmpistri xmm0, xmmword ptr [r8], 40h ; '@'

loc_7FF6E345AE4C:
jz      short loc_7FF6E345AE10
add     r8, 10h
jmp     short loc_7FF6E345AE36
sub_7FF6E345AD1C endp

; [0000007B BYTES: COLLAPSED FUNCTION strchr]
align 10h
; [00000078 BYTES: COLLAPSED FUNCTION wcschr]
align 20h
; [00000002 BYTES: COLLAPSED FUNCTION _guard_dispatch_icall_nop]
algn_7FF6E345AF62:
align 20h



_guard_xfg_dispatch_icall_nop proc near
jmp     cs:__guard_dispatch_icall_fptr
_guard_xfg_dispatch_icall_nop endp

algn_7FF6E345AF86:
align 20h
; [00000006 BYTES: COLLAPSED FUNCTION j__guard_dispatch_icall_nop]
byte_7FF6E345AFA6 db 10h dup(0CCh)
db 2 dup(66h), 0Fh, 1Fh, 84h, 5 dup(0)
db 6 dup(0CCh)
align 10h
; [00000010 BYTES: COLLAPSED FUNCTION unknown_libname_48]
; [0000066D BYTES: COLLAPSED FUNCTION memcpy]
byte_7FF6E345B64D db 9 dup(0CCh)
db 2 dup(66h), 0Fh, 1Fh, 84h, 5 dup(0)
db 6 dup(0CCh)
align 10h
; [00000010 BYTES: COLLAPSED FUNCTION memset_repstos]
; [00000388 BYTES: COLLAPSED FUNCTION memset]
byte_7FF6E345BA08 db 0Eh dup(0CCh)
db 2 dup(66h), 0Fh, 1Fh, 84h, 5 dup(0)
db 6 dup(0CCh)
align 10h
; [000000C7 BYTES: COLLAPSED FUNCTION memcmp]
byte_7FF6E345BAF7 db 0Fh dup(0CCh)
align 10h
; [000000A8 BYTES: COLLAPSED FUNCTION strlen]
byte_7FF6E345BBB8 db 0Eh dup(0CCh)
align 10h
; [0000007D BYTES: COLLAPSED FUNCTION strncmp]
algn_7FF6E345BC4D:
align 10h


; Attributes: catch_handler

sub_7FF6E345BC50 proc near

arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
push    rbp
sub     rsp, 20h
mov     rbp, rdx
mov     rax, [rbp+70h]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rbp+70h]
add     rcx, rax
mov     rax, rcx
mov     r8b, 1
mov     edx, 4
mov     rcx, rax
call    sub_7FF6E3438400
nop
lea     rax, loc_7FF6E343156E
add     rsp, 20h
pop     rbp
retn
db 0CCh
sub_7FF6E345BC50 endp

algn_7FF6E345BC91:
align 20h


; Attributes: catch_handler

sub_7FF6E345BCA0 proc near

arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
push    rbp
sub     rsp, 30h
mov     rbp, rdx
mov     rax, [rbp+0D0h]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rbp+0D0h]
add     rcx, rax
mov     rax, rcx
mov     r8b, 1
mov     edx, 4
mov     rcx, rax
call    sub_7FF6E3438400
nop
lea     rax, loc_7FF6E3434492
add     rsp, 30h
pop     rbp
retn
db 0CCh
sub_7FF6E345BCA0 endp

algn_7FF6E345BCE7:
align 10h
; [0000001B BYTES: COLLAPSED FUNCTION unknown_libname_49]
algn_7FF6E345BD0B:
align 10h


; Attributes: catch_handler

sub_7FF6E345BD10 proc near

arg_8= qword ptr  10h

mov     [rsp+arg_8], rdx
push    rbp
sub     rsp, 20h
mov     rbp, rdx
mov     rax, [rbp+50h]
mov     rax, [rax]
movsxd  rax, dword ptr [rax+4]
mov     rcx, [rbp+50h]
add     rcx, rax
mov     rax, rcx
mov     r8b, 1
mov     edx, 4
mov     rcx, rax
call    sub_7FF6E3438400
nop
lea     rax, loc_7FF6E3437E9A
add     rsp, 20h
pop     rbp
retn
db 0CCh
sub_7FF6E345BD10 endp

; [0000000C BYTES: COLLAPSED FUNCTION int `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::do_put(num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::std,num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::ios_base &,wchar_t,bool)'::`1'::dtor$0]
; [0000000C BYTES: COLLAPSED FUNCTION int `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::do_put(num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::std,num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::ios_base &,wchar_t,bool)'::`1'::dtor$1]
; [0000000C BYTES: COLLAPSED FUNCTION int `_wcrtomb_s_l(int * const,char * const,unsigned __int64,wchar_t,_Mbstatet * const,__crt_locale_pointers * const)'::`1'::dtor$0]


; Attributes: unwind_handler

sub_7FF6E345BD75 proc near
push    rbp
sub     rsp, 20h
mov     rbp, rdx
mov     eax, [rbp+48h]
and     eax, 1
test    eax, eax
jz      short loc_7FF6E345BD99
and     dword ptr [rbp+48h], 0FFFFFFFEh
mov     rcx, [rbp+30h]
add     rcx, 10h
call    unknown_libname_36 ; Microsoft VisualC v14 64bit runtime

loc_7FF6E345BD99:
add     rsp, 20h
pop     rbp
retn
sub_7FF6E345BD75 endp

; [00000020 BYTES: COLLAPSED FUNCTION unknown_libname_51]



sub_7FF6E345BDBF proc near
lea     rcx, [rdx+68h]
jmp     sub_7FF6E3433DB0
sub_7FF6E345BDBF endp

; [0000000C BYTES: COLLAPSED FUNCTION int `__acrt_get_current_directory<__crt_win32_buffer_internal_dynamic_resizing>(__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &)'::`1'::dtor$0]
; [0000001E BYTES: COLLAPSED CHUNK OF FUNCTION __scrt_common_main_seh(void)]
; [00000018 BYTES: COLLAPSED CHUNK OF FUNCTION __scrt_is_nonwritable_in_current_image]
; [000000A8 BYTES: COLLAPSED CHUNK OF FUNCTION unknown_libname_43]
; [000000B6 BYTES: COLLAPSED CHUNK OF FUNCTION unknown_libname_44]
; [00000096 BYTES: COLLAPSED CHUNK OF FUNCTION __DestructExceptionObject]
; [0000001C BYTES: COLLAPSED CHUNK OF FUNCTION __InternalCxxFrameHandlerWrapper<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)]
; [000000AB BYTES: COLLAPSED CHUNK OF FUNCTION unknown_libname_45]
; START OF FUNCTION CHUNK FOR sub_7FF6E343FA04

loc_7FF6E345C0C8:
;   __except filter // owned by 7FF6E343FB03
;   __except filter // owned by 7FF6E343FC4A
push    rbp
sub     rsp, 20h
mov     rbp, rdx
mov     [rbp+80h], rcx
lea     r9, [rbp+20h]   ; int *
mov     r8d, [rbp+0D8h] ; int
mov     rdx, [rbp+0E8h] ; struct EHExceptionRecord *
call    ?ExFilterRethrowFH4@@YAHPEAU_EXCEPTION_POINTERS@@PEAUEHExceptionRecord@@HPEAH@Z ; ExFilterRethrowFH4(_EXCEPTION_POINTERS *,EHExceptionRecord *,int,int *)
nop
add     rsp, 20h
pop     rbp
retn
db 0CCh

loc_7FF6E345C0F7:
;   __finally // owned by 7FF6E343FB03
;   __finally // owned by 7FF6E343FC4A
push    rbx
push    rbp
sub     rsp, 28h
mov     rbp, rdx
mov     rcx, [rbp+48h]
call    _FindAndUnlinkFrame
cmp     dword ptr [rbp+20h], 0
jnz     short loc_7FF6E345C158
mov     rbx, [rbp+0E8h]
cmp     dword ptr [rbx], 0E06D7363h
jnz     short loc_7FF6E345C158
cmp     dword ptr [rbx+18h], 4
jnz     short loc_7FF6E345C158
cmp     dword ptr [rbx+20h], 19930520h
jz      short loc_7FF6E345C140
cmp     dword ptr [rbx+20h], 19930521h
jz      short loc_7FF6E345C140
cmp     dword ptr [rbx+20h], 19930522h
jnz     short loc_7FF6E345C158

loc_7FF6E345C140:
mov     rcx, [rbx+28h]
call    _IsExceptionObjectToBeDestroyed
test    eax, eax
jz      short loc_7FF6E345C158
mov     dl, 1
mov     rcx, rbx
call    __DestructExceptionObject
nop

loc_7FF6E345C158:
call    __vcrt_getptd
mov     rcx, [rbp+30h]
mov     [rax+20h], rcx
call    __vcrt_getptd
mov     rcx, [rbp+38h]
mov     [rax+28h], rcx
call    __vcrt_getptd
mov     ecx, [rbp+0D0h]
mov     [rax+78h], ecx
add     rsp, 28h
pop     rbp
pop     rbx
retn
align 8
; END OF FUNCTION CHUNK FOR sub_7FF6E343FA04
; [00000039 BYTES: COLLAPSED CHUNK OF FUNCTION __FrameHandler3::FrameUnwindToState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)]
; START OF FUNCTION CHUNK FOR sub_7FF6E3440028

unknown_libname_56:     ; Microsoft VisualC v14 64bit runtime
;   __except filter // owned by 7FF6E344026C
push    rbp
sub     rsp, 30h
mov     rbp, rdx
call    __FrameUnwindFilter
nop
add     rsp, 30h
pop     rbp
retn
db 0CCh

unknown_libname_57:     ; Microsoft VisualC v14 64bit runtime
;   __finally // owned by 7FF6E3440184
push    rbp
sub     rsp, 30h
mov     rbp, rdx
call    __vcrt_getptd
cmp     dword ptr [rax+30h], 0
jle     short loc_7FF6E345C1F3
call    __vcrt_getptd
dec     dword ptr [rax+30h]

loc_7FF6E345C1F3:
add     rsp, 30h
pop     rbp
retn
align 2
; END OF FUNCTION CHUNK FOR sub_7FF6E3440028
; [0000001A BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<void (*)(int)>::operator()<_lambda_450d765d439847d4c735a33c368b5fc0_,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_>(_lambda_450d765d439847d4c735a33c368b5fc0_ &&,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_ &&)]
; [00000018 BYTES: COLLAPSED CHUNK OF FUNCTION _fclose_internal(_iobuf * const,__crt_cached_ptd_host &)]
; [0000001B BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_,_lambda_9a20e10065b92b5193c3597a66cba9d4_ &,_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_>(_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_ &&,_lambda_9a20e10065b92b5193c3597a66cba9d4_ &,_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_ &&)]
; [0000001D BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_886d6c58226a84441f68b9f2b8217b83_,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_>(_lambda_886d6c58226a84441f68b9f2b8217b83_ &&,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_ &&)]
; [0000001A BYTES: COLLAPSED CHUNK OF FUNCTION fgetc]
; [0000001A BYTES: COLLAPSED CHUNK OF FUNCTION _fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)]
; [00000018 BYTES: COLLAPSED CHUNK OF FUNCTION fread_s]
; [00000018 BYTES: COLLAPSED CHUNK OF FUNCTION ungetc]
algn_7FF6E345C2C8:
align 10h
; [00000016 BYTES: COLLAPSED CHUNK OF FUNCTION _query_new_handler]
; [00000016 BYTES: COLLAPSED CHUNK OF FUNCTION _set_new_handler]
; START OF FUNCTION CHUNK FOR sub_7FF6E344788C

; int `public: _lambda_6e4b09c48022b2350581041d5f6b0c4c_::operator()(void)const'::`1'::filt$0
?filt$0@?0???R_lambda_6e4b09c48022b2350581041d5f6b0c4c_@@QEBA@XZ@4HA:
;   __except filter // owned by 7FF6E34478AD
push    rbp
sub     rsp, 20h
mov     rbp, rdx
mov     [rbp+28h], rcx
mov     rax, [rcx]
mov     ecx, [rax]
mov     [rbp+24h], ecx
xor     eax, eax
cmp     ecx, 0E06D7363h
setz    al
mov     [rbp+20h], eax
mov     eax, [rbp+20h]
add     rsp, 20h
pop     rbp
retn
db 0CCh
; END OF FUNCTION CHUNK FOR sub_7FF6E344788C
; [0000001A BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_9431c60049192bb82166e0947f95a2e9_,_lambda_85fa512c59a4d94d4a89f575eefd92a6_ &,_lambda_487febba6ca58d9ce348204d67e1dba3_>(_lambda_9431c60049192bb82166e0947f95a2e9_ &&,_lambda_85fa512c59a4d94d4a89f575eefd92a6_ &,_lambda_487febba6ca58d9ce348204d67e1dba3_ &&)]
; [00000021 BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_5df02c53a8f32f81fd64e5bbb78039f1_,_lambda_2af78c5f5901b1372d98f9ab3177dfa6_ &,_lambda_f51fe5fd7c79a33db34fc9310f277369_ &>(_lambda_5df02c53a8f32f81fd64e5bbb78039f1_ &&,_lambda_2af78c5f5901b1372d98f9ab3177dfa6_ &,_lambda_f51fe5fd7c79a33db34fc9310f277369_ &)]
; START OF FUNCTION CHUNK FOR sub_7FF6E344B36C

loc_7FF6E345C364:
;   __except filter // owned by 7FF6E344B39F
push    rbp
mov     rbp, rdx
mov     [rbp+10h], rcx
mov     rax, [rcx]
mov     ecx, [rax]
mov     [rbp+8], ecx
cmp     ecx, 0C0000005h
jz      short loc_7FF6E345C389
cmp     ecx, 0C000001Dh
jz      short loc_7FF6E345C389
xor     eax, eax
jmp     short loc_7FF6E345C38E

loc_7FF6E345C389:
mov     eax, 1

loc_7FF6E345C38E:
pop     rbp
retn
db 0CCh
; END OF FUNCTION CHUNK FOR sub_7FF6E344B36C
; [00000019 BYTES: COLLAPSED CHUNK OF FUNCTION __acrt_lowio_ensure_fh_exists]
; [00000019 BYTES: COLLAPSED CHUNK OF FUNCTION _fcloseall]
; [0000001A BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<int>::operator()<_lambda_a37b2b86f63e897a80ea819b0eb08c01_,_lambda_38ce7e780aa69e748d6df282ebc68efe_ &,_lambda_99fb1378e971ab6e7edea83e3a7a83a2_>(_lambda_a37b2b86f63e897a80ea819b0eb08c01_ &&,_lambda_38ce7e780aa69e748d6df282ebc68efe_ &,_lambda_99fb1378e971ab6e7edea83e3a7a83a2_ &&)]
; [00000017 BYTES: COLLAPSED CHUNK OF FUNCTION _write_internal]
; [00000017 BYTES: COLLAPSED CHUNK OF FUNCTION _read]
; [00000021 BYTES: COLLAPSED CHUNK OF FUNCTION raise]
; [0000001A BYTES: COLLAPSED CHUNK OF FUNCTION __crt_seh_guarded_call<void>::operator()<_lambda_efdfa57d1f175319df784efa44bb7b81_,_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_ &,_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_>(_lambda_efdfa57d1f175319df784efa44bb7b81_ &&,_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_ &,_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_ &&)]
; [00000019 BYTES: COLLAPSED FUNCTION _free_locale$fin$1]
; [00000019 BYTES: COLLAPSED CHUNK OF FUNCTION __acrt_update_thread_locale_data]
; [0000002C BYTES: COLLAPSED CHUNK OF FUNCTION common_control87]
algn_7FF6E345C4A4:
align 10h
; [00000020 BYTES: COLLAPSED CHUNK OF FUNCTION _IsNonwritableInCurrentImage]



; void __cdecl sub_7FF6E345C4D0()
sub_7FF6E345C4D0 proc near
lea     rcx, unk_7FF6E346E2A0
jmp     unknown_libname_33 ; Microsoft VisualC v14 64bit runtime
sub_7FF6E345C4D0 endp

; [0000005B BYTES: COLLAPSED FUNCTION unknown_libname_61]
algn_7FF6E345C537:
align 8
; [0000003E BYTES: COLLAPSED FUNCTION std::`dynamic atexit destructor for 'classic_locale''(void)]
algn_7FF6E345C576:
align 8



; void __cdecl sub_7FF6E345C578()
sub_7FF6E345C578 proc near
; __unwind { // __CxxFrameHandler4
sub     rsp, 28h
mov     rax, cs:qword_7FF6E346E470
movsxd  rcx, dword ptr [rax+4]
lea     r8, qword_7FF6E346E470
lea     rax, off_7FF6E345E688
mov     [rcx+r8], rax
mov     rax, cs:qword_7FF6E346E470
movsxd  rcx, dword ptr [rax+4]
lea     edx, [rcx-10h]
mov     [rcx+r8-4], edx
lea     rax, off_7FF6E345E668
mov     cs:qword_7FF6E346E480, rax
lea     rcx, qword_7FF6E346E480 ; this
call    sub_7FF6E343B13C
nop
add     rsp, 28h
retn
; } // starts at 7FF6E345C578
sub_7FF6E345C578 endp




; void __cdecl sub_7FF6E345C5CC()
sub_7FF6E345C5CC proc near
lea     rcx, qword_7FF6E346E4E0
jmp     ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::filebuf::~filebuf<char,std::char_traits<char>>(void)
sub_7FF6E345C5CC endp




; void __cdecl sub_7FF6E345C5D8()
sub_7FF6E345C5D8 proc near
lea     rcx, unk_7FF6E346E460
jmp     unknown_libname_33 ; Microsoft VisualC v14 64bit runtime
sub_7FF6E345C5D8 endp

; [0000003E BYTES: COLLAPSED FUNCTION unknown_libname_62]
algn_7FF6E345C622:
align 4



; void __cdecl sub_7FF6E345C624()
sub_7FF6E345C624 proc near
lea     rcx, unk_7FF6E346E5E0
jmp     unknown_libname_33 ; Microsoft VisualC v14 64bit runtime
sub_7FF6E345C624 endp

align 200h
dq 100h dup(?)
_text ends

; Section 2. (virtual address 0002D000)
; Virtual size                  : 0000FA80 (  64128.)
; Section size in file          : 0000FC00 (  64512.)
; Offset to raw data for section: 0002BC00
; Flags 40000040: Data Readable
; Alignment     : default
;
; Imports from KERNEL32.dll
;

; Segment type: Externs
; _idata
; int (__stdcall *WideCharToMultiByte)(UINT CodePage, DWORD dwFlags, LPCWCH lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCCH lpDefaultChar, LPBOOL lpUsedDefaultChar)
extrn WideCharToMultiByte:qword
; void (__stdcall *EnterCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn __imp_EnterCriticalSection:qword
; void (__stdcall *LeaveCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn __imp_LeaveCriticalSection:qword
; BOOL (__stdcall *InitializeCriticalSectionEx)(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount, DWORD Flags)
extrn __imp_InitializeCriticalSectionEx:qword
; void (__stdcall *DeleteCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn __imp_DeleteCriticalSection:qword
; PVOID (__stdcall *EncodePointer)(PVOID Ptr)
extrn EncodePointer:qword
; PVOID (__stdcall *DecodePointer)(PVOID Ptr)
extrn DecodePointer:qword
; int (__stdcall *MultiByteToWideChar)(UINT CodePage, DWORD dwFlags, LPCCH lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
extrn MultiByteToWideChar:qword
; int (__stdcall *LCMapStringEx)(LPCWSTR lpLocaleName, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest, LPNLSVERSIONINFO lpVersionInformation, LPVOID lpReserved, LPARAM sortHandle)
extrn LCMapStringEx:qword
; BOOL (__stdcall *GetStringTypeW)(DWORD dwInfoType, LPCWCH lpSrcStr, int cchSrc, LPWORD lpCharType)
extrn __imp_GetStringTypeW:qword
; BOOL (__stdcall *GetCPInfo)(UINT CodePage, LPCPINFO lpCPInfo)
extrn GetCPInfo:qword
; void (__stdcall *RtlCaptureContext)(PCONTEXT ContextRecord)
extrn RtlCaptureContext:qword
; PRUNTIME_FUNCTION (__stdcall *RtlLookupFunctionEntry)(ULONG64 ControlPc, PULONG64 ImageBase, PUNWIND_HISTORY_TABLE HistoryTable)
extrn RtlLookupFunctionEntry:qword
; PEXCEPTION_ROUTINE (__stdcall *RtlVirtualUnwind)(ULONG HandlerType, ULONG64 ImageBase, ULONG64 ControlPc, PRUNTIME_FUNCTION FunctionEntry, PCONTEXT ContextRecord, PVOID *HandlerData, PULONG64 EstablisherFrame, PKNONVOLATILE_CONTEXT_POINTERS ContextPointers)
extrn RtlVirtualUnwind:qword
; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
extrn UnhandledExceptionFilter:qword
; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
extrn SetUnhandledExceptionFilter:qword
; HANDLE (__stdcall *GetCurrentProcess)()
extrn GetCurrentProcess:qword
; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
extrn TerminateProcess:qword
; BOOL (__stdcall *IsProcessorFeaturePresent)(DWORD ProcessorFeature)
extrn IsProcessorFeaturePresent:qword
; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
extrn QueryPerformanceCounter:qword
; DWORD (__stdcall *GetCurrentProcessId)()
extrn GetCurrentProcessId:qword
; DWORD (__stdcall *GetCurrentThreadId)()
extrn GetCurrentThreadId:qword
; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
extrn GetSystemTimeAsFileTime:qword
; void (__stdcall *InitializeSListHead)(PSLIST_HEADER ListHead)
extrn InitializeSListHead:qword
; BOOL (__stdcall *IsDebuggerPresent)()
extrn IsDebuggerPresent:qword
; void (__stdcall *GetStartupInfoW)(LPSTARTUPINFOW lpStartupInfo)
extrn GetStartupInfoW:qword
; HMODULE (__stdcall *GetModuleHandleW)(LPCWSTR lpModuleName)
extrn GetModuleHandleW:qword
; BOOL (__stdcall *WriteConsoleW)(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
extrn WriteConsoleW:qword
; PVOID (__stdcall *RtlPcToFileHeader)(PVOID PcValue, PVOID *BaseOfImage)
extrn RtlPcToFileHeader:qword
; void (__stdcall *RaiseException)(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, const ULONG_PTR *lpArguments)
extrn RaiseException:qword
; void (__stdcall *RtlUnwindEx)(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue, PCONTEXT ContextRecord, PUNWIND_HISTORY_TABLE HistoryTable)
extrn RtlUnwindEx:qword
; DWORD (__stdcall *GetLastError)()
extrn GetLastError:qword
; void (__stdcall *SetLastError)(DWORD dwErrCode)
extrn SetLastError:qword
; BOOL (__stdcall *InitializeCriticalSectionAndSpinCount)(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
extrn InitializeCriticalSectionAndSpinCount:qword
; DWORD (__stdcall *TlsAlloc)()
extrn TlsAlloc:qword
; LPVOID (__stdcall *TlsGetValue)(DWORD dwTlsIndex)
extrn TlsGetValue:qword
; BOOL (__stdcall *TlsSetValue)(DWORD dwTlsIndex, LPVOID lpTlsValue)
extrn TlsSetValue:qword
; BOOL (__stdcall *TlsFree)(DWORD dwTlsIndex)
extrn TlsFree:qword
; BOOL (__stdcall *FreeLibrary)(HMODULE hLibModule)
extrn FreeLibrary:qword
; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
extrn GetProcAddress:qword
; HMODULE (__stdcall *LoadLibraryExW)(LPCWSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
extrn LoadLibraryExW:qword
; HANDLE (__stdcall *GetStdHandle)(DWORD nStdHandle)
extrn GetStdHandle:qword
; BOOL (__stdcall *WriteFile)(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
extrn WriteFile:qword
; DWORD (__stdcall *GetModuleFileNameW)(HMODULE hModule, LPWSTR lpFilename, DWORD nSize)
extrn GetModuleFileNameW:qword
; void (__stdcall __noreturn *ExitProcess)(UINT uExitCode)
extrn ExitProcess:qword
; BOOL (__stdcall *GetModuleHandleExW)(DWORD dwFlags, LPCWSTR lpModuleName, HMODULE *phModule)
extrn GetModuleHandleExW:qword
; LPSTR (__stdcall *GetCommandLineA)()
extrn GetCommandLineA:qword
; LPWSTR (__stdcall *GetCommandLineW)()
extrn GetCommandLineW:qword
; LPVOID (__stdcall *HeapAlloc)(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
extrn HeapAlloc:qword
; BOOL (__stdcall *HeapFree)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
extrn HeapFree:qword
; DWORD (__stdcall *GetFileType)(HANDLE hFile)
extrn GetFileType:qword
; DWORD (__stdcall *FlsAlloc)(PFLS_CALLBACK_FUNCTION lpCallback)
extrn __imp_FlsAlloc:qword
; PVOID (__stdcall *FlsGetValue)(DWORD dwFlsIndex)
extrn __imp_FlsGetValue:qword
; BOOL (__stdcall *FlsSetValue)(DWORD dwFlsIndex, PVOID lpFlsData)
extrn __imp_FlsSetValue:qword
; BOOL (__stdcall *FlsFree)(DWORD dwFlsIndex)
extrn __imp_FlsFree:qword
; BOOL (__stdcall *VirtualProtect)(LPVOID lpAddress, SIZE_T dwSize, DWORD flNewProtect, PDWORD lpflOldProtect)
extrn VirtualProtect:qword
; int (__stdcall *CompareStringW)(LCID Locale, DWORD dwCmpFlags, PCNZWCH lpString1, int cchCount1, PCNZWCH lpString2, int cchCount2)
extrn CompareStringW:qword
; int (__stdcall *LCMapStringW)(LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
extrn LCMapStringW:qword
; int (__stdcall *GetLocaleInfoW)(LCID Locale, LCTYPE LCType, LPWSTR lpLCData, int cchData)
extrn GetLocaleInfoW:qword
; BOOL (__stdcall *IsValidLocale)(LCID Locale, DWORD dwFlags)
extrn IsValidLocale:qword
; LCID (__stdcall *GetUserDefaultLCID)()
extrn GetUserDefaultLCID:qword
; BOOL (__stdcall *EnumSystemLocalesW)(LOCALE_ENUMPROCW lpLocaleEnumProc, DWORD dwFlags)
extrn EnumSystemLocalesW:qword
; BOOL (__stdcall *CloseHandle)(HANDLE hObject)
extrn CloseHandle:qword
; BOOL (__stdcall *FlushFileBuffers)(HANDLE hFile)
extrn FlushFileBuffers:qword
; UINT (__stdcall *GetConsoleOutputCP)()
extrn GetConsoleOutputCP:qword
; BOOL (__stdcall *GetConsoleMode)(HANDLE hConsoleHandle, LPDWORD lpMode)
extrn GetConsoleMode:qword
; BOOL (__stdcall *ReadFile)(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
extrn ReadFile:qword
; BOOL (__stdcall *GetFileSizeEx)(HANDLE hFile, PLARGE_INTEGER lpFileSize)
extrn GetFileSizeEx:qword
; BOOL (__stdcall *SetFilePointerEx)(HANDLE hFile, LARGE_INTEGER liDistanceToMove, PLARGE_INTEGER lpNewFilePointer, DWORD dwMoveMethod)
extrn SetFilePointerEx:qword
; BOOL (__stdcall *ReadConsoleW)(HANDLE hConsoleInput, LPVOID lpBuffer, DWORD nNumberOfCharsToRead, LPDWORD lpNumberOfCharsRead, PCONSOLE_READCONSOLE_CONTROL pInputControl)
extrn ReadConsoleW:qword
; LPVOID (__stdcall *HeapReAlloc)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes)
extrn HeapReAlloc:qword
; BOOL (__stdcall *FindClose)(HANDLE hFindFile)
extrn FindClose:qword
; HANDLE (__stdcall *FindFirstFileExW)(LPCWSTR lpFileName, FINDEX_INFO_LEVELS fInfoLevelId, LPVOID lpFindFileData, FINDEX_SEARCH_OPS fSearchOp, LPVOID lpSearchFilter, DWORD dwAdditionalFlags)
extrn FindFirstFileExW:qword
; BOOL (__stdcall *FindNextFileW)(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData)
extrn FindNextFileW:qword
; BOOL (__stdcall *IsValidCodePage)(UINT CodePage)
extrn IsValidCodePage:qword
; UINT (__stdcall *GetACP)()
extrn GetACP:qword
; UINT (__stdcall *GetOEMCP)()
extrn GetOEMCP:qword
; LPWCH (__stdcall *GetEnvironmentStringsW)()
extrn GetEnvironmentStringsW:qword
; BOOL (__stdcall *FreeEnvironmentStringsW)(LPWCH penv)
extrn FreeEnvironmentStringsW:qword
; BOOL (__stdcall *SetEnvironmentVariableW)(LPCWSTR lpName, LPCWSTR lpValue)
extrn SetEnvironmentVariableW:qword
; BOOL (__stdcall *SetStdHandle)(DWORD nStdHandle, HANDLE hHandle)
extrn SetStdHandle:qword
; HANDLE (__stdcall *GetProcessHeap)()
extrn GetProcessHeap:qword
; SIZE_T (__stdcall *HeapSize)(HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem)
extrn HeapSize:qword
; HANDLE (__stdcall *CreateFileW)(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
extrn CreateFileW:qword
; void (__stdcall *RtlUnwind)(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue)
extrn RtlUnwind:qword



; Segment type: Pure data
; Segment permissions: Read
_rdata segment para public 'DATA' use64
assume cs:_rdata
;org 7FF6E345D2B0h
__guard_check_icall_fptr dq offset _guard_check_icall_nop
__guard_xfg_check_icall_fptr dq offset _guard_check_icall_nop
__guard_dispatch_icall_fptr dq offset _guard_dispatch_icall_nop
__guard_xfg_dispatch_icall_fptr dq offset _guard_xfg_dispatch_icall_nop
__guard_xfg_table_dispatch_icall_fptr dq offset _guard_xfg_dispatch_icall_nop
__castguard_check_failure_os_handled_fptr db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
off_7FF6E345D2E0 dq offset memcpy
unk_7FF6E345D2E8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset ?pre_cpp_initialization@@YAXXZ ; pre_cpp_initialization(void)
dq offset sub_7FF6E3431038
dq offset sub_7FF6E3431138
dq offset ??__Efout@std@@YAXXZ ; std::`dynamic initializer for 'fout''(void)
dq offset sub_7FF6E3431070
dq offset sub_7FF6E34310F0
dq offset sub_7FF6E3431158
dq offset sub_7FF6E3431178
dq offset sub_7FF6E3431064
dq offset ??__Eclassic_locale@std@@YAXXZ ; std::`dynamic initializer for 'classic_locale''(void)
dq offset sub_7FF6E3431000
dq offset sub_7FF6E3431020
unk_7FF6E345D350 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E345D358 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset ?pre_c_initialization@@YAHXZ ; pre_c_initialization(void)
dq offset ?post_pgo_initialization@@YAHXZ ; post_pgo_initialization(void)
dq offset sub_7FF6E3444778
dq offset __acrt_initialize_timeset
dq offset sub_7FF6E3458E24
dq offset sub_7FF6E3453D58
dq offset sub_7FF6E345A960
unk_7FF6E345D398 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E345D3A0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset __acrt_uninitialize_locale
dq offset sub_7FF6E3459CF0
dq offset __acrt_uninitialize_stdio
unk_7FF6E345D3C0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E345D3C8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E345D3D0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const struct __crt_win32_buffer_empty_debug_info unk_7FF6E345D3E0
unk_7FF6E345D3E0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E3468680
off_7FF6E345D3F0 dq offset sub_7FF6E3434AE0
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
aUnknownExcepti db 'Unknown exception',0
align 8
dq offset unk_7FF6E34687D8
off_7FF6E345D420 dq offset sub_7FF6E3434A20
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
dq offset unk_7FF6E34686F8
off_7FF6E345D438 dq offset sub_7FF6E3434A60
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
; const char aBadArrayNewLen[]
aBadArrayNewLen db 'bad array new length',0
align 20h
aStringTooLong db 'string too long',0
dq offset unk_7FF6E3468800
off_7FF6E345D478 dq offset sub_7FF6E3434A20
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
dq offset unk_7FF6E34688D0
off_7FF6E345D490 dq offset sub_7FF6E34349E0
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
unk_7FF6E345D4A0 db  3Ah ; :
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E3468958
off_7FF6E345D4B0 dq offset sub_7FF6E3434BA0
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
dq offset unk_7FF6E34689E8
off_7FF6E345D4C8 dq offset sub_7FF6E34349A0
dq offset sub_7FF6E3438280
dq offset sub_7FF6E34381B0
dq offset ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition(int)
dq offset ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent(std::error_code const &,int)
dq offset sub_7FF6E3437D80
aIostream db 'iostream',0
align 8
aIostreamStream db 'iostream stream error',0
align 20h
dq offset unk_7FF6E3468A68
off_7FF6E345D528 dq offset sub_7FF6E3434A20
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
; const char aBadCast[]
aBadCast db 'bad cast',0
align 8
dq offset unk_7FF6E3468AE8
off_7FF6E345D550 dq offset sub_7FF6E3434960
dq offset _purecall
dq offset _purecall
aBadLocaleName db 'bad locale name',0
aFalse db 'false',0
align 20h
aTrue db 'true',0
align 8
dq offset unk_7FF6E3468B60
off_7FF6E345D590 dq offset sub_7FF6E3434B20
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
unk_7FF6E345D5A8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E3468C60
off_7FF6E345D5B8 dq offset sub_7FF6E3434AA0
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
dq offset unk_7FF6E3468CF0
off_7FF6E345D5D8 dq offset sub_7FF6E34348A0
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
dq offset sub_7FF6E3437B00
dq offset ?do_tolower@?$ctype@D@std@@MEBADD@Z ; std::ctype<char>::do_tolower(char)
dq offset sub_7FF6E3437BA0
dq offset ?do_toupper@?$ctype@D@std@@MEBADD@Z ; std::ctype<char>::do_toupper(char)
dq offset ?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z ; std::ctype<char>::do_widen(char const *,char const *,char *)
dq offset ?do_widen@?$ctype@D@std@@MEBADD@Z ; std::ctype<char>::do_widen(char)
dq offset ?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z ; std::ctype<char>::do_narrow(char const *,char const *,char,char *)
dq offset ?do_narrow@?$ctype@D@std@@MEBADDD@Z ; std::ctype<char>::do_narrow(char,char)
dq offset unk_7FF6E3468D88
off_7FF6E345D638 dq offset sub_7FF6E3434B60
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
; const char aIosBaseBadbitS[]
aIosBaseBadbitS db 'ios_base::badbit set',0
align 20h
aIosBaseFailbit db 'ios_base::failbit set',0
align 8
aIosBaseEofbitS db 'ios_base::eofbit set',0
align 10h
dq offset unk_7FF6E3468E20
off_7FF6E345D698 dq offset sub_7FF6E34348E0
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
dq offset ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z ; std::num_put<char,std::ostreambuf_iterator<char>>::do_put(std::ostreambuf_iterator<char>,std::ios_base &,char,void const *)
dq offset sub_7FF6E3437200
dq offset sub_7FF6E3436F40
dq offset sub_7FF6E3437680
dq offset sub_7FF6E3437590
dq offset sub_7FF6E3436E50
dq offset sub_7FF6E3436D60
dq offset sub_7FF6E3437770
; const char Format[3]
Format db '%p',0
align 4
aLu db 'Lu',0
align 8
aLd db 'Ld',0
align 4
aLu_0 db 'lu',0
align 20h
aLd_0 db 'ld',0
align 8
dq offset unk_7FF6E3468EB0
off_7FF6E345D710 dq offset sub_7FF6E3434920
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
dq offset unknown_libname_23 ; Microsoft VisualC v14 64bit runtime
dq offset unknown_libname_24 ; Microsoft VisualC v14 64bit runtime
dq offset sub_7FF6E3436CB0
dq offset sub_7FF6E3436C80
dq offset sub_7FF6E3437C10
aInvalidStringP db 'invalid string position',0
aEe db 'eE',0
align 4
aPp db 'pP',0
align 10h
word_7FF6E345D770 dw 2Eh
align 8
qword_7FF6E345D778 dq 4202A05F20000000h
aBadAllocation db 'bad allocation',0
align 10h
dq offset unk_7FF6E3468F40
off_7FF6E345D798 dq offset unknown_libname_35 ; Microsoft VisualC v14 64bit runtime
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
dq offset unk_7FF6E3468FC0
off_7FF6E345D7B0 dq offset unknown_libname_35 ; Microsoft VisualC v14 64bit runtime
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
dq offset unk_7FF6E3469048
off_7FF6E345D7C8 dq offset unknown_libname_35 ; Microsoft VisualC v14 64bit runtime
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
align 20h
db    1
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db    6
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  0Eh
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  0Fh
db    0
db    0
db    0
db  13h
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db  13h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  14h
db    0
db    0
db    0
db  13h
db    0
db    0
db    0
db  15h
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  19h
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  1Dh
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  1Eh
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  20h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  21h ; !
db    0
db    0
db    0
db  27h ; '
db    0
db    0
db    0
db  27h ; '
db    0
db    0
db    0
db  1Ch
db    0
db    0
db    0
db  32h ; 2
db    0
db    0
db    0
db  81h
db    0
db    0
db    0
db  35h ; 5
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  37h ; 7
db    0
db    0
db    0
db  13h
db    0
db    0
db    0
db  43h ; C
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  50h ; P
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  52h ; R
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  57h ; W
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  6Dh ; m
db    0
db    0
db    0
db  20h
db    0
db    0
db    0
db  6Eh ; n
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  6Fh ; o
db    0
db    0
db    0
db  26h ; &
db    0
db    0
db    0
db  70h ; p
db    0
db    0
db    0
db  1Ch
db    0
db    0
db    0
db  79h ; y
db    0
db    0
db    0
db  8Ah
db    0
db    0
db    0
db  7Bh ; {
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  83h
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  8Eh
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db  91h
db    0
db    0
db    0
db  29h ; )
db    0
db    0
db    0
db 0AAh
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db 0B7h
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db 0CEh
db    0
db    0
db    0
db  26h ; &
db    0
db    0
db    0
db 0D4h
db    0
db    0
db    0
db  27h ; '
db    0
db    0
db    0
db    2
db    1
db    0
db    0
db  8Ah
db    0
db    0
db    0
db  0Bh
db    1
db    0
db    0
db  16h
db    0
db    0
db    0
db 0E3h
db    3
db    0
db    0
db  69h ; i
db    0
db    0
db    0
db 0E6h
db    3
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0F3h
db    3
db    0
db    0
db    5
db    0
db    0
db    0
db 0F4h
db    3
db    0
db    0
db    5
db    0
db    0
db    0
db 0F5h
db    3
db    0
db    0
db    5
db    0
db    0
db    0
db 0D5h
db    4
db    0
db    0
db  0Bh
db    0
db    0
db    0
db 0B4h
db    5
db    0
db    0
db  8Ah
db    0
db    0
db    0
db  61h ; a
db    9
db    0
db    0
db  10h
db    0
db    0
db    0
db  64h ; d
db    9
db    0
db    0
db  10h
db    0
db    0
db    0
db  29h ; )
db  11h
db    0
db    0
db  16h
db    0
db    0
db    0
db  14h
db  27h ; '
db    0
db    0
db    4
db    0
db    0
db    0
db  19h
db  27h ; '
db    0
db    0
db    9
db    0
db    0
db    0
db  1Dh
db  27h ; '
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  1Eh
db  27h ; '
db    0
db    0
db  0Eh
db    0
db    0
db    0
db  26h ; &
db  27h ; '
db    0
db    0
db  16h
db    0
db    0
db    0
db  28h ; (
db  27h ; '
db    0
db    0
db  18h
db    0
db    0
db    0
db  33h ; 3
db  27h ; '
db    0
db    0
db  8Ch
db    0
db    0
db    0
db  34h ; 4
db  27h ; '
db    0
db    0
db  70h ; p
db    0
db    0
db    0
db  35h ; 5
db  27h ; '
db    0
db    0
db  67h ; g
db    0
db    0
db    0
db  36h ; 6
db  27h ; '
db    0
db    0
db  80h
db    0
db    0
db    0
db  37h ; 7
db  27h ; '
db    0
db    0
db  6Dh ; m
db    0
db    0
db    0
db  38h ; 8
db  27h ; '
db    0
db    0
db  73h ; s
db    0
db    0
db    0
db  39h ; 9
db  27h ; '
db    0
db    0
db  88h
db    0
db    0
db    0
db  3Ah ; :
db  27h ; '
db    0
db    0
db  7Bh ; {
db    0
db    0
db    0
db  3Bh ; ;
db  27h ; '
db    0
db    0
db  87h
db    0
db    0
db    0
db  3Dh ; =
db  27h ; '
db    0
db    0
db  82h
db    0
db    0
db    0
db  3Fh ; ?
db  27h ; '
db    0
db    0
db  66h ; f
db    0
db    0
db    0
db  40h ; @
db  27h ; '
db    0
db    0
db  64h ; d
db    0
db    0
db    0
db  41h ; A
db  27h ; '
db    0
db    0
db  65h ; e
db    0
db    0
db    0
db  42h ; B
db  27h ; '
db    0
db    0
db  74h ; t
db    0
db    0
db    0
db  43h ; C
db  27h ; '
db    0
db    0
db  76h ; v
db    0
db    0
db    0
db  44h ; D
db  27h ; '
db    0
db    0
db  75h ; u
db    0
db    0
db    0
db  45h ; E
db  27h ; '
db    0
db    0
db  6Ah ; j
db    0
db    0
db    0
db  46h ; F
db  27h ; '
db    0
db    0
db  6Ch ; l
db    0
db    0
db    0
db  47h ; G
db  27h ; '
db    0
db    0
db  77h ; w
db    0
db    0
db    0
db  48h ; H
db  27h ; '
db    0
db    0
db  71h ; q
db    0
db    0
db    0
db  49h ; I
db  27h ; '
db    0
db    0
db  7Eh ; ~
db    0
db    0
db    0
db  4Ch ; L
db  27h ; '
db    0
db    0
db  8Ah
db    0
db    0
db    0
db  4Dh ; M
db  27h ; '
db    0
db    0
db  6Bh ; k
db    0
db    0
db    0
db  4Fh ; O
db  27h ; '
db    0
db    0
db  26h ; &
db    0
db    0
db    0
db  51h ; Q
db  27h ; '
db    0
db    0
db  6Eh ; n
db    0
db    0
db    0
unk_7FF6E345DA80 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSuccess      ; "success"
db  66h ; f
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAddressFamilyN ; "address family not supported"
db  64h ; d
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAddressInUse ; "address in use"
db  65h ; e
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAddressNotAvai ; "address not available"
db  71h ; q
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAlreadyConnect ; "already connected"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArgumentListTo ; "argument list too long"
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArgumentOutOfD ; "argument out of domain"
db  0Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBadAddress   ; "bad address"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBadFileDescrip ; "bad file descriptor"
db  68h ; h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBadMessage   ; "bad message"
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBrokenPipe   ; "broken pipe"
db  6Ah ; j
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aConnectionAbor ; "connection aborted"
db  67h ; g
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aConnectionAlre ; "connection already in progress"
db  6Bh ; k
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aConnectionRefu ; "connection refused"
db  6Ch ; l
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aConnectionRese ; "connection reset"
db  12h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCrossDeviceLin ; "cross device link"
db  6Dh ; m
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDestinationAdd ; "destination address required"
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeviceOrResour ; "device or resource busy"
db  29h ; )
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDirectoryNotEm ; "directory not empty"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aExecutableForm ; "executable format error"
db  11h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFileExists   ; "file exists"
db  1Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFileTooLarge ; "file too large"
db  26h ; &
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFilenameTooLon ; "filename too long"
db  28h ; (
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFunctionNotSup ; "function not supported"
db  6Eh ; n
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHostUnreachabl ; "host unreachable"
db  6Fh ; o
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIdentifierRemo ; "identifier removed"
db  2Ah ; *
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIllegalByteSeq ; "illegal byte sequence"
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aInappropriateI ; "inappropriate io control operation"
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aInterrupted  ; "interrupted"
db  16h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aInvalidArgumen ; "invalid argument"
db  1Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aInvalidSeek  ; "invalid seek"
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIoError      ; "io error"
db  15h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIsADirectory ; "is a directory"
db  73h ; s
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMessageSize  ; "message size"
db  74h ; t
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNetworkDown  ; "network down"
db  75h ; u
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNetworkReset ; "network reset"
db  76h ; v
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNetworkUnreach ; "network unreachable"
db  77h ; w
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoBufferSpace ; "no buffer space"
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoChildProcess ; "no child process"
db  79h ; y
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoLink       ; "no link"
db  27h ; '
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoLockAvailabl ; "no lock available"
db  78h ; x
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoMessageAvail ; "no message available"
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoMessage    ; "no message"
db  7Bh ; {
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoProtocolOpti ; "no protocol option"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoSpaceOnDevic ; "no space on device"
db  7Ch ; |
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoStreamResour ; "no stream resources"
db    6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoSuchDeviceOr ; "no such device or address"
db  13h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoSuchDevice ; "no such device"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoSuchFileOrDi ; "no such file or directory"
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNoSuchProcess ; "no such process"
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNotADirectory ; "not a directory"
db  80h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNotASocket   ; "not a socket"
db  7Dh ; }
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNotAStream   ; "not a stream"
db  7Eh ; ~
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNotConnected ; "not connected"
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNotEnoughMemor ; "not enough memory"
db  81h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNotSupported ; "not supported"
db  69h ; i
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperationCance ; "operation canceled"
db  70h ; p
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperationInPro ; "operation in progress"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperationNotPe ; "operation not permitted"
db  82h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperationNotSu ; "operation not supported"
db  8Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperationWould ; "operation would block"
db  85h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOwnerDead    ; "owner dead"
db  0Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPermissionDeni ; "permission denied"
db  86h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aProtocolError ; "protocol error"
db  87h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aProtocolNotSup ; "protocol not supported"
db  1Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aReadOnlyFileSy ; "read only file system"
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aResourceDeadlo ; "resource deadlock would occur"
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aResourceUnavai ; "resource unavailable try again"
db  22h ; "
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aResultOutOfRan ; "result out of range"
db  7Fh ; 
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aStateNotRecove ; "state not recoverable"
db  89h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aStreamTimeout ; "stream timeout"
db  8Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTextFileBusy ; "text file busy"
db  8Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTimedOut     ; "timed out"
db  17h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTooManyFilesOp ; "too many files open in system"
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTooManyFilesOp_0 ; "too many files open"
db  1Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTooManyLinks ; "too many links"
db  72h ; r
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTooManySymboli ; "too many symbolic link levels"
db  84h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aValueTooLarge ; "value too large"
db  88h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aWrongProtocolT ; "wrong protocol type"
aSuccess db 'success',0
aAddressFamilyN db 'address family not supported',0
align 8
aAddressInUse db 'address in use',0
align 8
aAddressNotAvai db 'address not available',0
align 20h
aAlreadyConnect db 'already connected',0
align 8
aArgumentListTo db 'argument list too long',0
align 10h
aArgumentOutOfD db 'argument out of domain',0
align 8
aBadAddress db 'bad address',0
align 8
aBadFileDescrip db 'bad file descriptor',0
align 10h
aBadMessage db 'bad message',0
align 20h
aBrokenPipe db 'broken pipe',0
align 10h
aConnectionAbor db 'connection aborted',0
align 8
aConnectionAlre db 'connection already in progress',0
align 8
aConnectionRefu db 'connection refused',0
align 20h
aConnectionRese db 'connection reset',0
align 8
aCrossDeviceLin db 'cross device link',0
align 10h
aDestinationAdd db 'destination address required',0
align 10h
aDeviceOrResour db 'device or resource busy',0
aDirectoryNotEm db 'directory not empty',0
align 20h
aExecutableForm db 'executable format error',0
aFileExists db 'file exists',0
align 8
aFileTooLarge db 'file too large',0
align 8
aFilenameTooLon db 'filename too long',0
align 10h
aFunctionNotSup db 'function not supported',0
align 8
aHostUnreachabl db 'host unreachable',0
align 20h
aIdentifierRemo db 'identifier removed',0
align 8
aIllegalByteSeq db 'illegal byte sequence',0
align 10h
aInappropriateI db 'inappropriate io control operation',0
align 8
aInterrupted db 'interrupted',0
align 8
aInvalidArgumen db 'invalid argument',0
align 20h
aInvalidSeek db 'invalid seek',0
align 10h
aIoError db 'io error',0
align 20h
aIsADirectory db 'is a directory',0
align 10h
aMessageSize db 'message size',0
align 20h
aNetworkDown db 'network down',0
align 10h
aNetworkReset db 'network reset',0
align 20h
aNetworkUnreach db 'network unreachable',0
align 8
aNoBufferSpace db 'no buffer space',0
aNoChildProcess db 'no child process',0
align 20h
aNoLink db 'no link',0
aNoLockAvailabl db 'no lock available',0
align 20h
aNoMessageAvail db 'no message available',0
align 8
aNoMessage db 'no message',0
align 8
aNoProtocolOpti db 'no protocol option',0
align 20h
aNoSpaceOnDevic db 'no space on device',0
align 8
aNoStreamResour db 'no stream resources',0
align 10h
aNoSuchDeviceOr db 'no such device or address',0
align 10h
aNoSuchDevice db 'no such device',0
align 20h
aNoSuchFileOrDi db 'no such file or directory',0
align 20h
aNoSuchProcess db 'no such process',0
aNotADirectory db 'not a directory',0
aNotASocket db 'not a socket',0
align 10h
aNotAStream db 'not a stream',0
align 20h
aNotConnected db 'not connected',0
align 10h
aNotEnoughMemor db 'not enough memory',0
align 8
aNotSupported db 'not supported',0
align 8
aOperationCance db 'operation canceled',0
align 10h
aOperationInPro db 'operation in progress',0
align 8
aOperationNotPe db 'operation not permitted',0
aOperationNotSu db 'operation not supported',0
aOperationWould db 'operation would block',0
align 10h
aOwnerDead db 'owner dead',0
align 20h
aPermissionDeni db 'permission denied',0
align 8
aProtocolError db 'protocol error',0
align 8
aProtocolNotSup db 'protocol not supported',0
align 20h
aReadOnlyFileSy db 'read only file system',0
align 8
aResourceDeadlo db 'resource deadlock would occur',0
align 8
aResourceUnavai db 'resource unavailable try again',0
align 8
aResultOutOfRan db 'result out of range',0
align 10h
aStateNotRecove db 'state not recoverable',0
align 8
aStreamTimeout db 'stream timeout',0
align 8
aTextFileBusy db 'text file busy',0
align 8
aTimedOut db 'timed out',0
align 8
aTooManyFilesOp db 'too many files open in system',0
align 8
aTooManyFilesOp_0 db 'too many files open',0
align 10h
aTooManyLinks db 'too many links',0
align 20h
aTooManySymboli db 'too many symbolic link levels',0
align 20h
aValueTooLarge db 'value too large',0
aWrongProtocolT db 'wrong protocol type',0
align 8
aUnknownError db 'unknown error',0
align 8
dq offset unk_7FF6E34690D0
off_7FF6E345E640 dq offset ??_G_Locimp@locale@std@@MEAAPEAXI@Z ; std::locale::_Locimp::`scalar deleting destructor'(uint)
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
unk_7FF6E345E658 db  2Ah ; *
db    0
db    0
db    0
unk_7FF6E345E65C db  43h ; C
db    0
db    0
db    0
dq offset unk_7FF6E3469160
off_7FF6E345E668 dq offset ??_Gios_base@std@@UEAAPEAXI@Z ; std::ios_base::`scalar deleting destructor'(uint)
dq offset unk_7FF6E3469258
off_7FF6E345E678 dq offset unknown_libname_37 ; Microsoft VisualC v14 64bit runtime
dq offset unk_7FF6E34693D0
off_7FF6E345E688 dq offset sub_7FF6E34398AC
unk_7FF6E345E690 db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
dq offset unk_7FF6E34692E0
off_7FF6E345E6A0 dq offset sub_7FF6E3439990
dq offset _guard_check_icall_nop
dq offset _guard_check_icall_nop
dq offset sub_7FF6E343A2B0
dq offset sub_7FF6E343A2B0
dq offset sub_7FF6E343A644
dq offset sub_7FF6E343A2B0
dq offset ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::streambuf::uflow(void)
dq offset ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::streambuf::xsgetn(char *,__int64)
dq offset ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::streambuf::xsputn(char const *,__int64)
dq offset unknown_libname_42 ; Microsoft VisualC v14 64bit runtime
dq offset unknown_libname_42 ; Microsoft VisualC v14 64bit runtime
dq offset sub_7FF6E343A640
dq offset sub_7FF6E343A644
dq offset _guard_check_icall_nop
dq offset unk_7FF6E3469460
off_7FF6E345E720 dq offset ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::filebuf::`scalar deleting destructor'(uint)
dq offset unknown_libname_39 ; Microsoft VisualC v14 64bit runtime
dq offset unknown_libname_40 ; Microsoft VisualC v14 64bit runtime
dq offset ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::filebuf::overflow(int)
dq offset ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::filebuf::pbackfail(int)
dq offset sub_7FF6E343A644
dq offset ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::filebuf::underflow(void)
dq offset sub_7FF6E343A698
dq offset ?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::filebuf::xsgetn(char *,__int64)
dq offset ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::filebuf::xsputn(char const *,__int64)
dq offset ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::filebuf::seekoff(__int64,int,int)
dq offset ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::filebuf::seekpos(std::fpos<_Mbstatet>,int)
dq offset ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ; std::filebuf::setbuf(char *,__int64)
dq offset ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::filebuf::sync(void)
dq offset sub_7FF6E343A04C
dq offset unk_7FF6E3469548
off_7FF6E345E7A0 dq offset sub_7FF6E3439A1C
dq offset unknown_libname_16 ; Microsoft VisualC v14 64bit runtime
dq offset ?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ ; std::locale::facet::_Decref(void)
dq offset sub_7FF6E3439FF8
dq offset ?raw_length@charNode@@UEBAHXZ ; charNode::raw_length(void)
dq offset ?raw_length@charNode@@UEBAHXZ ; charNode::raw_length(void)
dq offset unknown_libname_41 ; Microsoft VisualC v14 64bit runtime
dq offset unknown_libname_41 ; Microsoft VisualC v14 64bit runtime
dq offset ?do_unshift@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z ; std::codecvt<char,char,_Mbstatet>::do_unshift(_Mbstatet &,char *,char *,char * &)
dq offset ?do_length@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z ; std::codecvt<char,char,_Mbstatet>::do_length(_Mbstatet &,char const *,char const *,unsigned __int64)
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    1
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
xmmword_7FF6E345E8F0 xmmword 7FFFFFFFFFFFFFFF7FFFFFFFFFFFFFFFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
xmmword_7FF6E345E910 xmmword 0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFh
unk_7FF6E345E920 db    0
db    0
db    0
db    0
; const wchar_t word_7FF6E345E924
word_7FF6E345E924 dw 2Dh
align 8
unk_7FF6E345E928 db  2Dh ; -
db    0
db    0
db    0
db    0
db    0
db    0
db    0
xmmword_7FF6E345E930 xmmword 80000000000000008000000000000000h
a0123456789abcd db '0123456789abcdefghijklmnopqrstuvwxy'
db 'z',0
db    0
db    0
db    0
db    0
db    0
db  21h ; !
db  15h
db  11h
db  0Eh
db  0Dh
db  0Ch
db  0Bh
db  0Bh
db  0Ah
db  0Ah
db    9
db    9
db    9
db    9
db    9
db    8
db    8
db    8
db    8
db    8
db    8
db    8
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    7
db    0
db    0
db    0
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  29h ; )
db  21h ; !
db  1Ch
db  19h
db  17h
db  16h
db  15h
db  14h
db  13h
db  12h
db  12h
db  11h
db  11h
db  11h
db  10h
db  10h
db  10h
db  0Fh
db  0Fh
db  0Fh
db  0Fh
db  0Eh
db  0Eh
db  0Eh
db  0Eh
db  0Eh
db  0Eh
db  0Eh
db  0Dh
db  0Dh
db  0Dh
db  0Dh
db  0Dh
db  0Dh
db    0
db    0
db    0
dq offset unk_7FF6E34695E0
off_7FF6E345E9E8 dq offset sub_7FF6E343B330
; const struct _EXCEPTION_POINTERS ExceptionInfo
ExceptionInfo _EXCEPTION_POINTERS <offset dword_7FF6E346E7F0,\
                     offset ContextRecord>
db 0FFh
db 0FEh
db 0FFh
db 0FDh
db 0FFh
db 0FEh
db 0FFh
db 0FCh
db 0FFh
db 0FEh
db 0FFh
db 0FDh
db 0FFh
db 0FEh
db 0FFh
db 0FBh
db  19h
db  12h
db  19h
db  0Bh
db  19h
db  12h
db  19h
db    4
db  19h
db  12h
db  19h
db  0Bh
db  19h
db  12h
db  19h
db    0
unk_7FF6E345EA20 db  29h ; )
db    0
db    0
db  80h
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db    5
db  93h
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E345EAC0 db  29h ; )
db    0
db    0
db  80h
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db    5
db  93h
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
off_7FF6E345EB58 dq offset __DestructExceptionObject
dq offset unk_7FF6E3469658
off_7FF6E345EB68 dq offset unknown_libname_35 ; Microsoft VisualC v14 64bit runtime
dq offset ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z ; get_unexpected_or_default(__vcrt_ptd const * const)
aBadException db 'bad exception',0
align 10h
dq offset aBased        ; "__based("
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCdecl        ; "__cdecl"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPascal       ; "__pascal"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aStdcall      ; "__stdcall"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aThiscall     ; "__thiscall"
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFastcall     ; "__fastcall"
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorcall   ; "__vectorcall"
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aClrcall      ; "__clrcall"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEabi         ; "__eabi"
db    6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSwift1       ; "__swift_1"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSwift2       ; "__swift_2"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSwift3       ; "__swift_3"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPtr64        ; "__ptr64"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRestrict     ; "__restrict"
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUnaligned    ; "__unaligned"
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRestrict_0   ; "restrict("
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345D5A8
align 20h
dq offset aNew          ; " new"
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDelete       ; " delete"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F398 ; "="
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F39C ; ">>"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3A0 ; "<<"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3A4 ; "!"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3A8 ; "=="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3AC ; "!="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3B0 ; "[]"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperator     ; "operator"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3C4 ; "->"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345E658
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3C8 ; "++"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3CC ; "--"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345E928
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3D0 ; "+"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3D4 ; "&"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3D8 ; "->*"
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3DC ; "/"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3E0 ; "%"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3E4 ; "<"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3E8 ; "<="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3EC ; ">"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3F0 ; ">="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3F4 ; ","
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3F8 ; "()"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3FC ; "~"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F400 ; "^"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F404 ; "|"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F408 ; "&&"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F40C ; "||"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F410 ; "*="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F414 ; "+="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F418 ; "-="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F41C ; "/="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F420 ; "%="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F424 ; ">>="
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F428 ; "<<="
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F42C ; "&="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F430 ; "|="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F434 ; "^="
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVftable      ; "`vftable'"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVbtable      ; "`vbtable'"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVcall        ; "`vcall'"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTypeof       ; "`typeof'"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLocalStaticGua ; "`local static guard'"
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aString       ; "`string'"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVbaseDestructo ; "`vbase destructor'"
db  12h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorDeleting ; "`vector deleting destructor'"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDefaultConstru ; "`default constructor closure'"
db  1Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aScalarDeleting ; "`scalar deleting destructor'"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorConstruc ; "`vector constructor iterator'"
db  1Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorDestruct ; "`vector destructor iterator'"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorVbaseCon ; "`vector vbase constructor iterator'"
db  23h ; #
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVirtualDisplac ; "`virtual displacement map'"
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEhVectorConstr ; "`eh vector constructor iterator'"
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEhVectorDestru ; "`eh vector destructor iterator'"
db  1Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEhVectorVbaseC ; "`eh vector vbase constructor iterator'"
db  26h ; &
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCopyConstructo ; "`copy constructor closure'"
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUdtReturning ; "`udt returning'"
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEh           ; "`EH"
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRtti         ; "`RTTI"
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLocalVftable ; "`local vftable'"
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLocalVftableCo ; "`local vftable constructor closure'"
db  23h ; #
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNew_0        ; " new[]"
db    6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDelete_0     ; " delete[]"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOmniCallsig  ; "`omni callsig'"
db  0Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPlacementDelet ; "`placement delete closure'"
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPlacementDelet_0 ; "`placement delete[] closure'"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aManagedVectorC ; "`managed vector constructor iterator'"
db  25h ; %
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aManagedVectorD ; "`managed vector destructor iterator'"
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEhVectorCopyCo ; "`eh vector copy constructor iterator'"
db  25h ; %
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEhVectorVbaseC_0 ; "`eh vector vbase copy constructor itera"...
db  2Bh ; +
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDynamicInitial ; "`dynamic initializer for '"
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDynamicAtexitD ; "`dynamic atexit destructor for '"
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorCopyCons ; "`vector copy constructor iterator'"
db  22h ; "
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVectorVbaseCop ; "`vector vbase copy constructor iterator"...
db  28h ; (
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aManagedVectorC_0 ; "`managed vector copy constructor iterat"...
db  2Ah ; *
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLocalStaticThr ; "`local static thread guard'"
db  1Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperator_0   ; "operator \"\" "
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperatorCoAwai ; "operator co_await"
db  11h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aOperator_1   ; "operator<=>"
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345D5A8
align 10h
dq offset aTypeDescriptor ; " Type Descriptor'"
db  11h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBaseClassDescr ; " Base Class Descriptor at ("
db  1Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBaseClassArray ; " Base Class Array'"
db  12h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aClassHierarchy ; " Class Hierarchy Descriptor'"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCompleteObject ; " Complete Object Locator'"
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345D5A8
align 10h
dq offset unk_7FF6E345E658
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3D4 ; "&"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F408 ; "&&"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F400 ; "^"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset asc_7FF6E345F3E0 ; "%"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aString       ; "`string'"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAnonymousNames ; "`anonymous namespace'"
db  15h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
aBased db '__based(',0
align 10h
aCdecl db '__cdecl',0
aPascal db '__pascal',0
align 8
aStdcall db '__stdcall',0
align 8
aThiscall db '__thiscall',0
align 8
aFastcall db '__fastcall',0
align 8
aVectorcall db '__vectorcall',0
align 8
aClrcall db '__clrcall',0
align 4
aEabi db '__eabi',0
align 20h
aSwift1 db '__swift_1',0
align 10h
aSwift2 db '__swift_2',0
align 20h
aSwift3 db '__swift_3',0
align 10h
aPtr64 db '__ptr64',0
aRestrict db '__restrict',0
align 8
aUnaligned db '__unaligned',0
align 8
aRestrict_0 db 'restrict(',0
align 4
aNew db ' new',0
align 10h
aDelete db ' delete',0
asc_7FF6E345F398 db '=',0
align 4
asc_7FF6E345F39C db '>>',0
align 20h
asc_7FF6E345F3A0 db '<<',0
align 4
asc_7FF6E345F3A4 db '!',0
align 8
asc_7FF6E345F3A8 db '==',0
align 4
asc_7FF6E345F3AC db '!=',0
align 10h
asc_7FF6E345F3B0 db '[]',0
align 8
aOperator db 'operator',0
align 4
asc_7FF6E345F3C4 db '->',0
align 8
asc_7FF6E345F3C8 db '++',0
align 4
asc_7FF6E345F3CC db '--',0
align 10h
asc_7FF6E345F3D0 db '+',0
align 4
asc_7FF6E345F3D4 db '&',0
align 8
asc_7FF6E345F3D8 db '->*',0
asc_7FF6E345F3DC db '/',0
align 20h
asc_7FF6E345F3E0 db '%',0
align 4
asc_7FF6E345F3E4 db '<',0
align 8
asc_7FF6E345F3E8 db '<=',0
align 4
asc_7FF6E345F3EC db '>',0
align 10h
asc_7FF6E345F3F0 db '>=',0
align 4
asc_7FF6E345F3F4 db ',',0
align 8
asc_7FF6E345F3F8 db '()',0
align 4
asc_7FF6E345F3FC db '~',0
align 20h
asc_7FF6E345F400 db '^',0
align 4
asc_7FF6E345F404 db '|',0
align 8
asc_7FF6E345F408 db '&&',0
align 4
asc_7FF6E345F40C db '||',0
align 10h
asc_7FF6E345F410 db '*=',0
align 4
asc_7FF6E345F414 db '+=',0
align 8
asc_7FF6E345F418 db '-=',0
align 4
asc_7FF6E345F41C db '/=',0
align 20h
asc_7FF6E345F420 db '%=',0
align 4
asc_7FF6E345F424 db '>>=',0
asc_7FF6E345F428 db '<<=',0
asc_7FF6E345F42C db '&=',0
align 10h
asc_7FF6E345F430 db '|=',0
align 4
asc_7FF6E345F434 db '^=',0
align 8
aVftable db '`vftable',27h,0
align 8
aVbtable db '`vbtable',27h,0
align 8
aVcall db '`vcall',27h,0
aTypeof db '`typeof',27h,0
align 10h
aLocalStaticGua db '`local static guard',27h,0
align 8
aString db '`string',27h,0
align 8
aVbaseDestructo db '`vbase destructor',27h,0
align 10h
aVectorDeleting db '`vector deleting destructor',27h,0
align 10h
aDefaultConstru db '`default constructor closure',27h,0
align 10h
aScalarDeleting db '`scalar deleting destructor',27h,0
align 10h
aVectorConstruc db '`vector constructor iterator',27h,0
align 10h
aVectorDestruct db '`vector destructor iterator',27h,0
align 10h
aVectorVbaseCon db '`vector vbase constructor iterator',27h
db 0
align 8
aVirtualDisplac db '`virtual displacement map',27h,0
align 8
aEhVectorConstr db '`eh vector constructor iterator',27h
db 0
align 20h
aEhVectorDestru db '`eh vector destructor iterator',27h
db 0
aEhVectorVbaseC db '`eh vector vbase constructor iterat'
db 'or',27h,0
align 8
aCopyConstructo db '`copy constructor closure',27h,0
align 8
aUdtReturning db '`udt returning',27h,0
aEh db '`EH',0
aRtti db '`RTTI',0
align 8
aLocalVftable db '`local vftable',27h,0
aLocalVftableCo db '`local vftable constructor closure',27h
db 0
aNew_0 db ' new[]',0
align 8
aDelete_0 db ' delete[]',0
align 8
aOmniCallsig db '`omni callsig',27h,0
align 8
aPlacementDelet db '`placement delete closure',27h,0
align 8
aPlacementDelet_0 db '`placement delete[] closure',27h,0
align 8
aManagedVectorC db '`managed vector constructor iterato'
db 'r',27h,0
align 10h
aManagedVectorD db '`managed vector destructor iterator'
db 27h,0
align 8
aEhVectorCopyCo db '`eh vector copy constructor iterato'
db 'r',27h,0
align 20h
aEhVectorVbaseC_0 db '`eh vector vbase copy constructor i'
db 'terator',27h,0
align 10h
aDynamicInitial db '`dynamic initializer for ',27h,0
align 10h
aDynamicAtexitD db '`dynamic atexit destructor for ',27h
db 0
align 8
aVectorCopyCons db '`vector copy constructor iterator',27h
db 0
align 20h
aVectorVbaseCop db '`vector vbase copy constructor iter'
db 'ator',27h,0
align 10h
aManagedVectorC_0 db '`managed vector copy constructor it'
db 'erator',27h,0
align 20h
aLocalStaticThr db '`local static thread guard',27h,0
align 20h
aOperator_0 db 'operator "" ',0
align 10h
aOperatorCoAwai db 'operator co_await',0
align 8
aOperator_1 db 'operator<=>',0
align 8
aTypeDescriptor db ' Type Descriptor',27h,0
align 10h
aBaseClassDescr db ' Base Class Descriptor at (',0
align 10h
aBaseClassArray db ' Base Class Array',27h,0
align 8
aClassHierarchy db ' Class Hierarchy Descriptor',27h,0
align 8
aCompleteObject db ' Complete Object Locator',27h,0
align 8
aAnonymousNames db '`anonymous namespace',27h,0
align 20h
off_7FF6E345F960 dq offset aApiMsWinCoreFi ; "api-ms-win-core-fibers-l1-1-1"
dq offset aApiMsWinCoreSy ; "api-ms-win-core-synch-l1-2-0"
dq offset aKernel32     ; "kernel32"
aApiMsWinCoreFi:
text "UTF-16LE", 'api-ms-win-core-fiber'
text "UTF-16LE", 's-l1-1-1',0
align 8
aApiMsWinCoreSy:
text "UTF-16LE", 'api-ms-win-core-synch'
text "UTF-16LE", '-l1-2-0',0
align 8
aKernel32:
text "UTF-16LE", 'kernel32',0
align 10h
; const wchar_t String2
String2:
text "UTF-16LE", 'api-ms-',0
unk_7FF6E345FA20 db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
aFlsalloc db 'FlsAlloc',0
align 8
unk_7FF6E345FA38 db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
aFlsfree db 'FlsFree',0
unk_7FF6E345FA48 db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
aFlsgetvalue db 'FlsGetValue',0
align 20h
unk_7FF6E345FA60 db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
aFlssetvalue db 'FlsSetValue',0
align 8
unk_7FF6E345FA78 db    1
db    0
db    0
db    0
db    2
db    0
db    0
db    0
aInitializecrit db 'InitializeCriticalSectionEx',0
align 20h
qword_7FF6E345FAA0 dq 7FF0000000000000h
qword_7FF6E345FAA8 dq 7FEFFFFFFFFFFFFFh
qword_7FF6E345FAB0 dq 3FF0000000000000h
align 20h
unk_7FF6E345FAC0 db    0
db    6
db    8
db    0
db    8
db    0
db    8
db    6
db    8
db    0
db    8
db    1
db    8
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    3
db    8
db    6
db    8
db    0
db    8
db    6
db    8
db    2
db    8
db    0
db    1
db    4
db    0
db    5
db    0
db    5
db    4
db    5
db    4
db    5
db    4
db    5
db    8
db    5
db    8
db    5
db    8
db    5
db    0
db    5
db    0
db    0
db    0
db    0
db    3
db    0
db    3
db    0
db    8
db    0
db    5
db    0
db    8
db    0
db    8
db    8
db    0
db    0
db    0
db    8
db    0
db    0
db    2
db    8
db    2
db    7
db    3
db    8
db    5
db    0
db    5
db    7
db    8
db    0
db    0
db    0
db    0
db    7
db    0
db    0
db    3
db    7
db    3
db    0
db    3
db    0
db    5
db    0
db    5
db    0
db    8
db    8
db    0
db    7
db    0
db    0
db    0
db    0
db    2
db    0
db    2
db    8
db    8
db    0
db    8
db    8
db    8
db    0
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    6
db    0
db    6
db    8
db    6
db    0
db    6
db    8
db    6
db    8
db    6
db    8
db    0
db    8
db    0
db    8
db    0
db    7
db    7
db    8
db    7
db    7
db    7
db    0
db    7
db    7
db    7
db    0
db    7
db    0
db    0
db    8
db    0
db    8
db    0
db    0
db    0
db    0
db    0
db    8
db    0
db    7
db    0
db    8
db    0
db    0
db    0
db    7
db    0
db    8
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
stru_7FF6E345FBC0 FuncInfo <19930522h, 1, \
          rva stru_7FF6E346AA50, 0, 0, \
          2, rva stru_7FF6E346AA58, 56, \
          0, 5>
aNull_0:
text "UTF-16LE", '(null)',0
align 8
aNull db '(null)',0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
asc_7FF6E345FD00:
text "UTF-16LE", '         (((((       '
text "UTF-16LE", '           H'
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
unk_7FF6E345FF80 db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
unk_7FF6E3460100 db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
public _wctype
; const unsigned __int16 wctype[]
_wctype db    0
db    0
unk_7FF6E3460202 db  20h
db    0
asc_7FF6E3460204:
text "UTF-16LE", '        (((((        '
text "UTF-16LE", '          H'
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  82h
db    1
db  82h
db    1
db  82h
db    1
db  82h
db    1
db  82h
db    1
db  82h
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  28h ; (
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db    8
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  12h
db    1
db  10h
db    0
db  10h
db    0
db  30h ; 0
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  14h
db    0
db  14h
db    0
db  10h
db    0
db  12h
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  14h
db    0
db  12h
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db  10h
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db  10h
db    0
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    1
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3460410 db    1
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db    6
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  0Fh
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  21h ; !
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  35h ; 5
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  41h ; A
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  43h ; C
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  50h ; P
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  52h ; R
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  53h ; S
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  57h ; W
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  59h ; Y
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  6Ch ; l
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  6Dh ; m
db    0
db    0
db    0
db  20h
db    0
db    0
db    0
db  70h ; p
db    0
db    0
db    0
db  1Ch
db    0
db    0
db    0
db  72h ; r
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  80h
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  81h
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  82h
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  83h
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  84h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  91h
db    0
db    0
db    0
db  29h ; )
db    0
db    0
db    0
db  9Eh
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0A1h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0A4h
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db 0A7h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0B7h
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db 0CEh
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0D7h
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  59h ; Y
db    4
db    0
db    0
db  2Ah ; *
db    0
db    0
db    0
db  18h
db    7
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3460580 db    0
db 0E4h
db  0Bh
db  54h ; T
db    2
db    0
db    0
db    0
db    0
db    0
db  10h
db  63h ; c
db  2Dh ; -
db  5Eh ; ^
db 0C7h
db  6Bh ; k
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db 0EAh
db 0EDh
db  74h ; t
db  46h ; F
db 0D0h
db  9Ch
db  2Ch ; ,
db  9Fh
db  0Ch
db    0
db    0
db    0
db    0
db  61h ; a
db 0F5h
db 0B9h
db 0ABh
db 0BFh
db 0A4h
db  5Ch ; \
db 0C3h
db 0F1h
db  29h ; )
db  63h ; c
db  1Dh
db    0
db    0
db    0
db    0
db    0
db  64h ; d
db 0B5h
db 0FDh
db  34h ; 4
db    5
db 0C4h
db 0D2h
db  87h
db  66h ; f
db  92h
db 0F9h
db  15h
db  3Bh ; ;
db  6Ch ; l
db  44h ; D
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db 0D9h
db  90h
db  65h ; e
db  94h
db  2Ch ; ,
db  42h ; B
db  62h ; b
db 0D7h
db    1
db  45h ; E
db  22h ; "
db  9Ah
db  17h
db  26h ; &
db  27h ; '
db  4Fh ; O
db  9Fh
db    0
db    0
db    0
db  40h ; @
db    2
db  95h
db    7
db 0C1h
db  89h
db  56h ; V
db  24h ; $
db  1Ch
db 0A7h
db 0FAh
db 0C5h
db  67h ; g
db  6Dh ; m
db 0C8h
db  73h ; s
db 0DCh
db  6Dh ; m
db 0ADh
db 0EBh
db  72h ; r
db    1
db    0
db    0
db    0
db    0
db 0C1h
db 0CEh
db  64h ; d
db  27h ; '
db 0A2h
db  63h ; c
db 0CAh
db  18h
db 0A4h
db 0EFh
db  25h ; %
db  7Bh ; {
db 0D1h
db 0CDh
db  70h ; p
db 0EFh
db 0DFh
db  6Bh ; k
db  1Fh
db  3Eh ; >
db 0EAh
db  9Dh
db  5Fh ; _
db    3
db    0
db    0
db    0
db    0
db    0
db 0E4h
db  6Eh ; n
db 0FEh
db 0C3h
db 0CDh
db  6Ah ; j
db  0Ch
db 0BCh
db  66h ; f
db  32h ; 2
db  1Fh
db  39h ; 9
db  2Eh ; .
db    3
db    2
db  45h ; E
db  5Ah ; Z
db  25h ; %
db 0F8h
db 0D2h
db  71h ; q
db  56h ; V
db  4Ah ; J
db 0C2h
db 0C3h
db 0DAh
db    7
db    0
db    0
db  10h
db  8Fh
db  2Eh ; .
db 0A8h
db    8
db  43h ; C
db 0B2h
db 0AAh
db  7Ch ; |
db  1Ah
db  21h ; !
db  8Eh
db  40h ; @
db 0CEh
db  8Ah
db 0F3h
db  0Bh
db 0CEh
db 0C4h
db  84h
db  27h ; '
db  0Bh
db 0EBh
db  7Ch ; |
db 0C3h
db  94h
db  25h ; %
db 0ADh
db  49h ; I
db  12h
db    0
db    0
db    0
db  40h ; @
db  1Ah
db 0DDh
db 0DAh
db  54h ; T
db  9Fh
db 0CCh
db 0BFh
db  61h ; a
db  59h ; Y
db 0DCh
db 0ABh
db 0ABh
db  5Ch ; \
db 0C7h
db  0Ch
db  44h ; D
db    5
db 0F5h
db  67h ; g
db  16h
db 0BCh
db 0D1h
db  52h ; R
db 0AFh
db 0B7h
db 0FBh
db  29h ; )
db  8Dh
db  8Fh
db  60h ; `
db  94h
db  2Ah ; *
db    0
db    0
db    0
db    0
db    0
db  21h ; !
db  0Ch
db  8Ah
db 0BBh
db  17h
db 0A4h
db  8Eh
db 0AFh
db  56h ; V
db 0A9h
db  9Fh
db  47h ; G
db    6
db  36h ; 6
db 0B2h
db  4Bh ; K
db  5Dh ; ]
db 0E0h
db  5Fh ; _
db 0DCh
db  80h
db  0Ah
db 0AAh
db 0FEh
db 0F0h
db  40h ; @
db 0D9h
db  8Eh
db 0A8h
db 0D0h
db  80h
db  1Ah
db  6Bh ; k
db  23h ; #
db  63h ; c
db    0
db    0
db  64h ; d
db  38h ; 8
db  4Ch ; L
db  32h ; 2
db  96h
db 0C7h
db  57h ; W
db  83h
db 0D5h
db  42h ; B
db  4Ah ; J
db 0E4h
db  61h ; a
db  22h ; "
db 0A9h
db 0D9h
db  3Dh ; =
db  10h
db  3Ch ; <
db 0BDh
db  72h ; r
db 0F3h
db 0E5h
db  91h
db  74h ; t
db  15h
db  59h ; Y
db 0C0h
db  0Dh
db 0A6h
db  1Dh
db 0ECh
db  6Ch ; l
db 0D9h
db  2Ah ; *
db  10h
db 0D3h
db 0E6h
db    0
db    0
db    0
db  10h
db  85h
db  1Eh
db  5Bh ; [
db  61h ; a
db  4Fh ; O
db  6Eh ; n
db  69h ; i
db  2Ah ; *
db  7Bh ; {
db  18h
db  1Ch
db 0E2h
db  50h ; P
db    4
db  2Bh ; +
db  34h ; 4
db 0DDh
db  2Fh ; /
db 0EEh
db  27h ; '
db  50h ; P
db  63h ; c
db  99h
db  71h ; q
db 0C9h
db 0A6h
db  16h
db 0E9h
db  4Ah ; J
db  8Eh
db  28h ; (
db  2Eh ; .
db    8
db  17h
db  6Fh ; o
db  6Eh ; n
db  49h ; I
db  1Ah
db  6Eh ; n
db  19h
db    2
db    0
db    0
db    0
db  40h ; @
db  32h ; 2
db  26h ; &
db  40h ; @
db 0ADh
db    4
db  50h ; P
db  72h ; r
db  1Eh
db 0F9h
db 0D5h
db 0D1h
db  94h
db  29h ; )
db 0BBh
db 0CDh
db  5Bh ; [
db  66h ; f
db  96h
db  2Eh ; .
db  3Bh ; ;
db 0A2h
db 0DBh
db  7Dh ; }
db 0FAh
db  65h ; e
db 0ACh
db  53h ; S
db 0DEh
db  77h ; w
db  9Bh
db 0A2h
db  20h
db 0B0h
db  53h ; S
db 0F9h
db 0BFh
db 0C6h
db 0ABh
db  25h ; %
db  94h
db  4Bh ; K
db  4Dh ; M
db 0E3h
db    4
db    0
db  81h
db  2Dh ; -
db 0C3h
db 0FBh
db 0F4h
db 0D0h
db  22h ; "
db  52h ; R
db  50h ; P
db  28h ; (
db  0Fh
db 0B7h
db 0F3h
db 0F2h
db  13h
db  57h ; W
db  13h
db  14h
db  42h ; B
db 0DCh
db  7Dh ; }
db  5Dh ; ]
db  39h ; 9
db 0D6h
db  99h
db  19h
db  59h ; Y
db 0F8h
db  1Ch
db  38h ; 8
db  92h
db    0
db 0D6h
db  14h
db 0B3h
db  86h
db 0B9h
db  77h ; w
db 0A5h
db  7Ah ; z
db  61h ; a
db 0FEh
db 0B7h
db  12h
db  6Ah ; j
db  61h ; a
db  0Bh
db    0
db    0
db 0E4h
db  11h
db  1Dh
db  8Dh
db  67h ; g
db 0C3h
db  56h ; V
db  20h
db  1Fh
db  94h
db  3Ah ; :
db  8Bh
db  36h ; 6
db    9
db  9Bh
db    8
db  69h ; i
db  70h ; p
db 0BDh
db 0BEh
db  65h ; e
db  76h ; v
db  20h
db 0EBh
db 0C4h
db  26h ; &
db  9Bh
db  9Dh
db 0E8h
db  67h ; g
db  15h
db  6Eh ; n
db    9
db  15h
db  9Dh
db  2Bh ; +
db 0F2h
db  32h ; 2
db  71h ; q
db  13h
db  51h ; Q
db  48h ; H
db 0BEh
db 0CEh
db 0A2h
db 0E5h
db  45h ; E
db  52h ; R
db  7Fh ; 
db  1Ah
db    0
db    0
db    0
db  10h
db 0BBh
db  78h ; x
db  94h
db 0F7h
db    2
db 0C0h
db  74h ; t
db  1Bh
db  8Ch
db    0
db  5Dh ; ]
db 0F0h
db 0B0h
db  75h ; u
db 0C6h
db 0DBh
db 0A9h
db  14h
db 0B9h
db 0D9h
db 0E2h
db 0DFh
db  72h ; r
db  0Fh
db  65h ; e
db  4Ch ; L
db  4Bh ; K
db  28h ; (
db  77h ; w
db  16h
db 0E0h
db 0F6h
db  6Dh ; m
db 0C2h
db  91h
db  43h ; C
db  51h ; Q
db 0CFh
db 0C9h
db  95h
db  27h ; '
db  55h ; U
db 0ABh
db 0E2h
db 0D6h
db  27h ; '
db 0E6h
db 0A8h
db  9Ch
db 0A6h
db 0B1h
db  3Dh ; =
db    0
db    0
db    0
db    0
db  40h ; @
db  4Ah ; J
db 0D0h
db 0ECh
db 0F4h
db 0F0h
db  88h
db  23h ; #
db  7Fh ; 
db 0C5h
db  6Dh ; m
db  0Ah
db  58h ; X
db  6Fh ; o
db    4
db 0BFh
db  43h ; C
db 0C3h
db  5Dh ; ]
db  2Dh ; -
db 0F8h
db  48h ; H
db    8
db  11h
db 0EEh
db  1Ch
db  59h ; Y
db 0A0h
db 0FAh
db  28h ; (
db 0F0h
db 0F4h
db 0CDh
db  3Fh ; ?
db 0A5h
db  2Eh ; .
db  19h
db 0A0h
db  71h ; q
db 0D6h
db 0BCh
db  87h
db  44h ; D
db  69h ; i
db  7Dh ; }
db    1
db  6Eh ; n
db 0F9h
db  10h
db  9Dh
db  56h ; V
db  1Ah
db  79h ; y
db  75h ; u
db 0A4h
db  8Fh
db    0
db    0
db 0E1h
db 0B2h
db 0B9h
db  3Ch ; <
db  75h ; u
db  88h
db  82h
db  93h
db  16h
db  3Fh ; ?
db 0CDh
db  6Bh ; k
db  3Ah ; :
db 0B4h
db  89h
db 0DEh
db  87h
db  9Eh
db    8
db  46h ; F
db  45h ; E
db  4Dh ; M
db  68h ; h
db  0Ch
db 0A6h
db 0DBh
db 0FDh
db  91h
db  93h
db  24h ; $
db 0DFh
db  13h
db 0ECh
db  68h ; h
db  30h ; 0
db  27h ; '
db  44h ; D
db 0B4h
db  99h
db 0EEh
db  41h ; A
db  81h
db 0B6h
db 0C3h
db 0CAh
db    2
db  58h ; X
db 0F1h
db  51h ; Q
db  68h ; h
db 0D9h
db 0A2h
db  25h ; %
db  76h ; v
db  7Dh ; }
db  8Dh
db  71h ; q
db  4Eh ; N
db    1
db    0
db    0
db  64h ; d
db 0FBh
db 0E6h
db  83h
db  5Ah ; Z
db 0F2h
db  0Fh
db 0ADh
db  57h ; W
db  94h
db  11h
db 0B5h
db  80h
db    0
db  66h ; f
db 0B5h
db  29h ; )
db  20h
db 0CFh
db 0D2h
db 0C5h
db 0D7h
db  7Dh ; }
db  6Dh ; m
db  3Fh ; ?
db 0A5h
db  1Ch
db  4Dh ; M
db 0B7h
db 0CDh
db 0DEh
db  70h ; p
db  9Dh
db 0DAh
db  3Dh ; =
db  41h ; A
db  16h
db 0B7h
db  4Eh ; N
db 0CAh
db 0D0h
db  71h ; q
db  98h
db  13h
db 0E4h
db 0D7h
db  90h
db  3Ah ; :
db  40h ; @
db  4Fh ; O
db 0E2h
db  3Fh ; ?
db 0ABh
db 0F9h
db  6Fh ; o
db  77h ; w
db  4Dh ; M
db  26h ; &
db 0E6h
db 0AFh
db  0Ah
db    3
db    0
db    0
db    0
db  10h
db  31h ; 1
db  55h ; U
db 0ABh
db    9
db 0D2h
db  58h ; X
db  0Ch
db 0A6h
db 0CBh
db  26h ; &
db  61h ; a
db  56h ; V
db  87h
db  83h
db  1Ch
db  6Ah ; j
db 0C1h
db 0F4h
db  87h
db  75h ; u
db  76h ; v
db 0E8h
db  44h ; D
db  2Ch ; ,
db 0CFh
db  47h ; G
db 0A0h
db  41h ; A
db  9Eh
db    5
db    8
db 0C9h
db  3Eh ; >
db    6
db 0BAh
db 0A0h
db 0E8h
db 0C8h
db 0CFh
db 0E7h
db  55h ; U
db 0C0h
db 0FAh
db 0E1h
db 0B2h
db  44h ; D
db    1
db 0EFh
db 0B0h
db  7Eh ; ~
db  20h
db  24h ; $
db  73h ; s
db  25h ; %
db  72h ; r
db 0D1h
db  81h
db 0F9h
db 0B8h
db 0E4h
db 0AEh
db    5
db  15h
db    7
db  40h ; @
db  62h ; b
db  3Bh ; ;
db  7Ah ; z
db  4Fh ; O
db  5Dh ; ]
db 0A4h
db 0CEh
db  33h ; 3
db  41h ; A
db 0E2h
db  4Fh ; O
db  6Dh ; m
db  6Dh ; m
db  0Fh
db  21h ; !
db 0F2h
db  33h ; 3
db  56h ; V
db 0E5h
db  56h ; V
db  13h
db 0C1h
db  25h ; %
db  97h
db 0D7h
db 0EBh
db  28h ; (
db  84h
db 0EBh
db  96h
db 0D3h
db  77h ; w
db  3Bh ; ;
db  49h ; I
db  1Eh
db 0AEh
db  2Dh ; -
db  1Fh
db  47h ; G
db  20h
db  38h ; 8
db 0ADh
db  96h
db 0D1h
db 0CEh
db 0FAh
db  8Ah
db 0DBh
db 0CDh
db 0DEh
db  4Eh ; N
db  86h
db 0C0h
db  68h ; h
db  55h ; U
db 0A1h
db  5Dh ; ]
db  69h ; i
db 0B2h
db  89h
db  3Ch ; <
db  12h
db  24h ; $
db  71h ; q
db  45h ; E
db  7Dh ; }
db  10h
db    0
db    0
db  41h ; A
db  1Ch
db  27h ; '
db  4Ah ; J
db  17h
db  6Eh ; n
db  57h ; W
db 0AEh
db  62h ; b
db 0ECh
db 0AAh
db  89h
db  22h ; "
db 0EFh
db 0DDh
db 0FBh
db 0A2h
db 0B6h
db 0E4h
db 0EFh
db 0E1h
db  17h
db 0F2h
db 0BDh
db  66h ; f
db  33h ; 3
db  80h
db  88h
db 0B4h
db  37h ; 7
db  3Eh ; >
db  2Ch ; ,
db 0B8h
db 0BFh
db  91h
db 0DEh
db 0ACh
db  19h
db    8
db  64h ; d
db 0F4h
db 0D4h
db  4Eh ; N
db  6Ah ; j
db 0FFh
db  35h ; 5
db  0Eh
db  6Ah ; j
db  56h ; V
db  67h ; g
db  14h
db 0B9h
db 0DBh
db  40h ; @
db 0CAh
db  3Bh ; ;
db  2Ah ; *
db  78h ; x
db  68h ; h
db  9Bh
db  32h ; 2
db  6Bh ; k
db 0D9h
db 0C5h
db 0AFh
db 0F5h
db 0BCh
db  69h ; i
db  64h ; d
db  26h ; &
db    0
db    0
db    0
db 0E4h
db 0F4h
db  5Fh ; _
db  80h
db 0FBh
db 0AFh
db 0D1h
db  55h ; U
db 0EDh
db 0A8h
db  20h
db  4Ah ; J
db  9Bh
db 0F8h
db  57h ; W
db  97h
db 0ABh
db  0Ah
db 0FEh
db 0AEh
db    1
db  7Bh ; {
db 0A6h
db  2Ch ; ,
db  4Ah ; J
db  69h ; i
db  95h
db 0BFh
db  1Eh
db  29h ; )
db  1Ch
db 0C4h
db 0C7h
db 0AAh
db 0D2h
db 0D5h
db 0D8h
db  76h ; v
db 0C7h
db  36h ; 6
db 0D1h
db  0Ch
db  55h ; U
db 0DAh
db  93h
db  90h
db  9Dh
db 0C7h
db  9Ah
db 0A8h
db 0CBh
db  4Bh ; K
db  25h ; %
db  18h
db  76h ; v
db 0F0h
db  0Dh
db    9
db  88h
db 0A8h
db 0F7h
db  74h ; t
db  10h
db  1Fh
db  3Ah ; :
db 0FCh
db  11h
db  48h ; H
db 0E5h
db 0ADh
db  8Eh
db  63h ; c
db  59h ; Y
db  10h
db 0E7h
db 0CBh
db  97h
db 0E8h
db  69h ; i
db 0D7h
db  26h ; &
db  3Eh ; >
db  72h ; r
db 0E4h
db 0B4h
db  86h
db 0AAh
db  90h
db  5Bh ; [
db  22h ; "
db  39h ; 9
db  33h ; 3
db  9Ch
db  75h ; u
db    7
db  7Ah ; z
db  4Bh ; K
db  91h
db 0E9h
db  47h ; G
db  2Dh ; -
db  77h ; w
db 0F9h
db  6Eh ; n
db  9Ah
db 0E7h
db  40h ; @
db  0Bh
db  16h
db 0C4h
db 0F8h
db  92h
db  0Ch
db  10h
db 0F0h
db  5Fh ; _
db 0F2h
db  11h
db  6Ch ; l
db 0C3h
db  25h ; %
db  42h ; B
db  8Bh
db 0F9h
db 0C9h
db  9Dh
db  91h
db  0Bh
db  73h ; s
db 0AFh
db  7Ch ; |
db 0FFh
db    5
db  85h
db  2Dh ; -
db  43h ; C
db 0B0h
db  69h ; i
db  75h ; u
db  2Bh ; +
db  2Dh ; -
db  2Ch ; ,
db  84h
db  57h ; W
db 0A6h
db  10h
db 0EFh
db  1Fh
db 0D0h
db    0
db  40h ; @
db  7Ah ; z
db 0C7h
db 0E5h
db  62h ; b
db 0B8h
db 0E8h
db  6Ah ; j
db  88h
db 0D8h
db  10h
db 0E5h
db  98h
db 0CDh
db 0C8h
db 0C5h
db  55h ; U
db  89h
db  10h
db  55h ; U
db 0B6h
db  59h ; Y
db 0D0h
db 0D4h
db 0BEh
db 0FBh
db  58h ; X
db  31h ; 1
db  82h
db 0B8h
db    3
db  19h
db  45h ; E
db  4Ch ; L
db    3
db  39h ; 9
db 0C9h
db  4Dh ; M
db  19h
db 0ACh
db    0
db 0C5h
db  1Fh
db 0E2h
db 0C0h
db  4Ch ; L
db  79h ; y
db 0A1h
db  80h
db 0C9h
db  3Bh ; ;
db 0D1h
db  2Dh ; -
db 0B1h
db 0E9h
db 0F8h
db  22h ; "
db  6Dh ; m
db  5Eh ; ^
db  9Ah
db  89h
db  38h ; 8
db  7Bh ; {
db 0D8h
db  19h
db  79h ; y
db 0CEh
db  72h ; r
db  76h ; v
db 0C6h
db  78h ; x
db  9Fh
db 0B9h
db 0E5h
db  79h ; y
db  4Eh ; N
db    3
db  94h
db 0E4h
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db 0A1h
db 0E9h
db 0D4h
db  5Ch ; \
db  6Ch ; l
db  6Fh ; o
db  7Dh ; }
db 0E4h
db  9Bh
db 0E7h
db 0D9h
db  3Bh ; ;
db 0F9h
db 0A1h
db  6Fh ; o
db  62h ; b
db  77h ; w
db  51h ; Q
db  34h ; 4
db  8Bh
db 0C6h
db 0E8h
db  59h ; Y
db  2Bh ; +
db 0DEh
db  58h ; X
db 0DEh
db  3Ch ; <
db 0CFh
db  58h ; X
db 0FFh
db  46h ; F
db  22h ; "
db  15h
db  7Ch ; |
db  57h ; W
db 0A8h
db  59h ; Y
db  75h ; u
db 0E7h
db  26h ; &
db  53h ; S
db  67h ; g
db  77h ; w
db  17h
db  63h ; c
db 0B7h
db 0E6h
db 0EBh
db  5Fh ; _
db  0Ah
db 0FDh
db 0E3h
db  69h ; i
db  39h ; 9
db 0E8h
db  33h ; 3
db  35h ; 5
db 0A0h
db    5
db 0A8h
db  87h
db 0B9h
db  31h ; 1
db 0F6h
db  43h ; C
db  0Fh
db  1Fh
db  21h ; !
db 0DBh
db  43h ; C
db  5Ah ; Z
db 0D8h
db  96h
db 0F5h
db  1Bh
db 0ABh
db 0A2h
db  19h
db  3Fh ; ?
db  68h ; h
db    4
db    0
db    0
db    0
db  64h ; d
db 0FEh
db  7Dh ; }
db 0BEh
db  2Fh ; /
db    4
db 0C9h
db  4Bh ; K
db 0B0h
db 0EDh
db 0F5h
db 0E1h
db 0DAh
db  4Eh ; N
db 0A1h
db  8Fh
db  73h ; s
db 0DBh
db    9
db 0E4h
db  9Ch
db 0EEh
db  4Fh ; O
db  67h ; g
db  0Dh
db  9Fh
db  15h
db 0A9h
db 0D6h
db 0B5h
db 0B5h
db 0F6h
db  0Eh
db  96h
db  38h ; 8
db  73h ; s
db  91h
db 0C2h
db  49h ; I
db 0EBh
db 0CCh
db  97h
db  2Bh ; +
db  5Fh ; _
db  95h
db  3Fh ; ?
db  38h ; 8
db  0Fh
db 0F6h
db 0B3h
db  91h
db  20h
db  14h
db  37h ; 7
db  78h ; x
db 0D1h
db 0DFh
db  42h ; B
db 0D1h
db 0C1h
db 0DEh
db  22h ; "
db  3Eh ; >
db  15h
db  57h ; W
db 0DFh
db 0AFh
db  8Ah
db  5Fh ; _
db 0E5h
db 0F5h
db  77h ; w
db  8Bh
db 0CAh
db 0E7h
db 0A3h
db  5Bh ; [
db  52h ; R
db  2Fh ; /
db    3
db  3Dh ; =
db  4Fh ; O
db 0E7h
db  42h ; B
db  0Ah
db    0
db    0
db    0
db    0
db  10h
db 0DDh
db 0F4h
db  52h ; R
db    9
db  45h ; E
db  5Dh ; ]
db 0E1h
db  42h ; B
db 0B4h
db 0AEh
db  2Eh ; .
db  34h ; 4
db 0B3h
db 0A3h
db  6Fh ; o
db 0A3h
db 0CDh
db  3Fh ; ?
db  6Eh ; n
db  7Ah ; z
db  28h ; (
db 0B4h
db 0F7h
db  77h ; w
db 0C1h
db  4Bh ; K
db 0D0h
db 0C8h
db 0D2h
db  67h ; g
db 0E0h
db 0F8h
db 0A8h
db 0AEh
db  67h ; g
db  3Bh ; ;
db 0C9h
db 0ADh
db 0B3h
db  56h ; V
db 0C8h
db  6Ch ; l
db  0Bh
db  9Dh
db  9Dh
db  95h
db    0
db 0C1h
db  48h ; H
db  5Bh ; [
db  3Dh ; =
db  8Ah
db 0BEh
db  4Ah ; J
db 0F4h
db  36h ; 6
db 0D9h
db  52h ; R
db  4Dh ; M
db 0E8h
db 0DBh
db  71h ; q
db 0C5h
db  21h ; !
db  1Ch
db 0F9h
db    9
db  81h
db  45h ; E
db  4Ah ; J
db  6Ah ; j
db 0D8h
db 0AAh
db 0D7h
db  7Ch ; |
db  4Ch ; L
db 0E1h
db    8
db  9Ch
db 0A5h
db  9Bh
db  75h ; u
db    0
db  88h
db  3Ch ; <
db 0E4h
db  17h
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  92h
db 0D4h
db  10h
db 0F1h
db    4
db 0BEh
db  72h ; r
db  64h ; d
db  18h
db  0Ch
db 0C1h
db  36h ; 6
db  87h
db 0FBh
db 0ABh
db  78h ; x
db  14h
db  29h ; )
db 0AFh
db  51h ; Q
db 0FCh
db  39h ; 9
db  97h
db 0EBh
db  25h ; %
db  15h
db  30h ; 0
db  2Bh ; +
db  4Ch ; L
db  0Bh
db  0Eh
db    3
db 0A1h
db  3Bh ; ;
db  3Ch ; <
db 0FEh
db  28h ; (
db 0BAh
db 0FCh
db  88h
db  77h ; w
db  58h ; X
db  43h ; C
db  9Eh
db 0B8h
db 0A4h
db 0E4h
db  3Dh ; =
db  73h ; s
db 0C2h
db 0F2h
db  46h ; F
db  7Ch ; |
db  98h
db  62h ; b
db  74h ; t
db  8Fh
db  0Fh
db  21h ; !
db  19h
db 0DBh
db 0AEh
db 0B6h
db 0A3h
db  2Eh ; .
db 0B2h
db  14h
db  50h ; P
db 0AAh
db  8Dh
db 0ABh
db  39h ; 9
db 0EAh
db  42h ; B
db  34h ; 4
db  96h
db  97h
db 0A9h
db 0DFh
db 0DFh
db    1
db 0FEh
db 0D3h
db 0F3h
db 0D2h
db  80h
db    2
db  79h ; y
db 0A0h
db  37h ; 7
db    0
db    0
db    0
db    1
db  9Bh
db  9Ch
db  50h ; P
db 0F1h
db 0ADh
db 0DCh
db 0C7h
db  2Ch ; ,
db 0ADh
db  3Dh ; =
db  38h ; 8
db  37h ; 7
db  4Dh ; M
db 0C6h
db  73h ; s
db 0D0h
db  67h ; g
db  6Dh ; m
db 0EAh
db    6
db 0A8h
db  9Bh
db  51h ; Q
db 0F8h
db 0F2h
db    3
db 0C4h
db 0A2h
db 0E1h
db  52h ; R
db 0A0h
db  3Ah ; :
db  23h ; #
db  10h
db 0D7h
db 0A9h
db  73h ; s
db  85h
db  44h ; D
db 0BAh
db 0D9h
db  12h
db 0CFh
db    3
db  18h
db  87h
db  70h ; p
db  9Bh
db  3Ah ; :
db 0DCh
db  52h ; R
db 0E8h
db  52h ; R
db 0B2h
db 0E5h
db  4Eh ; N
db 0FBh
db  17h
db    7
db  2Fh ; /
db 0A6h
db  4Dh ; M
db 0BEh
db 0E1h
db 0D7h
db 0ABh
db  0Ah
db  4Fh ; O
db 0EDh
db  62h ; b
db  8Ch
db  7Bh ; {
db 0ECh
db 0B9h
db 0CEh
db  21h ; !
db  40h ; @
db  66h ; f
db 0D4h
db    0
db  83h
db  15h
db 0A1h
db 0E6h
db  75h ; u
db 0E3h
db 0CCh
db 0F2h
db  29h ; )
db  2Fh ; /
db  84h
db  81h
db    0
db    0
db    0
db    0
db 0E4h
db  17h
db  77h ; w
db  64h ; d
db 0FBh
db 0F5h
db 0D3h
db  71h ; q
db  3Dh ; =
db  76h ; v
db 0A0h
db 0E9h
db  2Fh ; /
db  14h
db  7Dh ; }
db  66h ; f
db  4Ch ; L
db 0F4h
db  33h ; 3
db  2Eh ; .
db 0F1h
db 0B8h
db 0F3h
db  8Eh
db  0Dh
db  0Fh
db  13h
db  69h ; i
db  94h
db  4Ch ; L
db  73h ; s
db 0A8h
db  0Fh
db  26h ; &
db  60h ; `
db  40h ; @
db  13h
db    1
db  3Ch ; <
db  0Ah
db  88h
db  71h ; q
db 0CCh
db  21h ; !
db  2Dh ; -
db 0A5h
db  37h ; 7
db 0EFh
db 0C9h
db 0DAh
db  8Ah
db 0B4h
db  31h ; 1
db 0BBh
db  42h ; B
db  41h ; A
db  4Ch ; L
db 0F9h
db 0D6h
db  6Ch ; l
db    5
db  8Bh
db 0C8h
db 0B8h
db    1
db    5
db 0E2h
db  7Ch ; |
db 0EDh
db  97h
db  52h ; R
db 0C4h
db  61h ; a
db 0C3h
db  62h ; b
db 0AAh
db 0D8h
db 0DAh
db  87h
db 0DEh
db 0EAh
db  33h ; 3
db 0B8h
db  61h ; a
db  68h ; h
db 0F0h
db  94h
db 0BDh
db  9Ah
db 0CCh
db  13h
db  6Ah ; j
db 0D5h
db 0C1h
db  8Dh
db  2Dh ; -
db    1
db    0
db    0
db    0
db    0
db  10h
db  13h
db 0E8h
db  36h ; 6
db  7Ah ; z
db 0C6h
db  9Eh
db  29h ; )
db  16h
db 0F4h
db  0Ah
db  3Fh ; ?
db  49h ; I
db 0F3h
db 0CFh
db 0A6h
db 0A5h
db  77h ; w
db 0A3h
db  23h ; #
db 0BEh
db 0A4h
db  82h
db  5Bh ; [
db 0A2h
db 0CCh
db  2Fh ; /
db  72h ; r
db  10h
db  35h ; 5
db  7Fh ; 
db  44h ; D
db  9Dh
db 0BEh
db 0B8h
db  13h
db 0C2h
db 0A8h
db  4Eh ; N
db  32h ; 2
db  4Ch ; L
db 0C9h
db 0ADh
db  33h ; 3
db  9Eh
db 0BCh
db 0BAh
db 0FEh
db 0ACh
db  76h ; v
db  32h ; 2
db  21h ; !
db  4Ch ; L
db  2Eh ; .
db  32h ; 2
db 0CDh
db  13h
db  3Eh ; >
db 0B4h
db  91h
db 0FEh
db  70h ; p
db  36h ; 6
db 0D9h
db  5Ch ; \
db 0BBh
db  85h
db  97h
db  14h
db  42h ; B
db 0FDh
db  1Ah
db 0CCh
db  46h ; F
db 0F8h
db 0DDh
db  38h ; 8
db 0E6h
db 0D2h
db  87h
db    7
db  69h ; i
db  17h
db 0D1h
db    2
db  1Ah
db 0FEh
db 0F1h
db 0B5h
db  3Eh ; >
db 0AEh
db 0ABh
db 0B9h
db 0C3h
db  6Fh ; o
db 0EEh
db    8
db  1Ch
db 0BEh
db    2
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db 0AAh
db 0C2h
db  40h ; @
db  81h
db 0D9h
db  77h ; w
db 0F8h
db  2Ch ; ,
db  3Dh ; =
db 0D7h
db 0E1h
db  71h ; q
db  98h
db  2Fh ; /
db 0E7h
db 0D5h
db    9
db  63h ; c
db  51h ; Q
db  72h ; r
db 0DDh
db  19h
db 0A8h
db 0AFh
db  46h ; F
db  5Ah ; Z
db  2Ah ; *
db 0D6h
db 0CEh
db 0DCh
db    2
db  2Ah ; *
db 0FEh
db 0DDh
db  46h ; F
db 0CEh
db  8Dh
db  24h ; $
db  13h
db  27h ; '
db 0ADh
db 0D2h
db  23h ; #
db 0B7h
db  19h
db 0BBh
db    4
db 0C4h
db  2Bh ; +
db 0CCh
db    6
db 0B7h
db 0CAh
db 0EBh
db 0B1h
db  47h ; G
db 0DCh
db  4Bh ; K
db    9
db  9Dh
db 0CAh
db    2
db 0DCh
db 0C5h
db  8Eh
db  51h ; Q
db 0E6h
db  31h ; 1
db  80h
db  56h ; V
db 0C3h
db  8Eh
db 0A8h
db  58h ; X
db  2Fh ; /
db  34h ; 4
db  42h ; B
db  1Eh
db    4
db  8Bh
db  14h
db 0E5h
db 0BFh
db 0FEh
db  13h
db 0FCh
db 0FFh
db    5
db  0Fh
db  79h ; y
db  63h ; c
db  67h ; g
db 0FDh
db  36h ; 6
db 0D5h
db  66h ; f
db  76h ; v
db  50h ; P
db 0E1h
db 0B9h
db  62h ; b
db    6
db    0
db    0
db    0
db  61h ; a
db 0B0h
db  67h ; g
db  1Ah
db  0Ah
db    1
db 0D2h
db 0C0h
db 0E1h
db    5
db 0D0h
db  3Bh ; ;
db  73h ; s
db  12h
db 0DBh
db  3Fh ; ?
db  2Eh ; .
db  9Fh
db 0A3h
db 0E2h
db  9Dh
db 0B2h
db  61h ; a
db 0E2h
db 0DCh
db  63h ; c
db  2Ah ; *
db 0BCh
db    4
db  26h ; &
db  94h
db  9Bh
db 0D5h
db  70h ; p
db  61h ; a
db  96h
db  25h ; %
db 0E3h
db 0C2h
db 0B9h
db  75h ; u
db  0Bh
db  14h
db  21h ; !
db  2Ch ; ,
db  1Dh
db  1Fh
db  60h ; `
db  6Ah ; j
db  13h
db 0B8h
db 0A2h
db  3Bh ; ;
db 0D2h
db  89h
db  73h ; s
db  7Dh ; }
db 0F1h
db  60h ; `
db 0DFh
db 0D7h
db 0CAh
db 0C6h
db  2Bh ; +
db 0DFh
db  69h ; i
db    6
db  37h ; 7
db  87h
db 0B8h
db  24h ; $
db 0EDh
db    6
db  93h
db  66h ; f
db 0EBh
db  6Eh ; n
db  49h ; I
db  19h
db  6Fh ; o
db 0DBh
db  8Dh
db  93h
db  75h ; u
db  82h
db  74h ; t
db  5Eh ; ^
db  36h ; 6
db  9Ah
db  6Eh ; n
db 0C5h
db  31h ; 1
db 0B7h
db  90h
db  36h ; 6
db 0C5h
db  42h ; B
db  28h ; (
db 0C8h
db  8Eh
db  79h ; y
db 0AEh
db  24h ; $
db 0DEh
db  0Eh
db    0
db    0
db    0
db    0
db  64h ; d
db  41h ; A
db 0C1h
db  9Ah
db  88h
db 0D5h
db  99h
db  2Ch ; ,
db  43h ; C
db 0D9h
db  1Ah
db 0E7h
db  80h
db 0A2h
db  2Eh ; .
db  3Dh ; =
db 0F6h
db  6Bh ; k
db  3Dh ; =
db  79h ; y
db  49h ; I
db  82h
db  43h ; C
db 0A9h
db 0E7h
db  79h ; y
db  4Ah ; J
db 0E6h
db 0FDh
db  22h ; "
db  9Ah
db  70h ; p
db 0D6h
db 0E0h
db 0EFh
db 0CFh
db 0CAh
db    5
db 0D7h
db 0A4h
db  8Dh
db 0BDh
db  6Ch ; l
db    0
db  64h ; d
db 0E3h
db 0B3h
db 0DCh
db  4Eh ; N
db 0A5h
db  6Eh ; n
db    8
db 0A8h
db 0A1h
db  9Eh
db  45h ; E
db  8Fh
db  74h ; t
db 0C8h
db  54h ; T
db  8Eh
db 0FCh
db  57h ; W
db 0C6h
db  74h ; t
db 0CCh
db 0D4h
db 0C3h
db 0B8h
db  42h ; B
db  6Eh ; n
db  63h ; c
db 0D9h
db  57h ; W
db 0CCh
db  5Bh ; [
db 0B5h
db  35h ; 5
db 0E9h
db 0FEh
db  13h
db  6Ch ; l
db  61h ; a
db  51h ; Q
db 0C4h
db  1Ah
db 0DBh
db 0BAh
db  95h
db 0B5h
db  9Dh
db  4Eh ; N
db 0F1h
db 0A1h
db  50h ; P
db 0E7h
db 0F9h
db 0DCh
db  71h ; q
db  7Fh ; 
db  63h ; c
db    7
db  2Bh ; +
db  9Fh
db  2Fh ; /
db 0DEh
db  9Dh
db  22h ; "
db    0
db    0
db    0
db    0
db    0
db  10h
db  89h
db 0BDh
db  5Eh ; ^
db  3Ch ; <
db  56h ; V
db  37h ; 7
db  77h ; w
db 0E3h
db  38h ; 8
db 0A3h
db 0CBh
db  3Dh ; =
db  4Fh ; O
db  9Eh
db 0D2h
db  81h
db  2Ch ; ,
db  9Eh
db 0F7h
db 0A4h
db  74h ; t
db 0C7h
db 0F9h
db 0C3h
db  97h
db 0E7h
db  1Ch
db  6Ah ; j
db  38h ; 8
db 0E4h
db  5Fh ; _
db 0ACh
db  9Ch
db  8Bh
db 0F3h
db    7
db 0FAh
db 0ECh
db  88h
db 0D5h
db 0ACh
db 0C1h
db  5Ah ; Z
db  3Eh ; >
db 0CEh
db 0CCh
db 0AFh
db  85h
db  70h ; p
db  3Fh ; ?
db  1Fh
db  9Dh
db 0D3h
db  6Dh ; m
db  2Dh ; -
db 0E8h
db  0Ch
db  18h
db  7Dh ; }
db  17h
db  6Fh ; o
db  94h
db  69h ; i
db  5Eh ; ^
db 0E1h
db  2Ch ; ,
db  8Eh
db  64h ; d
db  48h ; H
db  39h ; 9
db 0A1h
db  95h
db  11h
db 0E0h
db  0Fh
db  34h ; 4
db  58h ; X
db  3Ch ; <
db  17h
db 0B4h
db  94h
db 0F6h
db  48h ; H
db  27h ; '
db 0BDh
db  57h ; W
db  26h ; &
db  7Ch ; |
db  2Eh ; .
db 0DAh
db  8Bh
db  75h ; u
db 0A0h
db  90h
db  80h
db  3Bh ; ;
db  13h
db 0B6h
db 0DBh
db  2Dh ; -
db  90h
db  48h ; H
db 0CFh
db  6Dh ; m
db  7Eh ; ~
db    4
db 0E4h
db  24h ; $
db  99h
db  50h ; P
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
word_7FF6E3460E90 dw 0
byte_7FF6E3460E92 db 0
byte_7FF6E3460E93 db 2
db    2
db    0
db    0
db    3
db    5
db    0
db    0
db    4
db    9
db    0
db    1
db    4
db  0Dh
db    0
db    1
db    5
db  12h
db    0
db    1
db    6
db  18h
db    0
db    2
db    6
db  1Eh
db    0
db    2
db    7
db  25h ; %
db    0
db    2
db    8
db  2Dh ; -
db    0
db    3
db    8
db  35h ; 5
db    0
db    3
db    9
db  3Eh ; >
db    0
db    3
db  0Ah
db  48h ; H
db    0
db    4
db  0Ah
db  52h ; R
db    0
db    4
db  0Bh
db  5Dh ; ]
db    0
db    4
db  0Ch
db  69h ; i
db    0
db    5
db  0Ch
db  75h ; u
db    0
db    5
db  0Dh
db  82h
db    0
db    5
db  0Eh
db  90h
db    0
db    5
db  0Fh
db  9Fh
db    0
db    6
db  0Fh
db 0AEh
db    0
db    6
db  10h
db 0BEh
db    0
db    6
db  11h
db 0CFh
db    0
db    7
db  11h
db 0E0h
db    0
db    7
db  12h
db 0F2h
db    0
db    7
db  13h
db    5
db    1
db    8
db  13h
db  18h
db    1
db    8
db  15h
db  2Dh ; -
db    1
db    8
db  16h
db  43h ; C
db    1
db    9
db  16h
db  59h ; Y
db    1
db    9
db  17h
db  70h ; p
db    1
db    9
db  18h
db  88h
db    1
db  0Ah
db  18h
db 0A0h
db    1
db  0Ah
db  19h
db 0B9h
db    1
db  0Ah
db  1Ah
db 0D3h
db    1
db  0Ah
db  1Bh
db 0EEh
db    1
db  0Bh
db  1Bh
db    9
db    2
db  0Bh
db  1Ch
db  25h ; %
db    2
db  0Bh
db  1Dh
dword_7FF6E3460F28 dd 0Ah
db  64h ; d
db    0
db    0
db    0
db 0E8h
db    3
db    0
db    0
db  10h
db  27h ; '
db    0
db    0
db 0A0h
db  86h
db    1
db    0
db  40h ; @
db  42h ; B
db  0Fh
db    0
db  80h
db  96h
db  98h
db    0
db    0
db 0E1h
db 0F5h
db    5
db    0
db 0CAh
db  9Ah
db  3Bh ; ;
db    0
db    0
db    0
db    0
unk_7FF6E3460F50 db    5
db    0
db    0
db 0C0h
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  1Dh
db    0
db    0
db 0C0h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  96h
db    0
db    0
db 0C0h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Dh
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Eh
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Fh
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  91h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  92h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  93h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B4h
db    2
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B5h
db    2
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E3461010 dq 0Ch
qword_7FF6E3461018 dq 3
qword_7FF6E3461020 dq 9
stru_7FF6E3461028 FuncInfo <19930522h, 1, \
          rva stru_7FF6E346AA50, 0, 0, \
          0, 0, 32, 0, 1>
stru_7FF6E3461050 FuncInfo <19930522h, 0, 0, 0, 0, 1, \
          rva stru_7FF6E346AEC0, 32, 0, \
          5>
stru_7FF6E3461078 FuncInfo <19930522h, 1, \
          rva stru_7FF6E346AA50, 0, 0, \
          1, rva stru_7FF6E346AEE0, 48, \
          0, 5>
; const WCHAR ModuleName
ModuleName:
text "UTF-16LE", 'mscoree.dll',0
; const CHAR ProcName[]
ProcName db 'CorExitProcess',0
align 10h
unk_7FF6E34610D0 db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db    0
dq offset aLcAll        ; "LC_ALL"
align 20h
funcs_140018EFE dq offset sub_7FF6E343A644
off_7FF6E3461168 dq offset aLcCollate ; "LC_COLLATE"
dq offset unk_7FF6E346D428
dq offset sub_7FF6E343A644
dq offset aLcCtype      ; "LC_CTYPE"
dq offset unk_7FF6E346D428
dq offset sub_7FF6E3443F4C
dq offset aLcMonetary   ; "LC_MONETARY"
dq offset unk_7FF6E346D428
dq offset __acrt_locale_initialize_monetary
dq offset aLcNumeric    ; "LC_NUMERIC"
dq offset unk_7FF6E346D428
dq offset __acrt_locale_initialize_numeric
off_7FF6E34611C8 dq offset aLcTime ; "LC_TIME"
dq offset unk_7FF6E346D428
dq offset __acrt_locale_initialize_time
aLcAll:
text "UTF-16LE", 'LC_ALL',0
align 10h
aLcCollate:
text "UTF-16LE", 'LC_COLLATE',0
align 8
aLcCtype:
text "UTF-16LE", 'LC_CTYPE',0
align 20h
aLcMonetary:
text "UTF-16LE", 'LC_MONETARY',0
aLcNumeric:
text "UTF-16LE", 'LC_NUMERIC',0
align 10h
aLcTime:
text "UTF-16LE", 'LC_TIME',0
asc_7FF6E3461260:
text "UTF-16LE", '=;',0
align 8
; const wchar_t asc_7FF6E3461268
asc_7FF6E3461268:
text "UTF-16LE", ';',0
asc_7FF6E346126C:
text "UTF-16LE", '=',0
asc_7FF6E3461270:
text "UTF-16LE", '-_.',0
; const wchar_t aC
aC:
text "UTF-16LE", 'C',0
align 20h
asc_7FF6E3461280:
text "UTF-16LE", '_.,',0
asc_7FF6E3461288:
text "UTF-16LE", '_',0
asc_7FF6E346128C:
text "UTF-16LE", '.',0
stru_7FF6E3461290 FuncInfo <19930522h, 1, \
          rva stru_7FF6E346AA50, 0, 0, \
          1, rva stru_7FF6E346B0B0, 40, \
          0, 1>
align 20h
off_7FF6E34612C0 dq offset initialize_global_variables
align 10h
dq offset initialize_pointers
align 20h
dq offset sub_7FF6E344D9C4
dq offset __acrt_uninitialize_winapi_thunks
dq offset sub_7FF6E3439FF8
dq offset sub_7FF6E3439FF8
dq offset __vcrt_initialize_locks_0
dq offset __vcrt_uninitialize_locks_0
dq offset __acrt_initialize_heap
dq offset sub_7FF6E3456740
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset sub_7FF6E34499A0
dq offset sub_7FF6E344A908
dq offset __vcrt_uninitialize_ptd_0
dq offset __acrt_initialize_lowio
dq offset __acrt_uninitialize_lowio
dq offset __acrt_initialize_command_line
dq offset sub_7FF6E3439FF8
dq offset __acrt_initialize_multibyte
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset sub_7FF6E3439FF8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset uninitialize_allocated_io_buffers
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset uninitialize_allocated_memory
dq offset sub_7FF6E3439FF8
dq offset uninitialize_environment
dq offset initialize_c
dq offset sub_7FF6E3439FF8
off_7FF6E34613C0 dq offset unk_7FF6E3461680
dq offset unk_7FF6E3461684
dq offset unk_7FF6E3461688
dq offset unk_7FF6E346168C
dq offset unk_7FF6E3461690
dq offset unk_7FF6E3461694
dq offset unk_7FF6E3461698
dq offset aSunday       ; "Sunday"
dq offset aMonday       ; "Monday"
dq offset aTuesday      ; "Tuesday"
dq offset aWednesday    ; "Wednesday"
dq offset aThursday     ; "Thursday"
dq offset aFriday       ; "Friday"
dq offset aSaturday     ; "Saturday"
dq offset aJan          ; "Jan"
dq offset aFeb          ; "Feb"
dq offset aMar          ; "Mar"
dq offset aApr          ; "Apr"
dq offset aMay          ; "May"
dq offset aJun          ; "Jun"
dq offset aJul          ; "Jul"
dq offset aAug          ; "Aug"
dq offset aSep          ; "Sep"
dq offset aOct          ; "Oct"
dq offset aNov          ; "Nov"
dq offset aDec          ; "Dec"
dq offset aJanuary      ; "January"
dq offset aFebruary     ; "February"
dq offset aMarch        ; "March"
dq offset aApril        ; "April"
dq offset aMay          ; "May"
dq offset aJune         ; "June"
dq offset aJuly         ; "July"
dq offset aAugust       ; "August"
dq offset aSeptember    ; "September"
dq offset aOctober      ; "October"
dq offset aNovember     ; "November"
dq offset aDecember     ; "December"
dq offset aAm           ; "AM"
dq offset aPm           ; "PM"
dq offset aMmDdYy       ; "MM/dd/yy"
dq offset aDdddMmmmDdYyyy ; "dddd, MMMM dd, yyyy"
dq offset aHhMmSs       ; "HH:mm:ss"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSun          ; "Sun"
dq offset aMon          ; "Mon"
dq offset aTue          ; "Tue"
dq offset aWed          ; "Wed"
dq offset aThu          ; "Thu"
dq offset aFri          ; "Fri"
dq offset aSat          ; "Sat"
dq offset aSunday_0     ; "Sunday"
dq offset aMonday_0     ; "Monday"
dq offset aTuesday_0    ; "Tuesday"
dq offset aWednesday_0  ; "Wednesday"
dq offset aThursday_0   ; "Thursday"
dq offset aFriday_0     ; "Friday"
dq offset aSaturday_0   ; "Saturday"
dq offset aJan_0        ; "Jan"
dq offset aFeb_0        ; "Feb"
dq offset aMar_0        ; "Mar"
dq offset aApr_0        ; "Apr"
dq offset aMay_0        ; "May"
dq offset aJun_0        ; "Jun"
dq offset aJul_0        ; "Jul"
dq offset aAug_0        ; "Aug"
dq offset aSep_0        ; "Sep"
dq offset aOct_0        ; "Oct"
dq offset aNov_0        ; "Nov"
dq offset aDec_0        ; "Dec"
dq offset aJanuary_0    ; "January"
dq offset aFebruary_0   ; "February"
dq offset aMarch_0      ; "March"
dq offset aApril_0      ; "April"
dq offset aMay_0        ; "May"
dq offset aJune_0       ; "June"
dq offset aJuly_0       ; "July"
dq offset aAugust_0     ; "August"
dq offset aSeptember_0  ; "September"
dq offset aOctober_0    ; "October"
dq offset aNovember_0   ; "November"
dq offset aDecember_0   ; "December"
dq offset aAm_0         ; "AM"
dq offset aPm_0         ; "PM"
dq offset aMmDdYy_0     ; "MM/dd/yy"
dq offset aDdddMmmmDdYyyy_0 ; "dddd, MMMM dd, yyyy"
dq offset aHhMmSs_0     ; "HH:mm:ss"
dq offset aEnUs         ; "en-US"
unk_7FF6E3461680 db  53h ; S
db  75h ; u
db  6Eh ; n
db    0
unk_7FF6E3461684 db  4Dh ; M
db  6Fh ; o
db  6Eh ; n
db    0
unk_7FF6E3461688 db  54h ; T
db  75h ; u
db  65h ; e
db    0
unk_7FF6E346168C db  57h ; W
db  65h ; e
db  64h ; d
db    0
unk_7FF6E3461690 db  54h ; T
db  68h ; h
db  75h ; u
db    0
unk_7FF6E3461694 db  46h ; F
db  72h ; r
db  69h ; i
db    0
unk_7FF6E3461698 db  53h ; S
db  61h ; a
db  74h ; t
db    0
aSunday db 'Sunday',0
align 4
aMonday db 'Monday',0
align 10h
aTuesday db 'Tuesday',0
aWednesday db 'Wednesday',0
align 8
aThursday db 'Thursday',0
align 4
aFriday db 'Friday',0
align 20h
aSaturday db 'Saturday',0
align 4
aJan db 'Jan',0
aFeb db 'Feb',0
aMar db 'Mar',0
aApr db 'Apr',0
aMay db 'May',0
aJun db 'Jun',0
aJul db 'Jul',0
aAug db 'Aug',0
aSep db 'Sep',0
aOct db 'Oct',0
aNov db 'Nov',0
aDec db 'Dec',0
align 20h
aJanuary db 'January',0
aFebruary db 'February',0
align 4
aMarch db 'March',0
align 4
aApril db 'April',0
align 4
aJune db 'June',0
align 4
aJuly db 'July',0
align 4
aAugust db 'August',0
align 20h
aSeptember db 'September',0
align 10h
aOctober db 'October',0
aNovember db 'November',0
align 8
aDecember db 'December',0
align 4
aAm db 'AM',0
align 8
aPm db 'PM',0
align 20h
aMmDdYy db 'MM/dd/yy',0
align 10h
aDdddMmmmDdYyyy db 'dddd, MMMM dd, yyyy',0
align 8
aHhMmSs db 'HH:mm:ss',0
align 8
aSun:
text "UTF-16LE", 'Sun',0
aMon:
text "UTF-16LE", 'Mon',0
aTue:
text "UTF-16LE", 'Tue',0
aWed:
text "UTF-16LE", 'Wed',0
aThu:
text "UTF-16LE", 'Thu',0
aFri:
text "UTF-16LE", 'Fri',0
aSat:
text "UTF-16LE", 'Sat',0
aSunday_0:
text "UTF-16LE", 'Sunday',0
align 20h
aMonday_0:
text "UTF-16LE", 'Monday',0
align 10h
aTuesday_0:
text "UTF-16LE", 'Tuesday',0
aWednesday_0:
text "UTF-16LE", 'Wednesday',0
align 8
aThursday_0:
text "UTF-16LE", 'Thursday',0
align 10h
aFriday_0:
text "UTF-16LE", 'Friday',0
align 20h
aSaturday_0:
text "UTF-16LE", 'Saturday',0
align 8
aJan_0:
text "UTF-16LE", 'Jan',0
aFeb_0:
text "UTF-16LE", 'Feb',0
aMar_0:
text "UTF-16LE", 'Mar',0
aApr_0:
text "UTF-16LE", 'Apr',0
aMay_0:
text "UTF-16LE", 'May',0
aJun_0:
text "UTF-16LE", 'Jun',0
aJul_0:
text "UTF-16LE", 'Jul',0
aAug_0:
text "UTF-16LE", 'Aug',0
aSep_0:
text "UTF-16LE", 'Sep',0
aOct_0:
text "UTF-16LE", 'Oct',0
aNov_0:
text "UTF-16LE", 'Nov',0
aDec_0:
text "UTF-16LE", 'Dec',0
aJanuary_0:
text "UTF-16LE", 'January',0
aFebruary_0:
text "UTF-16LE", 'February',0
align 20h
aMarch_0:
text "UTF-16LE", 'March',0
align 10h
aApril_0:
text "UTF-16LE", 'April',0
align 20h
aJune_0:
text "UTF-16LE", 'June',0
align 10h
aJuly_0:
text "UTF-16LE", 'July',0
align 20h
aAugust_0:
text "UTF-16LE", 'August',0
align 10h
aSeptember_0:
text "UTF-16LE", 'September',0
align 8
aOctober_0:
text "UTF-16LE", 'October',0
aNovember_0:
text "UTF-16LE", 'November',0
align 10h
aDecember_0:
text "UTF-16LE", 'December',0
align 4
aAm_0:
text "UTF-16LE", 'AM',0
align 4
aPm_0:
text "UTF-16LE", 'PM',0
align 8
aMmDdYy_0:
text "UTF-16LE", 'MM/dd/yy',0
align 10h
aDdddMmmmDdYyyy_0:
text "UTF-16LE", 'dddd, MMMM dd, yyyy',0
aHhMmSs_0:
text "UTF-16LE", 'HH:mm:ss',0
align 10h
aEnUs:
text "UTF-16LE", 'en-US',0
align 20h
unk_7FF6E3461A40 db  14h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E3461C10
db  1Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E3461C14
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E3461C18
db  1Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLog10        ; "log10"
db  1Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSinh         ; "sinh"
db  13h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCosh         ; "cosh"
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTanh         ; "tanh"
db  0Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAsin         ; "asin"
db  0Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAcos         ; "acos"
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAtan         ; "atan"
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAtan2        ; "atan2"
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSqrt         ; "sqrt"
db  1Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSin          ; "sin"
db  12h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCos          ; "cos"
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTan          ; "tan"
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCeil         ; "ceil"
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFloor        ; "floor"
db  15h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFabs         ; "fabs"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aModf         ; "modf"
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLdexp        ; "ldexp"
db  11h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCabs         ; "_cabs"
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHypot        ; "_hypot"
db  16h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFmod         ; "fmod"
db  17h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrexp        ; "frexp"
db  22h ; "
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aY0           ; "_y0"
db  23h ; #
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aY1           ; "_y1"
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aYn           ; "_yn"
db  25h ; %
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLogb         ; "_logb"
db  26h ; &
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNextafter    ; "_nextafter"
unk_7FF6E3461C10 db  65h ; e
db  78h ; x
db  70h ; p
db    0
unk_7FF6E3461C14 db  70h ; p
db  6Fh ; o
db  77h ; w
db    0
unk_7FF6E3461C18 db  6Ch ; l
db  6Fh ; o
db  67h ; g
db    0
aLog10 db 'log10',0
align 4
aSinh db 'sinh',0
align 4
aCosh db 'cosh',0
align 4
aTanh db 'tanh',0
align 4
aAsin db 'asin',0
align 4
aAcos db 'acos',0
align 4
aAtan db 'atan',0
align 4
aAtan2 db 'atan2',0
align 4
aSqrt db 'sqrt',0
align 4
aSin db 'sin',0
aCos db 'cos',0
aTan db 'tan',0
aCeil db 'ceil',0
align 8
aFloor db 'floor',0
align 20h
aFabs db 'fabs',0
align 8
aModf db 'modf',0
align 10h
aLdexp db 'ldexp',0
align 8
aCabs db '_cabs',0
align 20h
aHypot db '_hypot',0
align 8
aFmod db 'fmod',0
align 10h
aFrexp db 'frexp',0
align 8
aY0 db '_y0',0
aY1 db '_y1',0
aYn db '_yn',0
aLogb db '_logb',0
align 10h
aNextafter db '_nextafter',0
align 20h
off_7FF6E3461CE0 dq offset unk_7FF6E3461D60
dq offset unk_7FF6E3461D60
dq offset unk_7FF6E3461D64
dq offset unk_7FF6E3461D64
dq offset unk_7FF6E3461D68
dq offset unk_7FF6E3461D68
dq offset unk_7FF6E3461D6C
dq offset unk_7FF6E3461D6C
dq offset aNanSnan      ; "NAN(SNAN)"
dq offset unk_7FF6E3461D68
dq offset aNanSnan_0    ; "nan(snan)"
dq offset unk_7FF6E3461D6C
dq offset aNanInd       ; "NAN(IND)"
dq offset unk_7FF6E3461D68
dq offset aNanInd_0     ; "nan(ind)"
dq offset unk_7FF6E3461D6C
unk_7FF6E3461D60 db  49h ; I
db  4Eh ; N
db  46h ; F
db    0
unk_7FF6E3461D64 db  69h ; i
db  6Eh ; n
db  66h ; f
db    0
unk_7FF6E3461D68 db  4Eh ; N
db  41h ; A
db  4Eh ; N
db    0
unk_7FF6E3461D6C db  6Eh ; n
db  61h ; a
db  6Eh ; n
db    0
aNanSnan db 'NAN(SNAN)',0
align 20h
aNanSnan_0 db 'nan(snan)',0
align 10h
aNanInd db 'NAN(IND)',0
align 20h
aNanInd_0 db 'nan(ind)',0
align 4
; const char Source[]
Source db 'e+000',0
align 20h
off_7FF6E3461DC0 dq offset aApiMsWinCoreDa ; "api-ms-win-core-datetime-l1-1-1"
dq offset aApiMsWinCoreFi_0 ; "api-ms-win-core-fibers-l1-1-2"
dq offset aApiMsWinCoreFi_1 ; "api-ms-win-core-file-l1-2-4"
dq offset aApiMsWinCoreFi_2 ; "api-ms-win-core-file-l1-2-2"
dq offset aApiMsWinCoreFi_3 ; "api-ms-win-core-file-l2-1-4"
dq offset aApiMsWinCoreLo ; "api-ms-win-core-localization-l1-2-1"
dq offset aApiMsWinCoreLo_0 ; "api-ms-win-core-localization-obsolete-l"...
dq offset aApiMsWinCorePr ; "api-ms-win-core-processthreads-l1-1-2"
dq offset aApiMsWinCoreSt ; "api-ms-win-core-string-l1-1-0"
dq offset aApiMsWinCoreSy ; "api-ms-win-core-synch-l1-2-0"
dq offset aApiMsWinCoreSy_0 ; "api-ms-win-core-sysinfo-l1-2-1"
dq offset aApiMsWinCoreWi ; "api-ms-win-core-winrt-l1-1-0"
dq offset aApiMsWinCoreXs ; "api-ms-win-core-xstate-l2-1-0"
dq offset aApiMsWinRtcore ; "api-ms-win-rtcore-ntuser-window-l1-1-0"
dq offset aApiMsWinSecuri ; "api-ms-win-security-systemfunctions-l1-"...
dq offset aExtMsWinNtuser ; "ext-ms-win-ntuser-dialogbox-l1-1-0"
dq offset aExtMsWinNtuser_0 ; "ext-ms-win-ntuser-windowstation-l1-1-0"
dq offset aAdvapi32     ; "advapi32"
dq offset aKernel32     ; "kernel32"
dq offset aKernelbase   ; "kernelbase"
dq offset aNtdll        ; "ntdll"
dq offset aApiMsWinAppmod ; "api-ms-win-appmodel-runtime-l1-1-2"
dq offset aUser32       ; "user32"
align 20h
aApiMsWinCoreDa:
text "UTF-16LE", 'api-ms-win-core-datet'
text "UTF-16LE", 'ime-l1-1-1',0
aApiMsWinCoreFi_0:
text "UTF-16LE", 'api-ms-win-core-fiber'
text "UTF-16LE", 's-l1-1-2',0
align 20h
aApiMsWinCoreFi_1:
text "UTF-16LE", 'api-ms-win-core-file-'
text "UTF-16LE", 'l1-2-4',0
aApiMsWinCoreFi_2:
text "UTF-16LE", 'api-ms-win-core-file-'
text "UTF-16LE", 'l1-2-2',0
aApiMsWinCoreFi_3:
text "UTF-16LE", 'api-ms-win-core-file-'
text "UTF-16LE", 'l2-1-4',0
align 10h
aApiMsWinCoreLo:
text "UTF-16LE", 'api-ms-win-core-local'
text "UTF-16LE", 'ization-l1-2-1',0
align 20h
aApiMsWinCoreLo_0:
text "UTF-16LE", 'api-ms-win-core-local'
text "UTF-16LE", 'ization-obsolete-l1-2'
text "UTF-16LE", '-0',0
align 20h
aApiMsWinCorePr:
text "UTF-16LE", 'api-ms-win-core-proce'
text "UTF-16LE", 'ssthreads-l1-1-2',0
align 10h
aApiMsWinCoreSt:
text "UTF-16LE", 'api-ms-win-core-strin'
text "UTF-16LE", 'g-l1-1-0',0
align 10h
aApiMsWinCoreSy_0:
text "UTF-16LE", 'api-ms-win-core-sysin'
text "UTF-16LE", 'fo-l1-2-1',0
align 10h
aApiMsWinCoreWi:
text "UTF-16LE", 'api-ms-win-core-winrt'
text "UTF-16LE", '-l1-1-0',0
align 10h
aApiMsWinCoreXs:
text "UTF-16LE", 'api-ms-win-core-xstat'
text "UTF-16LE", 'e-l2-1-0',0
align 10h
aApiMsWinRtcore:
text "UTF-16LE", 'api-ms-win-rtcore-ntu'
text "UTF-16LE", 'ser-window-l1-1-0',0
align 20h
aApiMsWinSecuri:
text "UTF-16LE", 'api-ms-win-security-s'
text "UTF-16LE", 'ystemfunctions-l1-1-0'
text "UTF-16LE", 0
align 20h
aExtMsWinNtuser:
text "UTF-16LE", 'ext-ms-win-ntuser-dia'
text "UTF-16LE", 'logbox-l1-1-0',0
align 10h
aExtMsWinNtuser_0:
text "UTF-16LE", 'ext-ms-win-ntuser-win'
text "UTF-16LE", 'dowstation-l1-1-0',0
align 20h
aAdvapi32:
text "UTF-16LE", 'advapi32',0
align 8
aKernelbase:
text "UTF-16LE", 'kernelbase',0
align 10h
aNtdll:
text "UTF-16LE", 'ntdll',0
align 20h
aApiMsWinAppmod:
text "UTF-16LE", 'api-ms-win-appmodel-r'
text "UTF-16LE", 'untime-l1-1-2',0
align 8
aUser32:
text "UTF-16LE", 'user32',0
align 8
; const wchar_t aExtMs
aExtMs:
text "UTF-16LE", 'ext-ms-',0
unk_7FF6E34623A8 db  12h
db    0
db    0
db    0
unk_7FF6E34623AC db    0
db    0
db    0
db    0
aArefileapisans db 'AreFileApisANSI',0
asc_7FF6E34623C0 db 8,0
align 4
db  12h
db    0
db    0
db    0
aComparestringe db 'CompareStringEx',0
unk_7FF6E34623D8 db    5
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aEnumsystemloca db 'EnumSystemLocalesEx',0
align 8
unk_7FF6E34623F8 db    1
db    0
db    0
db    0
db  13h
db    0
db    0
db    0
aFlsgetvalue2 db 'FlsGetValue2',0
align 10h
unk_7FF6E3462410 db    0
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aGetdateformate db 'GetDateFormatEx',0
unk_7FF6E3462428 db    5
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aGetlocaleinfoe db 'GetLocaleInfoEx',0
unk_7FF6E3462440 db    0
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aGettimeformate db 'GetTimeFormatEx',0
unk_7FF6E3462458 db    5
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aGetuserdefault db 'GetUserDefaultLocaleName',0
align 20h
unk_7FF6E3462480 db    5
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aIsvalidlocalen db 'IsValidLocaleName',0
align 20h
unk_7FF6E34624A0 db    5
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aLcmapstringex db 'LCMapStringEx',0
align 8
unk_7FF6E34624B8 db    6
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aLcidtolocalena db 'LCIDToLocaleName',0
align 8
unk_7FF6E34624D8 db    5
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
aLocalenametolc db 'LocaleNameToLCID',0
align 4
unk_7FF6E34624F4 db  15h
db    0
db    0
db    0
aApppolicygetpr db 'AppPolicyGetProcessTerminationMetho'
db 'd',0
align 20h
stru_7FF6E3462520 FuncInfo <19930522h, 0, 0, 0, 0, 1, \
          rva stru_7FF6E346B4C0, 48, 0, \
          5>
stru_7FF6E3462548 FuncInfo <19930522h, 0, 0, 0, 0, 1, \
          rva stru_7FF6E346B6B0, 168, 0,\
          5>
off_7FF6E3462570 dq offset aJaJp ; "ja-JP"
off_7FF6E3462578 dq offset aZhCn ; "zh-CN"
off_7FF6E3462580 dq offset aKoKr ; "ko-KR"
off_7FF6E3462588 dq offset aZhTw ; "zh-TW"
aJaJp:
text "UTF-16LE", 'ja-JP',0
align 20h
aZhCn:
text "UTF-16LE", 'zh-CN',0
align 10h
aKoKr:
text "UTF-16LE", 'ko-KR',0
align 20h
aZhTw:
text "UTF-16LE", 'zh-TW',0
align 10h
off_7FF6E34625D0 dq offset aAmerican ; "american"
aEnu:
text "UTF-16LE", 'ENU',0
dq offset aAmericanEnglis ; "american english"
aEnu_0:
text "UTF-16LE", 'ENU',0
dq offset aAmericanEnglis_0 ; "american-english"
aEnu_1:
text "UTF-16LE", 'ENU',0
dq offset aAustralian   ; "australian"
aEna:
text "UTF-16LE", 'ENA',0
dq offset aBelgian      ; "belgian"
aNlb:
text "UTF-16LE", 'NLB',0
dq offset aCanadian     ; "canadian"
aEnc:
text "UTF-16LE", 'ENC',0
dq offset aChh          ; "chh"
aZhh:
text "UTF-16LE", 'ZHH',0
dq offset aChi          ; "chi"
aZhi:
text "UTF-16LE", 'ZHI',0
dq offset aChinese      ; "chinese"
aChs:
text "UTF-16LE", 'CHS',0
dq offset aChineseHongkon ; "chinese-hongkong"
aZhh_0:
text "UTF-16LE", 'ZHH',0
dq offset aChineseSimplif ; "chinese-simplified"
aChs_0:
text "UTF-16LE", 'CHS',0
dq offset aChineseSingapo ; "chinese-singapore"
aZhi_0:
text "UTF-16LE", 'ZHI',0
dq offset aChineseTraditi ; "chinese-traditional"
aCht:
text "UTF-16LE", 'CHT',0
dq offset aDutchBelgian ; "dutch-belgian"
aNlb_0:
text "UTF-16LE", 'NLB',0
dq offset aEnglishAmerica ; "english-american"
aEnu_2:
text "UTF-16LE", 'ENU',0
dq offset aEnglishAus   ; "english-aus"
aEna_0:
text "UTF-16LE", 'ENA',0
dq offset aEnglishBelize ; "english-belize"
aEnl:
text "UTF-16LE", 'ENL',0
dq offset aEnglishCan   ; "english-can"
aEnc_0:
text "UTF-16LE", 'ENC',0
dq offset aEnglishCaribbe ; "english-caribbean"
aEnb:
text "UTF-16LE", 'ENB',0
dq offset aEnglishIre   ; "english-ire"
aEni:
text "UTF-16LE", 'ENI',0
dq offset aEnglishJamaica ; "english-jamaica"
aEnj:
text "UTF-16LE", 'ENJ',0
dq offset aEnglishNz    ; "english-nz"
aEnz:
text "UTF-16LE", 'ENZ',0
dq offset aEnglishSouthAf ; "english-south africa"
aEns:
text "UTF-16LE", 'ENS',0
dq offset aEnglishTrinida ; "english-trinidad y tobago"
aEnt:
text "UTF-16LE", 'ENT',0
dq offset aEnglishUk    ; "english-uk"
aEng:
text "UTF-16LE", 'ENG',0
dq offset aEnglishUs    ; "english-us"
aEnu_3:
text "UTF-16LE", 'ENU',0
dq offset aEnglishUsa   ; "english-usa"
aEnu_4:
text "UTF-16LE", 'ENU',0
dq offset aFrenchBelgian ; "french-belgian"
aFrb:
text "UTF-16LE", 'FRB',0
dq offset aFrenchCanadian ; "french-canadian"
aFrc:
text "UTF-16LE", 'FRC',0
dq offset aFrenchLuxembou ; "french-luxembourg"
aFrl:
text "UTF-16LE", 'FRL',0
dq offset aFrenchSwiss  ; "french-swiss"
aFrs:
text "UTF-16LE", 'FRS',0
dq offset aGermanAustrian ; "german-austrian"
aDea:
text "UTF-16LE", 'DEA',0
dq offset aGermanLichtens ; "german-lichtenstein"
aDec_1:
text "UTF-16LE", 'DEC',0
dq offset aGermanLuxembou ; "german-luxembourg"
aDel:
text "UTF-16LE", 'DEL',0
dq offset aGermanSwiss  ; "german-swiss"
aDes:
text "UTF-16LE", 'DES',0
dq offset aIrishEnglish ; "irish-english"
aEni_0:
text "UTF-16LE", 'ENI',0
dq offset aItalianSwiss ; "italian-swiss"
aIts:
text "UTF-16LE", 'ITS',0
dq offset aNorwegian    ; "norwegian"
aNor:
text "UTF-16LE", 'NOR',0
dq offset aNorwegianBokma ; "norwegian-bokmal"
aNor_0:
text "UTF-16LE", 'NOR',0
dq offset aNorwegianNynor ; "norwegian-nynorsk"
aNon:
text "UTF-16LE", 'NON',0
dq offset aPortugueseBraz ; "portuguese-brazilian"
aPtb:
text "UTF-16LE", 'PTB',0
dq offset aSpanishArgenti ; "spanish-argentina"
aEss:
text "UTF-16LE", 'ESS',0
dq offset aSpanishBolivia ; "spanish-bolivia"
aEsb:
text "UTF-16LE", 'ESB',0
dq offset aSpanishChile ; "spanish-chile"
aEsl:
text "UTF-16LE", 'ESL',0
dq offset aSpanishColombi ; "spanish-colombia"
aEso:
text "UTF-16LE", 'ESO',0
dq offset aSpanishCostaRi ; "spanish-costa rica"
aEsc:
text "UTF-16LE", 'ESC',0
dq offset aSpanishDominic ; "spanish-dominican republic"
aEsd:
text "UTF-16LE", 'ESD',0
dq offset aSpanishEcuador ; "spanish-ecuador"
aEsf:
text "UTF-16LE", 'ESF',0
dq offset aSpanishElSalva ; "spanish-el salvador"
aEse:
text "UTF-16LE", 'ESE',0
dq offset aSpanishGuatema ; "spanish-guatemala"
aEsg:
text "UTF-16LE", 'ESG',0
dq offset aSpanishHondura ; "spanish-honduras"
aEsh:
text "UTF-16LE", 'ESH',0
dq offset aSpanishMexican ; "spanish-mexican"
aEsm:
text "UTF-16LE", 'ESM',0
dq offset aSpanishModern ; "spanish-modern"
aEsn:
text "UTF-16LE", 'ESN',0
dq offset aSpanishNicarag ; "spanish-nicaragua"
aEsi:
text "UTF-16LE", 'ESI',0
dq offset aSpanishPanama ; "spanish-panama"
aEsa:
text "UTF-16LE", 'ESA',0
dq offset aSpanishParagua ; "spanish-paraguay"
aEsz:
text "UTF-16LE", 'ESZ',0
dq offset aSpanishPeru  ; "spanish-peru"
aEsr:
text "UTF-16LE", 'ESR',0
dq offset aSpanishPuertoR ; "spanish-puerto rico"
aEsu:
text "UTF-16LE", 'ESU',0
dq offset aSpanishUruguay ; "spanish-uruguay"
aEsy:
text "UTF-16LE", 'ESY',0
dq offset aSpanishVenezue ; "spanish-venezuela"
aEsv:
text "UTF-16LE", 'ESV',0
dq offset aSwedishFinland ; "swedish-finland"
aSvf:
text "UTF-16LE", 'SVF',0
dq offset aSwiss        ; "swiss"
aDes_0:
text "UTF-16LE", 'DES',0
dq offset aUk           ; "uk"
aEng_0:
text "UTF-16LE", 'ENG',0
dq offset aUs           ; "us"
aEnu_5:
text "UTF-16LE", 'ENU',0
dq offset aUsa          ; "usa"
aEnu_6:
text "UTF-16LE", 'ENU',0
qword_7FF6E34629E0 dq 41h
align 10h
off_7FF6E34629F0 dq offset aAmerica ; "america"
aUsa_0:
text "UTF-16LE", 'USA',0
dq offset aBritain      ; "britain"
aGbr:
text "UTF-16LE", 'GBR',0
dq offset aChina        ; "china"
aChn:
text "UTF-16LE", 'CHN',0
dq offset aCzech        ; "czech"
aCze:
text "UTF-16LE", 'CZE',0
dq offset aEngland      ; "england"
aGbr_0:
text "UTF-16LE", 'GBR',0
dq offset aGreatBritain ; "great britain"
aGbr_1:
text "UTF-16LE", 'GBR',0
dq offset aHolland      ; "holland"
aNld:
text "UTF-16LE", 'NLD',0
dq offset aHongKong     ; "hong-kong"
aHkg:
text "UTF-16LE", 'HKG',0
dq offset aNewZealand   ; "new-zealand"
aNzl:
text "UTF-16LE", 'NZL',0
dq offset aNz           ; "nz"
aNzl_0:
text "UTF-16LE", 'NZL',0
dq offset aPrChina      ; "pr china"
aChn_0:
text "UTF-16LE", 'CHN',0
dq offset aPrChina_0    ; "pr-china"
aChn_1:
text "UTF-16LE", 'CHN',0
dq offset aPuertoRico   ; "puerto-rico"
aPri:
text "UTF-16LE", 'PRI',0
dq offset aSlovak       ; "slovak"
aSvk:
text "UTF-16LE", 'SVK',0
dq offset aSouthAfrica  ; "south africa"
aZaf:
text "UTF-16LE", 'ZAF',0
dq offset aSouthKorea   ; "south korea"
aKor:
text "UTF-16LE", 'KOR',0
dq offset aSouthAfrica_0 ; "south-africa"
aZaf_0:
text "UTF-16LE", 'ZAF',0
dq offset aSouthKorea_0 ; "south-korea"
aKor_0:
text "UTF-16LE", 'KOR',0
dq offset aTrinidadTobago ; "trinidad & tobago"
aTto:
text "UTF-16LE", 'TTO',0
dq offset aUk           ; "uk"
aGbr_2:
text "UTF-16LE", 'GBR',0
dq offset aUnitedKingdom ; "united-kingdom"
aGbr_3:
text "UTF-16LE", 'GBR',0
dq offset aUnitedStates ; "united-states"
aUsa_1:
text "UTF-16LE", 'USA',0
dq offset aUs           ; "us"
aUsa_2:
text "UTF-16LE", 'USA',0
qword_7FF6E3462B60 dq 17h
aAmerican:
text "UTF-16LE", 'american',0
align 20h
aAmericanEnglis:
text "UTF-16LE", 'american english',0
align 8
aAmericanEnglis_0:
text "UTF-16LE", 'american-english',0
align 10h
aAustralian:
text "UTF-16LE", 'australian',0
align 8
aBelgian:
text "UTF-16LE", 'belgian',0
aCanadian:
text "UTF-16LE", 'canadian',0
align 10h
aChh:
text "UTF-16LE", 'chh',0
aChi:
text "UTF-16LE", 'chi',0
aChinese:
text "UTF-16LE", 'chinese',0
aChineseHongkon:
text "UTF-16LE", 'chinese-hongkong',0
align 8
aChineseSimplif:
text "UTF-16LE", 'chinese-simplified',0
align 20h
aChineseSingapo:
text "UTF-16LE", 'chinese-singapore',0
align 8
aChineseTraditi:
text "UTF-16LE", 'chinese-traditional',0
aDutchBelgian:
text "UTF-16LE", 'dutch-belgian',0
align 10h
aEnglishAmerica:
text "UTF-16LE", 'english-american',0
align 8
aEnglishAus:
text "UTF-16LE", 'english-aus',0
aEnglishBelize:
text "UTF-16LE", 'english-belize',0
align 10h
aEnglishCan:
text "UTF-16LE", 'english-can',0
aEnglishCaribbe:
text "UTF-16LE", 'english-caribbean',0
align 10h
aEnglishIre:
text "UTF-16LE", 'english-ire',0
aEnglishJamaica:
text "UTF-16LE", 'english-jamaica',0
aEnglishNz:
text "UTF-16LE", 'english-nz',0
align 20h
aEnglishSouthAf:
text "UTF-16LE", 'english-south africa',0
align 10h
aEnglishTrinida:
text "UTF-16LE", 'english-trinidad y to'
text "UTF-16LE", 'bago',0
align 8
aEnglishUk:
text "UTF-16LE", 'english-uk',0
align 20h
aEnglishUs:
text "UTF-16LE", 'english-us',0
align 8
aEnglishUsa:
text "UTF-16LE", 'english-usa',0
aFrenchBelgian:
text "UTF-16LE", 'french-belgian',0
align 10h
aFrenchCanadian:
text "UTF-16LE", 'french-canadian',0
aFrenchLuxembou:
text "UTF-16LE", 'french-luxembourg',0
align 8
aFrenchSwiss:
text "UTF-16LE", 'french-swiss',0
align 8
aGermanAustrian:
text "UTF-16LE", 'german-austrian',0
aGermanLichtens:
text "UTF-16LE", 'german-lichtenstein',0
aGermanLuxembou:
text "UTF-16LE", 'german-luxembourg',0
align 8
aGermanSwiss:
text "UTF-16LE", 'german-swiss',0
align 8
aIrishEnglish:
text "UTF-16LE", 'irish-english',0
align 8
aItalianSwiss:
text "UTF-16LE", 'italian-swiss',0
align 8
aNorwegian:
text "UTF-16LE", 'norwegian',0
align 20h
aNorwegianBokma:
text "UTF-16LE", 'norwegian-bokmal',0
align 8
aNorwegianNynor:
text "UTF-16LE", 'norwegian-nynorsk',0
align 10h
aPortugueseBraz:
text "UTF-16LE", 'portuguese-brazilian',0
align 20h
aSpanishArgenti:
text "UTF-16LE", 'spanish-argentina',0
align 8
aSpanishBolivia:
text "UTF-16LE", 'spanish-bolivia',0
aSpanishChile:
text "UTF-16LE", 'spanish-chile',0
align 8
aSpanishColombi:
text "UTF-16LE", 'spanish-colombia',0
align 10h
aSpanishCostaRi:
text "UTF-16LE", 'spanish-costa rica',0
align 8
aSpanishDominic:
text "UTF-16LE", 'spanish-dominican rep'
text "UTF-16LE", 'ublic',0
align 10h
aSpanishEcuador:
text "UTF-16LE", 'spanish-ecuador',0
aSpanishElSalva:
text "UTF-16LE", 'spanish-el salvador',0
aSpanishGuatema:
text "UTF-16LE", 'spanish-guatemala',0
align 20h
aSpanishHondura:
text "UTF-16LE", 'spanish-honduras',0
align 8
aSpanishMexican:
text "UTF-16LE", 'spanish-mexican',0
aSpanishModern:
text "UTF-16LE", 'spanish-modern',0
align 8
aSpanishNicarag:
text "UTF-16LE", 'spanish-nicaragua',0
align 10h
aSpanishPanama:
text "UTF-16LE", 'spanish-panama',0
align 10h
aSpanishParagua:
text "UTF-16LE", 'spanish-paraguay',0
align 8
aSpanishPeru:
text "UTF-16LE", 'spanish-peru',0
align 8
aSpanishPuertoR:
text "UTF-16LE", 'spanish-puerto rico',0
aSpanishUruguay:
text "UTF-16LE", 'spanish-uruguay',0
aSpanishVenezue:
text "UTF-16LE", 'spanish-venezuela',0
align 8
aSwedishFinland:
text "UTF-16LE", 'swedish-finland',0
aSwiss:
text "UTF-16LE", 'swiss',0
aUk:
text "UTF-16LE", 'uk',0
align 4
aUs:
text "UTF-16LE", 'us',0
align 8
aUsa:
text "UTF-16LE", 'usa',0
aAmerica:
text "UTF-16LE", 'america',0
aBritain:
text "UTF-16LE", 'britain',0
aChina:
text "UTF-16LE", 'china',0
align 20h
aCzech:
text "UTF-16LE", 'czech',0
align 10h
aEngland:
text "UTF-16LE", 'england',0
aGreatBritain:
text "UTF-16LE", 'great britain',0
align 20h
aHolland:
text "UTF-16LE", 'holland',0
aHongKong:
text "UTF-16LE", 'hong-kong',0
align 8
aNewZealand:
text "UTF-16LE", 'new-zealand',0
aNz:
text "UTF-16LE", 'nz',0
align 8
aPrChina:
text "UTF-16LE", 'pr china',0
align 20h
aPrChina_0:
text "UTF-16LE", 'pr-china',0
align 8
aPuertoRico:
text "UTF-16LE", 'puerto-rico',0
aSlovak:
text "UTF-16LE", 'slovak',0
align 20h
aSouthAfrica:
text "UTF-16LE", 'south africa',0
align 20h
aSouthKorea:
text "UTF-16LE", 'south korea',0
aSouthAfrica_0:
text "UTF-16LE", 'south-africa',0
align 8
aSouthKorea_0:
text "UTF-16LE", 'south-korea',0
aTrinidadTobago:
text "UTF-16LE", 'trinidad & tobago',0
align 8
aUnitedKingdom:
text "UTF-16LE", 'united-kingdom',0
align 8
aUnitedStates:
text "UTF-16LE", 'united-states',0
align 8
; const wchar_t aUtf8
aUtf8:
text "UTF-16LE", 'utf8',0
align 8
; const wchar_t aAcp
aAcp:
text "UTF-16LE", 'ACP',0
aUtf8_0:
text "UTF-16LE", 'utf-8',0
align 20h
; const wchar_t aOcp
aOcp:
text "UTF-16LE", 'OCP',0
unk_7FF6E34635A8 db  0Ch
db  0Ch
db  1Ah
db  0Ch
db    7
db  10h
db  36h ; 6
db    4
db  0Ch
db    8
db  2Dh ; -
db    4
db    3
db    4
db  0Ch
db  10h
db  10h
db    8
db  1Dh
db    8
unk_7FF6E34635BC db  30h ; 0
db    0
db    0
db    0
; const char a1Inf[]
a1Inf db '1#INF',0
align 8
a1Qnan db '1#QNAN',0
align 10h
a1Snan db '1#SNAN',0
align 8
; const char a1Ind[]
a1Ind db '1#IND',0
align 20h
dword_7FF6E34635E0 dd 1
align 8
dq offset aAr           ; "ar"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBg           ; "bg"
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCa           ; "ca"
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhChs        ; "zh-CHS"
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCs           ; "cs"
db    6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDa           ; "da"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDe           ; "de"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEl           ; "el"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEn           ; "en"
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEs           ; "es"
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFi           ; "fi"
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFr           ; "fr"
db  0Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHe           ; "he"
db  0Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHu           ; "hu"
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIs           ; "is"
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIt           ; "it"
db  11h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aJa           ; "ja"
db  12h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKo           ; "ko"
db  13h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNl           ; "nl"
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNo           ; "no"
db  15h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPl           ; "pl"
db  16h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPt           ; "pt"
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRo           ; "ro"
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRu           ; "ru"
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHr           ; "hr"
db  1Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSk           ; "sk"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSq           ; "sq"
db  1Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSv           ; "sv"
db  1Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTh           ; "th"
db  1Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTr           ; "tr"
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUr           ; "ur"
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aId           ; "id"
db  22h ; "
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUk           ; "uk"
db  23h ; #
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBe           ; "be"
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSl           ; "sl"
db  25h ; %
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEt           ; "et"
db  26h ; &
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLv           ; "lv"
db  27h ; '
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLt           ; "lt"
db  29h ; )
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFa           ; "fa"
db  2Ah ; *
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVi           ; "vi"
db  2Bh ; +
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHy           ; "hy"
db  2Ch ; ,
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAz           ; "az"
db  2Dh ; -
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEu           ; "eu"
db  2Fh ; /
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMk           ; "mk"
db  36h ; 6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAf           ; "af"
db  37h ; 7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKa           ; "ka"
db  38h ; 8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFo           ; "fo"
db  39h ; 9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHi           ; "hi"
db  3Eh ; >
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMs           ; "ms"
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKk           ; "kk"
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKy           ; "ky"
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSw           ; "sw"
db  43h ; C
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUz           ; "uz"
db  44h ; D
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTt           ; "tt"
db  46h ; F
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPa           ; "pa"
db  47h ; G
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGu           ; "gu"
db  49h ; I
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTa           ; "ta"
db  4Ah ; J
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTe           ; "te"
db  4Bh ; K
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKn           ; "kn"
db  4Eh ; N
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMr           ; "mr"
db  4Fh ; O
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSa           ; "sa"
db  50h ; P
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMn           ; "mn"
db  56h ; V
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGl           ; "gl"
db  57h ; W
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKok          ; "kok"
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSyr          ; "syr"
db  65h ; e
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDiv          ; "div"
db  7Fh ; 
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345E920
db    1
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArSa         ; "ar-SA"
db    2
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBgBg         ; "bg-BG"
db    3
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCaEs         ; "ca-ES"
db    4
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhTw         ; "zh-TW"
db    5
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCsCz         ; "cs-CZ"
db    6
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDaDk         ; "da-DK"
db    7
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeDe         ; "de-DE"
db    8
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aElGr         ; "el-GR"
db    9
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnUs         ; "en-US"
db  0Bh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFiFi         ; "fi-FI"
db  0Ch
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrFr         ; "fr-FR"
db  0Dh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHeIl         ; "he-IL"
db  0Eh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHuHu         ; "hu-HU"
db  0Fh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIsIs         ; "is-IS"
db  10h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aItIt         ; "it-IT"
db  11h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aJaJp         ; "ja-JP"
db  12h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKoKr         ; "ko-KR"
db  13h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNlNl         ; "nl-NL"
db  14h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNbNo         ; "nb-NO"
db  15h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPlPl         ; "pl-PL"
db  16h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPtBr         ; "pt-BR"
db  18h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRoRo         ; "ro-RO"
db  19h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRuRu         ; "ru-RU"
db  1Ah
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHrHr         ; "hr-HR"
db  1Bh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSkSk         ; "sk-SK"
db  1Ch
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSqAl         ; "sq-AL"
db  1Dh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSvSe         ; "sv-SE"
db  1Eh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aThTh         ; "th-TH"
db  1Fh
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTrTr         ; "tr-TR"
db  20h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUrPk         ; "ur-PK"
db  21h ; !
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIdId         ; "id-ID"
db  22h ; "
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUkUa         ; "uk-UA"
db  23h ; #
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBeBy         ; "be-BY"
db  24h ; $
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSlSi         ; "sl-SI"
db  25h ; %
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEtEe         ; "et-EE"
db  26h ; &
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLvLv         ; "lv-LV"
db  27h ; '
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLtLt         ; "lt-LT"
db  29h ; )
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFaIr         ; "fa-IR"
db  2Ah ; *
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aViVn         ; "vi-VN"
db  2Bh ; +
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHyAm         ; "hy-AM"
db  2Ch ; ,
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAzAzLatn     ; "az-AZ-Latn"
db  2Dh ; -
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEuEs         ; "eu-ES"
db  2Fh ; /
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMkMk         ; "mk-MK"
db  32h ; 2
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTnZa         ; "tn-ZA"
db  34h ; 4
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aXhZa         ; "xh-ZA"
db  35h ; 5
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZuZa         ; "zu-ZA"
db  36h ; 6
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAfZa         ; "af-ZA"
db  37h ; 7
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKaGe         ; "ka-GE"
db  38h ; 8
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFoFo         ; "fo-FO"
db  39h ; 9
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHiIn         ; "hi-IN"
db  3Ah ; :
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMtMt         ; "mt-MT"
db  3Bh ; ;
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSeNo         ; "se-NO"
db  3Eh ; >
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMsMy         ; "ms-MY"
db  3Fh ; ?
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKkKz         ; "kk-KZ"
db  40h ; @
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKyKg         ; "ky-KG"
db  41h ; A
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSwKe         ; "sw-KE"
db  43h ; C
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUzUzLatn     ; "uz-UZ-Latn"
db  44h ; D
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTtRu         ; "tt-RU"
db  45h ; E
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBnIn         ; "bn-IN"
db  46h ; F
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPaIn         ; "pa-IN"
db  47h ; G
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGuIn         ; "gu-IN"
db  49h ; I
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTaIn         ; "ta-IN"
db  4Ah ; J
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTeIn         ; "te-IN"
db  4Bh ; K
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKnIn         ; "kn-IN"
db  4Ch ; L
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMlIn         ; "ml-IN"
db  4Eh ; N
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMrIn         ; "mr-IN"
db  4Fh ; O
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSaIn         ; "sa-IN"
db  50h ; P
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMnMn         ; "mn-MN"
db  52h ; R
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCyGb         ; "cy-GB"
db  56h ; V
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGlEs         ; "gl-ES"
db  57h ; W
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKokIn        ; "kok-IN"
db  5Ah ; Z
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSyrSy        ; "syr-SY"
db  65h ; e
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDivMv        ; "div-MV"
db  6Bh ; k
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aQuzBo        ; "quz-BO"
db  6Ch ; l
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNsZa         ; "ns-ZA"
db  81h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMiNz         ; "mi-NZ"
db    1
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArIq         ; "ar-IQ"
db    4
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhCn         ; "zh-CN"
db    7
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeCh         ; "de-CH"
db    9
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnGb         ; "en-GB"
db  0Ah
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsMx         ; "es-MX"
db  0Ch
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrBe         ; "fr-BE"
db  10h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aItCh         ; "it-CH"
db  13h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNlBe         ; "nl-BE"
db  14h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNnNo         ; "nn-NO"
db  16h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPtPt         ; "pt-PT"
db  1Ah
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrSpLatn     ; "sr-SP-Latn"
db  1Dh
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSvFi         ; "sv-FI"
db  2Ch ; ,
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAzAzCyrl     ; "az-AZ-Cyrl"
db  3Bh ; ;
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSeSe         ; "se-SE"
db  3Eh ; >
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMsBn         ; "ms-BN"
db  43h ; C
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUzUzCyrl     ; "uz-UZ-Cyrl"
db  6Bh ; k
db    8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aQuzEc        ; "quz-EC"
db    1
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArEg         ; "ar-EG"
db    4
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhHk         ; "zh-HK"
db    7
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeAt         ; "de-AT"
db    9
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnAu         ; "en-AU"
db  0Ah
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsEs         ; "es-ES"
db  0Ch
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrCa         ; "fr-CA"
db  1Ah
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrSpCyrl     ; "sr-SP-Cyrl"
db  3Bh ; ;
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSeFi         ; "se-FI"
db  6Bh ; k
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aQuzPe        ; "quz-PE"
db    1
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArLy         ; "ar-LY"
db    4
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhSg         ; "zh-SG"
db    7
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeLu         ; "de-LU"
db    9
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnCa         ; "en-CA"
db  0Ah
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsGt         ; "es-GT"
db  0Ch
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrCh         ; "fr-CH"
db  1Ah
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHrBa         ; "hr-BA"
db  3Bh ; ;
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmjNo        ; "smj-NO"
db    1
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArDz         ; "ar-DZ"
db    4
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhMo         ; "zh-MO"
db    7
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeLi         ; "de-LI"
db    9
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnNz         ; "en-NZ"
db  0Ah
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsCr         ; "es-CR"
db  0Ch
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrLu         ; "fr-LU"
db  1Ah
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBsBaLatn     ; "bs-BA-Latn"
db  3Bh ; ;
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmjSe        ; "smj-SE"
db    1
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArMa         ; "ar-MA"
db    9
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnIe         ; "en-IE"
db  0Ah
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPa         ; "es-PA"
db  0Ch
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrMc         ; "fr-MC"
db  1Ah
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrBaLatn     ; "sr-BA-Latn"
db  3Bh ; ;
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmaNo        ; "sma-NO"
db    1
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArTn         ; "ar-TN"
db    9
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnZa         ; "en-ZA"
db  0Ah
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsDo         ; "es-DO"
db  1Ah
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrBaCyrl     ; "sr-BA-Cyrl"
db  3Bh ; ;
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmaSe        ; "sma-SE"
db    1
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArOm         ; "ar-OM"
db    9
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnJm         ; "en-JM"
db  0Ah
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsVe         ; "es-VE"
db  3Bh ; ;
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmsFi        ; "sms-FI"
db    1
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArYe         ; "ar-YE"
db    9
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnCb         ; "en-CB"
db  0Ah
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsCo         ; "es-CO"
db  3Bh ; ;
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmnFi        ; "smn-FI"
db    1
db  28h ; (
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArSy         ; "ar-SY"
db    9
db  28h ; (
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnBz         ; "en-BZ"
db  0Ah
db  28h ; (
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPe         ; "es-PE"
db    1
db  2Ch ; ,
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArJo         ; "ar-JO"
db    9
db  2Ch ; ,
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnTt         ; "en-TT"
db  0Ah
db  2Ch ; ,
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsAr         ; "es-AR"
db    1
db  30h ; 0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArLb         ; "ar-LB"
db    9
db  30h ; 0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnZw         ; "en-ZW"
db  0Ah
db  30h ; 0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsEc         ; "es-EC"
db    1
db  34h ; 4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArKw         ; "ar-KW"
db    9
db  34h ; 4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnPh         ; "en-PH"
db  0Ah
db  34h ; 4
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsCl         ; "es-CL"
db    1
db  38h ; 8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArAe         ; "ar-AE"
db  0Ah
db  38h ; 8
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsUy         ; "es-UY"
db    1
db  3Ch ; <
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArBh         ; "ar-BH"
db  0Ah
db  3Ch ; <
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPy         ; "es-PY"
db    1
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArQa         ; "ar-QA"
db  0Ah
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsBo         ; "es-BO"
db  0Ah
db  44h ; D
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsSv         ; "es-SV"
db  0Ah
db  48h ; H
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsHn         ; "es-HN"
db  0Ah
db  4Ch ; L
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsNi         ; "es-NI"
db  0Ah
db  50h ; P
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPr         ; "es-PR"
db    4
db  7Ch ; |
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhCht        ; "zh-CHT"
db  1Ah
db  7Ch ; |
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSr           ; "sr"
aAr:
text "UTF-16LE", 'ar',0
align 8
aBg:
text "UTF-16LE", 'bg',0
align 10h
aCa:
text "UTF-16LE", 'ca',0
align 8
aZhChs:
text "UTF-16LE", 'zh-CHS',0
align 8
aCs:
text "UTF-16LE", 'cs',0
align 10h
aDa:
text "UTF-16LE", 'da',0
align 8
aDe:
text "UTF-16LE", 'de',0
align 20h
aEl:
text "UTF-16LE", 'el',0
align 8
aEn:
text "UTF-16LE", 'en',0
align 10h
aEs:
text "UTF-16LE", 'es',0
align 8
aFi:
text "UTF-16LE", 'fi',0
align 20h
aFr:
text "UTF-16LE", 'fr',0
align 8
aHe:
text "UTF-16LE", 'he',0
align 10h
aHu:
text "UTF-16LE", 'hu',0
align 8
aIs:
text "UTF-16LE", 'is',0
align 20h
aIt:
text "UTF-16LE", 'it',0
align 8
aJa:
text "UTF-16LE", 'ja',0
align 10h
aKo:
text "UTF-16LE", 'ko',0
align 8
aNl:
text "UTF-16LE", 'nl',0
align 20h
aNo:
text "UTF-16LE", 'no',0
align 8
aPl:
text "UTF-16LE", 'pl',0
align 10h
aPt:
text "UTF-16LE", 'pt',0
align 8
aRo:
text "UTF-16LE", 'ro',0
align 20h
aRu:
text "UTF-16LE", 'ru',0
align 8
aHr:
text "UTF-16LE", 'hr',0
align 10h
aSk:
text "UTF-16LE", 'sk',0
align 8
aSq:
text "UTF-16LE", 'sq',0
align 20h
aSv:
text "UTF-16LE", 'sv',0
align 8
aTh:
text "UTF-16LE", 'th',0
align 10h
aTr:
text "UTF-16LE", 'tr',0
align 8
aUr:
text "UTF-16LE", 'ur',0
align 20h
aId:
text "UTF-16LE", 'id',0
align 8
aBe:
text "UTF-16LE", 'be',0
align 10h
aSl:
text "UTF-16LE", 'sl',0
align 8
aEt:
text "UTF-16LE", 'et',0
align 20h
aLv:
text "UTF-16LE", 'lv',0
align 8
aLt:
text "UTF-16LE", 'lt',0
align 10h
aFa:
text "UTF-16LE", 'fa',0
align 8
aVi:
text "UTF-16LE", 'vi',0
align 20h
aHy:
text "UTF-16LE", 'hy',0
align 8
aAz:
text "UTF-16LE", 'az',0
align 10h
aEu:
text "UTF-16LE", 'eu',0
align 8
aMk:
text "UTF-16LE", 'mk',0
align 20h
aAf:
text "UTF-16LE", 'af',0
align 8
aKa:
text "UTF-16LE", 'ka',0
align 10h
aFo:
text "UTF-16LE", 'fo',0
align 8
aHi:
text "UTF-16LE", 'hi',0
align 20h
aMs:
text "UTF-16LE", 'ms',0
align 8
aKk:
text "UTF-16LE", 'kk',0
align 10h
aKy:
text "UTF-16LE", 'ky',0
align 8
aSw:
text "UTF-16LE", 'sw',0
align 20h
aUz:
text "UTF-16LE", 'uz',0
align 8
aTt:
text "UTF-16LE", 'tt',0
align 10h
aPa:
text "UTF-16LE", 'pa',0
align 8
aGu:
text "UTF-16LE", 'gu',0
align 20h
aTa:
text "UTF-16LE", 'ta',0
align 8
aTe:
text "UTF-16LE", 'te',0
align 10h
aKn:
text "UTF-16LE", 'kn',0
align 8
aMr:
text "UTF-16LE", 'mr',0
align 20h
aSa:
text "UTF-16LE", 'sa',0
align 8
aMn:
text "UTF-16LE", 'mn',0
align 10h
aGl:
text "UTF-16LE", 'gl',0
align 8
aKok:
text "UTF-16LE", 'kok',0
aSyr:
text "UTF-16LE", 'syr',0
aDiv:
text "UTF-16LE", 'div',0
aArSa:
text "UTF-16LE", 'ar-SA',0
align 20h
aBgBg:
text "UTF-16LE", 'bg-BG',0
align 10h
aCaEs:
text "UTF-16LE", 'ca-ES',0
align 20h
aCsCz:
text "UTF-16LE", 'cs-CZ',0
align 10h
aDaDk:
text "UTF-16LE", 'da-DK',0
align 20h
aDeDe:
text "UTF-16LE", 'de-DE',0
align 10h
aElGr:
text "UTF-16LE", 'el-GR',0
align 20h
aFiFi:
text "UTF-16LE", 'fi-FI',0
align 10h
aFrFr:
text "UTF-16LE", 'fr-FR',0
align 20h
aHeIl:
text "UTF-16LE", 'he-IL',0
align 10h
aHuHu:
text "UTF-16LE", 'hu-HU',0
align 20h
aIsIs:
text "UTF-16LE", 'is-IS',0
align 10h
aItIt:
text "UTF-16LE", 'it-IT',0
align 20h
aNlNl:
text "UTF-16LE", 'nl-NL',0
align 10h
aNbNo:
text "UTF-16LE", 'nb-NO',0
align 20h
aPlPl:
text "UTF-16LE", 'pl-PL',0
align 10h
aPtBr:
text "UTF-16LE", 'pt-BR',0
align 20h
aRoRo:
text "UTF-16LE", 'ro-RO',0
align 10h
aRuRu:
text "UTF-16LE", 'ru-RU',0
align 20h
aHrHr:
text "UTF-16LE", 'hr-HR',0
align 10h
aSkSk:
text "UTF-16LE", 'sk-SK',0
align 20h
aSqAl:
text "UTF-16LE", 'sq-AL',0
align 10h
aSvSe:
text "UTF-16LE", 'sv-SE',0
align 20h
aThTh:
text "UTF-16LE", 'th-TH',0
align 10h
aTrTr:
text "UTF-16LE", 'tr-TR',0
align 20h
aUrPk:
text "UTF-16LE", 'ur-PK',0
align 10h
aIdId:
text "UTF-16LE", 'id-ID',0
align 20h
aUkUa:
text "UTF-16LE", 'uk-UA',0
align 10h
aBeBy:
text "UTF-16LE", 'be-BY',0
align 20h
aSlSi:
text "UTF-16LE", 'sl-SI',0
align 10h
aEtEe:
text "UTF-16LE", 'et-EE',0
align 20h
aLvLv:
text "UTF-16LE", 'lv-LV',0
align 10h
aLtLt:
text "UTF-16LE", 'lt-LT',0
align 20h
aFaIr:
text "UTF-16LE", 'fa-IR',0
align 10h
aViVn:
text "UTF-16LE", 'vi-VN',0
align 20h
aHyAm:
text "UTF-16LE", 'hy-AM',0
align 10h
aAzAzLatn:
text "UTF-16LE", 'az-AZ-Latn',0
align 8
aEuEs:
text "UTF-16LE", 'eu-ES',0
align 8
aMkMk:
text "UTF-16LE", 'mk-MK',0
align 8
aTnZa:
text "UTF-16LE", 'tn-ZA',0
align 8
aXhZa:
text "UTF-16LE", 'xh-ZA',0
align 8
aZuZa:
text "UTF-16LE", 'zu-ZA',0
align 8
aAfZa:
text "UTF-16LE", 'af-ZA',0
align 8
aKaGe:
text "UTF-16LE", 'ka-GE',0
align 8
aFoFo:
text "UTF-16LE", 'fo-FO',0
align 8
aHiIn:
text "UTF-16LE", 'hi-IN',0
align 8
aMtMt:
text "UTF-16LE", 'mt-MT',0
align 8
aSeNo:
text "UTF-16LE", 'se-NO',0
align 8
aMsMy:
text "UTF-16LE", 'ms-MY',0
align 8
aKkKz:
text "UTF-16LE", 'kk-KZ',0
align 8
aKyKg:
text "UTF-16LE", 'ky-KG',0
align 8
aSwKe:
text "UTF-16LE", 'sw-KE',0
align 8
aUzUzLatn:
text "UTF-16LE", 'uz-UZ-Latn',0
align 10h
aTtRu:
text "UTF-16LE", 'tt-RU',0
align 20h
aBnIn:
text "UTF-16LE", 'bn-IN',0
align 10h
aPaIn:
text "UTF-16LE", 'pa-IN',0
align 20h
aGuIn:
text "UTF-16LE", 'gu-IN',0
align 10h
aTaIn:
text "UTF-16LE", 'ta-IN',0
align 20h
aTeIn:
text "UTF-16LE", 'te-IN',0
align 10h
aKnIn:
text "UTF-16LE", 'kn-IN',0
align 20h
aMlIn:
text "UTF-16LE", 'ml-IN',0
align 10h
aMrIn:
text "UTF-16LE", 'mr-IN',0
align 20h
aSaIn:
text "UTF-16LE", 'sa-IN',0
align 10h
aMnMn:
text "UTF-16LE", 'mn-MN',0
align 20h
aCyGb:
text "UTF-16LE", 'cy-GB',0
align 10h
aGlEs:
text "UTF-16LE", 'gl-ES',0
align 20h
aKokIn:
text "UTF-16LE", 'kok-IN',0
align 10h
aSyrSy:
text "UTF-16LE", 'syr-SY',0
align 20h
aDivMv:
text "UTF-16LE", 'div-MV',0
align 10h
aQuzBo:
text "UTF-16LE", 'quz-BO',0
align 20h
aNsZa:
text "UTF-16LE", 'ns-ZA',0
align 10h
aMiNz:
text "UTF-16LE", 'mi-NZ',0
align 20h
aArIq:
text "UTF-16LE", 'ar-IQ',0
align 10h
aDeCh:
text "UTF-16LE", 'de-CH',0
align 20h
aEnGb:
text "UTF-16LE", 'en-GB',0
align 10h
aEsMx:
text "UTF-16LE", 'es-MX',0
align 20h
aFrBe:
text "UTF-16LE", 'fr-BE',0
align 10h
aItCh:
text "UTF-16LE", 'it-CH',0
align 20h
aNlBe:
text "UTF-16LE", 'nl-BE',0
align 10h
aNnNo:
text "UTF-16LE", 'nn-NO',0
align 20h
aPtPt:
text "UTF-16LE", 'pt-PT',0
align 10h
aSrSpLatn:
text "UTF-16LE", 'sr-SP-Latn',0
align 8
aSvFi:
text "UTF-16LE", 'sv-FI',0
align 8
aAzAzCyrl:
text "UTF-16LE", 'az-AZ-Cyrl',0
align 10h
aSeSe:
text "UTF-16LE", 'se-SE',0
align 20h
aMsBn:
text "UTF-16LE", 'ms-BN',0
align 10h
aUzUzCyrl:
text "UTF-16LE", 'uz-UZ-Cyrl',0
align 8
aQuzEc:
text "UTF-16LE", 'quz-EC',0
align 8
aArEg:
text "UTF-16LE", 'ar-EG',0
align 8
aZhHk:
text "UTF-16LE", 'zh-HK',0
align 8
aDeAt:
text "UTF-16LE", 'de-AT',0
align 8
aEnAu:
text "UTF-16LE", 'en-AU',0
align 8
aEsEs:
text "UTF-16LE", 'es-ES',0
align 8
aFrCa:
text "UTF-16LE", 'fr-CA',0
align 8
aSrSpCyrl:
text "UTF-16LE", 'sr-SP-Cyrl',0
align 10h
aSeFi:
text "UTF-16LE", 'se-FI',0
align 20h
aQuzPe:
text "UTF-16LE", 'quz-PE',0
align 10h
aArLy:
text "UTF-16LE", 'ar-LY',0
align 20h
aZhSg:
text "UTF-16LE", 'zh-SG',0
align 10h
aDeLu:
text "UTF-16LE", 'de-LU',0
align 20h
aEnCa:
text "UTF-16LE", 'en-CA',0
align 10h
aEsGt:
text "UTF-16LE", 'es-GT',0
align 20h
aFrCh:
text "UTF-16LE", 'fr-CH',0
align 10h
aHrBa:
text "UTF-16LE", 'hr-BA',0
align 20h
aSmjNo:
text "UTF-16LE", 'smj-NO',0
align 10h
aArDz:
text "UTF-16LE", 'ar-DZ',0
align 20h
aZhMo:
text "UTF-16LE", 'zh-MO',0
align 10h
aDeLi:
text "UTF-16LE", 'de-LI',0
align 20h
aEnNz:
text "UTF-16LE", 'en-NZ',0
align 10h
aEsCr:
text "UTF-16LE", 'es-CR',0
align 20h
aFrLu:
text "UTF-16LE", 'fr-LU',0
align 10h
aBsBaLatn:
text "UTF-16LE", 'bs-BA-Latn',0
align 8
aSmjSe:
text "UTF-16LE", 'smj-SE',0
align 8
aArMa:
text "UTF-16LE", 'ar-MA',0
align 8
aEnIe:
text "UTF-16LE", 'en-IE',0
align 8
aEsPa:
text "UTF-16LE", 'es-PA',0
align 8
aFrMc:
text "UTF-16LE", 'fr-MC',0
align 8
aSrBaLatn:
text "UTF-16LE", 'sr-BA-Latn',0
align 10h
aSmaNo:
text "UTF-16LE", 'sma-NO',0
align 20h
aArTn:
text "UTF-16LE", 'ar-TN',0
align 10h
aEnZa:
text "UTF-16LE", 'en-ZA',0
align 20h
aEsDo:
text "UTF-16LE", 'es-DO',0
align 10h
aSrBaCyrl:
text "UTF-16LE", 'sr-BA-Cyrl',0
align 8
aSmaSe:
text "UTF-16LE", 'sma-SE',0
align 8
aArOm:
text "UTF-16LE", 'ar-OM',0
align 8
aEnJm:
text "UTF-16LE", 'en-JM',0
align 8
aEsVe:
text "UTF-16LE", 'es-VE',0
align 8
aSmsFi:
text "UTF-16LE", 'sms-FI',0
align 8
aArYe:
text "UTF-16LE", 'ar-YE',0
align 8
aEnCb:
text "UTF-16LE", 'en-CB',0
align 8
aEsCo:
text "UTF-16LE", 'es-CO',0
align 8
aSmnFi:
text "UTF-16LE", 'smn-FI',0
align 8
aArSy:
text "UTF-16LE", 'ar-SY',0
align 8
aEnBz:
text "UTF-16LE", 'en-BZ',0
align 8
aEsPe:
text "UTF-16LE", 'es-PE',0
align 8
aArJo:
text "UTF-16LE", 'ar-JO',0
align 8
aEnTt:
text "UTF-16LE", 'en-TT',0
align 8
aEsAr:
text "UTF-16LE", 'es-AR',0
align 8
aArLb:
text "UTF-16LE", 'ar-LB',0
align 8
aEnZw:
text "UTF-16LE", 'en-ZW',0
align 8
aEsEc:
text "UTF-16LE", 'es-EC',0
align 8
aArKw:
text "UTF-16LE", 'ar-KW',0
align 8
aEnPh:
text "UTF-16LE", 'en-PH',0
align 8
aEsCl:
text "UTF-16LE", 'es-CL',0
align 8
aArAe:
text "UTF-16LE", 'ar-AE',0
align 8
aEsUy:
text "UTF-16LE", 'es-UY',0
align 8
aArBh:
text "UTF-16LE", 'ar-BH',0
align 8
aEsPy:
text "UTF-16LE", 'es-PY',0
align 8
aArQa:
text "UTF-16LE", 'ar-QA',0
align 8
aEsBo:
text "UTF-16LE", 'es-BO',0
align 8
aEsSv:
text "UTF-16LE", 'es-SV',0
align 8
aEsHn:
text "UTF-16LE", 'es-HN',0
align 8
aEsNi:
text "UTF-16LE", 'es-NI',0
align 8
aEsPr:
text "UTF-16LE", 'es-PR',0
align 8
aZhCht:
text "UTF-16LE", 'zh-CHT',0
align 8
aSr:
text "UTF-16LE", 'sr',0
align 10h
off_7FF6E3465030 dq offset unk_7FF6E345E920
dword_7FF6E3465038 dd 42h
align 20h
dq offset aAf           ; "af"
db  2Ch ; ,
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAfZa_0       ; "af-za"
db  71h ; q
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAr           ; "ar"
align 10h
dq offset aArAe_0       ; "ar-ae"
db 0D8h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArBh_0       ; "ar-bh"
db 0DAh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArDz_0       ; "ar-dz"
db 0B1h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArEg_0       ; "ar-eg"
db 0A0h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArIq_0       ; "ar-iq"
db  8Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArJo_0       ; "ar-jo"
db 0CFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArKw_0       ; "ar-kw"
db 0D5h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArLb_0       ; "ar-lb"
db 0D2h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArLy_0       ; "ar-ly"
db 0A9h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArMa_0       ; "ar-ma"
db 0B9h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArOm_0       ; "ar-om"
db 0C4h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArQa_0       ; "ar-qa"
db 0DCh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArSa_0       ; "ar-sa"
db  43h ; C
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArSy_0       ; "ar-sy"
db 0CCh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArTn_0       ; "ar-tn"
db 0BFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aArYe_0       ; "ar-ye"
db 0C8h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAz           ; "az"
db  29h ; )
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAzAzCyrl_0   ; "az-az-cyrl"
db  9Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aAzAzLatn_0   ; "az-az-latn"
db  6Bh ; k
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBe           ; "be"
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBeBy_0       ; "be-by"
db  63h ; c
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBg           ; "bg"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBgBg_0       ; "bg-bg"
db  44h ; D
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBnIn_0       ; "bn-in"
db  7Dh ; }
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aBsBaLatn_0   ; "bs-ba-latn"
db 0B7h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCa           ; "ca"
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCaEs_0       ; "ca-es"
db  45h ; E
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCs           ; "cs"
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCsCz_0       ; "cs-cz"
db  47h ; G
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aCyGb_0       ; "cy-gb"
db  87h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDa           ; "da"
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDaDk_0       ; "da-dk"
db  48h ; H
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDe           ; "de"
db    6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeAt_0       ; "de-at"
db 0A2h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeCh_0       ; "de-ch"
db  91h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeDe_0       ; "de-de"
db  49h ; I
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeLi_0       ; "de-li"
db 0B3h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDeLu_0       ; "de-lu"
db 0ABh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDiv          ; "div"
db  41h ; A
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aDivMv_0      ; "div-mv"
db  8Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEl           ; "el"
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aElGr_0       ; "el-gr"
db  4Ah ; J
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEn           ; "en"
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnAu_0       ; "en-au"
db 0A3h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnBz_0       ; "en-bz"
db 0CDh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnCa_0       ; "en-ca"
db 0ACh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnCb_0       ; "en-cb"
db 0C9h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnGb_0       ; "en-gb"
db  92h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnIe_0       ; "en-ie"
db 0BAh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnJm_0       ; "en-jm"
db 0C5h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnNz_0       ; "en-nz"
db 0B4h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnPh_0       ; "en-ph"
db 0D6h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnTt_0       ; "en-tt"
db 0D0h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnUs_0       ; "en-us"
db  4Bh ; K
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnZa_0       ; "en-za"
db 0C0h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEnZw_0       ; "en-zw"
db 0D3h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEs           ; "es"
db    9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsAr_0       ; "es-ar"
db 0D1h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsBo_0       ; "es-bo"
db 0DDh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsCl_0       ; "es-cl"
db 0D7h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsCo_0       ; "es-co"
db 0CAh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsCr_0       ; "es-cr"
db 0B5h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsDo_0       ; "es-do"
db 0C1h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsEc_0       ; "es-ec"
db 0D4h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsEs_0       ; "es-es"
db 0A4h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsGt_0       ; "es-gt"
db 0ADh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsHn_0       ; "es-hn"
db 0DFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsMx_0       ; "es-mx"
db  93h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsNi_0       ; "es-ni"
db 0E0h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPa_0       ; "es-pa"
db 0BBh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPe_0       ; "es-pe"
db 0CEh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPr_0       ; "es-pr"
db 0E1h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsPy_0       ; "es-py"
db 0DBh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsSv_0       ; "es-sv"
db 0DEh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsUy_0       ; "es-uy"
db 0D9h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEsVe_0       ; "es-ve"
db 0C6h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEt           ; "et"
db  23h ; #
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEtEe_0       ; "et-ee"
db  65h ; e
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEu           ; "eu"
db  2Ah ; *
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aEuEs_0       ; "eu-es"
db  6Ch ; l
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFa           ; "fa"
db  26h ; &
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFaIr_0       ; "fa-ir"
db  68h ; h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFi           ; "fi"
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFiFi_0       ; "fi-fi"
db  4Ch ; L
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFo           ; "fo"
db  2Eh ; .
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFoFo_0       ; "fo-fo"
db  73h ; s
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFr           ; "fr"
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrBe_0       ; "fr-be"
db  94h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrCa_0       ; "fr-ca"
db 0A5h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrCh_0       ; "fr-ch"
db 0AEh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrFr_0       ; "fr-fr"
db  4Dh ; M
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrLu_0       ; "fr-lu"
db 0B6h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aFrMc_0       ; "fr-mc"
db 0BCh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGl           ; "gl"
db  3Eh ; >
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGlEs_0       ; "gl-es"
db  88h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGu           ; "gu"
db  37h ; 7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aGuIn_0       ; "gu-in"
db  7Fh ; 
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHe           ; "he"
db  0Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHeIl_0       ; "he-il"
db  4Eh ; N
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHi           ; "hi"
db  2Fh ; /
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHiIn_0       ; "hi-in"
db  74h ; t
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHr           ; "hr"
db  18h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHrBa_0       ; "hr-ba"
db 0AFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHrHr_0       ; "hr-hr"
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHu           ; "hu"
db  0Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHuHu_0       ; "hu-hu"
db  4Fh ; O
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHy           ; "hy"
db  28h ; (
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aHyAm_0       ; "hy-am"
db  6Ah ; j
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aId           ; "id"
db  1Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIdId_0       ; "id-id"
db  61h ; a
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIs           ; "is"
db  0Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIsIs_0       ; "is-is"
db  50h ; P
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aIt           ; "it"
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aItCh_0       ; "it-ch"
db  95h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aItIt_0       ; "it-it"
db  51h ; Q
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aJa           ; "ja"
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aJaJp_0       ; "ja-jp"
db  52h ; R
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKa           ; "ka"
db  2Dh ; -
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKaGe_0       ; "ka-ge"
db  72h ; r
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKk           ; "kk"
db  31h ; 1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKkKz_0       ; "kk-kz"
db  78h ; x
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKn           ; "kn"
db  3Ah ; :
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKnIn_0       ; "kn-in"
db  82h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKo           ; "ko"
db  11h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKok          ; "kok"
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKokIn_0      ; "kok-in"
db  89h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKoKr_0       ; "ko-kr"
db  53h ; S
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKy           ; "ky"
db  32h ; 2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aKyKg_0       ; "ky-kg"
db  79h ; y
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLt           ; "lt"
db  25h ; %
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLtLt_0       ; "lt-lt"
db  67h ; g
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLv           ; "lv"
db  24h ; $
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aLvLv_0       ; "lv-lv"
db  66h ; f
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMiNz_0       ; "mi-nz"
db  8Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMk           ; "mk"
db  2Bh ; +
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMkMk_0       ; "mk-mk"
db  6Dh ; m
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMlIn_0       ; "ml-in"
db  83h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMn           ; "mn"
db  3Dh ; =
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMnMn_0       ; "mn-mn"
db  86h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMr           ; "mr"
db  3Bh ; ;
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMrIn_0       ; "mr-in"
db  84h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMs           ; "ms"
db  30h ; 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMsBn_0       ; "ms-bn"
db  9Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMsMy_0       ; "ms-my"
db  77h ; w
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aMtMt_0       ; "mt-mt"
db  75h ; u
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNbNo_0       ; "nb-no"
db  55h ; U
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNl           ; "nl"
db  12h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNlBe_0       ; "nl-be"
db  96h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNlNl_0       ; "nl-nl"
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNnNo_0       ; "nn-no"
db  97h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNo           ; "no"
db  13h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aNsZa_0       ; "ns-za"
db  8Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPa           ; "pa"
db  36h ; 6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPaIn_0       ; "pa-in"
db  7Eh ; ~
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPl           ; "pl"
db  14h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPlPl_0       ; "pl-pl"
db  56h ; V
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPt           ; "pt"
db  15h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPtBr_0       ; "pt-br"
db  57h ; W
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aPtPt_0       ; "pt-pt"
db  98h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aQuzBo_0      ; "quz-bo"
db  8Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aQuzEc_0      ; "quz-ec"
db  9Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aQuzPe_0      ; "quz-pe"
db 0A8h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRo           ; "ro"
db  16h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRoRo_0       ; "ro-ro"
db  58h ; X
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRu           ; "ru"
db  17h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aRuRu_0       ; "ru-ru"
db  59h ; Y
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSa           ; "sa"
db  3Ch ; <
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSaIn_0       ; "sa-in"
db  85h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSeFi_0       ; "se-fi"
db 0A7h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSeNo_0       ; "se-no"
db  76h ; v
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSeSe_0       ; "se-se"
db  9Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSk           ; "sk"
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSkSk_0       ; "sk-sk"
db  5Bh ; [
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSl           ; "sl"
db  22h ; "
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSlSi_0       ; "sl-si"
db  64h ; d
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmaNo_0      ; "sma-no"
db 0BEh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmaSe_0      ; "sma-se"
db 0C3h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmjNo_0      ; "smj-no"
db 0B0h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmjSe_0      ; "smj-se"
db 0B8h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmnFi_0      ; "smn-fi"
db 0CBh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSmsFi_0      ; "sms-fi"
db 0C7h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSq           ; "sq"
db  1Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSqAl_0       ; "sq-al"
db  5Ch ; \
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSr           ; "sr"
db 0E3h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrBaCyrl_0   ; "sr-ba-cyrl"
db 0C2h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrBaLatn_0   ; "sr-ba-latn"
db 0BDh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrSpCyrl_0   ; "sr-sp-cyrl"
db 0A6h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSrSpLatn_0   ; "sr-sp-latn"
db  99h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSv           ; "sv"
db  1Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSvFi_0       ; "sv-fi"
db  9Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSvSe_0       ; "sv-se"
db  5Dh ; ]
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSw           ; "sw"
db  33h ; 3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSwKe_0       ; "sw-ke"
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSyr          ; "syr"
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aSyrSy_0      ; "syr-sy"
db  8Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTa           ; "ta"
db  38h ; 8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTaIn_0       ; "ta-in"
db  80h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTe           ; "te"
db  39h ; 9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTeIn_0       ; "te-in"
db  81h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTh           ; "th"
db  1Ch
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aThTh_0       ; "th-th"
db  5Eh ; ^
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTnZa_0       ; "tn-za"
db  6Eh ; n
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTr           ; "tr"
db  1Dh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTrTr_0       ; "tr-tr"
db  5Fh ; _
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTt           ; "tt"
db  35h ; 5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aTtRu_0       ; "tt-ru"
db  7Ch ; |
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUk           ; "uk"
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUkUa_0       ; "uk-ua"
db  62h ; b
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUr           ; "ur"
db  1Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUrPk_0       ; "ur-pk"
db  60h ; `
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUz           ; "uz"
db  34h ; 4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUzUzCyrl_0   ; "uz-uz-cyrl"
db  9Eh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aUzUzLatn_0   ; "uz-uz-latn"
db  7Bh ; {
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aVi           ; "vi"
db  27h ; '
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aViVn_0       ; "vi-vn"
db  69h ; i
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aXhZa_0       ; "xh-za"
db  6Fh ; o
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhChs_0      ; "zh-chs"
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhCht_0      ; "zh-cht"
db 0E2h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhCn_0       ; "zh-cn"
db  90h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhHk_0       ; "zh-hk"
db 0A1h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhMo_0       ; "zh-mo"
db 0B2h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhSg_0       ; "zh-sg"
db 0AAh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZhTw_0       ; "zh-tw"
db  46h ; F
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset aZuZa_0       ; "zu-za"
db  70h ; p
db    0
db    0
db    0
db    0
db    0
db    0
db    0
aAfZa_0:
text "UTF-16LE", 'af-za',0
align 20h
aArAe_0:
text "UTF-16LE", 'ar-ae',0
align 10h
aArBh_0:
text "UTF-16LE", 'ar-bh',0
align 20h
aArDz_0:
text "UTF-16LE", 'ar-dz',0
align 10h
aArEg_0:
text "UTF-16LE", 'ar-eg',0
align 20h
aArIq_0:
text "UTF-16LE", 'ar-iq',0
align 10h
aArJo_0:
text "UTF-16LE", 'ar-jo',0
align 20h
aArKw_0:
text "UTF-16LE", 'ar-kw',0
align 10h
aArLb_0:
text "UTF-16LE", 'ar-lb',0
align 20h
aArLy_0:
text "UTF-16LE", 'ar-ly',0
align 10h
aArMa_0:
text "UTF-16LE", 'ar-ma',0
align 20h
aArOm_0:
text "UTF-16LE", 'ar-om',0
align 10h
aArQa_0:
text "UTF-16LE", 'ar-qa',0
align 20h
aArSa_0:
text "UTF-16LE", 'ar-sa',0
align 10h
aArSy_0:
text "UTF-16LE", 'ar-sy',0
align 20h
aArTn_0:
text "UTF-16LE", 'ar-tn',0
align 10h
aArYe_0:
text "UTF-16LE", 'ar-ye',0
align 20h
aAzAzCyrl_0:
text "UTF-16LE", 'az-az-cyrl',0
align 8
aAzAzLatn_0:
text "UTF-16LE", 'az-az-latn',0
align 10h
aBeBy_0:
text "UTF-16LE", 'be-by',0
align 20h
aBgBg_0:
text "UTF-16LE", 'bg-bg',0
align 10h
aBnIn_0:
text "UTF-16LE", 'bn-in',0
align 20h
aBsBaLatn_0:
text "UTF-16LE", 'bs-ba-latn',0
align 8
aCaEs_0:
text "UTF-16LE", 'ca-es',0
align 8
aCsCz_0:
text "UTF-16LE", 'cs-cz',0
align 8
aCyGb_0:
text "UTF-16LE", 'cy-gb',0
align 8
aDaDk_0:
text "UTF-16LE", 'da-dk',0
align 8
aDeAt_0:
text "UTF-16LE", 'de-at',0
align 8
aDeCh_0:
text "UTF-16LE", 'de-ch',0
align 8
aDeDe_0:
text "UTF-16LE", 'de-de',0
align 8
aDeLi_0:
text "UTF-16LE", 'de-li',0
align 8
aDeLu_0:
text "UTF-16LE", 'de-lu',0
align 8
aDivMv_0:
text "UTF-16LE", 'div-mv',0
align 8
aElGr_0:
text "UTF-16LE", 'el-gr',0
align 8
aEnAu_0:
text "UTF-16LE", 'en-au',0
align 8
aEnBz_0:
text "UTF-16LE", 'en-bz',0
align 8
aEnCa_0:
text "UTF-16LE", 'en-ca',0
align 8
aEnCb_0:
text "UTF-16LE", 'en-cb',0
align 8
aEnGb_0:
text "UTF-16LE", 'en-gb',0
align 8
aEnIe_0:
text "UTF-16LE", 'en-ie',0
align 8
aEnJm_0:
text "UTF-16LE", 'en-jm',0
align 8
aEnNz_0:
text "UTF-16LE", 'en-nz',0
align 8
aEnPh_0:
text "UTF-16LE", 'en-ph',0
align 8
aEnTt_0:
text "UTF-16LE", 'en-tt',0
align 8
aEnUs_0:
text "UTF-16LE", 'en-us',0
align 8
aEnZa_0:
text "UTF-16LE", 'en-za',0
align 8
aEnZw_0:
text "UTF-16LE", 'en-zw',0
align 8
aEsAr_0:
text "UTF-16LE", 'es-ar',0
align 8
aEsBo_0:
text "UTF-16LE", 'es-bo',0
align 8
aEsCl_0:
text "UTF-16LE", 'es-cl',0
align 8
aEsCo_0:
text "UTF-16LE", 'es-co',0
align 8
aEsCr_0:
text "UTF-16LE", 'es-cr',0
align 8
aEsDo_0:
text "UTF-16LE", 'es-do',0
align 8
aEsEc_0:
text "UTF-16LE", 'es-ec',0
align 8
aEsEs_0:
text "UTF-16LE", 'es-es',0
align 8
aEsGt_0:
text "UTF-16LE", 'es-gt',0
align 8
aEsHn_0:
text "UTF-16LE", 'es-hn',0
align 8
aEsMx_0:
text "UTF-16LE", 'es-mx',0
align 8
aEsNi_0:
text "UTF-16LE", 'es-ni',0
align 8
aEsPa_0:
text "UTF-16LE", 'es-pa',0
align 8
aEsPe_0:
text "UTF-16LE", 'es-pe',0
align 8
aEsPr_0:
text "UTF-16LE", 'es-pr',0
align 8
aEsPy_0:
text "UTF-16LE", 'es-py',0
align 8
aEsSv_0:
text "UTF-16LE", 'es-sv',0
align 8
aEsUy_0:
text "UTF-16LE", 'es-uy',0
align 8
aEsVe_0:
text "UTF-16LE", 'es-ve',0
align 8
aEtEe_0:
text "UTF-16LE", 'et-ee',0
align 8
aEuEs_0:
text "UTF-16LE", 'eu-es',0
align 8
aFaIr_0:
text "UTF-16LE", 'fa-ir',0
align 8
aFiFi_0:
text "UTF-16LE", 'fi-fi',0
align 8
aFoFo_0:
text "UTF-16LE", 'fo-fo',0
align 8
aFrBe_0:
text "UTF-16LE", 'fr-be',0
align 8
aFrCa_0:
text "UTF-16LE", 'fr-ca',0
align 8
aFrCh_0:
text "UTF-16LE", 'fr-ch',0
align 8
aFrFr_0:
text "UTF-16LE", 'fr-fr',0
align 8
aFrLu_0:
text "UTF-16LE", 'fr-lu',0
align 8
aFrMc_0:
text "UTF-16LE", 'fr-mc',0
align 8
aGlEs_0:
text "UTF-16LE", 'gl-es',0
align 8
aGuIn_0:
text "UTF-16LE", 'gu-in',0
align 8
aHeIl_0:
text "UTF-16LE", 'he-il',0
align 8
aHiIn_0:
text "UTF-16LE", 'hi-in',0
align 8
aHrBa_0:
text "UTF-16LE", 'hr-ba',0
align 8
aHrHr_0:
text "UTF-16LE", 'hr-hr',0
align 8
aHuHu_0:
text "UTF-16LE", 'hu-hu',0
align 8
aHyAm_0:
text "UTF-16LE", 'hy-am',0
align 8
aIdId_0:
text "UTF-16LE", 'id-id',0
align 8
aIsIs_0:
text "UTF-16LE", 'is-is',0
align 8
aItCh_0:
text "UTF-16LE", 'it-ch',0
align 8
aItIt_0:
text "UTF-16LE", 'it-it',0
align 8
aJaJp_0:
text "UTF-16LE", 'ja-jp',0
align 8
aKaGe_0:
text "UTF-16LE", 'ka-ge',0
align 8
aKkKz_0:
text "UTF-16LE", 'kk-kz',0
align 8
aKnIn_0:
text "UTF-16LE", 'kn-in',0
align 8
aKokIn_0:
text "UTF-16LE", 'kok-in',0
align 8
aKoKr_0:
text "UTF-16LE", 'ko-kr',0
align 8
aKyKg_0:
text "UTF-16LE", 'ky-kg',0
align 8
aLtLt_0:
text "UTF-16LE", 'lt-lt',0
align 8
aLvLv_0:
text "UTF-16LE", 'lv-lv',0
align 8
aMiNz_0:
text "UTF-16LE", 'mi-nz',0
align 8
aMkMk_0:
text "UTF-16LE", 'mk-mk',0
align 8
aMlIn_0:
text "UTF-16LE", 'ml-in',0
align 8
aMnMn_0:
text "UTF-16LE", 'mn-mn',0
align 8
aMrIn_0:
text "UTF-16LE", 'mr-in',0
align 8
aMsBn_0:
text "UTF-16LE", 'ms-bn',0
align 8
aMsMy_0:
text "UTF-16LE", 'ms-my',0
align 8
aMtMt_0:
text "UTF-16LE", 'mt-mt',0
align 8
aNbNo_0:
text "UTF-16LE", 'nb-no',0
align 8
aNlBe_0:
text "UTF-16LE", 'nl-be',0
align 8
aNlNl_0:
text "UTF-16LE", 'nl-nl',0
align 8
aNnNo_0:
text "UTF-16LE", 'nn-no',0
align 8
aNsZa_0:
text "UTF-16LE", 'ns-za',0
align 8
aPaIn_0:
text "UTF-16LE", 'pa-in',0
align 8
aPlPl_0:
text "UTF-16LE", 'pl-pl',0
align 8
aPtBr_0:
text "UTF-16LE", 'pt-br',0
align 8
aPtPt_0:
text "UTF-16LE", 'pt-pt',0
align 8
aQuzBo_0:
text "UTF-16LE", 'quz-bo',0
align 8
aQuzEc_0:
text "UTF-16LE", 'quz-ec',0
align 8
aQuzPe_0:
text "UTF-16LE", 'quz-pe',0
align 8
aRoRo_0:
text "UTF-16LE", 'ro-ro',0
align 8
aRuRu_0:
text "UTF-16LE", 'ru-ru',0
align 8
aSaIn_0:
text "UTF-16LE", 'sa-in',0
align 8
aSeFi_0:
text "UTF-16LE", 'se-fi',0
align 8
aSeNo_0:
text "UTF-16LE", 'se-no',0
align 8
aSeSe_0:
text "UTF-16LE", 'se-se',0
align 8
aSkSk_0:
text "UTF-16LE", 'sk-sk',0
align 8
aSlSi_0:
text "UTF-16LE", 'sl-si',0
align 8
aSmaNo_0:
text "UTF-16LE", 'sma-no',0
align 8
aSmaSe_0:
text "UTF-16LE", 'sma-se',0
align 8
aSmjNo_0:
text "UTF-16LE", 'smj-no',0
align 8
aSmjSe_0:
text "UTF-16LE", 'smj-se',0
align 8
aSmnFi_0:
text "UTF-16LE", 'smn-fi',0
align 8
aSmsFi_0:
text "UTF-16LE", 'sms-fi',0
align 8
aSqAl_0:
text "UTF-16LE", 'sq-al',0
align 8
aSrBaCyrl_0:
text "UTF-16LE", 'sr-ba-cyrl',0
align 10h
aSrBaLatn_0:
text "UTF-16LE", 'sr-ba-latn',0
align 8
aSrSpCyrl_0:
text "UTF-16LE", 'sr-sp-cyrl',0
align 20h
aSrSpLatn_0:
text "UTF-16LE", 'sr-sp-latn',0
align 8
aSvFi_0:
text "UTF-16LE", 'sv-fi',0
align 8
aSvSe_0:
text "UTF-16LE", 'sv-se',0
align 8
aSwKe_0:
text "UTF-16LE", 'sw-ke',0
align 8
aSyrSy_0:
text "UTF-16LE", 'syr-sy',0
align 8
aTaIn_0:
text "UTF-16LE", 'ta-in',0
align 8
aTeIn_0:
text "UTF-16LE", 'te-in',0
align 8
aThTh_0:
text "UTF-16LE", 'th-th',0
align 8
aTnZa_0:
text "UTF-16LE", 'tn-za',0
align 8
aTrTr_0:
text "UTF-16LE", 'tr-tr',0
align 8
aTtRu_0:
text "UTF-16LE", 'tt-ru',0
align 8
aUkUa_0:
text "UTF-16LE", 'uk-ua',0
align 8
aUrPk_0:
text "UTF-16LE", 'ur-pk',0
align 8
aUzUzCyrl_0:
text "UTF-16LE", 'uz-uz-cyrl',0
align 10h
aUzUzLatn_0:
text "UTF-16LE", 'uz-uz-latn',0
align 8
aViVn_0:
text "UTF-16LE", 'vi-vn',0
align 8
aXhZa_0:
text "UTF-16LE", 'xh-za',0
align 8
aZhChs_0:
text "UTF-16LE", 'zh-chs',0
align 8
aZhCht_0:
text "UTF-16LE", 'zh-cht',0
align 8
aZhCn_0:
text "UTF-16LE", 'zh-cn',0
align 8
aZhHk_0:
text "UTF-16LE", 'zh-hk',0
align 8
aZhMo_0:
text "UTF-16LE", 'zh-mo',0
align 8
aZhSg_0:
text "UTF-16LE", 'zh-sg',0
align 8
aZhTw_0:
text "UTF-16LE", 'zh-tw',0
align 8
aZuZa_0:
text "UTF-16LE", 'zu-za',0
align 10h
qword_7FF6E34668D0 dq 0FFF0000000000000h
align 20h
xmmword_7FF6E34668E0 xmmword 7FF0000000000000h
qword_7FF6E34668F0 dq 0FFF8000000000000h
align 20h
qword_7FF6E3466900 dq 8000000000000h
align 10h
xmmword_7FF6E3466910 xmmword 3FFh
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
xmmword_7FF6E3466930 xmmword 0FFFFFFFFFFFFFh
xmmword_7FF6E3466940 xmmword 0FF00000000000h
xmmword_7FF6E3466950 xmmword 80000000000h
qword_7FF6E3466960 dq 3FDBCB7B1526E50Eh
align 10h
qword_7FF6E3466970 dq 3FDBCB7800000000h
align 20h
qword_7FF6E3466980 dq 3EA8A93728719535h
align 10h
qword_7FF6E3466990 dq 3FD3441350000000h
align 20h
qword_7FF6E34669A0 dq 3E03EF3FDE623E25h
align 10h
qword_7FF6E34669B0 dq 4000000000000000h
align 20h
xmmword_7FF6E34669C0 xmmword 3FF0000000000000h
xmmword_7FF6E34669D0 xmmword 3FE0000000000000h
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  60h ; `
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E3466A00 dq 3FE0000000000000h
align 10h
qword_7FF6E3466A10 dq 3FD5555555555555h
align 20h
qword_7FF6E3466A20 dq 3FD0000000000000h
align 10h
qword_7FF6E3466A30 dq 3FC999999999999Ah
align 20h
qword_7FF6E3466A40 dq 3FC5555555555555h
align 10h
qword_7FF6E3466A50 dq 0C08FF80000000000h
align 20h
xmmword_7FF6E3466A60 xmmword 7FDh
qword_7FF6E3466A70 dq 3FB0000000000000h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0EEh
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0F1h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
xmmword_7FF6E3466AB0 xmmword 7FFFFFFFFFFFFFFFh
qword_7FF6E3466AC0 dq 3FB55555555554E6h
align 10h
qword_7FF6E3466AD0 dq 3F89999999BAC6D4h
align 20h
qword_7FF6E3466AE0 dq 3F62492307F1519Fh
align 10h
qword_7FF6E3466AF0 dq 3F3C8034C85DFFF0h
align 20h
xmmword_7FF6E3466B00 xmmword 0FFFFFFFF00000000h
dword_7FF6E3466B10 dd 1
dword_7FF6E3466B14 dd 2
dword_7FF6E3466B18 dd 3
align 20h
; const WCHAR FileName
FileName:
text "UTF-16LE", 'CONOUT$',0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0DFh
db  3Fh ; ?
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0DFh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db    0
db    0
db    0
db  80h
db    0
db    0
db    0
db  80h
db    0
db    0
db    0
db  80h
db 0FFh
db 0FFh
db 0FFh
db  3Eh ; >
db 0FFh
db 0FFh
db 0FFh
db  3Eh ; >
db 0FFh
db 0FFh
db 0FFh
db  3Eh ; >
db 0FFh
db 0FFh
db 0FFh
db  3Eh ; >
unk_7FF6E3466B70 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db  9Eh
db 0BDh
db  5Bh ; [
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0D4h
db 0AFh
db  6Bh ; k
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  95h
db 0B9h
db  74h ; t
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  76h ; v
db  94h
db  7Bh ; {
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  4Dh ; M
db  34h ; 4
db  81h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db    8
db  9Bh
db  84h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  71h ; q
db 0FEh
db  87h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  90h
db  5Eh ; ^
db  8Bh
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  6Ah ; j
db 0BBh
db  8Eh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  83h
db  0Ah
db  91h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0B5h
db 0B5h
db  92h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  4Fh ; O
db  5Fh ; _
db  94h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  53h ; S
db    7
db  96h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0C3h
db 0ADh
db  97h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db 0A4h
db  52h ; R
db  99h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db 0F9h
db 0F5h
db  9Ah
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0C3h
db  97h
db  9Ch
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db    6
db  38h ; 8
db  9Eh
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db 0C5h
db 0D6h
db  9Fh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db    1
db 0BAh
db 0A0h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db 0E1h
db  87h
db 0A1h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db    2
db  55h ; U
db 0A2h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  67h ; g
db  21h ; !
db 0A3h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db  11h
db 0EDh
db 0A3h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db    1
db 0B8h
db 0A4h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  38h ; 8
db  82h
db 0A5h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0B9h
db  4Bh ; K
db 0A6h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  83h
db  14h
db 0A7h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  98h
db 0DCh
db 0A7h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0FAh
db 0A3h
db 0A8h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db 0AAh
db  6Ah ; j
db 0A9h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0A9h
db  30h ; 0
db 0AAh
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db 0F9h
db 0F5h
db 0AAh
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  9Ah
db 0BAh
db 0ABh
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db  8Dh
db  7Eh ; ~
db 0ACh
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0D5h
db  41h ; A
db 0ADh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  71h ; q
db    4
db 0AEh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  64h ; d
db 0C6h
db 0AEh
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db 0AEh
db  87h
db 0AFh
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  28h ; (
db  24h ; $
db 0B0h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  26h ; &
db  84h
db 0B0h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db 0D2h
db 0E3h
db 0B0h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  2Ch ; ,
db  43h ; C
db 0B1h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  34h ; 4
db 0A2h
db 0B1h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db 0EBh
db    0
db 0B2h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  52h ; R
db  5Fh ; _
db 0B2h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  68h ; h
db 0BDh
db 0B2h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  30h ; 0
db  1Bh
db 0B3h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0A8h
db  78h ; x
db 0B3h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db 0D3h
db 0D5h
db 0B3h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0AFh
db  32h ; 2
db 0B4h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  3Eh ; >
db  8Fh
db 0B4h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db  81h
db 0EBh
db 0B4h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  77h ; w
db  47h ; G
db 0B5h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  21h ; !
db 0A3h
db 0B5h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  80h
db 0FEh
db 0B5h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  94h
db  59h ; Y
db 0B6h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  5Dh ; ]
db 0B4h
db 0B6h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db 0DDh
db  0Eh
db 0B7h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  14h
db  69h ; i
db 0B7h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db    1
db 0C3h
db 0B7h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db 0A6h
db  1Ch
db 0B8h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    3
db  76h ; v
db 0B8h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  18h
db 0CFh
db 0B8h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0E6h
db  27h ; '
db 0B9h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db  6Dh ; m
db  80h
db 0B9h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0AEh
db 0D8h
db 0B9h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0A9h
db  30h ; 0
db 0BAh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  5Fh ; _
db  88h
db 0BAh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0D0h
db 0DFh
db 0BAh
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db 0FCh
db  36h ; 6
db 0BBh
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0E4h
db  8Dh
db 0BBh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  89h
db 0E4h
db 0BBh
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0EAh
db  3Ah ; :
db 0BCh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db    8
db  91h
db 0BCh
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0E4h
db 0E6h
db 0BCh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  7Dh ; }
db  3Ch ; <
db 0BDh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db 0D5h
db  91h
db 0BDh
db  3Fh ; ?
db    0
db    0
db    0
db    0
db 0ECh
db 0E6h
db 0BDh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0C1h
db  3Bh ; ;
db 0BEh
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db  56h ; V
db  90h
db 0BEh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0ABh
db 0E4h
db 0BEh
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db 0C0h
db  38h ; 8
db 0BFh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  96h
db  8Ch
db 0BFh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  2Dh ; -
db 0E0h
db 0BFh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0C2h
db  19h
db 0C0h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  4Fh ; O
db  43h ; C
db 0C0h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db 0BDh
db  6Ch ; l
db 0C0h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  0Ch
db  96h
db 0C0h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  3Dh ; =
db 0BFh
db 0C0h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  4Fh ; O
db 0E8h
db 0C0h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  42h ; B
db  11h
db 0C1h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  18h
db  3Ah ; :
db 0C1h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db 0D0h
db  62h ; b
db 0C1h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db  6Ah ; j
db  8Bh
db 0C1h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0E7h
db 0B3h
db 0C1h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  46h ; F
db 0DCh
db 0C1h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  88h
db    4
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0ACh
db  2Ch ; ,
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0B4h
db  54h ; T
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  9Fh
db  7Ch ; |
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  6Eh ; n
db 0A4h
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db  20h
db 0CCh
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db 0B6h
db 0F3h
db 0C2h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  30h ; 0
db  1Bh
db 0C3h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db  8Eh
db  42h ; B
db 0C3h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db 0D0h
db  69h ; i
db 0C3h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db 0F6h
db  90h
db 0C3h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db    1
db 0B8h
db 0C3h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0F0h
db 0DEh
db 0C3h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db 0C5h
db    5
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  7Eh ; ~
db  2Ch ; ,
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  1Ch
db  53h ; S
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0A0h
db  79h ; y
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db    9
db 0A0h
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  58h ; X
db 0C6h
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  8Ch
db 0ECh
db 0C4h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0A6h
db  12h
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db 0A6h
db  38h ; 8
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  8Ch
db  5Eh ; ^
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db  58h ; X
db  84h
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  0Bh
db 0AAh
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0A4h
db 0CFh
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  24h ; $
db 0F5h
db 0C5h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  8Ah
db  1Ah
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0D8h
db  3Fh ; ?
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  0Ch
db  65h ; e
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  28h ; (
db  8Ah
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  2Bh ; +
db 0AFh
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  15h
db 0D4h
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0E7h
db 0F8h
db 0C6h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0A1h
db  1Dh
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  42h ; B
db  42h ; B
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0CCh
db  66h ; f
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  3Dh ; =
db  8Bh
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  97h
db 0AFh
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0D9h
db 0D3h
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db    3
db 0F8h
db 0C7h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db  16h
db  1Ch
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db  11h
db  40h ; @
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db 0F5h
db  63h ; c
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0C2h
db  87h
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  79h ; y
db 0ABh
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  18h
db 0CFh
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0A0h
db 0F2h
db 0C8h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  12h
db  16h
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db  6Dh ; m
db  39h ; 9
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db 0B2h
db  5Ch ; \
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db 0E1h
db  7Fh ; 
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0F9h
db 0A2h
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db 0FBh
db 0C5h
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db 0E7h
db 0E8h
db 0C9h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db 0BDh
db  0Bh
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  7Eh ; ~
db  2Eh ; .
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  29h ; )
db  51h ; Q
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0BEh
db  73h ; s
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  3Eh ; >
db  96h
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db 0A8h
db 0B8h
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db 0FEh
db 0DAh
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  3Eh ; >
db 0FDh
db 0CAh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  69h ; i
db  1Fh
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  7Fh ; 
db  41h ; A
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  80h
db  63h ; c
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  6Ch ; l
db  85h
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db  44h ; D
db 0A7h
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db    7
db 0C9h
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db 0B6h
db 0EAh
db 0CBh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  51h ; Q
db  0Ch
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0D7h
db  2Dh ; -
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  49h ; I
db  4Fh ; O
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0A7h
db  70h ; p
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db 0F1h
db  91h
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  27h ; '
db 0B3h
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  49h ; I
db 0D4h
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  58h ; X
db 0F5h
db 0CCh
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  53h ; S
db  16h
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  3Ah ; :
db  37h ; 7
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  0Eh
db  58h ; X
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db    0
db 0CFh
db  78h ; x
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  7Ch ; |
db  99h
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  16h
db 0BAh
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  9Dh
db 0DAh
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  11h
db 0FBh
db 0CDh
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  73h ; s
db  1Bh
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db 0C1h
db  3Bh ; ;
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0FDh
db  5Bh ; [
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  26h ; &
db  7Ch ; |
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  3Ch ; <
db  9Ch
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  40h ; @
db 0BCh
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db  32h ; 2
db 0DCh
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  11h
db 0FCh
db 0CEh
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0DEh
db  1Bh
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  99h
db  3Bh ; ;
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  42h ; B
db  5Bh ; [
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db 0D9h
db  7Ah ; z
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  5Eh ; ^
db  9Ah
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db  90h
db 0D1h
db 0B9h
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  32h ; 2
db 0D9h
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  82h
db 0F8h
db 0CFh
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0E0h
db  0Bh
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  76h ; v
db  1Bh
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db    4
db  2Bh ; +
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  89h
db  3Ah ; :
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db    5
db  4Ah ; J
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  78h ; x
db  59h ; Y
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db 0E3h
db  68h ; h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  46h ; F
db  78h ; x
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  80h
db 0A0h
db  87h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0F2h
db  96h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  3Bh ; ;
db 0A6h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db  7Bh ; {
db 0B5h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0B4h
db 0C4h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db 0E4h
db 0D3h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  0Ch
db 0E3h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  2Bh ; +
db 0F2h
db 0D0h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  43h ; C
db    1
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  52h ; R
db  10h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db  59h ; Y
db  1Fh
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  58h ; X
db  2Eh ; .
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  4Fh ; O
db  3Dh ; =
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  3Dh ; =
db  4Ch ; L
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  24h ; $
db  5Bh ; [
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db    3
db  6Ah ; j
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db 0DAh
db  78h ; x
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0A9h
db  87h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  70h ; p
db  96h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  2Fh ; /
db 0A5h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db 0E7h
db 0B3h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  96h
db 0C2h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db  3Eh ; >
db 0D1h
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0F0h
db 0DEh
db 0DFh
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  77h ; w
db 0EEh
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db    8
db 0FDh
db 0D1h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  91h
db  0Bh
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  13h
db  1Ah
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  8Dh
db  28h ; (
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db    0
db  37h ; 7
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  30h ; 0
db  6Bh ; k
db  45h ; E
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db 0CEh
db  53h ; S
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db  2Bh ; +
db  62h ; b
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0D0h
db  7Fh ; 
db  70h ; p
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  40h ; @
db 0CDh
db  7Eh ; ~
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  60h ; `
db  13h
db  8Dh
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db  52h ; R
db  9Bh
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0A0h
db  89h
db 0A9h
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0B9h
db 0B7h
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db 0E2h
db 0C5h
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db    4
db 0D4h
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  1Fh
db 0E2h
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db 0C0h
db  32h ; 2
db 0F0h
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  20h
db  3Fh ; ?
db 0FEh
db 0D2h
db  3Fh ; ?
db    0
db    0
db    0
db  70h ; p
db  44h ; D
db  0Ch
db 0D3h
db  3Fh ; ?
db    0
db    0
db    0
db 0B0h
db  42h ; B
db  1Ah
db 0D3h
db  3Fh ; ?
db    0
db    0
db    0
db 0E0h
db  39h ; 9
db  28h ; (
db 0D3h
db  3Fh ; ?
db    0
db    0
db    0
db  10h
db  2Ah ; *
db  36h ; 6
db 0D3h
db  3Fh ; ?
db    0
db    0
db    0
db  50h ; P
db  13h
db  44h ; D
db 0D3h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3467380 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Fh
db  20h
db 0B2h
db  22h ; "
db 0BCh
db  0Ah
db 0B2h
db  3Dh ; =
db 0D4h
db  0Dh
db  2Eh ; .
db  33h ; 3
db  69h ; i
db  0Fh
db 0B1h
db  3Dh ; =
db  57h ; W
db 0D2h
db  7Eh ; ~
db 0E8h
db  0Dh
db  95h
db 0CEh
db  3Dh ; =
db  69h ; i
db  6Dh ; m
db  62h ; b
db  3Bh ; ;
db  44h ; D
db 0F3h
db 0D3h
db  3Dh ; =
db  57h ; W
db  3Eh ; >
db  36h ; 6
db 0A5h
db 0EAh
db  5Ah ; Z
db 0F4h
db  3Dh ; =
db  0Bh
db 0BFh
db 0E1h
db  3Ch ; <
db  68h ; h
db  43h ; C
db 0C4h
db  3Dh ; =
db  11h
db 0A5h
db 0C6h
db  60h ; `
db 0CDh
db  89h
db 0F9h
db  3Dh ; =
db  9Fh
db  2Eh ; .
db  1Fh
db  20h
db  6Fh ; o
db  62h ; b
db 0FDh
db  3Dh ; =
db 0CDh
db 0BDh
db 0DAh
db 0B8h
db  8Bh
db  4Fh ; O
db 0E9h
db  3Dh ; =
db  15h
db  30h ; 0
db  42h ; B
db 0EFh
db 0D8h
db  88h
db    0
db  3Eh ; >
db 0ADh
db  79h ; y
db  2Bh ; +
db 0A6h
db  13h
db    4
db    8
db  3Eh ; >
db 0C4h
db 0D3h
db 0EEh
db 0C0h
db  17h
db  97h
db    5
db  3Eh ; >
db    2
db  49h ; I
db 0D4h
db 0ADh
db  77h ; w
db  4Ah ; J
db 0ADh
db  3Dh ; =
db  0Eh
db  30h ; 0
db  37h ; 7
db 0F0h
db  3Fh ; ?
db  76h ; v
db  0Eh
db  3Eh ; >
db 0C3h
db 0F6h
db    6
db  47h ; G
db 0D7h
db  62h ; b
db 0E1h
db  3Dh ; =
db  14h
db 0BCh
db  4Dh ; M
db  1Fh
db 0CCh
db    1
db    6
db  3Eh ; >
db 0BFh
db 0E5h
db 0F6h
db  51h ; Q
db 0E0h
db 0F3h
db 0EAh
db  3Dh ; =
db 0EBh
db 0F3h
db  1Ah
db  1Eh
db  0Bh
db  7Ah ; z
db    9
db  3Eh ; >
db 0C7h
db    2
db 0C0h
db  70h ; p
db  89h
db 0A3h
db 0C0h
db  3Dh ; =
db  51h ; Q
db 0C7h
db  57h ; W
db    0
db    0
db  2Eh ; .
db  10h
db  3Eh ; >
db  0Eh
db  6Eh ; n
db 0CDh
db 0EEh
db    0
db  5Bh ; [
db  15h
db  3Eh ; >
db 0AFh
db 0B5h
db    3
db  70h ; p
db  29h ; )
db  86h
db 0DFh
db  3Dh ; =
db  6Dh ; m
db 0A3h
db  36h ; 6
db 0B3h
db 0B9h
db  57h ; W
db  10h
db  3Eh ; >
db  4Fh ; O
db 0EAh
db    6
db  4Ah ; J
db 0C8h
db  4Bh ; K
db  13h
db  3Eh ; >
db 0ADh
db 0BCh
db 0A1h
db  9Eh
db 0DAh
db  43h ; C
db  16h
db  3Eh ; >
db  2Ah ; *
db 0EAh
db 0F7h
db 0B4h
db 0A7h
db  66h ; f
db  1Dh
db  3Eh ; >
db 0EFh
db 0FCh
db 0F7h
db  38h ; 8
db 0E0h
db 0B2h
db 0F6h
db  3Dh ; =
db  88h
db 0F0h
db  70h ; p
db 0C6h
db  54h ; T
db 0E9h
db 0F3h
db  3Dh ; =
db 0B3h
db 0CAh
db  3Ah ; :
db    9
db    9
db  72h ; r
db    4
db  3Eh ; >
db 0A7h
db  5Dh ; ]
db  27h ; '
db 0E7h
db  8Fh
db  70h ; p
db  1Dh
db  3Eh ; >
db 0E7h
db 0B9h
db  71h ; q
db  77h ; w
db  9Eh
db 0DFh
db  1Fh
db  3Eh ; >
db  60h ; `
db    6
db  0Ah
db 0A7h
db 0BFh
db  27h ; '
db    8
db  3Eh ; >
db  14h
db 0BCh
db  4Dh ; M
db  1Fh
db 0CCh
db    1
db  16h
db  3Eh ; >
db  5Bh ; [
db  5Eh ; ^
db  6Ah ; j
db  10h
db 0F6h
db  37h ; 7
db    6
db  3Eh ; >
db  4Bh ; K
db  62h ; b
db  7Ch ; |
db 0F1h
db  13h
db  6Ah ; j
db  12h
db  3Eh ; >
db  3Ah ; :
db  62h ; b
db  80h
db 0CEh
db 0B2h
db  3Eh ; >
db    9
db  3Eh ; >
db 0DEh
db  94h
db  15h
db 0E9h
db 0D1h
db  30h ; 0
db  14h
db  3Eh ; >
db  31h ; 1
db 0A0h
db  8Fh
db  10h
db  10h
db  6Bh ; k
db  1Dh
db  3Eh ; >
db  41h ; A
db 0F2h
db 0BAh
db  0Bh
db  9Ch
db  87h
db  16h
db  3Eh ; >
db  2Bh ; +
db 0BCh
db 0A6h
db  5Eh ; ^
db    1
db    8
db 0FFh
db  3Dh ; =
db  6Ch ; l
db  67h ; g
db 0C6h
db 0CDh
db  3Dh ; =
db 0B6h
db  29h ; )
db  3Eh ; >
db  2Ch ; ,
db 0ABh
db 0C4h
db 0BCh
db  2Ch ; ,
db    2
db  2Bh ; +
db  3Eh ; >
db  44h ; D
db  65h ; e
db 0DDh
db  7Dh ; }
db 0D0h
db  17h
db 0F9h
db  3Dh ; =
db  9Eh
db  37h ; 7
db    3
db  57h ; W
db  60h ; `
db  40h ; @
db  15h
db  3Eh ; >
db  60h ; `
db  1Bh
db  7Ah ; z
db  94h
db  8Bh
db 0D1h
db  0Ch
db  3Eh ; >
db  7Eh ; ~
db 0A9h
db  7Ch ; |
db  27h ; '
db  65h ; e
db 0ADh
db  17h
db  3Eh ; >
db 0A9h
db  5Fh ; _
db  9Fh
db 0C5h
db  4Dh ; M
db  88h
db  11h
db  3Eh ; >
db  82h
db 0D0h
db    6
db  60h ; `
db 0C4h
db  11h
db  17h
db  3Eh ; >
db 0F8h
db    8
db  31h ; 1
db  3Ch ; <
db  2Eh ; .
db    9
db  2Fh ; /
db  3Eh ; >
db  3Ah ; :
db 0E1h
db  2Bh ; +
db 0E3h
db 0C5h
db  14h
db  17h
db  3Eh ; >
db  9Ah
db  4Fh ; O
db  73h ; s
db 0FDh
db 0A7h
db 0BBh
db  26h ; &
db  3Eh ; >
db  83h
db  84h
db 0E0h
db 0B5h
db  8Fh
db 0F4h
db 0FDh
db  3Dh ; =
db  95h
db  0Bh
db  4Dh ; M
db 0C7h
db  9Bh
db  2Fh ; /
db  23h ; #
db  3Eh ; >
db  13h
db  0Ch
db  79h ; y
db  48h ; H
db 0E8h
db  73h ; s
db 0F9h
db  3Dh ; =
db  6Eh ; n
db  58h ; X
db 0C6h
db    8
db 0BCh
db 0CCh
db  1Eh
db  3Eh ; >
db  98h
db  4Ah ; J
db  52h ; R
db 0F9h
db 0E9h
db  15h
db  21h ; !
db  3Eh ; >
db 0B8h
db  31h ; 1
db  31h ; 1
db  59h ; Y
db  40h ; @
db  17h
db  2Fh ; /
db  3Eh ; >
db  35h ; 5
db  38h ; 8
db  64h ; d
db  25h ; %
db  8Bh
db 0CFh
db  1Bh
db  3Eh ; >
db  80h
db 0EDh
db  8Bh
db  1Dh
db 0A8h
db  5Fh ; _
db  1Fh
db  3Eh ; >
db 0E4h
db 0D9h
db  29h ; )
db 0F9h
db  4Dh ; M
db  4Ah ; J
db  24h ; $
db  3Eh ; >
db  94h
db  0Ch
db  22h ; "
db 0D8h
db  20h
db  98h
db  12h
db  3Eh ; >
db    9
db 0E3h
db    4
db  93h
db  48h ; H
db  0Bh
db  2Ah ; *
db  3Eh ; >
db 0FEh
db  65h ; e
db 0A6h
db 0ABh
db  56h ; V
db  4Dh ; M
db  1Fh
db  3Eh ; >
db  63h ; c
db  51h ; Q
db  36h ; 6
db  19h
db  90h
db  0Ch
db  21h ; !
db  3Eh ; >
db  36h ; 6
db  27h ; '
db  59h ; Y
db 0FEh
db  78h ; x
db  0Fh
db 0F8h
db  3Dh ; =
db 0CAh
db  1Ch
db 0C8h
db  25h ; %
db  88h
db  52h ; R
db  10h
db  3Eh ; >
db  6Ah ; j
db  74h ; t
db  6Dh ; m
db  7Dh ; }
db  53h ; S
db  95h
db 0E0h
db  3Dh ; =
db  60h ; `
db    6
db  0Ah
db 0A7h
db 0BFh
db  27h ; '
db  18h
db  3Eh ; >
db  3Ch ; <
db  93h
db  45h ; E
db 0ECh
db 0A8h
db 0B0h
db    6
db  3Eh ; >
db 0A9h
db 0DBh
db 0F5h
db  1Bh
db 0F8h
db  5Ah ; Z
db  10h
db  3Eh ; >
db  15h
db 0D5h
db  55h ; U
db  26h ; &
db 0FAh
db 0E2h
db  17h
db  3Eh ; >
db 0BFh
db 0E4h
db 0AEh
db 0BFh
db 0ECh
db  59h ; Y
db  0Dh
db  3Eh ; >
db 0A3h
db  3Fh ; ?
db  68h ; h
db 0DAh
db  2Fh ; /
db  8Bh
db  1Dh
db  3Eh ; >
db  37h ; 7
db  37h ; 7
db  3Ah ; :
db 0FDh
db 0DDh
db 0B8h
db  24h ; $
db  3Eh ; >
db    4
db  12h
db 0AEh
db  61h ; a
db  7Eh ; ~
db  82h
db  13h
db  3Eh ; >
db  9Fh
db  0Fh
db 0E9h
db  49h ; I
db  7Bh ; {
db  8Ch
db  2Ch ; ,
db  3Eh ; >
db  1Dh
db  59h ; Y
db  97h
db  15h
db 0F0h
db 0EAh
db  29h ; )
db  3Eh ; >
db  36h ; 6
db  7Bh ; {
db  31h ; 1
db  6Eh ; n
db 0A6h
db 0AAh
db  19h
db  3Eh ; >
db  55h ; U
db    6
db  72h ; r
db    9
db  56h ; V
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  54h ; T
db 0ACh
db  7Ah ; z
db 0FCh
db  33h ; 3
db  1Ch
db  26h ; &
db  3Eh ; >
db  52h ; R
db 0A2h
db  61h ; a
db 0CFh
db  2Bh ; +
db  66h ; f
db  29h ; )
db  3Eh ; >
db  30h ; 0
db  27h ; '
db 0C4h
db  11h
db 0C8h
db  43h ; C
db  18h
db  3Eh ; >
db  36h ; 6
db 0CBh
db  5Ah ; Z
db  0Bh
db 0BBh
db  64h ; d
db  20h
db  3Eh ; >
db 0A4h
db    1
db  27h ; '
db  84h
db  0Ch
db  34h ; 4
db  0Ah
db  3Eh ; >
db 0D6h
db  79h ; y
db  8Fh
db 0B5h
db  55h ; U
db  8Eh
db  1Ah
db  3Eh ; >
db  9Ah
db  9Dh
db  5Eh ; ^
db  9Ch
db  21h ; !
db  2Dh ; -
db 0E9h
db  3Dh ; =
db  6Ah ; j
db 0FDh
db  7Fh ; 
db  0Dh
db 0E6h
db  63h ; c
db  3Fh ; ?
db  3Eh ; >
db  14h
db  63h ; c
db  51h ; Q
db 0D9h
db  0Eh
db  9Bh
db  2Eh ; .
db  3Eh ; >
db  0Ch
db  35h ; 5
db  62h ; b
db  19h
db  90h
db  23h ; #
db  29h ; )
db  3Eh ; >
db  81h
db  5Eh ; ^
db  78h ; x
db  38h ; 8
db  88h
db  6Fh ; o
db  32h ; 2
db  3Eh ; >
db 0AFh
db 0A6h
db 0ABh
db  4Ch ; L
db  6Ah ; j
db  5Bh ; [
db  3Bh ; ;
db  3Eh ; >
db  1Ch
db  76h ; v
db  8Eh
db 0DCh
db  6Ah ; j
db  22h ; "
db 0F0h
db  3Dh ; =
db 0EDh
db  1Ah
db  3Ah ; :
db  31h ; 1
db 0D7h
db  4Ah ; J
db  3Ch ; <
db  3Eh ; >
db  17h
db  8Dh
db  73h ; s
db  7Ch ; |
db 0E8h
db  64h ; d
db  15h
db  3Eh ; >
db  18h
db  66h ; f
db  8Ah
db 0F1h
db 0ECh
db  8Fh
db  33h ; 3
db  3Eh ; >
db  66h ; f
db  76h ; v
db  77h ; w
db 0F5h
db  9Eh
db  92h
db  3Dh ; =
db  3Eh ; >
db 0B8h
db 0A0h
db  8Dh
db 0F0h
db  3Bh ; ;
db  48h ; H
db  39h ; 9
db  3Eh ; >
db  26h ; &
db  58h ; X
db 0AAh
db 0EEh
db  0Eh
db 0DDh
db  3Bh ; ;
db  3Eh ; >
db 0BAh
db  37h ; 7
db    2
db  59h ; Y
db 0DDh
db 0C4h
db  39h ; 9
db  3Eh ; >
db 0C7h
db 0CAh
db 0EBh
db 0E0h
db 0E9h
db 0F3h
db  1Ah
db  3Eh ; >
db 0ACh
db  0Dh
db  27h ; '
db  82h
db  53h ; S
db 0CEh
db  35h ; 5
db  3Eh ; >
db 0BAh
db 0B9h
db  2Ah ; *
db  53h ; S
db  74h ; t
db  4Fh ; O
db  39h ; 9
db  3Eh ; >
db  54h ; T
db  86h
db  88h
db  95h
db  27h ; '
db  34h ; 4
db    7
db  3Eh ; >
db 0F0h
db  4Bh ; K
db 0E3h
db  0Bh
db    0
db  5Ah ; Z
db  0Ch
db  3Eh ; >
db  82h
db 0D0h
db    6
db  60h ; `
db 0C4h
db  11h
db  27h ; '
db  3Eh ; >
db 0F8h
db  8Ch
db 0EDh
db 0B4h
db  25h ; %
db    0
db  25h ; %
db  3Eh ; >
db 0A0h
db 0D2h
db 0F2h
db 0CEh
db  8Bh
db 0D1h
db  2Eh ; .
db  3Eh ; >
db  54h ; T
db  75h ; u
db  0Ah
db  0Ch
db  2Eh ; .
db  28h ; (
db  21h ; !
db  3Eh ; >
db 0CAh
db 0A7h
db  59h ; Y
db  33h ; 3
db 0F3h
db  70h ; p
db  0Dh
db  3Eh ; >
db  25h ; %
db  40h ; @
db 0A8h
db  13h
db  7Eh ; ~
db  7Fh ; 
db  2Bh ; +
db  3Eh ; >
db  1Eh
db  89h
db  21h ; !
db 0C3h
db  6Eh ; n
db  30h ; 0
db  33h ; 3
db  3Eh ; >
db  50h ; P
db  75h ; u
db  8Bh
db    3
db 0F8h
db 0C7h
db  3Fh ; ?
db  3Eh ; >
db  64h ; d
db  1Dh
db 0D7h
db  8Ch
db  35h ; 5
db 0B0h
db  3Eh ; >
db  3Eh ; >
db  74h ; t
db  94h
db  85h
db  22h ; "
db 0C8h
db  76h ; v
db  3Ah ; :
db  3Eh ; >
db 0E3h
db  86h
db 0DEh
db  52h ; R
db 0C6h
db  0Eh
db  3Dh ; =
db  3Eh ; >
db 0AFh
db  58h ; X
db  86h
db 0E0h
db 0CCh
db 0A4h
db  2Fh ; /
db  3Eh ; >
db  9Eh
db  0Ah
db 0C0h
db 0D2h
db 0A2h
db  84h
db  3Bh ; ;
db  3Eh ; >
db 0D1h
db  5Bh ; [
db 0C2h
db 0F2h
db 0B0h
db 0A5h
db  20h
db  3Eh ; >
db  99h
db 0F6h
db  5Bh ; [
db  22h ; "
db  60h ; `
db 0D6h
db  3Dh ; =
db  3Eh ; >
db  37h ; 7
db 0F0h
db  9Bh
db  85h
db  0Fh
db 0B1h
db    8
db  3Eh ; >
db 0E1h
db 0CBh
db  90h
db 0B5h
db  23h ; #
db  88h
db  3Eh ; >
db  3Eh ; >
db 0F6h
db  96h
db  1Eh
db 0F3h
db  11h
db  13h
db  36h ; 6
db  3Eh ; >
db  9Ah
db  0Fh
db 0A2h
db  5Ch ; \
db  87h
db  1Fh
db  2Eh ; .
db  3Eh ; >
db 0A5h
db 0B9h
db  39h ; 9
db  49h ; I
db  72h ; r
db  95h
db  2Ch ; ,
db  3Eh ; >
db 0E2h
db  58h ; X
db  3Eh ; >
db  7Ah ; z
db  95h
db    5
db  38h ; 8
db  3Eh ; >
db  34h ; 4
db    3
db  9Fh
db 0EAh
db  26h ; &
db 0F1h
db  2Fh ; /
db  3Eh ; >
db    9
db  56h ; V
db  8Eh
db  59h ; Y
db 0F5h
db  53h ; S
db  39h ; 9
db  3Eh ; >
db  48h ; H
db 0C4h
db  56h ; V
db 0F8h
db  6Fh ; o
db 0C1h
db  36h ; 6
db  3Eh ; >
db 0F4h
db  61h ; a
db 0F2h
db  0Fh
db  22h ; "
db 0CBh
db  24h ; $
db  3Eh ; >
db 0A2h
db  53h ; S
db  3Dh ; =
db 0D5h
db  20h
db 0E1h
db  35h ; 5
db  3Eh ; >
db  56h ; V
db 0F2h
db  89h
db  61h ; a
db  7Fh ; 
db  52h ; R
db  3Ah ; :
db  3Eh ; >
db  0Fh
db  9Ch
db 0D4h
db 0FFh
db 0FCh
db  56h ; V
db  38h ; 8
db  3Eh ; >
db 0DAh
db 0D7h
db  28h ; (
db  82h
db  2Eh ; .
db  0Ch
db  30h ; 0
db  3Eh ; >
db 0E0h
db 0DFh
db  44h ; D
db  94h
db 0D0h
db  13h
db 0F1h
db  3Dh ; =
db 0A6h
db  59h ; Y
db 0EAh
db  0Eh
db  63h ; c
db  10h
db  25h ; %
db  3Eh ; >
db  11h
db 0D7h
db  32h ; 2
db  0Fh
db  78h ; x
db  2Eh ; .
db  26h ; &
db  3Eh ; >
db 0CFh
db 0F8h
db  10h
db  1Ah
db 0D9h
db  3Eh ; >
db 0EDh
db  3Dh ; =
db  85h
db 0CDh
db  4Bh ; K
db  7Eh ; ~
db  4Ah ; J
db  65h ; e
db  23h ; #
db  3Eh ; >
db  21h ; !
db 0ADh
db  80h
db  49h ; I
db  78h ; x
db  5Bh ; [
db    5
db  3Eh ; >
db  64h ; d
db  6Eh ; n
db 0B1h
db 0D4h
db  2Dh ; -
db  2Fh ; /
db  21h ; !
db  3Eh ; >
db  0Ch
db 0F5h
db  39h ; 9
db 0D9h
db 0ADh
db 0C4h
db  37h ; 7
db  3Eh ; >
db 0FCh
db  80h
db  71h ; q
db  62h ; b
db  84h
db  17h
db  28h ; (
db  3Eh ; >
db  61h ; a
db  49h ; I
db 0E1h
db 0C7h
db  62h ; b
db  51h ; Q
db 0EAh
db  3Dh ; =
db  63h ; c
db  51h ; Q
db  36h ; 6
db  19h
db  90h
db  0Ch
db  31h ; 1
db  3Eh ; >
db  88h
db  76h ; v
db 0A1h
db  2Bh ; +
db  4Dh ; M
db  3Ch ; <
db  37h ; 7
db  3Eh ; >
db  81h
db  3Dh ; =
db 0E9h
db 0E0h
db 0A5h
db 0E8h
db  2Ah ; *
db  3Eh ; >
db 0AFh
db  21h ; !
db  16h
db 0F0h
db 0C6h
db 0B0h
db  2Ah ; *
db  3Eh ; >
db  66h ; f
db  5Bh ; [
db 0DDh
db  74h ; t
db  8Bh
db  1Eh
db  30h ; 0
db  3Eh ; >
db  94h
db  54h ; T
db 0BBh
db 0ECh
db  6Fh ; o
db  20h
db  2Dh ; -
db  3Eh ; >
db    0
db 0CCh
db  4Fh ; O
db  72h ; r
db  8Bh
db 0B4h
db 0F0h
db  3Dh ; =
db  29h ; )
db 0E2h
db  61h ; a
db  0Bh
db  1Fh
db  83h
db  3Fh ; ?
db  3Eh ; >
db 0AFh
db 0BCh
db    7
db 0C4h
db  97h
db  1Ah
db 0F8h
db  3Dh ; =
db 0AAh
db 0B7h
db 0CBh
db  1Ch
db  6Ch ; l
db  28h ; (
db  3Eh ; >
db  3Eh ; >
db  93h
db  0Ah
db  22h ; "
db  49h ; I
db  0Bh
db  63h ; c
db  28h ; (
db  3Eh ; >
db  5Ch ; \
db  2Ch ; ,
db 0A2h
db 0C1h
db  15h
db  0Bh
db 0FFh
db  3Dh ; =
db  46h ; F
db    9
db  1Ch
db 0E7h
db  45h ; E
db  54h ; T
db  35h ; 5
db  3Eh ; >
db  85h
db  6Dh ; m
db    6
db 0F8h
db  30h ; 0
db 0E6h
db  3Bh ; ;
db  3Eh ; >
db  39h ; 9
db  6Ch ; l
db 0D9h
db 0F0h
db 0DFh
db  99h
db  25h ; %
db  3Eh ; >
db  81h
db 0B0h
db  8Fh
db 0B1h
db  85h
db 0CCh
db  36h ; 6
db  3Eh ; >
db 0C8h
db 0A8h
db  1Eh
db    0
db  6Dh ; m
db  47h ; G
db  34h ; 4
db  3Eh ; >
db  1Fh
db 0D3h
db  16h
db  9Eh
db  88h
db  3Fh ; ?
db  37h ; 7
db  3Eh ; >
db  87h
db  2Ah ; *
db  79h ; y
db  0Dh
db  10h
db  57h ; W
db  33h ; 3
db  3Eh ; >
db 0F6h
db    1
db  61h ; a
db 0AEh
db  79h ; y
db 0D1h
db  3Bh ; ;
db  3Eh ; >
db 0E2h
db 0F6h
db 0C3h
db  56h ; V
db  10h
db 0A3h
db  0Ch
db  3Eh ; >
db 0FBh
db    8
db  9Ch
db  62h ; b
db  70h ; p
db  28h ; (
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  67h ; g
db 0D2h
db  80h
db  38h ; 8
db 0BAh
db  3Ah ; :
db  3Eh ; >
db 0A6h
db  7Dh ; }
db  29h ; )
db 0CBh
db  33h ; 3
db  36h ; 6
db  2Ch ; ,
db  3Eh ; >
db    2
db 0EAh
db 0EFh
db  99h
db  38h ; 8
db  84h
db  21h ; !
db  3Eh ; >
db 0E6h
db    8
db  20h
db  9Dh
db 0C9h
db 0CCh
db  3Bh ; ;
db  3Eh ; >
db  50h ; P
db 0D3h
db 0BDh
db  44h ; D
db    5
db    0
db  38h ; 8
db  3Eh ; >
db 0E1h
db  6Ah ; j
db  60h ; `
db  26h ; &
db 0C2h
db  91h
db  2Bh ; +
db  3Eh ; >
db 0DFh
db  2Bh ; +
db 0B6h
db  26h ; &
db 0DFh
db  7Ah ; z
db  2Ah ; *
db  3Eh ; >
db 0C9h
db  6Eh ; n
db  82h
db 0C8h
db  4Fh ; O
db  76h ; v
db  18h
db  3Eh ; >
db 0F0h
db  68h ; h
db  0Fh
db 0E5h
db  3Dh ; =
db  4Fh ; O
db  1Fh
db  3Eh ; >
db 0E3h
db  95h
db  79h ; y
db  75h ; u
db 0CAh
db  60h ; `
db 0F7h
db  3Dh ; =
db  47h ; G
db  51h ; Q
db  80h
db 0D3h
db  7Eh ; ~
db  66h ; f
db 0FCh
db  3Dh ; =
db  6Fh ; o
db 0DFh
db  6Ah ; j
db  19h
db 0F6h
db  33h ; 3
db  37h ; 7
db  3Eh ; >
db  6Bh ; k
db  83h
db  3Eh ; >
db 0F3h
db  10h
db 0B7h
db  2Fh ; /
db  3Eh ; >
db  13h
db  10h
db  64h ; d
db 0BAh
db  6Eh ; n
db  88h
db  39h ; 9
db  3Eh ; >
db  1Ah
db  8Ch
db 0AFh
db 0D0h
db  68h ; h
db  53h ; S
db 0FBh
db  3Dh ; =
db  71h ; q
db  29h ; )
db  8Dh
db  1Bh
db  69h ; i
db  8Ch
db  35h ; 5
db  3Eh ; >
db 0FBh
db    8
db  6Dh ; m
db  22h ; "
db  65h ; e
db  94h
db 0FEh
db  3Dh ; =
db  97h
db    0
db  3Fh ; ?
db    6
db  7Eh ; ~
db  58h ; X
db  33h ; 3
db  3Eh ; >
db  18h
db  9Fh
db  12h
db    2
db 0E7h
db  18h
db  36h ; 6
db  3Eh ; >
db  54h ; T
db 0ACh
db  7Ah ; z
db 0FCh
db  33h ; 3
db  1Ch
db  36h ; 6
db  3Eh ; >
db  4Ah ; J
db  60h ; `
db    8
db  84h
db 0A6h
db    7
db  3Fh ; ?
db  3Eh ; >
db  21h ; !
db  54h ; T
db  94h
db 0E4h
db 0BFh
db  34h ; 4
db  3Ch ; <
db  3Eh ; >
db  0Bh
db  30h ; 0
db  41h ; A
db  0Eh
db 0F0h
db 0B1h
db  38h ; 8
db  3Eh ; >
db  63h ; c
db  1Bh
db 0D6h
db  84h
db  42h ; B
db  43h ; C
db  3Fh ; ?
db  3Eh ; >
db  36h ; 6
db  74h ; t
db  39h ; 9
db  5Eh ; ^
db    9
db  63h ; c
db  3Ah ; :
db  3Eh ; >
db 0DEh
db  19h
db 0B9h
db  56h ; V
db  86h
db  42h ; B
db  34h ; 4
db  3Eh ; >
db 0A6h
db 0D9h
db 0B2h
db    1
db  92h
db 0CAh
db  36h ; 6
db  3Eh ; >
db  1Ch
db  93h
db  2Ah ; *
db  3Ah ; :
db  82h
db  38h ; 8
db  27h ; '
db  3Eh ; >
db  30h ; 0
db  92h
db  17h
db  0Eh
db  88h
db  11h
db  3Ch ; <
db  3Eh ; >
db 0FEh
db  52h ; R
db  6Dh ; m
db  8Dh
db 0DCh
db  3Dh ; =
db  31h ; 1
db  3Eh ; >
db  17h
db 0E9h
db  22h ; "
db  89h
db 0D5h
db 0EEh
db  33h ; 3
db  3Eh ; >
db  50h ; P
db 0DDh
db  6Bh ; k
db  84h
db  92h
db  59h ; Y
db  29h ; )
db  3Eh ; >
db  8Bh
db  27h ; '
db  2Eh ; .
db  5Fh ; _
db  4Dh ; M
db 0DBh
db  0Dh
db  3Eh ; >
db 0C4h
db  35h ; 5
db    6
db  2Ah ; *
db 0F1h
db 0A5h
db 0F1h
db  3Dh ; =
db  34h ; 4
db  3Ch ; <
db  2Ch ; ,
db  88h
db 0F0h
db  42h ; B
db  46h ; F
db  3Eh ; >
db  5Eh ; ^
db  47h ; G
db 0F6h
db 0A7h
db  9Bh
db 0EEh
db  2Ah ; *
db  3Eh ; >
db 0E4h
db  60h ; `
db  4Ah ; J
db  83h
db  7Fh ; 
db  4Bh ; K
db  26h ; &
db  3Eh ; >
db  2Eh ; .
db  79h ; y
db  43h ; C
db 0E2h
db  42h ; B
db  0Dh
db  29h ; )
db  3Eh ; >
db    1
db  4Fh ; O
db  13h
db    8
db  20h
db  27h ; '
db  4Ch ; L
db  3Eh ; >
db  5Bh ; [
db 0CFh
db 0D6h
db  16h
db  2Eh ; .
db  78h ; x
db  4Ah ; J
db  3Eh ; >
db  48h ; H
db  66h ; f
db 0DAh
db  79h ; y
db  5Ch ; \
db  50h ; P
db  44h ; D
db  3Eh ; >
db  21h ; !
db 0CDh
db  4Dh ; M
db 0EAh
db 0D4h
db 0A9h
db  4Ch ; L
db  3Eh ; >
db 0BCh
db 0D5h
db  7Ch ; |
db  62h ; b
db  3Dh ; =
db  7Dh ; }
db  29h ; )
db  3Eh ; >
db  13h
db 0AAh
db 0BCh
db 0F9h
db  5Ch ; \
db 0B1h
db  20h
db  3Eh ; >
db 0DDh
db  76h ; v
db 0CFh
db  63h ; c
db  20h
db  5Bh ; [
db  31h ; 1
db  3Eh ; >
db  48h ; H
db  27h ; '
db 0AAh
db 0F3h
db 0E6h
db  83h
db  29h ; )
db  3Eh ; >
db  94h
db 0E9h
db 0FFh
db 0F4h
db  64h ; d
db  4Ch ; L
db  3Fh ; ?
db  3Eh ; >
db  0Fh
db  5Ah ; Z
db 0E8h
db  7Ch ; |
db 0BAh
db 0BEh
db  46h ; F
db  3Eh ; >
db 0B8h
db 0A6h
db  4Eh ; N
db 0FDh
db  69h ; i
db  9Ch
db  3Bh ; ;
db  3Eh ; >
db 0ABh
db 0A4h
db  5Fh ; _
db  83h
db 0A5h
db  6Ah ; j
db  2Bh ; +
db  3Eh ; >
db 0D1h
db 0EDh
db  0Fh
db  79h ; y
db 0C3h
db 0CCh
db  43h ; C
db  3Eh ; >
db 0E0h
db  4Fh ; O
db  40h ; @
db 0C4h
db  4Ch ; L
db 0C0h
db  29h ; )
db  3Eh ; >
db  9Dh
db 0D8h
db  75h ; u
db  7Ah ; z
db  4Bh ; K
db  73h ; s
db  40h ; @
db  3Eh ; >
db  12h
db  16h
db 0E0h
db 0C4h
db    4
db  44h ; D
db  1Bh
db  3Eh ; >
db  94h
db  48h ; H
db 0CEh
db 0C2h
db  65h ; e
db 0C5h
db  40h ; @
db  3Eh ; >
db 0CDh
db  35h ; 5
db 0D9h
db  41h ; A
db  14h
db 0C7h
db  33h ; 3
db  3Eh ; >
db  4Eh ; N
db  3Bh ; ;
db  6Bh ; k
db  55h ; U
db  92h
db 0A4h
db  72h ; r
db  3Dh ; =
db  43h ; C
db 0DCh
db  41h ; A
db    3
db    9
db 0FAh
db  20h
db  3Eh ; >
db 0F4h
db 0D9h
db 0E3h
db    9
db  70h ; p
db  8Fh
db  2Eh ; .
db  3Eh ; >
db  45h ; E
db  8Ah
db    4
db  8Bh
db 0F6h
db  1Bh
db  4Bh ; K
db  3Eh ; >
db  56h ; V
db 0A9h
db 0FAh
db 0DFh
db  52h ; R
db 0EEh
db  3Eh ; >
db  3Eh ; >
db 0BDh
db  65h ; e
db 0E4h
db    0
db    9
db  6Bh ; k
db  45h ; E
db  3Eh ; >
db  66h ; f
db  76h ; v
db  77h ; w
db 0F5h
db  9Eh
db  92h
db  4Dh ; M
db  3Eh ; >
db  60h ; `
db 0E2h
db  37h ; 7
db  86h
db 0A2h
db  6Eh ; n
db  48h ; H
db  3Eh ; >
db 0F0h
db 0A2h
db  0Ch
db 0F1h
db 0AFh
db  65h ; e
db  46h ; F
db  3Eh ; >
db  74h ; t
db 0ECh
db  48h ; H
db 0AFh
db 0FDh
db  11h
db  2Fh ; /
db  3Eh ; >
db 0C7h
db 0D1h
db 0A4h
db  86h
db  1Bh
db 0BEh
db  4Ch ; L
db  3Eh ; >
db  65h ; e
db  76h ; v
db 0A8h
db 0FEh
db  5Bh ; [
db 0B0h
db  25h ; %
db  3Eh ; >
db  1Dh
db  4Ah ; J
db  1Ah
db  0Ah
db 0C2h
db 0CEh
db  41h ; A
db  3Eh ; >
db  9Fh
db  9Bh
db  40h ; @
db  0Ah
db  5Fh ; _
db 0CDh
db  41h ; A
db  3Eh ; >
db  70h ; p
db  50h ; P
db  26h ; &
db 0C8h
db  56h ; V
db  36h ; 6
db  45h ; E
db  3Eh ; >
db  60h ; `
db  22h ; "
db  28h ; (
db  35h ; 5
db 0D8h
db  7Eh ; ~
db  37h ; 7
db  3Eh ; >
db 0D2h
db 0B9h
db  40h ; @
db  30h ; 0
db 0BCh
db  17h
db  24h ; $
db  3Eh ; >
db 0F2h
db 0EFh
db  79h ; y
db  7Bh ; {
db 0EFh
db  8Eh
db  40h ; @
db  3Eh ; >
db 0E9h
db  57h ; W
db 0DCh
db  39h ; 9
db  6Fh ; o
db 0C7h
db  4Dh ; M
db  3Eh ; >
db  57h ; W
db 0F4h
db  0Ch
db 0A7h
db  93h
db    4
db  4Ch ; L
db  3Eh ; >
db  0Ch
db 0A6h
db 0A5h
db 0CEh
db 0D6h
db  83h
db  4Ah ; J
db  3Eh ; >
db 0BAh
db  57h ; W
db 0C5h
db  0Dh
db  70h ; p
db 0D6h
db  30h ; 0
db  3Eh ; >
db  0Ah
db 0BDh
db 0E8h
db  12h
db  6Ch ; l
db 0C9h
db  44h ; D
db  3Eh ; >
db  15h
db  23h ; #
db 0E3h
db  93h
db  19h
db  2Ch ; ,
db  3Dh ; =
db  3Eh ; >
db  42h ; B
db  82h
db  5Fh ; _
db  13h
db  21h ; !
db 0C7h
db  22h ; "
db  3Eh ; >
db  7Dh ; }
db  74h ; t
db 0DAh
db  4Dh ; M
db  3Eh ; >
db  9Ah
db  27h ; '
db  3Eh ; >
db  2Bh ; +
db 0A7h
db  41h ; A
db  69h ; i
db  9Fh
db 0F8h
db 0FCh
db  3Dh ; =
db  31h ; 1
db    8
db 0F1h
db    2
db 0A7h
db  49h ; I
db  21h ; !
db  3Eh ; >
db 0DBh
db  75h ; u
db  81h
db  7Ch ; |
db  4Bh ; K
db 0ADh
db  4Eh ; N
db  3Eh ; >
db  0Ah
db 0E7h
db  63h ; c
db 0FEh
db  30h ; 0
db  69h ; i
db  4Eh ; N
db  3Eh ; >
db  2Fh ; /
db 0EEh
db 0D9h
db 0BEh
db    6
db 0E1h
db  41h ; A
db  3Eh ; >
db  92h
db  1Ch
db 0F1h
db  82h
db  2Bh ; +
db  68h ; h
db  2Dh ; -
db  3Eh ; >
db  7Ch ; |
db 0A4h
db 0DBh
db  88h
db 0F1h
db    7
db  3Ah ; :
db  3Eh ; >
db 0F6h
db  72h ; r
db 0C1h
db  2Dh ; -
db  34h ; 4
db 0F9h
db  40h ; @
db  3Eh ; >
db  25h ; %
db  3Eh ; >
db  62h ; b
db 0DEh
db  3Fh ; ?
db 0EFh
db    3
db  3Eh ; >
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3467B90 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  20h
db 0E0h
db  1Fh
db 0E0h
db  1Fh
db 0E0h
db 0FFh
db  3Fh ; ?
db 0F0h
db    7
db 0FCh
db    1
db  7Fh ; 
db 0C0h
db 0FFh
db  3Fh ; ?
db  12h
db 0FAh
db    1
db 0AAh
db  1Ch
db 0A1h
db 0FFh
db  3Fh ; ?
db  20h
db 0F8h
db  81h
db  1Fh
db 0F8h
db  81h
db 0FFh
db  3Fh ; ?
db 0B5h
db 0DBh
db 0A0h
db 0ACh
db  10h
db  63h ; c
db 0FFh
db  3Fh ; ?
db  71h ; q
db  42h ; B
db  4Ah ; J
db  9Eh
db  65h ; e
db  44h ; D
db 0FFh
db  3Fh ; ?
db 0B5h
db  0Ah
db  23h ; #
db  44h ; D
db 0F6h
db  25h ; %
db 0FFh
db  3Fh ; ?
db    8
db  1Fh
db  7Ch ; |
db 0F0h
db 0C1h
db    7
db 0FFh
db  3Fh ; ?
db    2
db  8Eh
db  45h ; E
db 0F8h
db 0C7h
db 0E9h
db 0FEh
db  3Fh ; ?
db 0C0h
db 0ECh
db    1
db 0B3h
db    7
db 0CCh
db 0FEh
db  3Fh ; ?
db 0EBh
db    1
db 0BAh
db  7Ah ; z
db  80h
db 0AEh
db 0FEh
db  3Fh ; ?
db  67h ; g
db 0B7h
db 0F0h
db 0ABh
db  31h ; 1
db  91h
db 0FEh
db  3Fh ; ?
db 0E4h
db  50h ; P
db  97h
db 0A5h
db  1Ah
db  74h ; t
db 0FEh
db  3Fh ; ?
db  74h ; t
db 0E5h
db    1
db 0C9h
db  3Ah ; :
db  57h ; W
db 0FEh
db  3Fh ; ?
db  73h ; s
db  1Ah
db 0DCh
db  79h ; y
db  91h
db  3Ah ; :
db 0FEh
db  3Fh ; ?
db  1Eh
db  1Eh
db  1Eh
db  1Eh
db  1Eh
db  1Eh
db 0FEh
db  3Fh ; ?
db  1Eh
db 0E0h
db    1
db  1Eh
db 0E0h
db    1
db 0FEh
db  3Fh ; ?
db  8Ah
db  86h
db 0F8h
db 0E3h
db 0D6h
db 0E5h
db 0FDh
db  3Fh ; ?
db 0CAh
db  1Dh
db 0A0h
db 0DCh
db    1
db 0CAh
db 0FDh
db  3Fh ; ?
db 0DBh
db  81h
db 0B9h
db  76h ; v
db  60h ; `
db 0AEh
db 0FDh
db  3Fh ; ?
db  8Ah
db  7Fh ; 
db  1Eh
db  23h ; #
db 0F2h
db  92h
db 0FDh
db  3Fh ; ?
db  34h ; 4
db  2Ch ; ,
db 0B8h
db  54h ; T
db 0B6h
db  77h ; w
db 0FDh
db  3Fh ; ?
db 0B2h
db  72h ; r
db  75h ; u
db  80h
db 0ACh
db  5Ch ; \
db 0FDh
db  3Fh ; ?
db  1Dh
db 0D4h
db  41h ; A
db  1Dh
db 0D4h
db  41h ; A
db 0FDh
db  3Fh ; ?
db  1Ah
db  5Bh ; [
db 0FCh
db 0A3h
db  2Ch ; ,
db  27h ; '
db 0FDh
db  3Fh ; ?
db  74h ; t
db 0C0h
db  6Eh ; n
db  8Fh
db 0B5h
db  0Ch
db 0FDh
db  3Fh ; ?
db 0C6h
db 0BFh
db  44h ; D
db  5Ch ; \
db  6Eh ; n
db 0F2h
db 0FCh
db  3Fh ; ?
db  0Bh
db  9Bh
db    3
db  89h
db  56h ; V
db 0D8h
db 0FCh
db  3Fh ; ?
db 0E7h
db 0CBh
db    1
db  96h
db  6Dh ; m
db 0BEh
db 0FCh
db  3Fh ; ?
db  91h
db 0E1h
db  5Eh ; ^
db    5
db 0B3h
db 0A4h
db 0FCh
db  3Fh ; ?
db  42h ; B
db  8Ah
db 0FBh
db  5Ah ; Z
db  26h ; &
db  8Bh
db 0FCh
db  3Fh ; ?
db  1Ch
db 0C7h
db  71h ; q
db  1Ch
db 0C7h
db  71h ; q
db 0FCh
db  3Fh ; ?
db  86h
db  49h ; I
db  0Dh
db 0D1h
db  94h
db  58h ; X
db 0FCh
db  3Fh ; ?
db 0F0h
db 0F8h
db 0C3h
db    1
db  8Fh
db  3Fh ; ?
db 0FCh
db  3Fh ; ?
db  1Ch
db 0A0h
db  2Eh ; .
db  39h ; 9
db 0B5h
db  26h ; &
db 0FCh
db  3Fh ; ?
db 0E0h
db 0C0h
db  81h
db    3
db    7
db  0Eh
db 0FCh
db  3Fh ; ?
db  8Bh
db  8Dh
db  86h
db 0EEh
db  83h
db 0F5h
db 0FBh
db  3Fh ; ?
db 0F7h
db    6
db  94h
db  89h
db  2Bh ; +
db 0DDh
db 0FBh
db  3Fh ; ?
db  7Bh ; {
db  3Eh ; >
db  88h
db  65h ; e
db 0FDh
db 0C4h
db 0FBh
db  3Fh ; ?
db 0D0h
db 0BAh
db 0C1h
db  14h
db 0F9h
db 0ACh
db 0FBh
db  3Fh ; ?
db  23h ; #
db 0FFh
db  18h
db  2Bh ; +
db  1Eh
db  95h
db 0FBh
db  3Fh ; ?
db  8Bh
db  33h ; 3
db 0DAh
db  3Dh ; =
db  6Ch ; l
db  7Dh ; }
db 0FBh
db  3Fh ; ?
db    5
db 0EEh
db 0BEh
db 0E3h
db 0E2h
db  65h ; e
db 0FBh
db  3Fh ; ?
db  4Fh ; O
db  1Bh
db 0E8h
db 0B4h
db  81h
db  4Eh ; N
db 0FBh
db  3Fh ; ?
db 0CEh
db    6
db 0D8h
db  4Ah ; J
db  48h ; H
db  37h ; 7
db 0FBh
db  3Fh ; ?
db 0D9h
db  80h
db  6Ch ; l
db  40h ; @
db  36h ; 6
db  20h
db 0FBh
db  3Fh ; ?
db 0A4h
db  22h ; "
db 0D9h
db  31h ; 1
db  4Bh ; K
db    9
db 0FBh
db  3Fh ; ?
db  28h ; (
db 0AFh
db 0A1h
db 0BCh
db  86h
db 0F2h
db 0FAh
db  3Fh ; ?
db  5Eh ; ^
db  90h
db  94h
db  7Fh ; 
db 0E8h
db 0DBh
db 0FAh
db  3Fh ; ?
db  1Bh
db  70h ; p
db 0C5h
db  1Ah
db  70h ; p
db 0C5h
db 0FAh
db  3Fh ; ?
db 0FDh
db 0EBh
db  87h
db  2Fh ; /
db  1Dh
db 0AFh
db 0FAh
db  3Fh ; ?
db 0BEh
db  63h ; c
db  6Ah ; j
db  60h ; `
db 0EFh
db  98h
db 0FAh
db  3Fh ; ?
db  59h ; Y
db 0E1h
db  30h ; 0
db  51h ; Q
db 0E6h
db  82h
db 0FAh
db  3Fh ; ?
db  6Dh ; m
db  1Ah
db 0D0h
db 0A6h
db    1
db  6Dh ; m
db 0FAh
db  3Fh ; ?
db  4Ah ; J
db  8Ah
db  68h ; h
db    7
db  41h ; A
db  57h ; W
db 0FAh
db  3Fh ; ?
db  1Ah
db 0A4h
db  41h ; A
db  1Ah
db 0A4h
db  41h ; A
db 0FAh
db  3Fh ; ?
db 0A0h
db  1Ch
db 0C5h
db  87h
db  2Ah ; *
db  2Ch ; ,
db 0FAh
db  3Fh ; ?
db    2
db  4Bh ; K
db  7Ah ; z
db 0F9h
db 0D3h
db  16h
db 0FAh
db  3Fh ; ?
db  1Ah
db 0A0h
db    1
db  1Ah
db 0A0h
db    1
db 0FAh
db  3Fh ; ?
db 0D9h
db  33h ; 3
db  10h
db  95h
db  8Eh
db 0ECh
db 0F9h
db  3Fh ; ?
db  2Dh ; -
db  68h ; h
db  6Bh ; k
db  17h
db  9Fh
db 0D7h
db 0F9h
db  3Fh ; ?
db    2
db 0A1h
db 0E4h
db  4Eh ; N
db 0D1h
db 0C2h
db 0F9h
db  3Fh ; ?
db 0DAh
db  10h
db  55h ; U
db 0EAh
db  24h ; $
db 0AEh
db 0F9h
db  3Fh ; ?
db  9Ah
db  99h
db  99h
db  99h
db  99h
db  99h
db 0F9h
db  3Fh ; ?
db 0FFh
db 0C0h
db  8Eh
db  0Dh
db  2Fh ; /
db  85h
db 0F9h
db  3Fh ; ?
db  72h ; r
db 0B8h
db  0Ch
db 0F8h
db 0E4h
db  70h ; p
db 0F9h
db  3Fh ; ?
db 0AEh
db  77h ; w
db 0E3h
db  0Bh
db 0BBh
db  5Ch ; \
db 0F9h
db  3Fh ; ?
db 0E0h
db 0E9h
db 0D6h
db 0FCh
db 0B0h
db  48h ; H
db 0F9h
db  3Fh ; ?
db 0E6h
db  2Ch ; ,
db  9Bh
db  7Fh ; 
db 0C6h
db  34h ; 4
db 0F9h
db  3Fh ; ?
db  29h ; )
db 0E2h
db 0D0h
db  49h ; I
db 0FBh
db  20h
db 0F9h
db  3Fh ; ?
db 0D5h
db  90h
db    1
db  12h
db  4Fh ; O
db  0Dh
db 0F9h
db  3Fh ; ?
db 0FAh
db  18h
db  9Ch
db  8Fh
db 0C1h
db 0F9h
db 0F8h
db  3Fh ; ?
db  3Fh ; ?
db  37h ; 7
db 0F1h
db  7Ah ; z
db  52h ; R
db 0E6h
db 0F8h
db  3Fh ; ?
db 0D3h
db  18h
db  30h ; 0
db  8Dh
db    1
db 0D3h
db 0F8h
db  3Fh ; ?
db  3Ah ; :
db 0FFh
db  62h ; b
db  80h
db 0CEh
db 0BFh
db 0F8h
db  3Fh ; ?
db 0AAh
db 0F3h
db  6Bh ; k
db  0Fh
db 0B9h
db 0ACh
db 0F8h
db  3Fh ; ?
db  9Ch
db  89h
db    1
db 0F6h
db 0C0h
db  99h
db 0F8h
db  3Fh ; ?
db  4Ah ; J
db 0B0h
db 0ABh
db 0F0h
db 0E5h
db  86h
db 0F8h
db  3Fh ; ?
db 0B9h
db  92h
db 0C0h
db 0BCh
db  27h ; '
db  74h ; t
db 0F8h
db  3Fh ; ?
db  18h
db  86h
db  61h ; a
db  18h
db  86h
db  61h ; a
db 0F8h
db  3Fh ; ?
db  14h
db    6
db  78h ; x
db 0C2h
db    0
db  4Fh ; O
db 0F8h
db  3Fh ; ?
db 0DDh
db 0BEh
db 0B2h
db  7Ah ; z
db  97h
db  3Ch ; <
db 0F8h
db  3Fh ; ?
db 0A0h
db 0A4h
db  82h
db    1
db  4Ah ; J
db  2Ah ; *
db 0F8h
db  3Fh ; ?
db  18h
db  18h
db  18h
db  18h
db  18h
db  18h
db 0F8h
db  3Fh ; ?
db    6
db  18h
db  60h ; `
db  80h
db    1
db    6
db 0F8h
db  3Fh ; ?
db  40h ; @
db  7Fh ; 
db    1
db 0FDh
db    5
db 0F4h
db 0F7h
db  3Fh ; ?
db  1Dh
db  4Fh ; O
db  5Ah ; Z
db  51h ; Q
db  25h ; %
db 0E2h
db 0F7h
db  3Fh ; ?
db 0F4h
db    5
db  7Dh ; }
db  41h ; A
db  5Fh ; _
db 0D0h
db 0F7h
db  3Fh ; ?
db  7Ch ; |
db    1
db  2Eh ; .
db  92h
db 0B3h
db 0BEh
db 0F7h
db  3Fh ; ?
db 0C3h
db 0ECh
db 0E0h
db    8
db  22h ; "
db 0ADh
db 0F7h
db  3Fh ; ?
db  8Bh
db  39h ; 9
db 0B6h
db  6Bh ; k
db 0AAh
db  9Bh
db 0F7h
db  3Fh ; ?
db 0C8h
db 0A4h
db  78h ; x
db  81h
db  4Ch ; L
db  8Ah
db 0F7h
db  3Fh ; ?
db  0Dh
db 0C6h
db  9Ah
db  11h
db    8
db  79h ; y
db 0F7h
db  3Fh ; ?
db 0B1h
db 0A9h
db  34h ; 4
db 0E4h
db 0DCh
db  67h ; g
db 0F7h
db  3Fh ; ?
db  6Dh ; m
db  75h ; u
db    1
db 0C2h
db 0CAh
db  56h ; V
db 0F7h
db  3Fh ; ?
db  46h ; F
db  17h
db  5Dh ; ]
db  74h ; t
db 0D1h
db  45h ; E
db 0F7h
db  3Fh ; ?
db  8Dh
db 0FEh
db  41h ; A
db 0C5h
db 0F0h
db  34h ; 4
db 0F7h
db  3Fh ; ?
db 0BCh
db 0DEh
db  46h ; F
db  7Fh ; 
db  28h ; (
db  24h ; $
db 0F7h
db  3Fh ; ?
db    9
db  7Ch ; |
db  9Ch
db  6Dh ; m
db  78h ; x
db  13h
db 0F7h
db  3Fh ; ?
db  70h ; p
db  81h
db  0Bh
db  5Ch ; \
db 0E0h
db    2
db 0F7h
db  3Fh ; ?
db  17h
db  60h ; `
db 0F2h
db  16h
db  60h ; `
db 0F2h
db 0F6h
db  3Fh ; ?
db 0C7h
db  37h ; 7
db  43h ; C
db  6Bh ; k
db 0F7h
db 0E1h
db 0F6h
db  3Fh ; ?
db  61h ; a
db 0C8h
db  81h
db  26h ; &
db 0A6h
db 0D1h
db 0F6h
db  3Fh ; ?
db  17h
db  6Ch ; l
db 0C1h
db  16h
db  6Ch ; l
db 0C1h
db 0F6h
db  3Fh ; ?
db  3Dh ; =
db  1Ah
db 0A3h
db  0Ah
db  49h ; I
db 0B1h
db 0F6h
db  3Fh ; ?
db  90h
db  72h ; r
db  53h ; S
db 0D1h
db  3Ch ; <
db 0A1h
db 0F6h
db  3Fh ; ?
db 0C0h
db 0D0h
db  88h
db  3Ah ; :
db  47h ; G
db  91h
db 0F6h
db  3Fh ; ?
db  17h
db  68h ; h
db  81h
db  16h
db  68h ; h
db  81h
db 0F6h
db  3Fh ; ?
db  1Ah
db  67h ; g
db    1
db  36h ; 6
db  9Fh
db  71h ; q
db 0F6h
db  3Fh ; ?
db 0F9h
db  22h ; "
db  51h ; Q
db  6Ah ; j
db 0ECh
db  61h ; a
db 0F6h
db  3Fh ; ?
db 0A3h
db  4Ah ; J
db  3Bh ; ;
db  85h
db  4Fh ; O
db  52h ; R
db 0F6h
db  3Fh ; ?
db  64h ; d
db  21h ; !
db  0Bh
db  59h ; Y
db 0C8h
db  42h ; B
db 0F6h
db  3Fh ; ?
db 0DEh
db 0C0h
db  8Ah
db 0B8h
db  56h ; V
db  33h ; 3
db 0F6h
db  3Fh ; ?
db  40h ; @
db  62h ; b
db    1
db  77h ; w
db 0FAh
db  23h ; #
db 0F6h
db  3Fh ; ?
db  94h
db 0AEh
db  31h ; 1
db  68h ; h
db 0B3h
db  14h
db 0F6h
db  3Fh ; ?
db    6
db  16h
db  58h ; X
db  60h ; `
db  81h
db    5
db 0F6h
db  3Fh ; ?
db 0FCh
db  2Dh ; -
db  29h ; )
db  34h ; 4
db  64h ; d
db 0F6h
db 0F5h
db  3Fh ; ?
db 0E7h
db  15h
db 0D0h
db 0B8h
db  5Bh ; [
db 0E7h
db 0F5h
db  3Fh ; ?
db 0A5h
db 0E2h
db 0ECh
db 0C3h
db  67h ; g
db 0D8h
db 0F5h
db  3Fh ; ?
db  57h ; W
db  10h
db  93h
db  2Bh ; +
db  88h
db 0C9h
db 0F5h
db  3Fh ; ?
db  91h
db 0FAh
db  47h ; G
db 0C6h
db 0BCh
db 0BAh
db 0F5h
db  3Fh ; ?
db 0C0h
db  5Ah ; Z
db    1
db  6Bh ; k
db    5
db 0ACh
db 0F5h
db  3Fh ; ?
db 0AAh
db 0CCh
db  23h ; #
db 0F1h
db  61h ; a
db  9Dh
db 0F5h
db  3Fh ; ?
db 0EDh
db  58h ; X
db  81h
db  30h ; 0
db 0D2h
db  8Eh
db 0F5h
db  3Fh ; ?
db  60h ; `
db    5
db  58h ; X
db    1
db  56h ; V
db  80h
db 0F5h
db  3Fh ; ?
db  3Ah ; :
db  6Bh ; k
db  50h ; P
db  3Ch ; <
db 0EDh
db  71h ; q
db 0F5h
db  3Fh ; ?
db 0E2h
db  52h ; R
db  7Ch ; |
db 0BAh
db  97h
db  63h ; c
db 0F5h
db  3Fh ; ?
db  55h ; U
db  55h ; U
db  55h ; U
db  55h ; U
db  55h ; U
db  55h ; U
db 0F5h
db  3Fh ; ?
db 0FEh
db  82h
db 0BBh
db 0E6h
db  25h ; %
db  47h ; G
db 0F5h
db  3Fh ; ?
db 0EBh
db  0Fh
db 0F4h
db  48h ; H
db    9
db  39h ; 9
db 0F5h
db  3Fh ; ?
db  4Bh ; K
db    5
db 0A8h
db  56h ; V
db 0FFh
db  2Ah ; *
db 0F5h
db  3Fh ; ?
db  15h
db 0F8h
db 0E2h
db 0EAh
db    7
db  1Dh
db 0F5h
db  3Fh ; ?
db 0C5h
db 0C4h
db  11h
db 0E1h
db  22h ; "
db  0Fh
db 0F5h
db  3Fh ; ?
db  15h
db  50h ; P
db    1
db  15h
db  50h ; P
db    1
db 0F5h
db  3Fh ; ?
db  9Bh
db  4Ch ; L
db 0DDh
db  62h ; b
db  8Fh
db 0F3h
db 0F4h
db  3Fh ; ?
db  39h ; 9
db    5
db  2Fh ; /
db 0A7h
db 0E0h
db 0E5h
db 0F4h
db  3Fh ; ?
db  4Ch ; L
db  2Ch ; ,
db 0DCh
db 0BEh
db  43h ; C
db 0D8h
db 0F4h
db  3Fh ; ?
db  6Eh ; n
db 0AFh
db  25h ; %
db  87h
db 0B8h
db 0CAh
db 0F4h
db  3Fh ; ?
db 0E1h
db  8Fh
db 0A6h
db 0DDh
db  3Eh ; >
db 0BDh
db 0F4h
db  3Fh ; ?
db  5Bh ; [
db 0BFh
db  52h ; R
db 0A0h
db 0D6h
db 0AFh
db 0F4h
db  3Fh ; ?
db  4Ah ; J
db    1
db  76h ; v
db 0ADh
db  7Fh ; 
db 0A2h
db 0F4h
db  3Fh ; ?
db  67h ; g
db 0D0h
db 0B2h
db 0E3h
db  39h ; 9
db  95h
db 0F4h
db  3Fh ; ?
db  80h
db  48h ; H
db    1
db  22h ; "
db    5
db  88h
db 0F4h
db  3Fh ; ?
db  7Bh ; {
db  14h
db 0AEh
db  47h ; G
db 0E1h
db  7Ah ; z
db 0F4h
db  3Fh ; ?
db  66h ; f
db  60h ; `
db  59h ; Y
db  34h ; 4
db 0CEh
db  6Dh ; m
db 0F4h
db  3Fh ; ?
db  9Ah
db 0CFh
db 0F5h
db 0C7h
db 0CBh
db  60h ; `
db 0F4h
db  3Fh ; ?
db 0CAh
db  76h ; v
db 0C7h
db 0E2h
db 0D9h
db  53h ; S
db 0F4h
db  3Fh ; ?
db 0FBh
db 0D9h
db  62h ; b
db  65h ; e
db 0F8h
db  46h ; F
db 0F4h
db  3Fh ; ?
db  4Dh ; M
db 0EEh
db 0ABh
db  30h ; 0
db  27h ; '
db  3Ah ; :
db 0F4h
db  3Fh ; ?
db  87h
db  1Fh
db 0D5h
db  25h ; %
db  66h ; f
db  2Dh ; -
db 0F4h
db  3Fh ; ?
db  51h ; Q
db  59h ; Y
db  5Eh ; ^
db  26h ; &
db 0B5h
db  20h
db 0F4h
db  3Fh ; ?
db  14h
db  14h
db  14h
db  14h
db  14h
db  14h
db 0F4h
db  3Fh ; ?
db  66h ; f
db  65h ; e
db  0Eh
db 0D1h
db  82h
db    7
db 0F4h
db  3Fh ; ?
db 0FBh
db  13h
db 0B0h
db  3Fh ; ?
db    1
db 0FBh
db 0F3h
db  3Fh ; ?
db    7
db 0AFh
db 0A5h
db  42h ; B
db  8Fh
db 0EEh
db 0F3h
db  3Fh ; ?
db    2
db 0A9h
db 0E4h
db 0BCh
db  2Ch ; ,
db 0E2h
db 0F3h
db  3Fh ; ?
db 0C6h
db  75h ; u
db 0AAh
db  91h
db 0D9h
db 0D5h
db 0F3h
db  3Fh ; ?
db 0E7h
db 0ABh
db  7Bh ; {
db 0A4h
db  95h
db 0C9h
db 0F3h
db  3Fh ; ?
db  55h ; U
db  29h ; )
db  23h ; #
db 0D9h
db  60h ; `
db 0BDh
db 0F3h
db  3Fh ; ?
db  14h
db  3Bh ; ;
db 0B1h
db  13h
db  3Bh ; ;
db 0B1h
db 0F3h
db  3Fh ; ?
db  22h ; "
db 0C8h
db  7Ah ; z
db  38h ; 8
db  24h ; $
db 0A5h
db 0F3h
db  3Fh ; ?
db  63h ; c
db  7Fh ; 
db  18h
db  2Ch ; ,
db  1Ch
db  99h
db 0F3h
db  3Fh ; ?
db  8Eh
db    8
db  66h ; f
db 0D3h
db  22h ; "
db  8Dh
db 0F3h
db  3Fh ; ?
db  14h
db  38h ; 8
db  81h
db  13h
db  38h ; 8
db  81h
db 0F3h
db  3Fh ; ?
db 0EEh
db  45h ; E
db 0C9h
db 0D1h
db  5Bh ; [
db  75h ; u
db 0F3h
db  3Fh ; ?
db  48h ; H
db    7
db 0DEh
db 0F3h
db  8Dh
db  69h ; i
db 0F3h
db  3Fh ; ?
db 0F8h
db  2Ah ; *
db  9Fh
db  5Fh ; _
db 0CEh
db  5Dh ; ]
db 0F3h
db  3Fh ; ?
db 0C1h
db  78h ; x
db  2Bh ; +
db 0FBh
db  1Ch
db  52h ; R
db 0F3h
db  3Fh ; ?
db  46h ; F
db  13h
db 0E0h
db 0ACh
db  79h ; y
db  46h ; F
db 0F3h
db  3Fh ; ?
db 0B2h
db 0BCh
db  57h ; W
db  5Bh ; [
db 0E4h
db  3Ah ; :
db 0F3h
db  3Fh ; ?
db 0FAh
db  1Dh
db  6Ah ; j
db 0EDh
db  5Ch ; \
db  2Fh ; /
db 0F3h
db  3Fh ; ?
db 0BFh
db  10h
db  2Bh ; +
db  4Ah ; J
db 0E3h
db  23h ; #
db 0F3h
db  3Fh ; ?
db 0B6h
db 0EBh
db 0E9h
db  58h ; X
db  77h ; w
db  18h
db 0F3h
db  3Fh ; ?
db  90h
db 0D1h
db  30h ; 0
db    1
db  19h
db  0Dh
db 0F3h
db  3Fh ; ?
db  60h ; `
db    2
db 0C4h
db  2Ah ; *
db 0C8h
db    1
db 0F3h
db  3Fh ; ?
db  68h ; h
db  2Fh ; /
db 0A1h
db 0BDh
db  84h
db 0F6h
db 0F2h
db  3Fh ; ?
db  4Bh ; K
db 0D1h
db 0FEh
db 0A1h
db  4Eh ; N
db 0EBh
db 0F2h
db  3Fh ; ?
db  97h
db  80h
db  4Bh ; K
db 0C0h
db  25h ; %
db 0E0h
db 0F2h
db  3Fh ; ?
db 0A0h
db  50h ; P
db  2Dh ; -
db    1
db  0Ah
db 0D5h
db 0F2h
db  3Fh ; ?
db 0A0h
db  2Ch ; ,
db  81h
db  4Dh ; M
db 0FBh
db 0C9h
db 0F2h
db  3Fh ; ?
db  11h
db  37h ; 7
db  5Ah ; Z
db  8Eh
db 0F9h
db 0BEh
db 0F2h
db  3Fh ; ?
db  40h ; @
db  2Bh ; +
db    1
db 0ADh
db    4
db 0B4h
db 0F2h
db  3Fh ; ?
db    5
db 0C1h
db 0F3h
db  92h
db  1Ch
db 0A9h
db 0F2h
db  3Fh ; ?
db  9Eh
db  12h
db 0E4h
db  29h ; )
db  41h ; A
db  9Eh
db 0F2h
db  3Fh ; ?
db 0A5h
db    4
db 0B8h
db  5Bh ; [
db  72h ; r
db  93h
db 0F2h
db  3Fh ; ?
db  13h
db 0B0h
db  88h
db  12h
db 0B0h
db  88h
db 0F2h
db  3Fh ; ?
db  4Dh ; M
db 0CEh
db 0A1h
db  38h ; 8
db 0FAh
db  7Dh ; }
db 0F2h
db  3Fh ; ?
db  35h ; 5
db  27h ; '
db  81h
db 0B8h
db  50h ; P
db  73h ; s
db 0F2h
db  3Fh ; ?
db  27h ; '
db    1
db 0D6h
db  7Ch ; |
db 0B3h
db  68h ; h
db 0F2h
db  3Fh ; ?
db 0F1h
db  92h
db  80h
db  70h ; p
db  22h ; "
db  5Eh ; ^
db 0F2h
db  3Fh ; ?
db 0B2h
db  77h ; w
db  91h
db  7Eh ; ~
db  9Dh
db  53h ; S
db 0F2h
db  3Fh ; ?
db  92h
db  24h ; $
db  49h ; I
db  92h
db  24h ; $
db  49h ; I
db 0F2h
db  3Fh ; ?
db  5Bh ; [
db  60h ; `
db  17h
db  97h
db 0B7h
db  3Eh ; >
db 0F2h
db  3Fh ; ?
db 0DFh
db 0BCh
db  9Ah
db  78h ; x
db  56h ; V
db  34h ; 4
db 0F2h
db  3Fh ; ?
db  2Ah ; *
db  12h
db 0A0h
db  22h ; "
db    1
db  2Ah ; *
db 0F2h
db  3Fh ; ?
db  78h ; x
db 0FBh
db  21h ; !
db  81h
db 0B7h
db  1Fh
db 0F2h
db  3Fh ; ?
db 0E6h
db  55h ; U
db  48h ; H
db  80h
db  79h ; y
db  15h
db 0F2h
db  3Fh ; ?
db 0D9h
db 0C0h
db  67h ; g
db  0Ch
db  47h ; G
db  0Bh
db 0F2h
db  3Fh ; ?
db  12h
db  20h
db    1
db  12h
db  20h
db    1
db 0F2h
db  3Fh ; ?
db  70h ; p
db  1Fh
db 0C1h
db  7Dh ; }
db    4
db 0F7h
db 0F1h
db  3Fh ; ?
db  4Ch ; L
db 0B8h
db  7Fh ; 
db  3Ch ; <
db 0F4h
db 0ECh
db 0F1h
db  3Fh ; ?
db  74h ; t
db 0B8h
db  3Fh ; ?
db  3Bh ; ;
db 0EFh
db 0E2h
db 0F1h
db  3Fh ; ?
db 0BDh
db  4Ah ; J
db  2Eh ; .
db  67h ; g
db 0F5h
db 0D8h
db 0F1h
db  3Fh ; ?
db  1Dh
db  81h
db 0A2h
db 0ADh
db    6
db 0CFh
db 0F1h
db  3Fh ; ?
db  59h ; Y
db 0E0h
db  1Ch
db 0FCh
db  22h ; "
db 0C5h
db 0F1h
db  3Fh ; ?
db  29h ; )
db 0EDh
db  46h ; F
db  40h ; @
db  4Ah ; J
db 0BBh
db 0F1h
db  3Fh ; ?
db 0E3h
db 0BAh
db 0F2h
db  67h ; g
db  7Ch ; |
db 0B1h
db 0F1h
db  3Fh ; ?
db  96h
db  7Bh ; {
db  1Ah
db  61h ; a
db 0B9h
db 0A7h
db 0F1h
db  3Fh ; ?
db  9Eh
db  11h
db 0E0h
db  19h
db    1
db  9Eh
db 0F1h
db  3Fh ; ?
db  9Ch
db 0A2h
db  8Ch
db  80h
db  53h ; S
db  94h
db 0F1h
db  3Fh ; ?
db 0DBh
db  2Bh ; +
db  90h
db  83h
db 0B0h
db  8Ah
db 0F1h
db  3Fh ; ?
db  12h
db  18h
db  81h
db  11h
db  18h
db  81h
db 0F1h
db  3Fh ; ?
db  84h
db 0D6h
db  1Bh
db  19h
db  8Ah
db  77h ; w
db 0F1h
db  3Fh ; ?
db  79h ; y
db  73h ; s
db  42h ; B
db  89h
db    6
db  6Eh ; n
db 0F1h
db  3Fh ; ?
db    1
db  32h ; 2
db 0FCh
db  50h ; P
db  8Dh
db  64h ; d
db 0F1h
db  3Fh ; ?
db  0Dh
db  27h ; '
db  75h ; u
db  5Fh ; _
db  1Eh
db  5Bh ; [
db 0F1h
db  3Fh ; ?
db 0C9h
db 0D5h
db 0FDh
db 0A3h
db 0B9h
db  51h ; Q
db 0F1h
db  3Fh ; ?
db  3Bh ; ;
db 0CDh
db  0Ah
db  0Eh
db  5Fh ; _
db  48h ; H
db 0F1h
db  3Fh ; ?
db  24h ; $
db  47h ; G
db  34h ; 4
db  8Dh
db  0Eh
db  3Fh ; ?
db 0F1h
db  3Fh ; ?
db  11h
db 0C8h
db  35h ; 5
db  11h
db 0C8h
db  35h ; 5
db 0F1h
db  3Fh ; ?
db 0ACh
db 0C0h
db 0EDh
db  89h
db  8Bh
db  2Ch ; ,
db 0F1h
db  3Fh ; ?
db  33h ; 3
db  30h ; 0
db  5Dh ; ]
db 0E7h
db  58h ; X
db  23h ; #
db 0F1h
db  3Fh ; ?
db  26h ; &
db  48h ; H
db 0A7h
db  19h
db  30h ; 0
db  1Ah
db 0F1h
db  3Fh ; ?
db  11h
db  11h
db  11h
db  11h
db  11h
db  11h
db 0F1h
db  3Fh ; ?
db  80h
db  10h
db    1
db 0BEh
db 0FBh
db    7
db 0F1h
db  3Fh ; ?
db  11h
db 0F0h
db 0FEh
db  10h
db 0F0h
db 0FEh
db 0F0h
db  3Fh ; ?
db 0A2h
db  25h ; %
db 0B3h
db 0FAh
db 0EDh
db 0F5h
db 0F0h
db  3Fh ; ?
db  90h
db  9Ch
db 0E6h
db  6Bh ; k
db 0F5h
db 0ECh
db 0F0h
db  3Fh ; ?
db  11h
db  60h ; `
db  82h
db  55h ; U
db    6
db 0E4h
db 0F0h
db  3Fh ; ?
db  96h
db  46h ; F
db  8Fh
db 0A8h
db  20h
db 0DBh
db 0F0h
db  3Fh ; ?
db  3Ah ; :
db  9Eh
db  35h ; 5
db  56h ; V
db  44h ; D
db 0D2h
db 0F0h
db  3Fh ; ?
db  3Bh ; ;
db 0DAh
db 0BCh
db  4Fh ; O
db  71h ; q
db 0C9h
db 0F0h
db  3Fh ; ?
db  71h ; q
db  41h ; A
db  8Bh
db  86h
db 0A7h
db 0C0h
db 0F0h
db  3Fh ; ?
db 0C8h
db  9Dh
db  25h ; %
db 0ECh
db 0E6h
db 0B7h
db 0F0h
db  3Fh ; ?
db 0B5h
db 0ECh
db  2Eh ; .
db  72h ; r
db  2Fh ; /
db 0AFh
db 0F0h
db  3Fh ; ?
db 0A7h
db  10h
db  68h ; h
db  0Ah
db  81h
db 0A6h
db 0F0h
db  3Fh ; ?
db  60h ; `
db  83h
db 0AFh
db 0A6h
db 0DBh
db  9Dh
db 0F0h
db  3Fh ; ?
db  54h ; T
db    9
db    1
db  39h ; 9
db  3Fh ; ?
db  95h
db 0F0h
db  3Fh ; ?
db 0E2h
db  65h ; e
db  75h ; u
db 0B3h
db 0ABh
db  8Ch
db 0F0h
db  3Fh ; ?
db  84h
db  10h
db  42h ; B
db    8
db  21h ; !
db  84h
db 0F0h
db  3Fh ; ?
db 0E2h
db 0EAh
db 0B8h
db  29h ; )
db  9Fh
db  7Bh ; {
db 0F0h
db  3Fh ; ?
db 0C6h
db 0F7h
db  47h ; G
db  0Ah
db  26h ; &
db  73h ; s
db 0F0h
db  3Fh ; ?
db 0FBh
db  12h
db  79h ; y
db  9Ch
db 0B5h
db  6Ah ; j
db 0F0h
db  3Fh ; ?
db 0FCh
db 0A9h
db 0F1h
db 0D2h
db  4Dh ; M
db  62h ; b
db 0F0h
db  3Fh ; ?
db  86h
db  75h ; u
db  72h ; r
db 0A0h
db 0EEh
db  59h ; Y
db 0F0h
db  3Fh ; ?
db    4
db  34h ; 4
db 0D7h
db 0F7h
db  97h
db  51h ; Q
db 0F0h
db  3Fh ; ?
db 0C5h
db  64h ; d
db  16h
db 0CCh
db  49h ; I
db  49h ; I
db 0F0h
db  3Fh ; ?
db  10h
db    4
db  41h ; A
db  10h
db    4
db  41h ; A
db 0F0h
db  3Fh ; ?
db 0FCh
db  47h ; G
db  82h
db 0B7h
db 0C6h
db  38h ; 8
db 0F0h
db  3Fh ; ?
db  1Ah
db  5Eh ; ^
db  1Fh
db 0B5h
db  91h
db  30h ; 0
db 0F0h
db  3Fh ; ?
db 0E9h
db  29h ; )
db  77h ; w
db 0FCh
db  64h ; d
db  28h ; (
db 0F0h
db  3Fh ; ?
db    8
db    4
db    2
db  81h
db  40h ; @
db  20h
db 0F0h
db  3Fh ; ?
db  37h ; 7
db  7Ah ; z
db  51h ; Q
db  36h ; 6
db  24h ; $
db  18h
db 0F0h
db  3Fh ; ?
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db 0F0h
db  3Fh ; ?
db  80h
db    0
db    1
db    2
db    4
db    8
db 0F0h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db 0F0h
db  3Fh ; ?
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_7FF6E34683A0 db 0
align 10h
_load_config_used dd 140h ; Size
dd 0                    ; Time stamp
dw 2 dup(0)             ; Version: 0.0
dd 0                    ; GlobalFlagsClear
dd 0                    ; GlobalFlagsSet
dd 0                    ; CriticalSectionDefaultTimeout
dq 0                    ; DeCommitFreeBlockThreshold
dq 0                    ; DeCommitTotalFreeThreshold
dq 0                    ; LockPrefixTable
dq 0                    ; MaximumAllocationSize
dq 0                    ; VirtualMemoryThreshold
dq 0                    ; ProcessAffinityMask
dd 0                    ; ProcessHeapFlags
dw 0                    ; CSDVersion
dw 0                    ; Reserved1
dq 0                    ; EditList
dq offset __security_cookie ; SecurityCookie
dq 0                    ; SEHandlerTable
dq 0                    ; SEHandlerCount
dq offset __guard_check_icall_fptr ; GuardCFCheckFunctionPointer
dq offset __guard_dispatch_icall_fptr ; GuardCFDispatchFunctionPointer
dq 0                    ; GuardCFFunctionTable
dq 0                    ; GuardCFFunctionCount
dd 100h                 ; GuardFlags
dw 0                    ; CodeIntegrity.Flags
dw 0                    ; CodeIntegrity.Catalog
dd 0                    ; CodeIntegrity.CatalogOffset
dd 0                    ; CodeIntegrity.Reserved
dq 0                    ; GuardAddressTakenIatEntryTable
dq 0                    ; GuardAddressTakenIatEntryCount
dq 0                    ; GuardLongJumpTargetTable
dq 0                    ; GuardLongJumpTargetCount
dq 0                    ; DynamicValueRelocTable
dq 0                    ; CHPEMetadataPointer
dq 0                    ; GuardRFFailureRoutine
dq 0                    ; GuardRFFailureRoutineFunctionPointer
dd 0                    ; DynamicValueRelocTableOffset
dw 0                    ; DynamicValueRelocTableSection
dw 0                    ; Reserved2
dq 0                    ; GuardRFVerifyStackPointerFunctionPointer
dd 0                    ; HotPatchTableOffset
dd 0                    ; Reserved3
dq 0                    ; EnclaveConfigurationPointer
dq offset __volatile_metadata ; VolatileMetadataPointer
dq 0                    ; GuardEHContinuationTable
dq 0                    ; GuardEHContinuationCount
dq offset __guard_xfg_check_icall_fptr ; GuardXFGCheckFunctionPointer
dq offset __guard_xfg_dispatch_icall_fptr ; GuardXFGDispatchFunctionPointer
dq offset __guard_xfg_table_dispatch_icall_fptr ; GuardXFGTableDispatchFunctionPointer
dq offset __castguard_check_failure_os_handled_fptr ; CastGuardOsDeterminedFailureMode
dq offset off_7FF6E345D2E0
; Debug Directory entries
dd 0                    ; Characteristics
dd 67B5AA1Bh            ; TimeDateStamp: Wed Feb 19 09:53:31 2025
dw 0                    ; MajorVersion
dw 0                    ; MinorVersion
dd 0Dh                  ; Type: IMAGE_DEBUG_TYPE_POGO
dd 384h                 ; SizeOfData
dd rva unk_7FF6E346988C ; AddressOfRawData
dd 3848Ch               ; PointerToRawData
align 10h
jpt_7FF6E345B00B dd offset locret_7FF6E345B00E - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B0F4 - 7FF6E3430000h
dd offset loc_7FF6E345B048 - 7FF6E3430000h
dd offset loc_7FF6E345B07F - 7FF6E3430000h
dd offset loc_7FF6E345B0FA - 7FF6E3430000h
dd offset loc_7FF6E345B0DF - 7FF6E3430000h
dd offset loc_7FF6E345B0D0 - 7FF6E3430000h
dd offset loc_7FF6E345B050 - 7FF6E3430000h
dd offset loc_7FF6E345B0ED - 7FF6E3430000h
dd offset loc_7FF6E345B0B5 - 7FF6E3430000h
dd offset loc_7FF6E345B0A6 - 7FF6E3430000h
dd offset loc_7FF6E345B030 - 7FF6E3430000h
dd offset loc_7FF6E345B0C3 - 7FF6E3430000h
dd offset loc_7FF6E345B090 - 7FF6E3430000h
dd offset loc_7FF6E345B068 - 7FF6E3430000h
dd offset loc_7FF6E345B010 - 7FF6E3430000h
jpt_7FF6E345B252 dd offset loc_7FF6E345B2D6 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B2CF - 7FF6E3430000h
dd offset loc_7FF6E345B2C1 - 7FF6E3430000h
dd offset loc_7FF6E345B2B3 - 7FF6E3430000h
dd offset loc_7FF6E345B2A5 - 7FF6E3430000h
dd offset loc_7FF6E345B291 - 7FF6E3430000h
dd offset loc_7FF6E345B27D - 7FF6E3430000h
dd offset loc_7FF6E345B269 - 7FF6E3430000h
dd offset loc_7FF6E345B255 - 7FF6E3430000h
jpt_7FF6E345B382 dd offset loc_7FF6E345B406 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B3FF - 7FF6E3430000h
dd offset loc_7FF6E345B3F1 - 7FF6E3430000h
dd offset loc_7FF6E345B3E3 - 7FF6E3430000h
dd offset loc_7FF6E345B3D5 - 7FF6E3430000h
dd offset loc_7FF6E345B3C1 - 7FF6E3430000h
dd offset loc_7FF6E345B3AD - 7FF6E3430000h
dd offset loc_7FF6E345B399 - 7FF6E3430000h
dd offset loc_7FF6E345B385 - 7FF6E3430000h
jpt_7FF6E345B4F6 dd offset loc_7FF6E345B562 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B55B - 7FF6E3430000h
dd offset loc_7FF6E345B54D - 7FF6E3430000h
dd offset loc_7FF6E345B53F - 7FF6E3430000h
dd offset loc_7FF6E345B531 - 7FF6E3430000h
dd offset loc_7FF6E345B523 - 7FF6E3430000h
dd offset loc_7FF6E345B515 - 7FF6E3430000h
dd offset loc_7FF6E345B507 - 7FF6E3430000h
dd offset loc_7FF6E345B4F9 - 7FF6E3430000h
align 20h
jpt_7FF6E345B6BE dd offset locret_7FF6E345B6D2 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B6CE - 7FF6E3430000h
dd offset loc_7FF6E345B6DB - 7FF6E3430000h
dd offset loc_7FF6E345B6C9 - 7FF6E3430000h
dd offset loc_7FF6E345B704 - 7FF6E3430000h
dd offset loc_7FF6E345B6F4 - 7FF6E3430000h
dd offset loc_7FF6E345B6D7 - 7FF6E3430000h
dd offset loc_7FF6E345B6C5 - 7FF6E3430000h
dd offset loc_7FF6E345B72A - 7FF6E3430000h
dd offset loc_7FF6E345B717 - 7FF6E3430000h
dd offset loc_7FF6E345B720 - 7FF6E3430000h
dd offset loc_7FF6E345B709 - 7FF6E3430000h
dd offset loc_7FF6E345B700 - 7FF6E3430000h
dd offset loc_7FF6E345B6F0 - 7FF6E3430000h
dd offset loc_7FF6E345B6D3 - 7FF6E3430000h
dd offset loc_7FF6E345B6C1 - 7FF6E3430000h
jpt_7FF6E345B814 dd offset loc_7FF6E345B85B - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B854 - 7FF6E3430000h
dd offset loc_7FF6E345B84D - 7FF6E3430000h
dd offset loc_7FF6E345B846 - 7FF6E3430000h
dd offset loc_7FF6E345B83F - 7FF6E3430000h
dd offset loc_7FF6E345B835 - 7FF6E3430000h
dd offset loc_7FF6E345B82B - 7FF6E3430000h
dd offset loc_7FF6E345B821 - 7FF6E3430000h
dd offset loc_7FF6E345B817 - 7FF6E3430000h
jpt_7FF6E345B8D4 dd offset loc_7FF6E345B91B - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B914 - 7FF6E3430000h
dd offset loc_7FF6E345B90D - 7FF6E3430000h
dd offset loc_7FF6E345B906 - 7FF6E3430000h
dd offset loc_7FF6E345B8FF - 7FF6E3430000h
dd offset loc_7FF6E345B8F5 - 7FF6E3430000h
dd offset loc_7FF6E345B8EB - 7FF6E3430000h
dd offset loc_7FF6E345B8E1 - 7FF6E3430000h
dd offset loc_7FF6E345B8D7 - 7FF6E3430000h
jpt_7FF6E345B9C8 dd offset loc_7FF6E345BA03 - 7FF6E3430000h ; jump table for switch statement
dd offset loc_7FF6E345B9FC - 7FF6E3430000h
dd offset loc_7FF6E345B9F5 - 7FF6E3430000h
dd offset loc_7FF6E345B9EE - 7FF6E3430000h
dd offset loc_7FF6E345B9E7 - 7FF6E3430000h
dd offset loc_7FF6E345B9E0 - 7FF6E3430000h
dd offset loc_7FF6E345B9D9 - 7FF6E3430000h
dd offset loc_7FF6E345B9D2 - 7FF6E3430000h
dd offset loc_7FF6E345B9CB - 7FF6E3430000h
align 20h
unk_7FF6E3468680 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db 0DCh
db    3
db    0
db 0A8h
db  86h
db    3
db    0
db  80h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db 0C0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db 0DCh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0A8h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34686F8 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h
db 0DCh
db    3
db    0
db  20h
db  87h
db    3
db    0
db 0F8h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  38h ; 8
db  87h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  58h ; X
db  87h
db    3
db    0
db  80h
db  87h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h
db 0DCh
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  20h
db  87h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D8h
db 0DCh
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0A8h
db  87h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0C0h
db  87h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db  87h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34687D8 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D8h
db 0DCh
db    3
db    0
db 0A8h
db  87h
db    3
db    0
db 0D8h
db  87h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468800 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0DDh
db    3
db    0
db  28h ; (
db  88h
db    3
db    0
db    0
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  40h ; @
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  58h ; X
db  88h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0DDh
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  28h ; (
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db  98h
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  70h ; p
db 0DEh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  80h
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34688D0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  50h ; P
db 0DDh
db    3
db    0
db 0F8h
db  88h
db    3
db    0
db 0D0h
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  10h
db  89h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  89h
db    3
db    0
db  58h ; X
db  88h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  50h ; P
db 0DDh
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0F8h
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468958 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  28h ; (
db 0DDh
db    3
db    0
db  80h
db  89h
db    3
db    0
db  58h ; X
db  89h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  98h
db  89h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0C0h
db  89h
db    3
db    0
db  30h ; 0
db  89h
db    3
db    0
db  58h ; X
db  88h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  28h ; (
db 0DDh
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  80h
db  89h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34689E8 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0DEh
db    3
db    0
db  10h
db  8Ah
db    3
db    0
db 0E8h
db  89h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  28h ; (
db  8Ah
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  8Ah
db    3
db    0
db 0A8h
db  88h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0DEh
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  10h
db  8Ah
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468A68 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  78h ; x
db 0DDh
db    3
db    0
db  90h
db  8Ah
db    3
db    0
db  68h ; h
db  8Ah
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0A8h
db  8Ah
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0C0h
db  8Ah
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  78h ; x
db 0DDh
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  90h
db  8Ah
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468AE8 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D8h
db 0DEh
db    3
db    0
db  10h
db  8Bh
db    3
db    0
db 0E8h
db  8Ah
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db  28h ; (
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D8h
db 0DEh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  10h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468B60 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0DFh
db    3
db    0
db  88h
db  8Bh
db    3
db    0
db  60h ; `
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db 0A0h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0DFh
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  88h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  28h ; (
db 0DFh
db    3
db    0
db    0
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  10h
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db  28h ; (
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  38h ; 8
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  28h ; (
db 0DFh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  10h
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468C60 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  58h ; X
db 0DFh
db    3
db    0
db  88h
db  8Ch
db    3
db    0
db  60h ; `
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db 0A0h
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0C8h
db  8Ch
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  58h ; X
db 0DFh
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  88h
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468CF0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db 0DFh
db    3
db    0
db  18h
db  8Dh
db    3
db    0
db 0F0h
db  8Ch
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  30h ; 0
db  8Dh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  60h ; `
db  8Dh
db    3
db    0
db 0C8h
db  8Ch
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db 0DFh
db    3
db    0
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  18h
db  8Dh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468D88 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0DDh
db    3
db    0
db 0B0h
db  8Dh
db    3
db    0
db  88h
db  8Dh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db 0C8h
db  8Dh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0F8h
db  8Dh
db    3
db    0
db 0C0h
db  89h
db    3
db    0
db  30h ; 0
db  89h
db    3
db    0
db  58h ; X
db  88h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0DDh
db    3
db    0
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0B0h
db  8Dh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468E20 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B0h
db 0DFh
db    3
db    0
db  48h ; H
db  8Eh
db    3
db    0
db  20h
db  8Eh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  60h ; `
db  8Eh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  88h
db  8Eh
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B0h
db 0DFh
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  48h ; H
db  8Eh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468EB0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db 0E0h
db    3
db    0
db 0D8h
db  8Eh
db    3
db    0
db 0B0h
db  8Eh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db 0F0h
db  8Eh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  18h
db  8Fh
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db 0E0h
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0D8h
db  8Eh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468F40 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D0h
db 0DDh
db    3
db    0
db  68h ; h
db  8Fh
db    3
db    0
db  40h ; @
db  8Fh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  80h
db  8Fh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  98h
db  8Fh
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D0h
db 0DDh
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  68h ; h
db  8Fh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3468FC0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0F8h
db 0DDh
db    3
db    0
db 0E8h
db  8Fh
db    3
db    0
db 0C0h
db  8Fh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db    0
db  90h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  90h
db    3
db    0
db  98h
db  8Fh
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0F8h
db 0DDh
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0E8h
db  8Fh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469048 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db 0DEh
db    3
db    0
db  70h ; p
db  90h
db    3
db    0
db  48h ; H
db  90h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  88h
db  90h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h
db  90h
db    3
db    0
db  98h
db  8Fh
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db 0DEh
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  70h ; p
db  90h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34690D0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  38h ; 8
db 0E0h
db    3
db    0
db 0F8h
db  90h
db    3
db    0
db 0D0h
db  90h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  10h
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  38h ; 8
db  91h
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  38h ; 8
db 0E0h
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0F8h
db  90h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469160 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  68h ; h
db 0E0h
db    3
db    0
db  88h
db  91h
db    3
db    0
db  60h ; `
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0A0h
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db  91h
db    3
db    0
db 0E0h
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  68h ; h
db 0E0h
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  88h
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db 0E0h
db    3
db    0
db    0
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db    8
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db  20h
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db 0E0h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db    8
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469258 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db 0E0h
db    3
db    0
db  80h
db  92h
db    3
db    0
db  58h ; X
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  98h
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db  92h
db    3
db    0
db 0B8h
db  91h
db    3
db    0
db 0E0h
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db 0E0h
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  80h
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34692E0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0E1h
db    3
db    0
db    8
db  93h
db    3
db    0
db 0E0h
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db  20h
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0E1h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db    8
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db 0E0h
db    3
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  50h ; P
db    0
db    0
db    0
db  80h
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  68h ; h
db 0E0h
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  88h
db  91h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db 0E0h
db    3
db    0
db    0
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db    8
db  92h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34693D0 db    1
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  50h ; P
db 0E1h
db    3
db    0
db 0F8h
db  93h
db    3
db    0
db 0D0h
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  10h
db  94h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  38h ; 8
db  94h
db    3
db    0
db  58h ; X
db  93h
db    3
db    0
db  80h
db  93h
db    3
db    0
db 0A8h
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  50h ; P
db 0E1h
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0F8h
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469460 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0E1h
db    3
db    0
db  88h
db  94h
db    3
db    0
db  60h ; `
db  94h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0A0h
db  94h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db  94h
db    3
db    0
db  30h ; 0
db  93h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0E1h
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  88h
db  94h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db 0F8h
db  94h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  95h
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0E8h
db 0E1h
db    3
db    0
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db 0E0h
db  94h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469548 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db 0E2h
db    3
db    0
db  70h ; p
db  95h
db    3
db    0
db  48h ; H
db  95h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  88h
db  95h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B8h
db  95h
db    3
db    0
db  20h
db  95h
db    3
db    0
db 0C0h
db  8Bh
db    3
db    0
db  38h ; 8
db  8Bh
db    3
db    0
db 0E8h
db  8Bh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db 0E2h
db    3
db    0
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  70h ; p
db  95h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E34695E0 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  48h ; H
db 0E2h
db    3
db    0
db    8
db  96h
db    3
db    0
db 0E0h
db  95h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db  20h
db  96h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  30h ; 0
db  96h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  48h ; H
db 0E2h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db    8
db  96h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469658 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  48h ; H
db 0DEh
db    3
db    0
db  80h
db  96h
db    3
db    0
db  58h ; X
db  96h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  98h
db  96h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0B0h
db  96h
db    3
db    0
db 0D0h
db  86h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  48h ; H
db 0DEh
db    3
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
db  80h
db  96h
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
__volatile_metadata db  18h
db    0
db    0
db    0
db    3
db  80h
db    3
db  80h
db 0ECh
db  96h
db    3
db    0
db  68h ; h
db    1
db    0
db    0
db  54h ; T
db  98h
db    3
db    0
db  38h ; 8
db    0
db    0
db    0
db  57h ; W
db  1Dh
db    0
db    0
db  8Bh
db  24h ; $
db    0
db    0
db  72h ; r
db  35h ; 5
db    0
db    0
db  0Fh
db  36h ; 6
db    0
db    0
db  9Fh
db  3Ch ; <
db    0
db    0
db    9
db  3Dh ; =
db    0
db    0
db 0D3h
db  4Eh ; N
db    0
db    0
db 0BDh
db  53h ; S
db    0
db    0
db    0
db  54h ; T
db    0
db    0
db 0AEh
db  56h ; V
db    0
db    0
db  22h ; "
db  57h ; W
db    0
db    0
db 0B8h
db  58h ; X
db    0
db    0
db    7
db  59h ; Y
db    0
db    0
db  30h ; 0
db  5Fh ; _
db    0
db    0
db  9Dh
db  5Fh ; _
db    0
db    0
db  0Ah
db  60h ; `
db    0
db    0
db  87h
db  6Dh ; m
db    0
db    0
db  30h ; 0
db  6Eh ; n
db    0
db    0
db  77h ; w
db  6Eh ; n
db    0
db    0
db  20h
db  6Fh ; o
db    0
db    0
db  67h ; g
db  6Fh ; o
db    0
db    0
db 0E6h
db  71h ; q
db    0
db    0
db  27h ; '
db  72h ; r
db    0
db    0
db 0A6h
db  74h ; t
db    0
db    0
db 0E7h
db  74h ; t
db    0
db    0
db  6Bh ; k
db  75h ; u
db    0
db    0
db 0B7h
db  75h ; u
db    0
db    0
db  60h ; `
db  76h ; v
db    0
db    0
db 0A7h
db  76h ; v
db    0
db    0
db  50h ; P
db  77h ; w
db    0
db    0
db  97h
db  77h ; w
db    0
db    0
db 0A5h
db  7Ah ; z
db    0
db    0
db  89h
db  87h
db    0
db    0
db    5
db  88h
db    0
db    0
db  7Bh ; {
db  8Dh
db    0
db    0
db 0DDh
db 0B5h
db    0
db    0
db 0F3h
db 0B5h
db    0
db    0
db  83h
db 0B7h
db    0
db    0
db  86h
db 0BAh
db    0
db    0
db  94h
db 0BAh
db    0
db    0
db 0F5h
db 0BAh
db    0
db    0
db  40h ; @
db 0BBh
db    0
db    0
db  91h
db 0BBh
db    0
db    0
db  43h ; C
db 0BCh
db    0
db    0
db 0BFh
db 0BCh
db    0
db    0
db 0D4h
db 0BCh
db    0
db    0
db  2Bh ; +
db 0BDh
db    0
db    0
db  3Ah ; :
db 0C0h
db    0
db    0
db  6Ch ; l
db 0C0h
db    0
db    0
db  30h ; 0
db 0C2h
db    0
db    0
db 0FDh
db 0C3h
db    0
db    0
db  51h ; Q
db 0C4h
db    0
db    0
db  12h
db 0F9h
db    0
db    0
db  4Eh ; N
db 0FBh
db    0
db    0
db 0E4h
db    7
db    1
db    0
db 0F7h
db    7
db    1
db    0
db 0CEh
db    8
db    1
db    0
db 0F5h
db    8
db    1
db    0
db  71h ; q
db    9
db    1
db    0
db  86h
db    9
db    1
db    0
db 0B7h
db    9
db    1
db    0
db 0E1h
db    9
db    1
db    0
db  50h ; P
db 0BCh
db    2
db    0
db 0A0h
db 0BCh
db    2
db    0
db 0F0h
db 0BCh
db    2
db    0
db  10h
db 0BDh
db    2
db    0
db  1Ch
db 0BEh
db    2
db    0
db  44h ; D
db 0BEh
db    2
db    0
db  58h ; X
db 0BEh
db    2
db    0
db  9Bh
db 0BEh
db    2
db    0
db 0A2h
db 0BEh
db    2
db    0
db 0A9h
db 0BEh
db    2
db    0
db 0C4h
db 0BEh
db    2
db    0
db 0ECh
db 0BEh
db    2
db    0
db  0Eh
db 0BFh
db    2
db    0
db  51h ; Q
db 0BFh
db    2
db    0
db  58h ; X
db 0BFh
db    2
db    0
db  5Fh ; _
db 0BFh
db    2
db    0
db  79h ; y
db 0BFh
db    2
db    0
db  83h
db 0BFh
db    2
db    0
db  8Ah
db 0BFh
db    2
db    0
db  8Eh
db 0BFh
db    2
db    0
db  9Ah
db 0BFh
db    2
db    0
db 0A4h
db 0BFh
db    2
db    0
db 0B1h
db 0BFh
db    2
db    0
db 0BEh
db 0BFh
db    2
db    0
db 0D0h
db 0BFh
db    2
db    0
db 0D8h
db 0BFh
db    2
db    0
db 0EFh
db 0BFh
db    2
db    0
db 0F6h
db 0BFh
db    2
db    0
db    0
db  10h
db    0
db    0
db    0
db 0A3h
db    0
db    0
db  30h ; 0
db 0B3h
db    0
db    0
db  60h ; `
db    5
db    0
db    0
db 0F0h
db 0B8h
db    0
db    0
db  90h
db  4Eh ; N
db    0
db    0
db 0E4h
db    7
db    1
db    0
db  9Ch
db    3
db    0
db    0
db 0D0h
db 0AAh
db    2
db    0
db  80h
db    4
db    0
db    0
db  50h ; P
db 0BCh
db    2
db    0
db 0AAh
db    5
db    0
db    0
db 0B0h
db 0C4h
db    2
db    0
db  80h
db    1
db    0
db    0
; Debug information (IMAGE_DEBUG_TYPE_POGO)
unk_7FF6E346988C db    0
db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db  90h
db    1
db    0
db    0
db  2Eh ; .
db  74h ; t
db  65h ; e
db  78h ; x
db  74h ; t
db  24h ; $
db  64h ; d
db  69h ; i
db    0
db    0
db    0
db    0
db  90h
db  11h
db    0
db    0
db 0C0h
db  9Dh
db    2
db    0
db  2Eh ; .
db  74h ; t
db  65h ; e
db  78h ; x
db  74h ; t
db  24h ; $
db  6Dh ; m
db  6Eh ; n
db    0
db    0
db    0
db    0
db  50h ; P
db 0AFh
db    2
db    0
db  60h ; `
db    0
db    0
db    0
db  2Eh ; .
db  74h ; t
db  65h ; e
db  78h ; x
db  74h ; t
db  24h ; $
db  6Dh ; m
db  6Eh ; n
db  24h ; $
db  30h ; 0
db  30h ; 0
db    0
db 0B0h
db 0AFh
db    2
db    0
db 0A0h
db  0Ch
db    0
db    0
db  2Eh ; .
db  74h ; t
db  65h ; e
db  78h ; x
db  74h ; t
db  24h ; $
db  6Dh ; m
db  6Eh ; n
db  24h ; $
db  32h ; 2
db  31h ; 1
db    0
db  50h ; P
db 0BCh
db    2
db    0
db  80h
db    8
db    0
db    0
db  2Eh ; .
db  74h ; t
db  65h ; e
db  78h ; x
db  74h ; t
db  24h ; $
db  78h ; x
db    0
db 0D0h
db 0C4h
db    2
db    0
db  60h ; `
db    1
db    0
db    0
db  2Eh ; .
db  74h ; t
db  65h ; e
db  78h ; x
db  74h ; t
db  24h ; $
db  79h ; y
db  64h ; d
db    0
db    0
db    0
db    0
db    0
db 0D0h
db    2
db    0
db 0B0h
db    2
db    0
db    0
db  2Eh ; .
db  69h ; i
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  35h ; 5
db    0
db    0
db    0
db    0
db 0B0h
db 0D2h
db    2
db    0
db  38h ; 8
db    0
db    0
db    0
db  2Eh ; .
db  30h ; 0
db  30h ; 0
db  63h ; c
db  66h ; f
db  67h ; g
db    0
db    0
db 0E8h
db 0D2h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  43h ; C
db  41h ; A
db    0
db    0
db    0
db    0
db 0F0h
db 0D2h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  43h ; C
db  41h ; A
db  41h ; A
db    0
db    0
db    0
db 0F8h
db 0D2h
db    2
db    0
db  38h ; 8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  43h ; C
db  43h ; C
db    0
db    0
db    0
db    0
db  30h ; 0
db 0D3h
db    2
db    0
db  10h
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  43h ; C
db  4Ch ; L
db    0
db    0
db    0
db    0
db  40h ; @
db 0D3h
db    2
db    0
db  10h
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  43h ; C
db  55h ; U
db    0
db    0
db    0
db    0
db  50h ; P
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  43h ; C
db  5Ah ; Z
db    0
db    0
db    0
db    0
db  58h ; X
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  49h ; I
db  41h ; A
db    0
db    0
db    0
db    0
db  60h ; `
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  49h ; I
db  41h ; A
db  41h ; A
db    0
db    0
db    0
db  68h ; h
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  49h ; I
db  41h ; A
db  43h ; C
db    0
db    0
db    0
db  70h ; p
db 0D3h
db    2
db    0
db  28h ; (
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  49h ; I
db  43h ; C
db    0
db    0
db    0
db    0
db  98h
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  49h ; I
db  5Ah ; Z
db    0
db    0
db    0
db    0
db 0A0h
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  50h ; P
db  41h ; A
db    0
db    0
db    0
db    0
db 0A8h
db 0D3h
db    2
db    0
db  10h
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  50h ; P
db  58h ; X
db    0
db    0
db    0
db    0
db 0B8h
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  50h ; P
db  58h ; X
db  41h ; A
db    0
db    0
db    0
db 0C0h
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  50h ; P
db  5Ah ; Z
db    0
db    0
db    0
db    0
db 0C8h
db 0D3h
db    2
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  54h ; T
db  41h ; A
db    0
db    0
db    0
db    0
db 0D0h
db 0D3h
db    2
db    0
db  10h
db    0
db    0
db    0
db  2Eh ; .
db  43h ; C
db  52h ; R
db  54h ; T
db  24h ; $
db  58h ; X
db  54h ; T
db  5Ah ; Z
db    0
db    0
db    0
db    0
db 0E0h
db 0D3h
db    2
db    0
db  30h ; 0
db 0B1h
db    0
db    0
db  2Eh ; .
db  72h ; r
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db    0
db    0
db  10h
db  85h
db    3
db    0
db  70h ; p
db    1
db    0
db    0
db  2Eh ; .
db  72h ; r
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  30h ; 0
db  30h ; 0
db    0
db    0
db    0
db  80h
db  86h
db    3
db    0
db  54h ; T
db  10h
db    0
db    0
db  2Eh ; .
db  72h ; r
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  72h ; r
db    0
db    0
db    0
db    0
db 0D4h
db  96h
db    3
db    0
db 0B8h
db    1
db    0
db    0
db  2Eh ; .
db  72h ; r
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  76h ; v
db  6Fh ; o
db  6Ch ; l
db  74h ; t
db  6Dh ; m
db  64h ; d
db    0
db    0
db    0
db  8Ch
db  98h
db    3
db    0
db 0ACh
db    3
db    0
db    0
db  2Eh ; .
db  72h ; r
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  7Ah ; z
db  7Ah ; z
db  7Ah ; z
db  64h ; d
db  62h ; b
db  67h ; g
db    0
db    0
db    0
db  38h ; 8
db  9Ch
db    3
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  72h ; r
db  74h ; t
db  63h ; c
db  24h ; $
db  49h ; I
db  41h ; A
db  41h ; A
db    0
db    0
db    0
db    0
db  40h ; @
db  9Ch
db    3
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  72h ; r
db  74h ; t
db  63h ; c
db  24h ; $
db  49h ; I
db  5Ah ; Z
db  5Ah ; Z
db    0
db    0
db    0
db    0
db  48h ; H
db  9Ch
db    3
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  72h ; r
db  74h ; t
db  63h ; c
db  24h ; $
db  54h ; T
db  41h ; A
db  41h ; A
db    0
db    0
db    0
db    0
db  50h ; P
db  9Ch
db    3
db    0
db    8
db    0
db    0
db    0
db  2Eh ; .
db  72h ; r
db  74h ; t
db  63h ; c
db  24h ; $
db  54h ; T
db  5Ah ; Z
db  5Ah ; Z
db    0
db    0
db    0
db    0
db  58h ; X
db  9Ch
db    3
db    0
db  58h ; X
db  21h ; !
db    0
db    0
db  2Eh ; .
db  78h ; x
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db    0
db    0
db 0B0h
db 0BDh
db    3
db    0
db 0CCh
db    3
db    0
db    0
db  2Eh ; .
db  78h ; x
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  78h ; x
db    0
db    0
db    0
db    0
db  7Ch ; |
db 0C1h
db    3
db    0
db  14h
db    0
db    0
db    0
db  2Eh ; .
db  69h ; i
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  32h ; 2
db    0
db    0
db    0
db    0
db  90h
db 0C1h
db    3
db    0
db  18h
db    0
db    0
db    0
db  2Eh ; .
db  69h ; i
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  33h ; 3
db    0
db    0
db    0
db    0
db 0A8h
db 0C1h
db    3
db    0
db 0B0h
db    2
db    0
db    0
db  2Eh ; .
db  69h ; i
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  34h ; 4
db    0
db    0
db    0
db    0
db  58h ; X
db 0C4h
db    3
db    0
db  28h ; (
db    6
db    0
db    0
db  2Eh ; .
db  69h ; i
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  36h ; 6
db    0
db    0
db    0
db    0
db    0
db 0D0h
db    3
db    0
db  80h
db  0Ch
db    0
db    0
db  2Eh ; .
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db    0
db    0
db    0
db  80h
db 0DCh
db    3
db    0
db 0F0h
db    1
db    0
db    0
db  2Eh ; .
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  72h ; r
db    0
db  70h ; p
db 0DEh
db    3
db    0
db    0
db    4
db    0
db    0
db  2Eh ; .
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db  24h ; $
db  72h ; r
db  73h ; s
db    0
db    0
db    0
db    0
db  70h ; p
db 0E2h
db    3
db    0
db  30h ; 0
db  17h
db    0
db    0
db  2Eh ; .
db  62h ; b
db  73h ; s
db  73h ; s
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db  2Ah ; *
db    0
db    0
db  2Eh ; .
db  70h ; p
db  64h ; d
db  61h ; a
db  74h ; t
db  61h ; a
db    0
db    0
db    0
db  30h ; 0
db    4
db    0
db    0
db    1
db    0
db    0
db  2Eh ; .
db  66h ; f
db  70h ; p
db  74h ; t
db  61h ; a
db  62h ; b
db  6Ch ; l
db  65h ; e
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469C40 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E3469C50 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
stru_7FF6E3469C58 UNWIND_INFO_HDR <1, 0, 0Ah, 1, 0, 0>
UNWIND_CODE <0Ah, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469C60 UNWIND_INFO_HDR <1, 0, 0Fh, 1, 0, 0>
UNWIND_CODE <0Fh, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469C68 UNWIND_INFO_HDR <1, 0, 18h, 1, 0, 0>
UNWIND_CODE <18h, 2, 8> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469C70 UNWIND_INFO_HDR <1, 0, 0Fh, 2, 0, 0>
UNWIND_CODE <0Fh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E3469C78 UNWIND_INFO_HDR <1, 0, 10h, 1, 0, 0>
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469C80 UNWIND_INFO_HDR <1, 0, 0Fh, 2, 0, 0>
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E3469C88 UNWIND_INFO_HDR <1, 0, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469C90 UNWIND_INFO_HDR <1, 0, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 2>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469C98 UNWIND_INFO_HDR <1, 0, 0Dh, 1, 0, 0>
UNWIND_CODE <0Dh, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CA0 UNWIND_INFO_HDR <1, 0, 0Eh, 1, 0, 0>
UNWIND_CODE <0Eh, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CA8 UNWIND_INFO_HDR <1, 0, 13h, 1, 0, 0>
UNWIND_CODE <13h, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CB0 UNWIND_INFO_HDR <1, 0, 0Ch, 1, 0, 0>
UNWIND_CODE <0Ch, 2, 2> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CB8 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 8>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CC0 UNWIND_INFO_HDR <1, 0, 0Eh, 1, 0, 0>
UNWIND_CODE <0Eh, 2, 8> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CC8 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CD0 UNWIND_INFO_HDR <1, 0, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 6>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CD8 UNWIND_INFO_HDR <1, 0, 6, 1, 0, 0>
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469CE0 UNWIND_INFO_HDR <1, 0, 0Eh, 1, 0, 0>
UNWIND_CODE <0Eh, 2, 6> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CE8 UNWIND_INFO_HDR <1, 0, 13h, 1, 0, 0>
UNWIND_CODE <13h, 2, 6> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CF0 UNWIND_INFO_HDR <1, 0, 0Eh, 1, 0, 0>
UNWIND_CODE <0Eh, 2, 10> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469CF8 UNWIND_INFO_HDR <1, 0, 14h, 2, 0, 0>
UNWIND_CODE <14h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E3469D00 UNWIND_INFO_HDR <1, 0, 19h, 2, 0, 0>
UNWIND_CODE <19h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E3469D08 UNWIND_INFO_HDR <1, 0, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 10>  ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469D10 UNWIND_INFO_HDR <1, 0, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 8>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469D18 UNWIND_INFO_HDR <1, 0, 12h, 1, 0, 0>
UNWIND_CODE <12h, 2, 6> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469D20 UNWIND_INFO_HDR <1, 3, 22h, 1, 0, 0>
UNWIND_CODE <13h, 2, 10> ; UWOP_ALLOC_SMALL
align 4
dd rva __GSHandlerCheck
dd 40h
stru_7FF6E3469D30 UNWIND_INFO_HDR <1, 3, 2Ah, 4, 0, 0>
UNWIND_CODE <18h, 1, 0> ; UWOP_ALLOC_LARGE
dw 13h
UNWIND_CODE <11h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 80h
stru_7FF6E3469D44 UNWIND_INFO_HDR <1, 0, 10h, 3, 0, 0>
UNWIND_CODE <10h, 2, 4> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469D50 UNWIND_INFO_HDR <1, 3, 24h, 3, 0, 0>
UNWIND_CODE <15h, 2, 12> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 6> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 50h
stru_7FF6E3469D64 UNWIND_INFO_HDR <1, 0, 10h, 3, 0, 0>
UNWIND_CODE <10h, 2, 12> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469D70 UNWIND_INFO_HDR <1, 3, 25h, 4, 0, 0>
UNWIND_CODE <13h, 1, 0> ; UWOP_ALLOC_LARGE
dw 13h
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 80h
stru_7FF6E3469D84 UNWIND_INFO_HDR <1, 0, 18h, 1, 0, 0>
UNWIND_CODE <18h, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469D8C UNWIND_INFO_HDR <1, 0, 11h, 2, 0, 0>
UNWIND_CODE <11h, 1, 0> ; UWOP_ALLOC_LARGE
dw 15h
stru_7FF6E3469D94 UNWIND_INFO_HDR <1, 0, 10h, 3, 0, 0>
UNWIND_CODE <10h, 2, 8> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469DA0 UNWIND_INFO_HDR <1, 0, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 12>  ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469DA8 UNWIND_INFO_HDR <1, 0, 15h, 3, 0, 0>
UNWIND_CODE <15h, 2, 6> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 6> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469DB4 UNWIND_INFO_HDR <1, 0, 12h, 1, 0, 0>
UNWIND_CODE <12h, 2, 14> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469DBC UNWIND_INFO_HDR <1, 0, 0Eh, 1, 0, 0>
UNWIND_CODE <0Eh, 2, 2> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469DC4 UNWIND_INFO_HDR <1, 0, 0Dh, 1, 0, 0>
UNWIND_CODE <0Dh, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469DCC UNWIND_INFO_HDR <1, 0, 12h, 1, 0, 0>
UNWIND_CODE <12h, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469DD4 UNWIND_INFO_HDR <1, 3, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E3469DE4
byte_7FF6E3469DE4 db 18h ; FuncInfo4
dd rva byte_7FF6E3469DF1 ; unwind map
dd rva byte_7FF6E3469DF4 ; try block map
dd rva byte_7FF6E3469E02 ; ip2state map
byte_7FF6E3469DF1 db 4  ; num unwind entries: 2
db 8                    ; funclet type: 0
db 10h                  ; funclet type: 0
byte_7FF6E3469DF4 db 2  ; num_tryblocks: 1
db 0                    ; lowest state index of try
db 0                    ; highest state index of try
db 2                    ; highest state index of any associated catch
dd rva byte_7FF6E3469DFC ; list of handlers
byte_7FF6E3469DFC db 2  ; num_handlers: 1
db 0
dd rva unknown_libname_49 ; catch code
byte_7FF6E3469E02 db 6  ; num_ip2state entries: 3
db 0                    ; ea 0x140006060
db 0                    ; state -1
db 12h                  ; ea 0x140006069
db 2                    ; state 0
db 81h, 2               ; ea 0x140006109
db 0                    ; state -1
db    0
db    0
stru_7FF6E3469E0C UNWIND_INFO_HDR <1, 0, 0Ah, 2, 0, 0>
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E3469E14 UNWIND_INFO_HDR <1, 3, 12h, 4, 0, 0>
UNWIND_CODE <12h, 1, 0> ; UWOP_ALLOC_LARGE
dw 17h
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E3469E28
byte_7FF6E3469E28 db 18h ; FuncInfo4
dd rva byte_7FF6E3469DF1 ; unwind map
dd rva byte_7FF6E3469E35 ; try block map
dd rva byte_7FF6E3469E43 ; ip2state map
byte_7FF6E3469E35 db 2  ; num_tryblocks: 1
db 0                    ; lowest state index of try
db 0                    ; highest state index of try
db 2                    ; highest state index of any associated catch
dd rva byte_7FF6E3469E3D ; list of handlers
byte_7FF6E3469E3D db 2  ; num_handlers: 1
db 0
dd rva sub_7FF6E345BCA0 ; catch code
byte_7FF6E3469E43 db 6  ; num_ip2state entries: 3
db 0                    ; ea 0x1400042D0
db 0                    ; state -1
db 79h, 3               ; ea 0x1400043AE
db 2                    ; state 0
db 89h, 3               ; ea 0x140004490
db 0                    ; state -1
stru_7FF6E3469E4C UNWIND_INFO_HDR <1, 0, 0Ah, 2, 0, 0>
UNWIND_CODE <0Ah, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E3469E54 UNWIND_INFO_HDR <1, 3, 9, 1, 0, 0>
UNWIND_CODE <9, 2, 8>   ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E3469E64
byte_7FF6E3469E64 db 18h ; FuncInfo4
dd rva byte_7FF6E3469DF1 ; unwind map
dd rva byte_7FF6E3469E71 ; try block map
dd rva byte_7FF6E3469E7F ; ip2state map
byte_7FF6E3469E71 db 2  ; num_tryblocks: 1
db 0                    ; lowest state index of try
db 0                    ; highest state index of try
db 2                    ; highest state index of any associated catch
dd rva byte_7FF6E3469E79 ; list of handlers
byte_7FF6E3469E79 db 2  ; num_handlers: 1
db 0
dd rva sub_7FF6E345BD10 ; catch code
byte_7FF6E3469E7F db 6  ; num_ip2state entries: 3
db 0                    ; ea 0x140007E20
db 0                    ; state -1
db 0BCh                 ; ea 0x140007E7E
db 2                    ; state 0
db 34h                  ; ea 0x140007E98
db 0                    ; state -1
db    0
db    0
stru_7FF6E3469E88 UNWIND_INFO_HDR <1, 3, 0Eh, 1, 0, 0>
UNWIND_CODE <0Eh, 2, 12> ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E3469E98
byte_7FF6E3469E98 db 18h ; FuncInfo4
dd rva byte_7FF6E3469DF1 ; unwind map
dd rva byte_7FF6E3469EA5 ; try block map
dd rva byte_7FF6E3469EB3 ; ip2state map
byte_7FF6E3469EA5 db 2  ; num_tryblocks: 1
db 0                    ; lowest state index of try
db 0                    ; highest state index of try
db 2                    ; highest state index of any associated catch
dd rva byte_7FF6E3469EAD ; list of handlers
byte_7FF6E3469EAD db 2  ; num_handlers: 1
db 0
dd rva sub_7FF6E345BC50 ; catch code
byte_7FF6E3469EB3 db 6  ; num_ip2state entries: 3
db 0                    ; ea 0x1400012C0
db 0                    ; state -1
db 79h, 3               ; ea 0x14000139E
db 2                    ; state 0
db 39h, 7               ; ea 0x14000156C
db 0                    ; state -1
stru_7FF6E3469EBC UNWIND_INFO_HDR <1, 0, 1Ah, 3, 0, 0>
UNWIND_CODE <1Ah, 2, 8> ; UWOP_ALLOC_SMALL
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469EC8 UNWIND_INFO_HDR <1, 3, 2Fh, 4, 0, 0>
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 29h
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 130h
stru_7FF6E3469EDC UNWIND_INFO_HDR <1, 3, 2Fh, 4, 0, 0>
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 17h
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 0A0h
stru_7FF6E3469EF0 UNWIND_INFO_HDR <1, 3, 2Fh, 4, 0, 0>
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Bh
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 0C8h
stru_7FF6E3469F04 UNWIND_INFO_HDR <1, 3, 2Fh, 4, 0, 0>
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 15h
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 90h
stru_7FF6E3469F18 UNWIND_INFO_HDR <1, 0, 18h, 1, 0, 0>
UNWIND_CODE <18h, 2, 2> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F20 UNWIND_INFO_HDR <1, 3, 2Fh, 4, 0, 0>
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 39h
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 1B0h
stru_7FF6E3469F34 UNWIND_INFO_HDR <1, 0, 1Ah, 3, 0, 0>
UNWIND_CODE <1Ah, 2, 4> ; UWOP_ALLOC_SMALL
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E3469F40 UNWIND_INFO_HDR <1, 0, 0Dh, 1, 0, 0>
UNWIND_CODE <0Dh, 2, 6> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F48 UNWIND_INFO_HDR <1, 0, 13h, 1, 0, 0>
UNWIND_CODE <13h, 2, 10> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F50 UNWIND_INFO_HDR <1, 0, 13h, 1, 0, 0>
UNWIND_CODE <13h, 2, 12> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F58 UNWIND_INFO_HDR <1, 0, 0Dh, 1, 0, 0>
UNWIND_CODE <0Dh, 2, 2> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F60 UNWIND_INFO_HDR <1, 0, 0Ah, 1, 0, 0>
UNWIND_CODE <0Ah, 2, 6> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F68 UNWIND_INFO_HDR <1, 3, 2Fh, 4, 0, 0>
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 3Dh
UNWIND_CODE <16h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 1D0h
stru_7FF6E3469F7C UNWIND_INFO_HDR <1, 3, 2Ah, 4, 0, 0>
UNWIND_CODE <18h, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Dh
UNWIND_CODE <11h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 0D0h
stru_7FF6E3469F90 UNWIND_INFO_HDR <1, 0, 18h, 1, 0, 0>
UNWIND_CODE <18h, 2, 6> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469F98 UNWIND_INFO_HDR <1, 0, 1Bh, 2, 0, 0>
UNWIND_CODE <1Bh, 1, 0> ; UWOP_ALLOC_LARGE
dw 11h
stru_7FF6E3469FA0 UNWIND_INFO_HDR <1, 0, 1Bh, 2, 0, 0>
UNWIND_CODE <1Bh, 1, 0> ; UWOP_ALLOC_LARGE
dw 13h
stru_7FF6E3469FA8 UNWIND_INFO_HDR <1, 0, 12h, 1, 0, 0>
UNWIND_CODE <12h, 2, 10> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469FB0 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 2>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469FB8 UNWIND_INFO_HDR <1, 0, 13h, 1, 0, 0>
UNWIND_CODE <13h, 2, 8> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469FC0 UNWIND_INFO_HDR <1, 0, 17h, 1, 0, 0>
UNWIND_CODE <17h, 2, 4> ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E3469FC8 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E3469FD0 UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E3469FDC UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 5>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E3469FE4 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E3469FF4 UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A000 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 5> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A010 UNWIND_INFO_HDR <1, 2, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A02C
byte_7FF6E346A02C db 28h ; FuncInfo4
dd rva byte_7FF6E346A035 ; unwind map
dd rva byte_7FF6E346A03C ; ip2state map
byte_7FF6E346A035 db 2  ; num unwind entries: 1
db 0Ah                  ; funclet type: 1
dd rva ??1_Lockit@std@@QEAA@XZ ; funclet
db 60h                  ; frame offset of object ptr to be destructed
byte_7FF6E346A03C db 4  ; num_ip2state entries: 2
db 6Ah                  ; ea 0x140008CFD
db 2                    ; state 0
db 6Dh, 2               ; ea 0x140008D98
db 0                    ; state -1
db    0
db    0
stru_7FF6E346A044 UNWIND_INFO_HDR <1, 0, 0Ch, 6, 0, 0>
UNWIND_CODE <0Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <0Ch, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A054 UNWIND_INFO_HDR <1, 0, 12h, 8, 0, 0>
UNWIND_CODE <12h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <12h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
stru_7FF6E346A068 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <19h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346A080 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A094 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 11>  ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A09C UNWIND_INFO_HDR <1, 2, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A0B0
byte_7FF6E346A0B0 db 28h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A0BF ; ip2state map
byte_7FF6E346A0B9 db 2  ; num unwind entries: 1
db 0Eh                  ; funclet type: 3
dd rva sub_7FF6E343D1F4 ; funclet
byte_7FF6E346A0BF db 6  ; num_ip2state entries: 3
db 76h                  ; ea 0x140009E0B
db 0                    ; state -1
db 2Eh                  ; ea 0x140009E22
db 2                    ; state 0
db 16h                  ; ea 0x140009E2D
db 0                    ; state -1
db    0
db    0
stru_7FF6E346A0C8 UNWIND_INFO_HDR <1, 3, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A0DC
byte_7FF6E346A0DC db 68h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A0E5 ; ip2state map
byte_7FF6E346A0E5 db 2  ; num_ip2state entries: 1
db 32h                  ; ea 0x140009905
db 2                    ; state 0
stru_7FF6E346A0E8 UNWIND_INFO_HDR <1, 3, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A0F8
byte_7FF6E346A0F8 db 68h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A101 ; ip2state map
byte_7FF6E346A101 db 2  ; num_ip2state entries: 1
db 1Ch                  ; ea 0x14000989E
db 2                    ; state 0
stru_7FF6E346A104 UNWIND_INFO_HDR <1, 2, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Ah, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A118
byte_7FF6E346A118 db 28h ; FuncInfo4
dd rva byte_7FF6E346A121 ; unwind map
dd rva byte_7FF6E346A128 ; ip2state map
byte_7FF6E346A121 db 2  ; num unwind entries: 1
db 0Ah                  ; funclet type: 1
dd rva sub_7FF6E34340F0 ; funclet
db 40h                  ; frame offset of object ptr to be destructed
byte_7FF6E346A128 db 4  ; num_ip2state entries: 2
db 5Eh                  ; ea 0x14000A98F
db 2                    ; state 0
db 38h                  ; ea 0x14000A9AB
db 0                    ; state -1
db    0
db    0
db    0
stru_7FF6E346A130 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <0Fh, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A140 UNWIND_INFO_HDR <1, 2, 0Ah, 2, 0, 0>
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A150
byte_7FF6E346A150 db 28h ; FuncInfo4
dd rva byte_7FF6E346A159 ; unwind map
dd rva byte_7FF6E346A15F ; ip2state map
byte_7FF6E346A159 db 2  ; num unwind entries: 1
db 0Eh                  ; funclet type: 3
dd rva sub_7FF6E345BD75 ; funclet
byte_7FF6E346A15F db 2  ; num_ip2state entries: 1
db 3Dh, 2               ; ea 0x1400096E7
db 2                    ; state 0
db    0
stru_7FF6E346A164 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A16C UNWIND_INFO_HDR <1, 3, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A180
byte_7FF6E346A180 db 68h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A189 ; ip2state map
byte_7FF6E346A189 db 2  ; num_ip2state entries: 1
db 7Ah                  ; ea 0x140009969
db 2                    ; state 0
stru_7FF6E346A18C UNWIND_INFO_HDR <1, 2, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A1B0
byte_7FF6E346A1B0 db 28h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A1B9 ; ip2state map
byte_7FF6E346A1B9 db 4  ; num_ip2state entries: 2
db 0E6h                 ; ea 0x14000976B
db 0                    ; state -1
db 22h                  ; ea 0x14000977C
db 2                    ; state 0
db    0
db    0
stru_7FF6E346A1C0 UNWIND_INFO_HDR <1, 0, 1Dh, 0Ch, 0, 0>
UNWIND_CODE <1Dh, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <1Dh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Dh, 4, 5> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <1Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <1Dh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <19h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <17h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 12> ; UWOP_PUSH_NONVOL
stru_7FF6E346A1DC UNWIND_INFO_HDR <1, 3, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A1EC
byte_7FF6E346A1EC db 60h ; FuncInfo4
dd rva byte_7FF6E346A1F1 ; ip2state map
byte_7FF6E346A1F1 db 2  ; num_ip2state entries: 1
db 0AAh                 ; ea 0x140009835
db 0                    ; state -1
stru_7FF6E346A1F4 UNWIND_INFO_HDR <1, 3, 28h, 9, 0, 0>
UNWIND_CODE <1Ah, 4, 6> ; UWOP_SAVE_NONVOL
dw 19h
UNWIND_CODE <1Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 18h
UNWIND_CODE <1Ah, 1, 0> ; UWOP_ALLOC_LARGE
dw 12h
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 88h
stru_7FF6E346A214 UNWIND_INFO_HDR <1, 3, 29h, 9, 0, 0>
UNWIND_CODE <1Bh, 4, 7> ; UWOP_SAVE_NONVOL
dw 17h
UNWIND_CODE <1Bh, 4, 6> ; UWOP_SAVE_NONVOL
dw 16h
UNWIND_CODE <1Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 15h
UNWIND_CODE <1Bh, 1, 0> ; UWOP_ALLOC_LARGE
dw 12h
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck_EH4
dd rva byte_7FF6E346A238
db  8Ah
db    0
db    0
db    0
byte_7FF6E346A238 db 28h ; FuncInfo4
dd rva byte_7FF6E346A241 ; unwind map
dd rva byte_7FF6E346A248 ; ip2state map
byte_7FF6E346A241 db 2  ; num unwind entries: 1
db 0Ah                  ; funclet type: 1
dd rva sub_7FF6E3433DB0 ; funclet
db 0D0h                 ; frame offset of object ptr to be destructed
byte_7FF6E346A248 db 4  ; num_ip2state entries: 2
db 0D1h, 3              ; ea 0x14000A78C
db 2                    ; state 0
db 11h, 4               ; ea 0x14000A890
db 0                    ; state -1
db    0
stru_7FF6E346A250 UNWIND_INFO_HDR <1, 0, 18h, 0Ah, 0, 0>
UNWIND_CODE <18h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <18h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A268 UNWIND_INFO_HDR <1, 0, 12h, 8, 0, 0>
UNWIND_CODE <12h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <12h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
stru_7FF6E346A27C UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A28C UNWIND_INFO_HDR <1, 0, 0Ch, 4, 0, 0>
UNWIND_CODE <0Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A298 UNWIND_INFO_HDR <1, 3, 19h, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <0Ah, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 58h
stru_7FF6E346A2AC UNWIND_INFO_HDR <1, 2, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A2BC
byte_7FF6E346A2BC db 28h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A2C5 ; ip2state map
byte_7FF6E346A2C5 db 2  ; num_ip2state entries: 1
db 92h                  ; ea 0x14002C5C1
db 2                    ; state 0
stru_7FF6E346A2C8 UNWIND_INFO_HDR <1, 2, 0Bh, 6, 0, 0>
UNWIND_CODE <0Bh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <7, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 5>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A2E0
byte_7FF6E346A2E0 db 28h ; FuncInfo4
dd rva byte_7FF6E346A2E9 ; unwind map
dd rva byte_7FF6E346A2F6 ; ip2state map
byte_7FF6E346A2E9 db 4  ; num unwind entries: 2
db 0Ah                  ; funclet type: 1
dd rva ??1_Lockit@std@@QEAA@XZ ; funclet
db 0B0h                 ; frame offset of object ptr to be destructed
db 32h                  ; funclet type: 1
dd rva sub_7FF6E3433E90 ; funclet
db 0A0h                 ; frame offset of object ptr to be destructed
byte_7FF6E346A2F6 db 8  ; num_ip2state entries: 4
db 65h, 2               ; ea 0x1400095D9
db 2                    ; state 0
db 7Eh                  ; ea 0x140009618
db 4                    ; state 1
db 3Eh                  ; ea 0x140009637
db 0                    ; state -1
db 30h                  ; ea 0x14000964F
db 2                    ; state 0
stru_7FF6E346A300 UNWIND_INFO_HDR <1, 2, 17h, 9, 0, 0>
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 17h
UNWIND_CODE <17h, 4, 5> ; UWOP_SAVE_NONVOL
dw 16h
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 15h
UNWIND_CODE <17h, 1, 0> ; UWOP_ALLOC_LARGE
dw 12h
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A320
byte_7FF6E346A320 db 28h ; FuncInfo4
dd rva byte_7FF6E346A329 ; unwind map
dd rva byte_7FF6E346A32F ; ip2state map
byte_7FF6E346A329 db 2  ; num unwind entries: 1
db 0Eh                  ; funclet type: 3
dd rva unknown_libname_51 ; funclet
byte_7FF6E346A32F db 4  ; num_ip2state entries: 2
db 66h                  ; ea 0x140009C6F
db 0                    ; state -1
db 72h                  ; ea 0x140009CA8
db 2                    ; state 0
stru_7FF6E346A334 UNWIND_INFO_HDR <1, 2, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A344
byte_7FF6E346A344 db 28h ; FuncInfo4
dd rva byte_7FF6E346A0B9 ; unwind map
dd rva byte_7FF6E346A34D ; ip2state map
byte_7FF6E346A34D db 2  ; num_ip2state entries: 1
db 4Ch                  ; ea 0x14002C60A
db 2                    ; state 0
stru_7FF6E346A350 UNWIND_INFO_HDR <1, 3, 2Dh, 0Dh, 5, 5>
UNWIND_CODE <1Fh, 4, 13> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <1Bh, 4, 7> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <13h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <0Fh, 3, 5> ; UWOP_SET_FPREG
UNWIND_CODE <0Ah, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 15>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 50h
stru_7FF6E346A378 UNWIND_INFO_HDR <1, 3, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler4
dd rva byte_7FF6E346A38C
byte_7FF6E346A38C db 60h ; FuncInfo4
dd rva byte_7FF6E346A391 ; ip2state map
byte_7FF6E346A391 db 2  ; num_ip2state entries: 1
db 40h                  ; ea 0x14000B1D4
db 0                    ; state -1
stru_7FF6E346A394 UNWIND_INFO_HDR <1, 0, 2, 1, 0, 0>
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
align 4
align 20h
stru_7FF6E346A3A0 UNWIND_INFO_HDR <1, 0, 0, 0, 0, 0>
stru_7FF6E346A3A4 UNWIND_INFO_HDR <1, 1, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Fh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E343B469, \
               rva $LN18, \ ; int `__scrt_common_main_seh(void)'::`1'::filt$0
               rva ?filt$0@?0??__scrt_common_main_seh@@YAHXZ@4HA,\
               rva $LN18>
C_SCOPE_TABLE <rva loc_7FF6E343B5A2, \
               rva loc_7FF6E343B5B4, \ ; int `__scrt_common_main_seh(void)'::`1'::filt$0
               rva ?filt$0@?0??__scrt_common_main_seh@@YAHXZ@4HA,\
               rva $LN18>
stru_7FF6E346A3DC UNWIND_INFO_HDR <1, 1, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 2>   ; UWOP_ALLOC_SMALL
align 4
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343B6DB, \
               rva loc_7FF6E343B765, \
               rva __scrt_is_nonwritable_in_current_image$filt$0,\
               rva loc_7FF6E343B765>
stru_7FF6E346A3FC UNWIND_INFO_HDR <1, 0, 2, 1, 0, 0>
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
align 8
stru_7FF6E346A408 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 1>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346A410 UNWIND_INFO_HDR <1, 0, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <15h, 2, 1> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346A424 UNWIND_INFO_HDR <1, 0, 8, 1, 0, 0>
UNWIND_CODE <8, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346A42C UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <0Ah, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A438 UNWIND_INFO_HDR <1, 0, 8, 4, 0, 0>
UNWIND_CODE <8, 2, 7>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <4, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A444 UNWIND_INFO_HDR <1, 0, 0Dh, 4, 0, 0>
UNWIND_CODE <0Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <0Dh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A450 UNWIND_INFO_HDR <1, 0, 15h, 5, 0, 0>
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0BAh
UNWIND_CODE <15h, 1, 0> ; UWOP_ALLOC_LARGE
dw 0B8h
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346A460 UNWIND_INFO_HDR <1, 0, 0, 0, 0, 0>
align 8
stru_7FF6E346A468 UNWIND_INFO_HDR <1, 0, 0, 0, 0, 0>
align 10h
stru_7FF6E346A470 UNWIND_INFO_HDR <2, 0, 2, 4, 0, 0>
UNWIND_CODE <3, 6, 1>   ; UWOP_EPILOG
UNWIND_CODE <0, 6, 0>   ; UWOP_EPILOG
UNWIND_CODE <2, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <1, 0, 7>   ; UWOP_PUSH_NONVOL
align 20h
stru_7FF6E346A480 UNWIND_INFO_HDR <1, 0, 0, 0, 0, 0>
align 8
stru_7FF6E346A488 UNWIND_INFO_HDR <2, 0, 1, 3, 0, 0>
UNWIND_CODE <2, 6, 1>   ; UWOP_EPILOG
UNWIND_CODE <0, 6, 0>   ; UWOP_EPILOG
UNWIND_CODE <1, 0, 7>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346A494 UNWIND_INFO_HDR <1, 0, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <15h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346A4A8 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <0Fh, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A4B8 UNWIND_INFO_HDR <1, 0, 15h, 9, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 5
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 4
UNWIND_CODE <15h, 4, 5> ; UWOP_SAVE_NONVOL
dw 3
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 2
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346A4D0 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A4E4 UNWIND_INFO_HDR <1, 0, 16h, 0Ah, 0, 0>
UNWIND_CODE <16h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <16h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <16h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <12h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
stru_7FF6E346A4FC UNWIND_INFO_HDR <1, 3, 1Ch, 3, 0, 0>
UNWIND_CODE <0Eh, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Ch
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 0D0h
stru_7FF6E346A510 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Ch, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A52C UNWIND_INFO_HDR <1, 0, 25h, 0Ch, 0, 0>
UNWIND_CODE <25h, 8, 6> ; UWOP_SAVE_XMM128
dw 5
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <19h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346A548 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <14h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A55C UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <14h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A570 UNWIND_INFO_HDR <1, 1, 18h, 2, 0, 0>
UNWIND_CODE <18h, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 3> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343C43B, \
               rva loc_7FF6E343C45B, \ ; int `_CallSETranslator<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,ulong,unsigned __int64 *,int)'::`1'::filt$0
               rva ?filt$0@?0???$_CallSETranslator@V__FrameHandler4@@@@YAHPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@K1H@Z@4HA,\
               rva loc_7FF6E343C45B>
stru_7FF6E346A590 UNWIND_INFO_HDR <1, 0, 8, 4, 0, 0>
UNWIND_CODE <8, 2, 7>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <4, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 5>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A59C UNWIND_INFO_HDR <1, 1, 18h, 2, 0, 0>
UNWIND_CODE <18h, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 3> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343C3E7, \
               rva loc_7FF6E343C407, \ ; int `_CallSETranslator<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,ulong,unsigned __int64 *,int)'::`1'::filt$0
               rva ?filt$0@?0???$_CallSETranslator@V__FrameHandler3@@@@YAHPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@K1H@Z@4HA,\
               rva loc_7FF6E343C407>
stru_7FF6E346A5BC UNWIND_INFO_HDR <1, 1, 0Dh, 1, 0, 0>
UNWIND_CODE <0Dh, 2, 8> ; UWOP_ALLOC_SMALL
align 4
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343D0D5, \
               rva loc_7FF6E343D0E4, \
               rva __DestructExceptionObject$filt$0,\
               rva loc_7FF6E343D0E4>
stru_7FF6E346A5DC UNWIND_INFO_HDR <1, 0, 7, 3, 0, 0>
UNWIND_CODE <7, 2, 4>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <3, 0, 5>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346A5E8 UNWIND_INFO_HDR <1, 0, 1Eh, 0Ah, 0, 0>
UNWIND_CODE <1Eh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Eh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <1Ah, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <18h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346A600 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Fh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A610 UNWIND_INFO_HDR <1, 3, 1Eh, 8, 0, 0>
UNWIND_CODE <1Eh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <1Ah, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <18h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 3> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 3
C_SCOPE_TABLE <rva loc_7FF6E343FF26, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E343FFB8, \
               rva unknown_libname_54, \
               rva loc_7FF6E343FFB8>
C_SCOPE_TABLE <rva loc_7FF6E343FEEB, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E343FFDF, \
               rva unknown_libname_55, \
               0>
C_SCOPE_TABLE <rva loc_7FF6E344001A, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E3440020, \
               rva unknown_libname_55, \
               0>
stru_7FF6E346A65C UNWIND_INFO_HDR <1, 3, 10h, 8, 0, 0>
UNWIND_CODE <10h, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E343F8ED, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E343F912, \
               rva unknown_libname_52, \
               rva loc_7FF6E343F912>
C_SCOPE_TABLE <rva loc_7FF6E343F8ED, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E343F98A, \
               rva unknown_libname_53, \
               0>
stru_7FF6E346A698 UNWIND_INFO_HDR <1, 3, 2Bh, 0Bh, 0, 0>
UNWIND_CODE <19h, 8, 6> ; UWOP_SAVE_XMM128
dw 0Fh
UNWIND_CODE <15h, 1, 0> ; UWOP_ALLOC_LARGE
dw 20h
UNWIND_CODE <0Eh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 3>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck_SEH
dd 2
C_SCOPE_TABLE <rva loc_7FF6E344026C, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E34402CB, \
               rva unknown_libname_56, \
               rva loc_7FF6E34402CB>
C_SCOPE_TABLE <rva loc_7FF6E3440184, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E34402EB, \
               rva unknown_libname_57, \
               0>
dd 0E3h
stru_7FF6E346A6E0 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 5>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A6E8 UNWIND_INFO_HDR <1, 3, 13h, 8, 0, 0>
UNWIND_CODE <13h, 1, 0> ; UWOP_ALLOC_LARGE
dw 13h
UNWIND_CODE <0Ch, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 4
C_SCOPE_TABLE <rva loc_7FF6E343FB03, \
               rva loc_7FF6E343FB4E, \
               rva loc_7FF6E345C0C8, \
               rva loc_7FF6E343FB4E>
C_SCOPE_TABLE <rva loc_7FF6E343FB03, \
               rva loc_7FF6E343FBCA, \
               rva loc_7FF6E345C0F7, 0>
C_SCOPE_TABLE <rva loc_7FF6E343FC4A, \
               rva byte_7FF6E343FC50, \
               rva loc_7FF6E345C0C8, \
               rva loc_7FF6E343FB4E>
C_SCOPE_TABLE <rva loc_7FF6E343FC4A, \
               rva byte_7FF6E343FC50, \
               rva loc_7FF6E345C0F7, 0>
stru_7FF6E346A744 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A760 UNWIND_INFO_HDR <1, 2, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 7>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343F60E, \
               rva loc_7FF6E343F63F, \ ; int `__InternalCxxFrameHandlerWrapper<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)'::`1'::fin$0
               rva ?fin$0@?0???$__InternalCxxFrameHandlerWrapper@V__FrameHandler4@@@@YA?AW4_EXCEPTION_DISPOSITION@@PEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@H1E@Z@4HA,\
               0>
stru_7FF6E346A780 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 7>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A788 UNWIND_INFO_HDR <1, 0, 18h, 0Ah, 0, 0>
UNWIND_CODE <18h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <18h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A7A0 UNWIND_INFO_HDR <1, 1, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <19h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 13> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E343D8C9, \
               rva loc_7FF6E343D9FE, 1, \
               rva loc_7FF6E343DA38>
C_SCOPE_TABLE <rva loc_7FF6E343DA1E, \
               rva loc_7FF6E343DA38, 1, \
               rva loc_7FF6E343DA38>
stru_7FF6E346A7E0 UNWIND_INFO_HDR <1, 1, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <19h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 13> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E343DACA, \
               rva loc_7FF6E343DC01, 1, \
               rva loc_7FF6E343DC3B>
C_SCOPE_TABLE <rva loc_7FF6E343DC21, \
               rva loc_7FF6E343DC3B, 1, \
               rva loc_7FF6E343DC3B>
stru_7FF6E346A820 UNWIND_INFO_HDR <1, 1, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <15h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343DC72, \
               rva loc_7FF6E343DCE8, 1, \
               rva loc_7FF6E343DCFE>
stru_7FF6E346A84C UNWIND_INFO_HDR <1, 1, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <15h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E343DD33, \
               rva loc_7FF6E343DDA9, 1, \
               rva loc_7FF6E343DDBF>
stru_7FF6E346A878 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <19h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346A890 UNWIND_INFO_HDR <1, 0, 1Bh, 0Ah, 0, 0>
UNWIND_CODE <1Bh, 4, 6> ; UWOP_SAVE_NONVOL
dw 16h
UNWIND_CODE <1Bh, 4, 5> ; UWOP_SAVE_NONVOL
dw 15h
UNWIND_CODE <1Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Bh, 2, 15> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A8A8 UNWIND_INFO_HDR <1, 3, 27h, 0Ah, 0, 0>
UNWIND_CODE <19h, 1, 0> ; UWOP_ALLOC_LARGE
dw 25h
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 118h
stru_7FF6E346A8C8 UNWIND_INFO_HDR <1, 3, 2Ah, 0Ah, 0, 0>
UNWIND_CODE <1Ch, 1, 0> ; UWOP_ALLOC_LARGE
dw 31h
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 170h
stru_7FF6E346A8E8 UNWIND_INFO_HDR <1, 0, 1Ah, 0Ah, 0, 0>
UNWIND_CODE <1Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Ah, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <16h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Dh, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346A900 UNWIND_INFO_HDR <1, 0, 21h, 0Bh, 0, 0>
UNWIND_CODE <21h, 4, 3> ; UWOP_SAVE_NONVOL
dw 23h
UNWIND_CODE <21h, 1, 0> ; UWOP_ALLOC_LARGE
dw 18h
UNWIND_CODE <1Ah, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <18h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346A91C UNWIND_INFO_HDR <1, 3, 27h, 0Ah, 0, 0>
UNWIND_CODE <19h, 1, 0> ; UWOP_ALLOC_LARGE
dw 27h
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 128h
align 20h
stru_7FF6E346A940 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
align 20h
stru_7FF6E346A960 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 6>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346A968 UNWIND_INFO_HDR <1, 3, 2Eh, 9, 0, 0>
UNWIND_CODE <1Dh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0C4h
UNWIND_CODE <1Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0C3h
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 0BEh
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 5E0h
stru_7FF6E346A988 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346A99C UNWIND_INFO_HDR <1, 0, 0Dh, 4, 0, 0>
UNWIND_CODE <0Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <0Dh, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346A9A8 UNWIND_INFO_HDR <1, 0, 9, 3, 0, 0>
UNWIND_CODE <9, 8, 6>   ; UWOP_SAVE_XMM128
dw 3
UNWIND_CODE <4, 2, 8>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346A9B4 UNWIND_INFO_HDR <1, 0, 17h, 8, 0, 0>
UNWIND_CODE <17h, 4, 7> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <17h, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346A9C8 UNWIND_INFO_HDR <1, 0, 22h, 0Ah, 0, 0>
UNWIND_CODE <22h, 4, 7> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <22h, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <22h, 4, 5> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <22h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <22h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <1Eh, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346A9E0 UNWIND_INFO_HDR <1, 3, 2Bh, 9, 0, 0>
UNWIND_CODE <1Ah, 1, 0> ; UWOP_ALLOC_LARGE
dw 9Ah
UNWIND_CODE <0Bh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 4C0h
stru_7FF6E346AA00 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <19h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346AA18 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <14h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AA2C UNWIND_INFO_HDR <1, 3, 30h, 0Ah, 0, 0>
UNWIND_CODE <22h, 4, 6> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Eh, 4, 3> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <12h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck_EH
dd rva stru_7FF6E345FBC0
dd 53h
stru_7FF6E346AA50 UnwindMapEntry <-1, \
                rva sub_7FF6E343D1F4>
stru_7FF6E346AA58 IPtoStateMap <rva loc_7FF6E3442BF5, 0>
IPtoStateMap <rva loc_7FF6E3442D1F, -1>
stru_7FF6E346AA68 UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Ah, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346AA74 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <0Fh, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AA84 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Ch, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AAA0 UNWIND_INFO_HDR <1, 0, 5, 2, 0, 0>
UNWIND_CODE <5, 4, 3>   ; UWOP_SAVE_NONVOL
dw 1
stru_7FF6E346AAA8 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <0Fh, 4, 5> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AAB8 UNWIND_INFO_HDR <1, 4, 5, 2, 0, 0>
UNWIND_CODE <5, 4, 3>   ; UWOP_SAVE_NONVOL
dw 6
RUNTIME_FUNCTION <rva sub_7FF6E3443500, \
                  rva loc_7FF6E34435CC, \
                  rva stru_7FF6E346AAA8>
stru_7FF6E346AACC UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva sub_7FF6E3443500, \
                  rva loc_7FF6E34435CC, \
                  rva stru_7FF6E346AAA8>
stru_7FF6E346AADC UNWIND_INFO_HDR <1, 3, 13h, 1, 0, 0>
UNWIND_CODE <4, 2, 6>   ; UWOP_ALLOC_SMALL
align 4
dd rva __GSHandlerCheck
dd 20h
align 10h
stru_7FF6E346AAF0 UNWIND_INFO_HDR <1, 0, 0, 0, 0, 0>
stru_7FF6E346AAF4 UNWIND_INFO_HDR <1, 0, 11h, 2, 0, 0>
UNWIND_CODE <11h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ah, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346AAFC UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <19h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <12h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346AB14 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3443A15, \
               rva loc_7FF6E3443A20, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346AB38 UNWIND_INFO_HDR <1, 3, 31h, 0Dh, 0, 0>
UNWIND_CODE <1Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 1Bh
UNWIND_CODE <1Fh, 4, 5> ; UWOP_SAVE_NONVOL
dw 1Ah
UNWIND_CODE <1Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 19h
UNWIND_CODE <1Fh, 1, 0> ; UWOP_ALLOC_LARGE
dw 12h
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 88h
stru_7FF6E346AB60 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 7> ; UWOP_SAVE_NONVOL
dw 3
UNWIND_CODE <0Ah, 4, 6> ; UWOP_SAVE_NONVOL
dw 2
UNWIND_CODE <5, 4, 3>   ; UWOP_SAVE_NONVOL
dw 1
stru_7FF6E346AB70 UNWIND_INFO_HDR <1, 0, 12h, 6, 0, 0>
UNWIND_CODE <12h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <12h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346AB80 UNWIND_INFO_HDR <1, 0, 10h, 6, 0, 0>
UNWIND_CODE <10h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <10h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <10h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AB90 UNWIND_INFO_HDR <1, 2, 10h, 4, 0, 0>
UNWIND_CODE <10h, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <10h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E34449C9, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E34449D6, \
               rva unknown_libname_89, \
               0>
stru_7FF6E346ABB4 UNWIND_INFO_HDR <1, 0, 0Ch, 2, 0, 0>
UNWIND_CODE <0Ch, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <5, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346ABBC UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3444B42, \
               rva loc_7FF6E3444BAD, \ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0
               rva ?fin$0@?0???$?RV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@V_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@$$QEAV_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@Z@4HA,\
               0>
stru_7FF6E346ABE0 UNWIND_INFO_HDR <1, 2, 12h, 6, 0, 0>
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <12h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3444BE0, \
               rva loc_7FF6E3444C89, \
               rva loc_7FF6E345C247, 0>
stru_7FF6E346AC08 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3444CC2, \
               rva loc_7FF6E3444CCF, \ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0
               rva ?fin$0@?0???$?RV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@V_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@$$QEAV_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@Z@4HA,\
               0>
stru_7FF6E346AC2C UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <0Fh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E3444F98, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E344504A, \
               rva unknown_libname_90, \
               0>
C_SCOPE_TABLE <rva loc_7FF6E3445052, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E344505C, \
               rva unknown_libname_90, \
               0>
stru_7FF6E346AC60 UNWIND_INFO_HDR <1, 2, 14h, 6, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <14h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E344511C, \
               rva loc_7FF6E34451E1, \ ; int `_fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)'::`1'::fin$0
               rva ?fin$0@?0??_fputc_internal@@YAHHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z@4HA,\
               0>
C_SCOPE_TABLE <rva loc_7FF6E34451E9, \
               rva loc_7FF6E344520D, \ ; int `_fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)'::`1'::fin$0
               rva ?fin$0@?0??_fputc_internal@@YAHHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z@4HA,\
               0>
stru_7FF6E346AC98 UNWIND_INFO_HDR <1, 2, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 14> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <19h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E34455BF, \
               rva loc_7FF6E34455D8, \
               rva fread_s$fin$0, 0>
stru_7FF6E346ACC8 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <19h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Fh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Dh, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346ACE0 UNWIND_INFO_HDR <1, 3, 19h, 8, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <19h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler_noexcept
dd 1
db  9Ch
db  56h ; V
db    1
db    0
db 0AFh
db  56h ; V
db    1
db    0
db  14h
db 0C2h
db    2
db    0
db    0
db    0
db    0
db    0
stru_7FF6E346AD0C UNWIND_INFO_HDR <1, 0, 12h, 6, 0, 0>
UNWIND_CODE <12h, 4, 7> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <12h, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346AD1C UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Ch, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AD38 UNWIND_INFO_HDR <1, 0, 1Bh, 2, 0, 0>
UNWIND_CODE <1Bh, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346AD40 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344595A, \
               rva loc_7FF6E3445965, \ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0
               rva ?fin$0@?0???$?RV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@V_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@$$QEAV_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@Z@4HA,\
               0>
stru_7FF6E346AD64 UNWIND_INFO_HDR <1, 0, 10h, 5, 0, 0>
UNWIND_CODE <10h, 1, 0> ; UWOP_ALLOC_LARGE
dw 16h
UNWIND_CODE <4, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346AD74 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3445D6E, \
               rva loc_7FF6E3445D78, \ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0
               rva ?fin$0@?0???$?RV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@V_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@$$QEAV_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@Z@4HA,\
               0>
stru_7FF6E346AD98 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3446110, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E344611C, \
               rva unknown_libname_91, \
               0>
stru_7FF6E346ADBC UNWIND_INFO_HDR <1, 0, 16h, 9, 0, 0>
UNWIND_CODE <16h, 1, 0> ; UWOP_ALLOC_LARGE
dw 44h
UNWIND_CODE <0Fh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Dh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 5>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346ADD4 UNWIND_INFO_HDR <1, 4, 8, 2, 0, 0>
UNWIND_CODE <8, 4, 13>  ; UWOP_SAVE_NONVOL
dw 43h
RUNTIME_FUNCTION <rva sub_7FF6E34461E0, \
                  rva loc_7FF6E3446428, \
                  rva stru_7FF6E346ADBC>
stru_7FF6E346ADE8 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva sub_7FF6E34461E0, \
                  rva loc_7FF6E3446428, \
                  rva stru_7FF6E346ADBC>
stru_7FF6E346ADF8 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <14h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AE0C UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346AE18 UNWIND_INFO_HDR <1, 2, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3446DDE, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E3446DF7, \ ; Microsoft VisualC 64bit universal runtime
               rva unknown_libname_92, \
               0>
stru_7FF6E346AE38 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346AE40 UNWIND_INFO_HDR <1, 2, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3446E25, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E3446E54, \ ; Microsoft VisualC 64bit universal runtime
               rva unknown_libname_93, \
               0>
stru_7FF6E346AE64 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346AE6C UNWIND_INFO_HDR <1, 0, 13h, 8, 0, 0>
UNWIND_CODE <13h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <13h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346AE80 UNWIND_INFO_HDR <1, 2, 0Dh, 1, 0, 0>
UNWIND_CODE <4, 2, 6>   ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler3
dd rva stru_7FF6E3461028
stru_7FF6E346AE90 UNWIND_INFO_HDR <1, 0, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AE9C UNWIND_INFO_HDR <1, 0, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <15h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346AEB0 UNWIND_INFO_HDR <1, 3, 0Fh, 2, 0, 0>
UNWIND_CODE <6, 2, 5>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler3
dd rva stru_7FF6E3461050
stru_7FF6E346AEC0 IPtoStateMap <rva loc_7FF6E3447AA8, -1>
stru_7FF6E346AEC8 UNWIND_INFO_HDR <1, 3, 1Eh, 4, 0, 0>
UNWIND_CODE <1Eh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <11h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ah, 0, 5> ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler3
dd rva stru_7FF6E3461078
align 20h
stru_7FF6E346AEE0 IPtoStateMap <rva loc_7FF6E34479F2, 0>
stru_7FF6E346AEE8 UNWIND_INFO_HDR <1, 1, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 5>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E34478AD, \
               rva loc_7FF6E34478FB, \ ; int `_lambda_6e4b09c48022b2350581041d5f6b0c4c_::operator()(void)'::`1'::filt$0
               rva ?filt$0@?0???R_lambda_6e4b09c48022b2350581041d5f6b0c4c_@@QEBA@XZ@4HA,\
               rva loc_7FF6E3447946>
stru_7FF6E346AF08 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3447871, \
               rva loc_7FF6E344787A, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346AF2C UNWIND_INFO_HDR <1, 0, 11h, 2, 0, 0>
UNWIND_CODE <11h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ah, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346AF34 UNWIND_INFO_HDR <1, 3, 2Dh, 0Ah, 0, 0>
UNWIND_CODE <1Ch, 1, 0> ; UWOP_ALLOC_LARGE
dw 4Dh
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 250h
stru_7FF6E346AF54 UNWIND_INFO_HDR <1, 0, 18h, 5, 0, 0>
UNWIND_CODE <18h, 2, 8> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 5> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 3> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346AF64 UNWIND_INFO_HDR <1, 0, 18h, 0Ah, 0, 0>
UNWIND_CODE <18h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <18h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346AF7C UNWIND_INFO_HDR <1, 3, 30h, 0Bh, 0, 0>
UNWIND_CODE <1Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 71h
UNWIND_CODE <1Fh, 1, 0> ; UWOP_ALLOC_LARGE
dw 66h
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 320h
stru_7FF6E346AFA0 UNWIND_INFO_HDR <1, 3, 29h, 0Bh, 0, 0>
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 4Dh
UNWIND_CODE <17h, 1, 0> ; UWOP_ALLOC_LARGE
dw 42h
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 200h
stru_7FF6E346AFC4 UNWIND_INFO_HDR <1, 0, 7, 1, 0, 0>
UNWIND_CODE <7, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346AFCC UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <0Ah, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346AFD8 UNWIND_INFO_HDR <1, 0, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <15h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346AFEC UNWIND_INFO_HDR <1, 0, 12h, 8, 0, 0>
UNWIND_CODE <12h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <12h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
stru_7FF6E346B000 UNWIND_INFO_HDR <1, 3, 2Ah, 0Bh, 0, 0>
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 1Ch
UNWIND_CODE <1Ch, 1, 0> ; UWOP_ALLOC_LARGE
dw 12h
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 80h
stru_7FF6E346B024 UNWIND_INFO_HDR <1, 2, 14h, 6, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3447D13, \
               rva loc_7FF6E3447D4B, \
               rva loc_7FF6E345C329, 0>
stru_7FF6E346B04C UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3447BD5, \
               rva loc_7FF6E3447CE0, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B070 UNWIND_INFO_HDR <1, 2, 0Ah, 2, 0, 0>
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3447D71, \
               rva loc_7FF6E3447D7A, \ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_e9338f07fe435327d97d4ef86149e64d_,_lambda_2a444430fde8c29194d880d93eed5e8f_ &,_lambda_02db5278e8aef8b5e4976579d73f5304_ &>(_lambda_e9338f07fe435327d97d4ef86149e64d_ &&,_lambda_2a444430fde8c29194d880d93eed5e8f_ &,_lambda_02db5278e8aef8b5e4976579d73f5304_ &)'::`1'::fin$0
               rva ?fin$0@?0???$?RV_lambda_e9338f07fe435327d97d4ef86149e64d_@@AEAV_lambda_2a444430fde8c29194d880d93eed5e8f_@@AEAV_lambda_02db5278e8aef8b5e4976579d73f5304_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_e9338f07fe435327d97d4ef86149e64d_@@AEAV_lambda_2a444430fde8c29194d880d93eed5e8f_@@AEAV_lambda_02db5278e8aef8b5e4976579d73f5304_@@@Z@4HA,\
               0>
stru_7FF6E346B090 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346B098 UNWIND_INFO_HDR <1, 0, 12h, 2, 0, 0>
UNWIND_CODE <12h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346B0A0 UNWIND_INFO_HDR <1, 2, 13h, 1, 0, 0>
UNWIND_CODE <0Bh, 2, 6> ; UWOP_ALLOC_SMALL
align 4
dd rva __CxxFrameHandler3
dd rva stru_7FF6E3461290
stru_7FF6E346B0B0 IPtoStateMap <rva loc_7FF6E344989C, 0>
stru_7FF6E346B0B8 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3449531, \
               rva loc_7FF6E344953B, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B0DC UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344956D, \
               rva loc_7FF6E3449577, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B100 UNWIND_INFO_HDR <1, 3, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
dd rva __C_specific_handler_noexcept
dd 1
db 0A2h
db  9Ah
db    1
db    0
db 0A9h
db  9Ah
db    1
db    0
db    1
db    0
db    0
db    0
db 0A9h
db  9Ah
db    1
db    0
stru_7FF6E346B120 UNWIND_INFO_HDR <1, 0, 1Ch, 0Bh, 0, 0>
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 1Eh
UNWIND_CODE <1Ch, 1, 0> ; UWOP_ALLOC_LARGE
dw 14h
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Fh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Dh, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
align 4
align 20h
stru_7FF6E346B140 UNWIND_INFO_HDR <1, 0, 0, 0, 0, 0>
stru_7FF6E346B144 UNWIND_INFO_HDR <1, 2, 14h, 4, 0, 0>
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <6, 2, 5>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler3
dd rva stru_7FF6E3461028
stru_7FF6E346B158 UNWIND_INFO_HDR <1, 0, 0Ah, 2, 0, 0>
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B160 UNWIND_INFO_HDR <1, 0, 9, 2, 0, 0>
UNWIND_CODE <9, 2, 9>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B168 UNWIND_INFO_HDR <1, 0, 9, 2, 0, 0>
UNWIND_CODE <9, 2, 7>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B170 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344A3A9, \
               rva loc_7FF6E344A3B9, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B194 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344A429, \
               rva loc_7FF6E344A43F, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B1B8 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344A471, \
               rva loc_7FF6E344A4A1, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B1DC UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344A3E9, \
               rva loc_7FF6E344A3F7, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B200 UNWIND_INFO_HDR <1, 3, 24h, 7, 0, 0>
UNWIND_CODE <12h, 8, 6> ; UWOP_SAVE_XMM128
dw 0Dh
UNWIND_CODE <0Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Ch
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 3>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 0C0h
stru_7FF6E346B21C UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 13>  ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B224 UNWIND_INFO_HDR <1, 4, 1Ch, 8, 0, 0>
UNWIND_CODE <1Ch, 4, 15> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 4, 13> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <0Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <5, 4, 5>   ; UWOP_SAVE_NONVOL
dw 0Dh
RUNTIME_FUNCTION <rva sub_7FF6E344AAF0, \
                  rva loc_7FF6E344AAF6, \
                  rva stru_7FF6E346B21C>
stru_7FF6E346B244 UNWIND_INFO_HDR <1, 4, 13h, 4, 0, 0>
UNWIND_CODE <13h, 8, 7> ; UWOP_SAVE_XMM128
dw 2
UNWIND_CODE <8, 4, 3>   ; UWOP_SAVE_NONVOL
dw 11h
RUNTIME_FUNCTION <rva loc_7FF6E344AAF6, \
                  rva loc_7FF6E344AC6F, \
                  rva stru_7FF6E346B224>
stru_7FF6E346B25C UNWIND_INFO_HDR <1, 4, 5, 2, 0, 0>
UNWIND_CODE <5, 8, 6>   ; UWOP_SAVE_XMM128
dw 3
RUNTIME_FUNCTION <rva loc_7FF6E344AC6F, \
                  rva loc_7FF6E344ACA2, \
                  rva stru_7FF6E346B244>
stru_7FF6E346B270 UNWIND_INFO_HDR <1, 4, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 14> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <5, 4, 12>  ; UWOP_SAVE_NONVOL
dw 0Bh
RUNTIME_FUNCTION <rva loc_7FF6E344ACA2, \
                  rva loc_7FF6E344ACEE, \
                  rva stru_7FF6E346B25C>
stru_7FF6E346B288 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva loc_7FF6E344ACA2, \
                  rva loc_7FF6E344ACEE, \
                  rva stru_7FF6E346B25C>
stru_7FF6E346B298 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva loc_7FF6E344AC6F, \
                  rva loc_7FF6E344ACA2, \
                  rva stru_7FF6E346B244>
stru_7FF6E346B2A8 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva loc_7FF6E344AAF6, \
                  rva loc_7FF6E344AC6F, \
                  rva stru_7FF6E346B224>
stru_7FF6E346B2B8 UNWIND_INFO_HDR <1, 4, 0, 2, 0, 0>
UNWIND_CODE <0, 4, 13>  ; UWOP_SAVE_NONVOL
dw 0Ah
RUNTIME_FUNCTION <rva sub_7FF6E344AAF0, \
                  rva loc_7FF6E344AAF6, \
                  rva stru_7FF6E346B21C>
stru_7FF6E346B2CC UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva sub_7FF6E344AAF0, \
                  rva loc_7FF6E344AAF6, \
                  rva stru_7FF6E346B21C>
stru_7FF6E346B2DC UNWIND_INFO_HDR <1, 0, 11h, 2, 0, 0>
UNWIND_CODE <11h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Dh, 0, 3> ; UWOP_PUSH_NONVOL
stru_7FF6E346B2E4 UNWIND_INFO_HDR <1, 0, 1Ch, 8, 0, 0>
UNWIND_CODE <1Ch, 4, 7> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <1Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346B2F8 UNWIND_INFO_HDR <1, 1, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344B39F, \
               rva loc_7FF6E344B3AA, \
               rva loc_7FF6E345C364, \
               rva loc_7FF6E344B3AA>
stru_7FF6E346B318 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B320 UNWIND_INFO_HDR <1, 0, 0Ah, 2, 0, 0>
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B328 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B330 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <0Fh, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B340 UNWIND_INFO_HDR <1, 0, 1Dh, 0Ch, 0, 0>
UNWIND_CODE <1Dh, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Dh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Dh, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <1Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Dh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <19h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <17h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 13> ; UWOP_PUSH_NONVOL
stru_7FF6E346B35C UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <19h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346B374 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <1Ch, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B390 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <14h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B3A4 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 14> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <19h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
stru_7FF6E346B3BC UNWIND_INFO_HDR <1, 0, 18h, 8, 0, 0>
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <18h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 6> ; UWOP_PUSH_NONVOL
stru_7FF6E346B3D0 UNWIND_INFO_HDR <1, 3, 1Eh, 8, 0, 0>
UNWIND_CODE <0Fh, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 5>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 30h
stru_7FF6E346B3EC UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 7>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B3F4 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Ch, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B410 UNWIND_INFO_HDR <1, 0, 9, 2, 0, 0>
UNWIND_CODE <9, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <5, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B418 UNWIND_INFO_HDR <1, 2, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 3>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344CFB2, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E344CFC9, \
               rva unknown_libname_94, \
               0>
stru_7FF6E346B438 UNWIND_INFO_HDR <1, 0, 1Ch, 0Bh, 0, 0>
UNWIND_CODE <1Ch, 4, 7> ; UWOP_SAVE_NONVOL
dw 17h
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 16h
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 15h
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Ch, 1, 0> ; UWOP_ALLOC_LARGE
dw 12h
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346B454 UNWIND_INFO_HDR <1, 0, 14h, 6, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <14h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B464 UNWIND_INFO_HDR <1, 0, 1Ch, 0Ch, 0, 0>
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Ch, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B480 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344D04D, \
               rva loc_7FF6E344D076, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B4A4 UNWIND_INFO_HDR <1, 3, 1Fh, 8, 0, 0>
UNWIND_CODE <1Fh, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <1Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <0Fh, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 6>   ; UWOP_PUSH_NONVOL
dd rva __CxxFrameHandler3
dd rva stru_7FF6E3462520
stru_7FF6E346B4C0 IPtoStateMap <rva loc_7FF6E344DC4D, -1>
stru_7FF6E346B4C8 UNWIND_INFO_HDR <1, 0, 18h, 0Ah, 0, 0>
UNWIND_CODE <18h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <18h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B4E0 UNWIND_INFO_HDR <1, 3, 22h, 9, 0, 0>
UNWIND_CODE <14h, 2, 14> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 60h
stru_7FF6E346B500 UNWIND_INFO_HDR <1, 3, 28h, 8, 0, 0>
UNWIND_CODE <1Ah, 4, 7> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Ah, 4, 6> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <1Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <1Ah, 2, 15> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 70h
stru_7FF6E346B51C UNWIND_INFO_HDR <1, 3, 24h, 9, 0, 0>
UNWIND_CODE <12h, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Ah
UNWIND_CODE <0Bh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 5>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 0C0h
stru_7FF6E346B53C UNWIND_INFO_HDR <1, 3, 2Dh, 0Dh, 5, 4>
UNWIND_CODE <1Fh, 4, 12> ; UWOP_SAVE_NONVOL
dw 15h
UNWIND_CODE <1Bh, 4, 7> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <13h, 4, 3> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <0Fh, 3, 4> ; UWOP_SET_FPREG
UNWIND_CODE <0Ah, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 15>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 68h
stru_7FF6E346B564 UNWIND_INFO_HDR <1, 3, 2Dh, 0Dh, 5, 3>
UNWIND_CODE <1Fh, 4, 7> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Bh, 4, 6> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <13h, 3, 3> ; UWOP_SET_FPREG
UNWIND_CODE <0Eh, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ah, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 58h
stru_7FF6E346B58C UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <0Fh, 2, 13> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B59C UNWIND_INFO_HDR <1, 3, 2Dh, 0Dh, 5, 5>
UNWIND_CODE <1Fh, 4, 7> ; UWOP_SAVE_NONVOL
dw 14h
UNWIND_CODE <1Bh, 4, 6> ; UWOP_SAVE_NONVOL
dw 13h
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <13h, 3, 5> ; UWOP_SET_FPREG
UNWIND_CODE <0Eh, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ah, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 58h
stru_7FF6E346B5C4 UNWIND_INFO_HDR <1, 2, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <0Ah, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344ED72, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E344EDF1, \
               rva unknown_libname_95, \
               0>
stru_7FF6E346B5E8 UNWIND_INFO_HDR <1, 0, 8, 1, 0, 0>
UNWIND_CODE <8, 2, 10>  ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346B5F0 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344EE6D, \
               rva loc_7FF6E344EEB3, \
               rva loc_7FF6E345C3C3, 0>
stru_7FF6E346B614 UNWIND_INFO_HDR <1, 0, 8, 1, 0, 0>
UNWIND_CODE <8, 2, 6>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346B61C UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344F095, \
               rva loc_7FF6E344F0EF, \
               rva loc_7FF6E345C3C3, 0>
stru_7FF6E346B640 UNWIND_INFO_HDR <1, 0, 14h, 9, 0, 0>
UNWIND_CODE <14h, 2, 12> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346B658 UNWIND_INFO_HDR <1, 2, 1Bh, 8, 0, 0>
UNWIND_CODE <1Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Bh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <17h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Fh, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E344FA95, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E344FAD2, \
               rva unknown_libname_96, \
               0>
stru_7FF6E346B684 UNWIND_INFO_HDR <1, 3, 33h, 0Bh, 0, 0>
UNWIND_CODE <25h, 4, 3> ; UWOP_SAVE_NONVOL
dw 22h
UNWIND_CODE <19h, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Ah
UNWIND_CODE <0Eh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck_EH
dd rva stru_7FF6E3462548
dd 0CBh
db    0
db    0
db    0
db    0
stru_7FF6E346B6B0 IPtoStateMap <rva loc_7FF6E344F37F, -1>
stru_7FF6E346B6B8 UNWIND_INFO_HDR <1, 3, 2Dh, 9, 0, 0>
UNWIND_CODE <1Bh, 4, 5> ; UWOP_SAVE_NONVOL
dw 290h
UNWIND_CODE <1Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 28Eh
UNWIND_CODE <1Bh, 1, 0> ; UWOP_ALLOC_LARGE
dw 28Ah
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd rva loc_7FF6E3431440
stru_7FF6E346B6D8 UNWIND_INFO_HDR <1, 3, 31h, 0Bh, 0, 0>
UNWIND_CODE <1Fh, 4, 5> ; UWOP_SAVE_NONVOL
dw 296h
UNWIND_CODE <1Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 294h
UNWIND_CODE <1Fh, 1, 0> ; UWOP_ALLOC_LARGE
dw 28Eh
UNWIND_CODE <12h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd rva loc_7FF6E3431460
stru_7FF6E346B6FC UNWIND_INFO_HDR <1, 3, 2Fh, 0Bh, 0, 0>
UNWIND_CODE <1Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 212h
UNWIND_CODE <1Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 20Ah
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd rva loc_7FF6E343103C+4
stru_7FF6E346B720 UNWIND_INFO_HDR <1, 0, 1Eh, 0Ah, 0, 0>
UNWIND_CODE <1Eh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Eh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <1Ah, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <18h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346B738 UNWIND_INFO_HDR <1, 3, 10h, 4, 0, 0>
UNWIND_CODE <10h, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <10h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler_noexcept
dd 1
db 0D0h
db 0FFh
db    1
db    0
db 0DEh
db 0FFh
db    1
db    0
db  14h
db 0C2h
db    2
db    0
db    0
db    0
db    0
db    0
stru_7FF6E346B75C UNWIND_INFO_HDR <1, 0, 17h, 8, 0, 0>
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <17h, 4, 5> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <17h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <13h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B770 UNWIND_INFO_HDR <1, 2, 1Ch, 0Ah, 0, 0>
UNWIND_CODE <1Ch, 4, 12> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <1Ch, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <1Ch, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <1Ch, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3450D6D, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E3450DA4, \
               rva unknown_libname_97, \
               0>
stru_7FF6E346B7A0 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 16h
UNWIND_CODE <19h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Fh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Dh, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346B7B8 UNWIND_INFO_HDR <1, 0, 14h, 0Ah, 0, 0>
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <14h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B7D0 UNWIND_INFO_HDR <1, 0, 14h, 0Ah, 0, 0>
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <14h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B7E8 UNWIND_INFO_HDR <1, 3, 1Bh, 8, 0, 0>
UNWIND_CODE <1Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Bh, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <17h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <13h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Fh, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler_noexcept
dd 1
db 0E6h
db  12h
db    2
db    0
db  23h ; #
db  13h
db    2
db    0
db 0DDh
db 0C3h
db    2
db    0
db    0
db    0
db    0
db    0
stru_7FF6E346B814 UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B820 UNWIND_INFO_HDR <1, 2, 17h, 0Ah, 0, 0>
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <17h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <13h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Fh, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Dh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 2
C_SCOPE_TABLE <rva loc_7FF6E3451869, \
               rva loc_7FF6E345191E, \
               rva raise$fin$0, 0>
C_SCOPE_TABLE <rva loc_7FF6E345197F, \
               rva algn_7FF6E3451996+1, \
               rva raise$fin$0, 0>
stru_7FF6E346B860 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E34516BE, \
               rva loc_7FF6E34516D7, \
               rva loc_7FF6E345C1FA, 0>
stru_7FF6E346B884 UNWIND_INFO_HDR <1, 0, 6, 3, 0, 0>
UNWIND_CODE <6, 4, 3>   ; UWOP_SAVE_NONVOL
dw 2
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346B890 UNWIND_INFO_HDR <1, 0, 18h, 0Ah, 0, 0>
UNWIND_CODE <18h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <18h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B8A8 UNWIND_INFO_HDR <1, 0, 17h, 0Ah, 0, 0>
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <17h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
stru_7FF6E346B8C0 UNWIND_INFO_HDR <1, 0, 19h, 0Ah, 0, 0>
UNWIND_CODE <19h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <19h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <19h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <19h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <19h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <15h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346B8D8 UNWIND_INFO_HDR <1, 3, 2Bh, 9, 0, 0>
UNWIND_CODE <1Ah, 1, 0> ; UWOP_ALLOC_LARGE
dw 68h
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 330h
stru_7FF6E346B8F8 UNWIND_INFO_HDR <1, 3, 2Bh, 7, 0, 0>
UNWIND_CODE <1Ah, 4, 7> ; UWOP_SAVE_NONVOL
dw 58h
UNWIND_CODE <1Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 57h
UNWIND_CODE <1Ah, 1, 0> ; UWOP_ALLOC_LARGE
dw 54h
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 290h
stru_7FF6E346B914 UNWIND_INFO_HDR <1, 3, 25h, 0Ah, 0, 0>
UNWIND_CODE <16h, 4, 5> ; UWOP_SAVE_NONVOL
dw 11h
UNWIND_CODE <16h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <16h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <12h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 38h
stru_7FF6E346B934 UNWIND_INFO_HDR <1, 3, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <0Fh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler_noexcept
dd 1
db  35h ; 5
db  30h ; 0
db    2
db    0
db  84h
db  30h ; 0
db    2
db    0
db  46h ; F
db 0C4h
db    2
db    0
db    0
db    0
db    0
db    0
stru_7FF6E346B95C UNWIND_INFO_HDR <1, 0, 25h, 9, 0, 0>
UNWIND_CODE <25h, 4, 6> ; UWOP_SAVE_NONVOL
dw 53h
UNWIND_CODE <25h, 4, 3> ; UWOP_SAVE_NONVOL
dw 52h
UNWIND_CODE <25h, 1, 0> ; UWOP_ALLOC_LARGE
dw 4Eh
UNWIND_CODE <17h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 5> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346B974 UNWIND_INFO_HDR <1, 3, 2Bh, 7, 0, 0>
UNWIND_CODE <1Ah, 4, 7> ; UWOP_SAVE_NONVOL
dw 0F4h
UNWIND_CODE <1Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 0F3h
UNWIND_CODE <1Ah, 1, 0> ; UWOP_ALLOC_LARGE
dw 0F0h
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 770h
stru_7FF6E346B990 UNWIND_INFO_HDR <1, 2, 0Fh, 4, 0, 0>
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <0Fh, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E34528C1, \
               rva loc_7FF6E3452A60, \
               rva loc_7FF6E345C42C, 0>
stru_7FF6E346B9B4 UNWIND_INFO_HDR <1, 0, 0Fh, 6, 0, 0>
UNWIND_CODE <0Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <0Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <0Fh, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346B9C4 UNWIND_INFO_HDR <1, 0, 18h, 0Ah, 0, 0>
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <18h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346B9DC UNWIND_INFO_HDR <1, 0, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346B9F0 UNWIND_INFO_HDR <1, 0, 14h, 6, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346BA00 UNWIND_INFO_HDR <1, 2, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <15h, 4, 6> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 2, 5> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 15> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3453B7F, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E3453BC6, \
               rva unknown_libname_94, \
               0>
stru_7FF6E346BA2C UNWIND_INFO_HDR <1, 0, 1Fh, 0Ch, 0, 0>
UNWIND_CODE <1Fh, 4, 7> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <1Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <1Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Fh, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <18h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <16h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <14h, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346BA48 UNWIND_INFO_HDR <1, 0, 0Eh, 2, 0, 0>
UNWIND_CODE <0Eh, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Ah, 0, 3> ; UWOP_PUSH_NONVOL
stru_7FF6E346BA50 UNWIND_INFO_HDR <1, 0, 18h, 6, 0, 0>
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <18h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <14h, 0, 6> ; UWOP_PUSH_NONVOL
stru_7FF6E346BA60 UNWIND_INFO_HDR <1, 2, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E3455119, \
               rva loc_7FF6E345512B, \
               rva _free_locale$fin$0, \
               0>
stru_7FF6E346BA84 UNWIND_INFO_HDR <1, 3, 2Ah, 9, 0, 0>
UNWIND_CODE <18h, 4, 7> ; UWOP_SAVE_NONVOL
dw 1Dh
UNWIND_CODE <18h, 4, 5> ; UWOP_SAVE_NONVOL
dw 1Ch
UNWIND_CODE <18h, 4, 3> ; UWOP_SAVE_NONVOL
dw 1Bh
UNWIND_CODE <18h, 1, 0> ; UWOP_ALLOC_LARGE
dw 18h
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 0B0h
stru_7FF6E346BAA4 UNWIND_INFO_HDR <1, 3, 24h, 7, 0, 0>
UNWIND_CODE <12h, 4, 6> ; UWOP_SAVE_NONVOL
dw 2Ah
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 29h
UNWIND_CODE <12h, 1, 0> ; UWOP_ALLOC_LARGE
dw 26h
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 120h
stru_7FF6E346BAC0 UNWIND_INFO_HDR <1, 3, 1Fh, 5, 0, 0>
UNWIND_CODE <0Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 21h
UNWIND_CODE <0Dh, 1, 0> ; UWOP_ALLOC_LARGE
dw 1Eh
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 0E0h
stru_7FF6E346BAD8 UNWIND_INFO_HDR <1, 3, 19h, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Bh
UNWIND_CODE <0Ah, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 38h
stru_7FF6E346BAEC UNWIND_INFO_HDR <1, 3, 20h, 8, 0, 0>
UNWIND_CODE <12h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 30h
stru_7FF6E346BB08 UNWIND_INFO_HDR <1, 3, 27h, 9, 0, 0>
UNWIND_CODE <15h, 4, 5> ; UWOP_SAVE_NONVOL
dw 2Ah
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 29h
UNWIND_CODE <15h, 1, 0> ; UWOP_ALLOC_LARGE
dw 24h
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 7> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 6> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 110h
stru_7FF6E346BB28 UNWIND_INFO_HDR <1, 3, 24h, 7, 0, 0>
UNWIND_CODE <12h, 4, 6> ; UWOP_SAVE_NONVOL
dw 28h
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 27h
UNWIND_CODE <12h, 1, 0> ; UWOP_ALLOC_LARGE
dw 24h
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 110h
stru_7FF6E346BB44 UNWIND_INFO_HDR <1, 3, 29h, 9, 0, 0>
UNWIND_CODE <17h, 4, 6> ; UWOP_SAVE_NONVOL
dw 29h
UNWIND_CODE <17h, 4, 5> ; UWOP_SAVE_NONVOL
dw 28h
UNWIND_CODE <17h, 4, 3> ; UWOP_SAVE_NONVOL
dw 27h
UNWIND_CODE <17h, 1, 0> ; UWOP_ALLOC_LARGE
dw 24h
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 110h
stru_7FF6E346BB64 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346BB78 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346BB80 UNWIND_INFO_HDR <1, 0, 6, 3, 0, 0>
UNWIND_CODE <6, 4, 3>   ; UWOP_SAVE_NONVOL
dw 4
UNWIND_CODE <6, 0, 6>   ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346BB8C UNWIND_INFO_HDR <1, 4, 5, 2, 0, 0>
UNWIND_CODE <5, 4, 7>   ; UWOP_SAVE_NONVOL
dw 3
RUNTIME_FUNCTION <rva sub_7FF6E3456980, \
                  rva loc_7FF6E3456988, \
                  rva stru_7FF6E346BB80>
stru_7FF6E346BBA0 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva sub_7FF6E3456980, \
                  rva loc_7FF6E3456988, \
                  rva stru_7FF6E346BB80>
stru_7FF6E346BBB0 UNWIND_INFO_HDR <1, 3, 30h, 0Bh, 0, 0>
UNWIND_CODE <1Fh, 8, 6> ; UWOP_SAVE_XMM128
dw 7Eh
UNWIND_CODE <1Bh, 1, 0> ; UWOP_ALLOC_LARGE
dw 0FEh
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 7D0h
stru_7FF6E346BBD4 UNWIND_INFO_HDR <1, 3, 23h, 0Ah, 0, 0>
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 12h
UNWIND_CODE <14h, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 13> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ah, 0, 12> ; UWOP_PUSH_NONVOL
UNWIND_CODE <8, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 38h
stru_7FF6E346BBF4 UNWIND_INFO_HDR <1, 0, 12h, 4, 0, 0>
UNWIND_CODE <12h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <12h, 2, 9> ; UWOP_ALLOC_SMALL
UNWIND_CODE <0Bh, 0, 5> ; UWOP_PUSH_NONVOL
stru_7FF6E346BC00 UNWIND_INFO_HDR <1, 3, 21h, 6, 0, 0>
UNWIND_CODE <0Fh, 1, 0> ; UWOP_ALLOC_LARGE
dw 89h
UNWIND_CODE <8, 0, 15>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <6, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 12>  ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 410h
stru_7FF6E346BC18 UNWIND_INFO_HDR <1, 4, 29h, 8, 0, 0>
UNWIND_CODE <29h, 4, 7> ; UWOP_SAVE_NONVOL
dw 85h
UNWIND_CODE <1Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 86h
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 87h
UNWIND_CODE <8, 4, 3>   ; UWOP_SAVE_NONVOL
dw 88h
RUNTIME_FUNCTION <rva sub_7FF6E34585C0, \
                  rva loc_7FF6E3458652, \
                  rva stru_7FF6E346BC00>
stru_7FF6E346BC38 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva sub_7FF6E34585C0, \
                  rva loc_7FF6E3458652, \
                  rva stru_7FF6E346BC00>
stru_7FF6E346BC48 UNWIND_INFO_HDR <1, 0, 0Bh, 5, 0, 0>
UNWIND_CODE <0Bh, 4, 6> ; UWOP_SAVE_NONVOL
dw 4
UNWIND_CODE <0Bh, 4, 3> ; UWOP_SAVE_NONVOL
dw 2
UNWIND_CODE <0Bh, 0, 7> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346BC58 UNWIND_INFO_HDR <1, 0, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <0Ah, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
stru_7FF6E346BC64 UNWIND_INFO_HDR <1, 0, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 10h
UNWIND_CODE <14h, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <14h, 2, 11> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 7> ; UWOP_PUSH_NONVOL
stru_7FF6E346BC78 UNWIND_INFO_HDR <1, 0, 1Fh, 0Bh, 0, 0>
UNWIND_CODE <1Fh, 4, 7> ; UWOP_SAVE_NONVOL
dw 1Bh
UNWIND_CODE <1Fh, 4, 6> ; UWOP_SAVE_NONVOL
dw 19h
UNWIND_CODE <1Fh, 4, 3> ; UWOP_SAVE_NONVOL
dw 18h
UNWIND_CODE <1Fh, 1, 0> ; UWOP_ALLOC_LARGE
dw 14h
UNWIND_CODE <14h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <12h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <10h, 0, 5> ; UWOP_PUSH_NONVOL
align 4
stru_7FF6E346BC94 UNWIND_INFO_HDR <1, 0, 1Dh, 0Ch, 0, 0>
UNWIND_CODE <1Dh, 4, 7> ; UWOP_SAVE_NONVOL
dw 0Fh
UNWIND_CODE <1Dh, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Eh
UNWIND_CODE <1Dh, 4, 5> ; UWOP_SAVE_NONVOL
dw 0Dh
UNWIND_CODE <1Dh, 4, 3> ; UWOP_SAVE_NONVOL
dw 0Ch
UNWIND_CODE <1Dh, 2, 7> ; UWOP_ALLOC_SMALL
UNWIND_CODE <19h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <17h, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <15h, 0, 12> ; UWOP_PUSH_NONVOL
stru_7FF6E346BCB0 UNWIND_INFO_HDR <1, 0, 4, 1, 0, 0>
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346BCB8 UNWIND_INFO_HDR <1, 0, 0Ah, 3, 0, 0>
UNWIND_CODE <0Ah, 8, 6> ; UWOP_SAVE_XMM128
dw 2
UNWIND_CODE <4, 2, 10>  ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346BCC4 UNWIND_INFO_HDR <2, 0, 4, 3, 0, 0>
UNWIND_CODE <1, 6, 0>   ; UWOP_EPILOG
UNWIND_CODE <2, 6, 0>   ; UWOP_EPILOG
UNWIND_CODE <4, 2, 4>   ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346BCD0 UNWIND_INFO_HDR <1, 3, 27h, 0Bh, 5, 5>
UNWIND_CODE <19h, 3, 5> ; UWOP_SET_FPREG
UNWIND_CODE <14h, 1, 0> ; UWOP_ALLOC_LARGE
dw 13h
UNWIND_CODE <0Dh, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Bh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <9, 0, 13>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <7, 0, 12>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <5, 0, 7>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
align 4
dd rva __GSHandlerCheck
dd 80h
stru_7FF6E346BCF4 UNWIND_INFO_HDR <1, 1, 14h, 8, 0, 0>
UNWIND_CODE <14h, 4, 6> ; UWOP_SAVE_NONVOL
dw 0Ah
UNWIND_CODE <14h, 4, 3> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <14h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <10h, 0, 15> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Eh, 0, 14> ; UWOP_PUSH_NONVOL
UNWIND_CODE <0Ch, 0, 12> ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E345A5EB, \ ; Microsoft VisualC 64bit universal runtime
               rva loc_7FF6E345A5F4, \
               rva unknown_libname_98, \
               rva loc_7FF6E345A5F4>
stru_7FF6E346BD20 UNWIND_INFO_HDR <1, 0, 15h, 8, 0, 0>
UNWIND_CODE <15h, 4, 7> ; UWOP_SAVE_NONVOL
dw 9
UNWIND_CODE <15h, 4, 5> ; UWOP_SAVE_NONVOL
dw 8
UNWIND_CODE <15h, 4, 3> ; UWOP_SAVE_NONVOL
dw 7
UNWIND_CODE <15h, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <11h, 0, 14> ; UWOP_PUSH_NONVOL
stru_7FF6E346BD34 UNWIND_INFO_HDR <1, 4, 5, 2, 0, 0>
UNWIND_CODE <5, 4, 6>   ; UWOP_SAVE_NONVOL
dw 6
RUNTIME_FUNCTION <rva sub_7FF6E345A6E0, \
                  rva loc_7FF6E345A70C, \
                  rva stru_7FF6E346BD20>
stru_7FF6E346BD48 UNWIND_INFO_HDR <1, 4, 0, 0, 0, 0>
RUNTIME_FUNCTION <rva sub_7FF6E345A6E0, \
                  rva loc_7FF6E345A70C, \
                  rva stru_7FF6E346BD20>
stru_7FF6E346BD58 UNWIND_INFO_HDR <1, 3, 28h, 8, 0, 0>
UNWIND_CODE <1Ah, 8, 6> ; UWOP_SAVE_XMM128
dw 0Fh
UNWIND_CODE <12h, 1, 0> ; UWOP_ALLOC_LARGE
dw 21h
UNWIND_CODE <6, 0, 14>  ; UWOP_PUSH_NONVOL
UNWIND_CODE <4, 0, 6>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <3, 0, 3>   ; UWOP_PUSH_NONVOL
UNWIND_CODE <2, 0, 5>   ; UWOP_PUSH_NONVOL
dd rva __GSHandlerCheck
dd 0E0h
stru_7FF6E346BD74 UNWIND_INFO_HDR <1, 0, 6, 2, 0, 0>
UNWIND_CODE <6, 2, 1>   ; UWOP_ALLOC_SMALL
UNWIND_CODE <2, 0, 3>   ; UWOP_PUSH_NONVOL
stru_7FF6E346BD7C UNWIND_INFO_HDR <1, 0, 0Bh, 3, 0, 0>
UNWIND_CODE <0Bh, 8, 6> ; UWOP_SAVE_XMM128
dw 5
UNWIND_CODE <7, 2, 12>  ; UWOP_ALLOC_SMALL
align 4
stru_7FF6E346BD88 UNWIND_INFO_HDR <1, 1, 0Ah, 4, 0, 0>
UNWIND_CODE <0Ah, 4, 3> ; UWOP_SAVE_NONVOL
dw 6
UNWIND_CODE <0Ah, 2, 3> ; UWOP_ALLOC_SMALL
UNWIND_CODE <6, 0, 7>   ; UWOP_PUSH_NONVOL
dd rva __C_specific_handler
dd 1
C_SCOPE_TABLE <rva loc_7FF6E345AB2D, \ ; Microsoft VisualC v14 64bit runtime
               rva loc_7FF6E345AB60, \ ; int `try_walk(_PROCESS_HEAP_ENTRY * const)'::`1'::filt$0
               rva ?filt$0@?0??try_walk@@YAHQEAU_PROCESS_HEAP_ENTRY@@@Z@4HA,\
               rva loc_7FF6E345AB60>
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db 0DCh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db  80h
db  38h ; 8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo pThrowInfo
pThrowInfo _ThrowInfo <0, 4000h, 0, 3BDF8h>
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  18h
db 0BEh
db    3
db    0
db  40h ; @
db 0BEh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A8h
db 0DCh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db  10h
db  37h ; 7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db 0D8h
db 0DCh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db 0D0h
db  36h ; 6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db 0F0h
db  3Ah ; :
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  28h ; (
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
db  40h ; @
db  3Ch ; <
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  50h ; P
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
db  30h ; 0
db  36h ; 6
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346BEE0
stru_7FF6E346BEE0 _ThrowInfo <0, 4020h, 0, 3BF00h>
align 20h
db    2
db    0
db    0
db    0
db  18h
db 0BFh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  78h ; x
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db  90h
db  37h ; 7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346BF40
stru_7FF6E346BF40 _ThrowInfo <0, 40D0h, 0, 3BF60h>
align 20h
db    5
db    0
db    0
db    0
db  90h
db 0BFh
db    3
db    0
db  90h
db 0BEh
db    3
db    0
db 0B8h
db 0BEh
db    3
db    0
db  68h ; h
db 0BEh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A0h
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
db 0E0h
db  39h ; 9
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346BFB8
stru_7FF6E346BFB8 _ThrowInfo <0, 4020h, 0, 3BFD8h>
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  40h ; @
db 0BEh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0D0h
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db  10h
db  89h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346C018
stru_7FF6E346C018 _ThrowInfo <0, 8A18h, 0, 3C038h>
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  58h ; X
db 0C0h
db    3
db    0
db 0F0h
db 0BFh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0F8h
db 0DDh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db  8Ch
db  88h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346C080
stru_7FF6E346C080 _ThrowInfo <0, 8A18h, 0, 3C0A0h>
align 20h
db    3
db    0
db    0
db    0
db 0C0h
db 0C0h
db    3
db    0
db 0F0h
db 0BFh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db 0DEh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db  4Ch ; L
db  89h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346C0E8
stru_7FF6E346C0E8 _ThrowInfo <0, 4020h, 0, 3C108h>
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  68h ; h
db 0BEh
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; const _ThrowInfo stru_7FF6E346C120
stru_7FF6E346C120 _ThrowInfo <0, 8A18h, 0, 3C140h>
align 20h
db    2
db    0
db    0
db    0
db  58h ; X
db 0C1h
db    3
db    0
db 0B0h
db 0BDh
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  48h ; H
db 0DEh
db    3
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db 0BCh
db 0F7h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
__IMPORT_DESCRIPTOR_KERNEL32 dd rva off_7FF6E346C1A8 ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aKernel32Dll     ; DLL Name
dd rva WideCharToMultiByte ; Import Address Table
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
;
; Import names for KERNEL32.dll
;
off_7FF6E346C1A8 dq rva word_7FF6E346C458
dq rva word_7FF6E346C46E
dq rva word_7FF6E346C486
dq rva word_7FF6E346C49E
dq rva word_7FF6E346C4BC
dq rva word_7FF6E346C4D4
dq rva word_7FF6E346C4E4
dq rva word_7FF6E346C4F4
dq rva word_7FF6E346C50A
dq rva word_7FF6E346C51A
dq rva word_7FF6E346C52C
dq rva word_7FF6E346C538
dq rva word_7FF6E346C54C
dq rva word_7FF6E346C566
dq rva word_7FF6E346C57A
dq rva word_7FF6E346C596
dq rva word_7FF6E346C5B4
dq rva word_7FF6E346C5C8
dq rva word_7FF6E346C5DC
dq rva word_7FF6E346C5F8
dq rva word_7FF6E346C612
dq rva word_7FF6E346C628
dq rva word_7FF6E346C63E
dq rva word_7FF6E346C658
dq rva word_7FF6E346C66E
dq rva word_7FF6E346C682
dq rva word_7FF6E346C694
dq rva word_7FF6E346CA64
dq rva word_7FF6E346C6B6
dq rva word_7FF6E346C6CA
dq rva word_7FF6E346C6DC
dq rva word_7FF6E346C6EA
dq rva word_7FF6E346C6FA
dq rva word_7FF6E346C70A
dq rva word_7FF6E346C732
dq rva word_7FF6E346C73E
dq rva word_7FF6E346C74C
dq rva word_7FF6E346C75A
dq rva word_7FF6E346C764
dq rva word_7FF6E346C772
dq rva word_7FF6E346C784
dq rva word_7FF6E346C796
dq rva word_7FF6E346C7A6
dq rva word_7FF6E346C7B2
dq rva word_7FF6E346C7C8
dq rva word_7FF6E346C7D6
dq rva word_7FF6E346C7EC
dq rva word_7FF6E346C7FE
dq rva word_7FF6E346C810
dq rva word_7FF6E346C81C
dq rva word_7FF6E346C828
dq rva word_7FF6E346C836
dq rva word_7FF6E346C842
dq rva word_7FF6E346C850
dq rva word_7FF6E346C85E
dq rva word_7FF6E346C868
dq rva word_7FF6E346C87A
dq rva word_7FF6E346C88C
dq rva word_7FF6E346C89C
dq rva word_7FF6E346C8AE
dq rva word_7FF6E346C8BE
dq rva word_7FF6E346C8D4
dq rva word_7FF6E346C8EA
dq rva word_7FF6E346C8F8
dq rva word_7FF6E346C90C
dq rva word_7FF6E346C922
dq rva word_7FF6E346C934
dq rva word_7FF6E346C940
dq rva word_7FF6E346C950
dq rva word_7FF6E346C964
dq rva word_7FF6E346C974
dq rva word_7FF6E346C982
dq rva word_7FF6E346C98E
dq rva word_7FF6E346C9A2
dq rva word_7FF6E346C9B2
dq rva word_7FF6E346C9C4
dq rva word_7FF6E346C9CE
dq rva word_7FF6E346C9DA
dq rva word_7FF6E346C9F4
dq rva word_7FF6E346CA0E
dq rva word_7FF6E346CA28
dq rva word_7FF6E346CA38
dq rva word_7FF6E346CA4A
dq rva word_7FF6E346CA56
dq rva word_7FF6E346CA74
dq 0
word_7FF6E346C458 dw 644h
db 'WideCharToMultiByte',0
word_7FF6E346C46E dw 151h
db 'EnterCriticalSection',0
align 2
word_7FF6E346C486 dw 3EAh
db 'LeaveCriticalSection',0
align 2
word_7FF6E346C49E dw 391h
db 'InitializeCriticalSectionEx',0
word_7FF6E346C4BC dw 12Bh
db 'DeleteCriticalSection',0
word_7FF6E346C4D4 dw 14Dh
db 'EncodePointer',0
word_7FF6E346C4E4 dw 124h
db 'DecodePointer',0
word_7FF6E346C4F4 dw 41Dh
db 'MultiByteToWideChar',0
word_7FF6E346C50A dw 3DDh
db 'LCMapStringEx',0
word_7FF6E346C51A dw 302h
db 'GetStringTypeW',0
align 4
word_7FF6E346C52C dw 1E4h
db 'GetCPInfo',0
word_7FF6E346C538 dw 501h
db 'RtlCaptureContext',0
word_7FF6E346C54C dw 509h
db 'RtlLookupFunctionEntry',0
align 2
word_7FF6E346C566 dw 510h
db 'RtlVirtualUnwind',0
align 2
word_7FF6E346C57A dw 5F3h
db 'UnhandledExceptionFilter',0
align 2
word_7FF6E346C596 dw 5B0h
db 'SetUnhandledExceptionFilter',0
word_7FF6E346C5B4 dw 23Bh
db 'GetCurrentProcess',0
word_7FF6E346C5C8 dw 5D0h
db 'TerminateProcess',0
align 4
word_7FF6E346C5DC dw 3B2h
db 'IsProcessorFeaturePresent',0
word_7FF6E346C5F8 dw 47Bh
db 'QueryPerformanceCounter',0
word_7FF6E346C612 dw 23Ch
db 'GetCurrentProcessId',0
word_7FF6E346C628 dw 240h
db 'GetCurrentThreadId',0
align 2
word_7FF6E346C63E dw 314h
db 'GetSystemTimeAsFileTime',0
word_7FF6E346C658 dw 394h
db 'InitializeSListHead',0
word_7FF6E346C66E dw 3AAh
db 'IsDebuggerPresent',0
word_7FF6E346C682 dw 2FBh
db 'GetStartupInfoW',0
word_7FF6E346C694 dw 29Fh
db 'GetModuleHandleW',0
align 8
aKernel32Dll db 'KERNEL32.dll',0
align 2
word_7FF6E346C6B6 dw 50Bh
db 'RtlPcToFileHeader',0
word_7FF6E346C6CA dw 492h
db 'RaiseException',0
align 4
word_7FF6E346C6DC dw 50Fh
db 'RtlUnwindEx',0
word_7FF6E346C6EA dw 287h
db 'GetLastError',0
align 2
word_7FF6E346C6FA dw 570h
db 'SetLastError',0
align 2
word_7FF6E346C70A dw 390h
db 'InitializeCriticalSectionAndSpinCou'
db 'nt',0
word_7FF6E346C732 dw 5E2h
db 'TlsAlloc',0
align 2
word_7FF6E346C73E dw 5E4h
db 'TlsGetValue',0
word_7FF6E346C74C dw 5E6h
db 'TlsSetValue',0
word_7FF6E346C75A dw 5E3h
db 'TlsFree',0
word_7FF6E346C764 dw 1CEh
db 'FreeLibrary',0
word_7FF6E346C772 dw 2D7h
db 'GetProcAddress',0
align 4
word_7FF6E346C784 dw 3F0h
db 'LoadLibraryExW',0
align 2
word_7FF6E346C796 dw 2FDh
db 'GetStdHandle',0
align 2
word_7FF6E346C7A6 dw 658h
db 'WriteFile',0
word_7FF6E346C7B2 dw 29Bh
db 'GetModuleFileNameW',0
align 8
word_7FF6E346C7C8 dw 180h
db 'ExitProcess',0
word_7FF6E346C7D6 dw 29Eh
db 'GetModuleHandleExW',0
align 4
word_7FF6E346C7EC dw 1F9h
db 'GetCommandLineA',0
word_7FF6E346C7FE dw 1FAh
db 'GetCommandLineW',0
word_7FF6E346C810 dw 376h
db 'HeapAlloc',0
word_7FF6E346C81C dw 37Ah
db 'HeapFree',0
align 8
word_7FF6E346C828 dw 274h
db 'GetFileType',0
word_7FF6E346C836 dw 1BCh
db 'FlsAlloc',0
align 2
word_7FF6E346C842 dw 1BEh
db 'FlsGetValue',0
word_7FF6E346C850 dw 1C0h
db 'FlsSetValue',0
word_7FF6E346C85E dw 1BDh
db 'FlsFree',0
word_7FF6E346C868 dw 612h
db 'VirtualProtect',0
align 2
word_7FF6E346C87A dw 0B2h
db 'CompareStringW',0
align 4
word_7FF6E346C88C dw 3DEh
db 'LCMapStringW',0
align 4
word_7FF6E346C89C dw 28Bh
db 'GetLocaleInfoW',0
align 2
word_7FF6E346C8AE dw 3BAh
db 'IsValidLocale',0
word_7FF6E346C8BE dw 343h
db 'GetUserDefaultLCID',0
align 4
word_7FF6E346C8D4 dw 175h
db 'EnumSystemLocalesW',0
align 2
word_7FF6E346C8EA dw 9Ch
db 'CloseHandle',0
word_7FF6E346C8F8 dw 1C2h
db 'FlushFileBuffers',0
align 4
word_7FF6E346C90C dw 223h
db 'GetConsoleOutputCP',0
align 2
word_7FF6E346C922 dw 21Fh
db 'GetConsoleMode',0
align 4
word_7FF6E346C934 dw 4A3h
db 'ReadFile',0
align 20h
word_7FF6E346C940 dw 272h
db 'GetFileSizeEx',0
word_7FF6E346C950 dw 561h
db 'SetFilePointerEx',0
align 4
word_7FF6E346C964 dw 4A0h
db 'ReadConsoleW',0
align 4
word_7FF6E346C974 dw 37Dh
db 'HeapReAlloc',0
word_7FF6E346C982 dw 197h
db 'FindClose',0
word_7FF6E346C98E dw 19Dh
db 'FindFirstFileExW',0
align 2
word_7FF6E346C9A2 dw 1AEh
db 'FindNextFileW',0
word_7FF6E346C9B2 dw 3B8h
db 'IsValidCodePage',0
word_7FF6E346C9C4 dw 1D5h
db 'GetACP',0
align 2
word_7FF6E346C9CE dw 2C0h
db 'GetOEMCP',0
align 2
word_7FF6E346C9DA dw 25Ch
db 'GetEnvironmentStringsW',0
align 4
word_7FF6E346C9F4 dw 1CDh
db 'FreeEnvironmentStringsW',0
word_7FF6E346CA0E dw 552h
db 'SetEnvironmentVariableW',0
word_7FF6E346CA28 dw 58Bh
db 'SetStdHandle',0
align 8
word_7FF6E346CA38 dw 2DEh
db 'GetProcessHeap',0
align 2
word_7FF6E346CA4A dw 37Fh
db 'HeapSize',0
align 2
word_7FF6E346CA56 dw 0E2h
db 'CreateFileW',0
word_7FF6E346CA64 dw 657h
db 'WriteConsoleW',0
word_7FF6E346CA74 dw 50Eh
db 'RtlUnwind',0
align 800h
_rdata ends

; Section 3. (virtual address 0003D000)
; Virtual size                  : 000029A0 (  10656.)
; Section size in file          : 00001400 (   5120.)
; Offset to raw data for section: 0003B800
; Flags C0000040: Data Readable Writable
; Alignment     : default

; Segment type: Pure data
; Segment permissions: Read/Write
_data segment para public 'DATA' use64
assume cs:_data
;org 7FF6E346D000h
off_7FF6E346D000 dq offset off_7FF6E345D4C8
db    5
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_7FF6E346D010 dd 0FFFFFFFFh
align 8
qword_7FF6E346D018 dq 0Ah
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; uintptr_t _security_cookie
__security_cookie dq 2B992DDFA232h
align 40h
qword_7FF6E346D080 dq 0FFFFD466D2205DCDh
db  75h ; u
db  98h
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
qword_7FF6E346D090 dq 0FFFFFFFFFFFFFFFFh
dword_7FF6E346D098 dd 1
dword_7FF6E346D09C dd 2
qword_7FF6E346D0A0 dq 80000h
qword_7FF6E346D0A8 dq 2000000h
dword_7FF6E346D0B0 dd 1
align 20h
; DWORD dwTlsIndex
dwTlsIndex dd 0FFFFFFFFh
align 10h
off_7FF6E346D0D0 dq offset unk_7FF6E346D170
off_7FF6E346D0D8 dq offset unk_7FF6E346EEF0
off_7FF6E346D0E0 dq offset unk_7FF6E346EEF0
off_7FF6E346D0E8 dq offset unk_7FF6E346EEF0
off_7FF6E346D0F0 dq offset unk_7FF6E346EEF0
off_7FF6E346D0F8 dq offset unk_7FF6E346EEF0
off_7FF6E346D100 dq offset unk_7FF6E346EEF0
off_7FF6E346D108 dq offset unk_7FF6E346EEF0
off_7FF6E346D110 dq offset unk_7FF6E346EEF0
off_7FF6E346D118 dq offset unk_7FF6E346EEF0
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
off_7FF6E346D128 dq offset unk_7FF6E346D174
off_7FF6E346D130 dq offset unk_7FF6E346EEF4
off_7FF6E346D138 dq offset unk_7FF6E346EEF4
off_7FF6E346D140 dq offset unk_7FF6E346EEF4
off_7FF6E346D148 dq offset unk_7FF6E346EEF4
off_7FF6E346D150 dq offset unk_7FF6E346EEF4
off_7FF6E346D158 dq offset unk_7FF6E346EEF4
off_7FF6E346D160 dq offset unk_7FF6E346EEF4
off_7FF6E346D168 dq offset off_7FF6E346D0D0
unk_7FF6E346D170 db  2Eh ; .
db    0
db    0
db    0
unk_7FF6E346D174 db  2Eh ; .
db    0
db    0
db    0
off_7FF6E346D178 dq offset asc_7FF6E345FD00 ; "         (((((                  H"
off_7FF6E346D180 dq offset unk_7FF6E3460202
unk_7FF6E346D188 db  0Ch
db    0
db    0
db    0
unk_7FF6E346D18C db    8
db    0
db    0
db    0
unk_7FF6E346D190 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db  20h
db    0
db    0
unk_7FF6E346D1A8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db  20h
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db  20h
db    0
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_7FF6E346D298 db 2
align 20h
; void *Buf2
Buf2 dq offset asc_7FF6E3460204 ; "        (((((                  H"
align 10h
; DWORD dwFlsIndex
dwFlsIndex dd 0FFFFFFFFh
align 20h
off_7FF6E346D2C0 dq offset asc_7FF6E345FD00 ; "         (((((                  H"
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E346D428
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E346D428
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E346D428
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E346D428
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E346D428
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E346D0D0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset unk_7FF6E345FF80
dq offset unk_7FF6E3460100
dq offset off_7FF6E34613C0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
off_7FF6E346D418 dq offset off_7FF6E346D2C0 ; "         (((((                  H"
off_7FF6E346D420 dq offset unk_7FF6E346D730
unk_7FF6E346D428 db  43h ; C
db    0
db    0
db    0
dword_7FF6E346D42C dd 1
byte_7FF6E346D430 db 1
align 20h
unk_7FF6E346D440 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  80h
db    0
db  0Ah
db  0Ah
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_7FF6E346D488 dd 0FFFFFFFEh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    2
db    3
db    3
db    3
db    3
db    3
db    3
db    3
db    3
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346D590 db  50h ; P
db  53h ; S
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346D5D0 db  50h ; P
db  44h ; D
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
aPst:
text "UTF-16LE", 'PST',0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
aPdt:
text "UTF-16LE", 'PDT',0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
off_7FF6E346D710 dq offset unk_7FF6E346D590
dq offset unk_7FF6E346D5D0
off_7FF6E346D720 dq offset aPst ; "PST"
dq offset aPdt          ; "PDT"
unk_7FF6E346D730 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346D748 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346D849 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346D960 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346DA70 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346DB70 db    1
db    2
db    4
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346DB80 db 0A4h
db    3
db    0
db    0
db  60h ; `
db  82h
db  79h ; y
db  82h
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0A6h
db 0DFh
db    0
db    0
db    0
db    0
db    0
db    0
db 0A1h
db 0A5h
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db  9Fh
db 0E0h
db 0FCh
db    0
db    0
db    0
db    0
db  40h ; @
db  7Eh ; ~
db  80h
db 0FCh
db    0
db    0
db    0
db    0
db 0A8h
db    3
db    0
db    0
db 0C1h
db 0A3h
db 0DAh
db 0A3h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db 0B5h
db    3
db    0
db    0
db 0C1h
db 0A3h
db 0DAh
db 0A3h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db 0B6h
db    3
db    0
db    0
db 0CFh
db 0A2h
db 0E4h
db 0A2h
db  1Ah
db    0
db 0E5h
db 0A2h
db 0E8h
db 0A2h
db  5Bh ; [
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  7Eh ; ~
db 0A1h
db 0FEh
db    0
db    0
db    0
db    0
db  51h ; Q
db    5
db    0
db    0
db  51h ; Q
db 0DAh
db  5Eh ; ^
db 0DAh
db  20h
db    0
db  5Fh ; _
db 0DAh
db  6Ah ; j
db 0DAh
db  32h ; 2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0D3h
db 0D8h
db 0DEh
db 0E0h
db 0F9h
db    0
db    0
db  31h ; 1
db  7Eh ; ~
db  81h
db 0FEh
db    0
db    0
db    0
db    0
; HANDLE hObject
hObject dq 0FFFFFFFFFFFFFFFEh
byte_7FF6E346DC78 db 1
align 20h
dq offset off_7FF6E345E9E8
align 10h
aAvexceptionStd db '.?AVexception@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  62h ; b
db  61h ; a
db  64h ; d
db  5Fh ; _
db  61h ; a
db  72h ; r
db  72h ; r
db  61h ; a
db  79h ; y
db  5Fh ; _
db  6Eh ; n
db  65h ; e
db  77h ; w
db  5Fh ; _
db  6Ch ; l
db  65h ; e
db  6Eh ; n
db  67h ; g
db  74h ; t
db  68h ; h
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  62h ; b
db  61h ; a
db  64h ; d
db  5Fh ; _
db  61h ; a
db  6Ch ; l
db  6Ch ; l
db  6Fh ; o
db  63h ; c
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
align 10h
aAvruntimeError db '.?AVruntime_error@std@@',0
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  73h ; s
db  79h ; y
db  73h ; s
db  74h ; t
db  65h ; e
db  6Dh ; m
db  5Fh ; _
db  65h ; e
db  72h ; r
db  72h ; r
db  6Fh ; o
db  72h ; r
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
dq offset off_7FF6E345E9E8
align 20h
aAvSystemErrorS db '.?AV_System_error@std@@',0
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  62h ; b
db  61h ; a
db  64h ; d
db  5Fh ; _
db  63h ; c
db  61h ; a
db  73h ; s
db  74h ; t
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
align 10h
aAvfailureIosBa db '.?AVfailure@ios_base@std@@',0
align 10h
dq offset off_7FF6E345E9E8
align 20h
aAvlogicErrorSt db '.?AVlogic_error@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  6Ch ; l
db  65h ; e
db  6Eh ; n
db  67h ; g
db  74h ; t
db  68h ; h
db  5Fh ; _
db  65h ; e
db  72h ; r
db  72h ; r
db  6Fh ; o
db  72h ; r
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
dq offset off_7FF6E345E9E8
align 10h
aAvoutOfRangeSt db '.?AVout_of_range@std@@',0
align 8
dq offset off_7FF6E345E9E8
unk_7FF6E346DE50 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  62h ; b
db  61h ; a
db  64h ; d
db  5Fh ; _
db  65h ; e
db  78h ; x
db  63h ; c
db  65h ; e
db  70h ; p
db  74h ; t
db  69h ; i
db  6Fh ; o
db  6Eh ; n
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
dq offset off_7FF6E345E9E8
align 20h
aAverrorCategor db '.?AVerror_category@std@@',0
align 20h
dq offset off_7FF6E345E9E8
align 10h
aAvIostreamErro db '.?AV_Iostream_error_category2@std@@'
db 0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  5Fh ; _
db  46h ; F
db  61h ; a
db  63h ; c
db  65h ; e
db  74h ; t
db  5Fh ; _
db  62h ; b
db  61h ; a
db  73h ; s
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
align 10h
aAvfacetLocaleS db '.?AVfacet@locale@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  55h ; U
db  5Fh ; _
db  43h ; C
db  72h ; r
db  74h ; t
db  5Fh ; _
db  6Eh ; n
db  65h ; e
db  77h ; w
db  5Fh ; _
db  64h ; d
db  65h ; e
db  6Ch ; l
db  65h ; e
db  74h ; t
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  55h ; U
db  63h ; c
db  74h ; t
db  79h ; y
db  70h ; p
db  65h ; e
db  5Fh ; _
db  62h ; b
db  61h ; a
db  73h ; s
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
align 10h
aAvCtypeDStd db '.?AV?$ctype@D@std@@',0
align 10h
dq offset off_7FF6E345E9E8
align 20h
aAvNumPutDvOstr db '.?AV?$num_put@DV?$ostreambuf_iterat'
db 'or@DU?$char_traits@D@std@@@std@@@st'
db 'd@@',0
align 10h
dq offset off_7FF6E345E9E8
align 20h
aAvNumpunctDStd db '.?AV?$numpunct@D@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  5Fh ; _
db  4Ch ; L
db  6Fh ; o
db  63h ; c
db  69h ; i
db  6Dh ; m
db  70h ; p
db  40h ; @
db  6Ch ; l
db  6Fh ; o
db  63h ; c
db  61h ; a
db  6Ch ; l
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  69h ; i
db  6Fh ; o
db  73h ; s
db  5Fh ; _
db  62h ; b
db  61h ; a
db  73h ; s
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
align 20h
aAvIosbHStd db '.?AV?$_Iosb@H@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  3Fh ; ?
db  24h ; $
db  62h ; b
db  61h ; a
db  73h ; s
db  69h ; i
db  63h ; c
db  5Fh ; _
db  69h ; i
db  6Fh ; o
db  73h ; s
db  40h ; @
db  44h ; D
db  55h ; U
db  3Fh ; ?
db  24h ; $
db  63h ; c
db  68h ; h
db  61h ; a
db  72h ; r
db  5Fh ; _
db  74h ; t
db  72h ; r
db  61h ; a
db  69h ; i
db  74h ; t
db  73h ; s
db  40h ; @
db  44h ; D
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dq offset off_7FF6E345E9E8
align 10h
aAvBasicStreamb db '.?AV?$basic_streambuf@DU?$char_trai'
db 'ts@D@std@@@std@@',0
align 10h
dq offset off_7FF6E345E9E8
align 20h
aAvBasicOstream db '.?AV?$basic_ostream@DU?$char_traits'
db '@D@std@@@std@@',0
align 20h
dq offset off_7FF6E345E9E8
align 10h
aAvBasicFilebuf db '.?AV?$basic_filebuf@DU?$char_traits'
db '@D@std@@@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  63h ; c
db  6Fh ; o
db  64h ; d
db  65h ; e
db  63h ; c
db  76h ; v
db  74h ; t
db  5Fh ; _
db  62h ; b
db  61h ; a
db  73h ; s
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
dq offset off_7FF6E345E9E8
align 20h
aAvCodecvtDduMb db '.?AV?$codecvt@DDU_Mbstatet@@@std@@',0
align 8
dq offset off_7FF6E345E9E8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  74h ; t
db  79h ; y
db  70h ; p
db  65h ; e
db  5Fh ; _
db  69h ; i
db  6Eh ; n
db  66h ; f
db  6Fh ; o
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346E270 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346E278 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_7FF6E346E280 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E346E288 dq 0
qword_7FF6E346E290 dq 0
qword_7FF6E346E298 dq 0
; std::_Init_locks unk_7FF6E346E2A0
unk_7FF6E346E2A0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection _RTL_CRITICAL_SECTION <0>
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_7FF6E346E3F0 dd 0
align 8
qword_7FF6E346E3F8 dq 0
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346E408 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346E428 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; void *qword_7FF6E346E438
qword_7FF6E346E438 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346E448 dq ?
byte_7FF6E346E450 db ?
align 20h
; std::_Init_locks unk_7FF6E346E460
unk_7FF6E346E460 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346E470 dq ?
align 20h
; std::ios_base qword_7FF6E346E480
qword_7FF6E346E480 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346E4E0 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346E578 dq ?
qword_7FF6E346E580 dq ?
qword_7FF6E346E588 dq ?
align 20h
qword_7FF6E346E5A0 dq ?
qword_7FF6E346E5A8 dq ?
qword_7FF6E346E5B0 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; std::_Init_locks unk_7FF6E346E5E0
unk_7FF6E346E5E0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346E5F0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346E650 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346E6A0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_7FF6E346E7A0 dd ?
align 8
qword_7FF6E346E7A8 dq ?
byte_7FF6E346E7B0 db ?
byte_7FF6E346E7B1 db ?
align 8
; _onexit_table_t stru_7FF6E346E7B8
stru_7FF6E346E7B8 _onexit_table_t <?>
; _onexit_table_t stru_7FF6E346E7D0
stru_7FF6E346E7D0 _onexit_table_t <?>
dword_7FF6E346E7E8 dd ?
dword_7FF6E346E7EC dd ?
dword_7FF6E346E7F0 dd ?
dword_7FF6E346E7F4 dd ?
align 20h
qword_7FF6E346E800 dq ?
dword_7FF6E346E808 dd ?
align 10h
unk_7FF6E346E810 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; struct _CONTEXT ContextRecord
ContextRecord _CONTEXT <?>
unk_7FF6E346ED60 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346ED70 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_7FF6E346ED78 dd ?
align 20h
qword_7FF6E346ED80 dq ?
qword_7FF6E346ED88 dq ?
unk_7FF6E346ED90 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_7FF6E346EE08 dd ?
align 10h
unk_7FF6E346EE10 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_7FF6E346EE38 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346EEA8 dq ?
align 20h
qword_7FF6E346EEC0 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346EEE8 dq ?
unk_7FF6E346EEF0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346EEF4 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346EF00 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346EFA0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_7FF6E346F158 dd ?
align 20h
dword_7FF6E346F160 dd ?
align 8
; void *Block
Block dq ?
dword_7FF6E346F170 dd ?
align 8
qword_7FF6E346F178 dq ?
dword_7FF6E346F180 dd ?
align 8
qword_7FF6E346F188 dq ?
aCUsersKiennd19 db 4Eh dup(?)
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; void *qword_7FF6E346F298
qword_7FF6E346F298 dq ?
qword_7FF6E346F2A0 dq ?
; void *qword_7FF6E346F2A8
qword_7FF6E346F2A8 dq ?
; void *qword_7FF6E346F2B0
qword_7FF6E346F2B0 dq ?
dword_7FF6E346F2B8 dd ?
align 20h
qword_7FF6E346F2C0 dq ?
byte_7FF6E346F2C8 db ?
align 10h
qword_7FF6E346F2D0 dq ?
dword_7FF6E346F2D8 dd ?
align 20h
; void *qword_7FF6E346F2E0
qword_7FF6E346F2E0 dq ?
; void *qword_7FF6E346F2E8
qword_7FF6E346F2E8 dq ?
qword_7FF6E346F2F0 dq ?
qword_7FF6E346F2F8 dq ?
dword_7FF6E346F300 dd ?
dword_7FF6E346F304 dd ?
unk_7FF6E346F308 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; _onexit_table_t stru_7FF6E346F310
stru_7FF6E346F310 _onexit_table_t <?>
; _onexit_table_t Table
Table _onexit_table_t <?>
byte_7FF6E346F340 db ?
align 8
qword_7FF6E346F348 dq ?
qword_7FF6E346F350 dq ?
unk_7FF6E346F358 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346F360 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346F368 dq ?
; void *qword_7FF6E346F370
qword_7FF6E346F370 dq ?
; void *qword_7FF6E346F378
qword_7FF6E346F378 dq ?
qword_7FF6E346F380 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_7FF6E346F780 dd ?
align 10h
qword_7FF6E346F790 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
qword_7FF6E346F848 dq ?
qword_7FF6E346F850 dq ?
qword_7FF6E346F858 dq ?
qword_7FF6E346F860 dq ?
qword_7FF6E346F868 dq ?
dword_7FF6E346F870 dd ?
dword_7FF6E346F874 dd ?
dword_7FF6E346F878 dd ?
align 20h
qword_7FF6E346F880 dq ?
qword_7FF6E346F888 dq ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; void *qword_7FF6E346F950
qword_7FF6E346F950 dq ?
; void *qword_7FF6E346F958
qword_7FF6E346F958 dq ?
; struct __crt_multibyte_data *qword_7FF6E346F960
qword_7FF6E346F960 dq ?
dword_7FF6E346F968 dd ?
byte_7FF6E346F96C db ?
align 10h
dword_7FF6E346F970 dd ?
align 8
; HANDLE hHeap
hHeap dq ?
dword_7FF6E346F980 dd ?
dword_7FF6E346F984 dd ?
dword_7FF6E346F988 dd ?
align 10h
unk_7FF6E346F990 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_7FF6E346F998 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
_data ends

; Section 4. (virtual address 00040000)
; Virtual size                  : 00002A00 (  10752.)
; Section size in file          : 00002A00 (  10752.)
; Offset to raw data for section: 0003CC00
; Flags 40000040: Data Readable
; Alignment     : default

; Segment type: Pure data
; Segment permissions: Read
_pdata segment para public 'DATA' use64
assume cs:_pdata
;org 7FF6E3470000h
ExceptionDir RUNTIME_FUNCTION <rva sub_7FF6E3431000, \
                  rva algn_7FF6E3431018,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3431020, \
                  rva sub_7FF6E3431038, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3431038, \ ; std::`dynamic initializer for 'classic_locale''(void)
                  rva ??__Eclassic_locale@std@@YAXXZ,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3431070, \ ; std::`dynamic initializer for 'fout''(void)
                  rva ??__Efout@std@@YAXXZ,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ??__Efout@std@@YAXXZ,\ ; std::`dynamic initializer for 'fout''(void)
                  rva sub_7FF6E34310F0, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E3431138, \
                  rva sub_7FF6E3431158, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3431158, \
                  rva sub_7FF6E3431178, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva main, \
                  rva algn_7FF6E34311DB,\
                  rva stru_7FF6E3469DC4>
RUNTIME_FUNCTION <rva sub_7FF6E34311E0, \
                  rva algn_7FF6E343120F,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3431210, \
                  rva algn_7FF6E3431241,\
                  rva stru_7FF6E3469DCC>
RUNTIME_FUNCTION <rva ??$?0PEAV_Facet_base@std@@@?$_Unique_ptr_base@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z,\ ; std::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>::_Unique_ptr_base<std::_Facet_base,std::default_delete<std::_Facet_base>>(std::_Facet_base *)
                  rva sub_7FF6E3431280, \
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E3431280, \
                  rva algn_7FF6E34312B4,\
                  rva stru_7FF6E3469DCC>
RUNTIME_FUNCTION <rva sub_7FF6E34312C0, \
                  rva algn_7FF6E34315B3,\
                  rva stru_7FF6E3469E88>
RUNTIME_FUNCTION <rva sub_7FF6E34315D0, \
                  rva algn_7FF6E343160B,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ??$_Allocate_at_least_helper@V?$allocator@D@std@@@std@@YAPEADAEAV?$allocator@D@0@AEA_K@Z,\ ; std::_Allocate_at_least_helper<std::allocator<char>>(std::allocator<char> &,unsigned __int64 &)
                  rva algn_7FF6E3431635,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3431640, \
                  rva algn_7FF6E343169B,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E34316A0, \
                  rva algn_7FF6E3431727,\
                  rva stru_7FF6E3469D10>
RUNTIME_FUNCTION <rva ??$_Bit_cast@_KT_Addr_storage@error_category@std@@$0A@@std@@YA_KAEBT_Addr_storage@error_category@0@@Z,\ ; std::_Bit_cast<unsigned __int64,std::error_category::_Addr_storage,0>(std::error_category::_Addr_storage const &)
                  rva algn_7FF6E343174E,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva sub_7FF6E3431750, \
                  rva algn_7FF6E34318D4,\
                  rva stru_7FF6E3469F48>
RUNTIME_FUNCTION <rva sub_7FF6E34318E0, \
                  rva algn_7FF6E3431A42,\
                  rva stru_7FF6E3469F50>
RUNTIME_FUNCTION <rva ??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z,\ ; std::string::_Construct<0,char>(char,unsigned __int64)
                  rva algn_7FF6E3431BD5,\
                  rva stru_7FF6E3469FA8>
RUNTIME_FUNCTION <rva sub_7FF6E3431BE0, \
                  rva algn_7FF6E3431C24,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E3431C40, \
                  rva algn_7FF6E3431C7E,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva unknown_libname_3,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3431D27,\
                  rva stru_7FF6E3469F58>
RUNTIME_FUNCTION <rva sub_7FF6E3431D30, \
                  rva algn_7FF6E34324A5,\
                  rva stru_7FF6E3469F68>
RUNTIME_FUNCTION <rva ??$_Get_size_of_n@$00@std@@YA_K_K@Z,\ ; std::_Get_size_of_n<1>(unsigned __int64)
                  rva algn_7FF6E34324C7,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva ??$_Getvals@D@?$numpunct@D@std@@IEAAXDPEBUlconv@@U_Cvtvec@@@Z,\ ; std::numpunct<char>::_Getvals<char>(char,lconv const *,_Cvtvec)
                  rva algn_7FF6E343253F,\
                  rva stru_7FF6E3469FC0>
RUNTIME_FUNCTION <rva sub_7FF6E3432570, \
                  rva algn_7FF6E343260D,\
                  rva stru_7FF6E3469FB8>
RUNTIME_FUNCTION <rva sub_7FF6E3432610, \
                  rva algn_7FF6E343262B,\
                  rva stru_7FF6E3469FB0>
RUNTIME_FUNCTION <rva sub_7FF6E3432630, \
                  rva algn_7FF6E343264E,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3432650, \
                  rva algn_7FF6E3432812,\
                  rva stru_7FF6E3469F98>
RUNTIME_FUNCTION <rva sub_7FF6E3432820, \
                  rva algn_7FF6E3432A03,\
                  rva stru_7FF6E3469FA0>
RUNTIME_FUNCTION <rva sub_7FF6E3432A10, \ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_4,\
                  rva stru_7FF6E3469F98>
RUNTIME_FUNCTION <rva unknown_libname_4,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3432C03,\
                  rva stru_7FF6E3469DBC>
RUNTIME_FUNCTION <rva sub_7FF6E3432C10, \
                  rva algn_7FF6E3432C45,\
                  rva stru_7FF6E3469F60>
RUNTIME_FUNCTION <rva unknown_libname_5,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3432C97,\
                  rva stru_7FF6E3469DBC>
RUNTIME_FUNCTION <rva unknown_libname_6,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3432CE7,\
                  rva stru_7FF6E3469DBC>
RUNTIME_FUNCTION <rva sub_7FF6E3432CF0, \
                  rva algn_7FF6E3432DEF,\
                  rva stru_7FF6E3469DA0>
RUNTIME_FUNCTION <rva sub_7FF6E3432DF0, \
                  rva algn_7FF6E3432EEF,\
                  rva stru_7FF6E3469DA0>
RUNTIME_FUNCTION <rva sub_7FF6E3432EF0, \
                  rva algn_7FF6E3432FEF,\
                  rva stru_7FF6E3469DA0>
RUNTIME_FUNCTION <rva sub_7FF6E3432FF0, \
                  rva algn_7FF6E343302A,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433080, \
                  rva algn_7FF6E34330E1,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva ??4?$shared_ptr@V__ExceptionPtr@@@std@@QEAAAEAV01@$$QEAV01@@Z,\ ; std::shared_ptr<__ExceptionPtr>::operator=(std::shared_ptr<__ExceptionPtr> &&)
                  rva algn_7FF6E3433156,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E3433160, \
                  rva sub_7FF6E34331B0, \
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E34331B0, \
                  rva algn_7FF6E34331F5,\
                  rva stru_7FF6E3469CE8>
RUNTIME_FUNCTION <rva sub_7FF6E3433200, \
                  rva algn_7FF6E3433231,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3433240, \
                  rva algn_7FF6E3433285,\
                  rva stru_7FF6E3469CE8>
RUNTIME_FUNCTION <rva unknown_libname_7,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E34332DB,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva unknown_libname_8,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E343332B,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3433330, \
                  rva algn_7FF6E3433386,\
                  rva stru_7FF6E3469D84>
RUNTIME_FUNCTION <rva unknown_libname_9,\ ; Microsoft VisualC v14 64bit runtime
                  rva sub_7FF6E34333E0, \
                  rva stru_7FF6E3469CD8>
RUNTIME_FUNCTION <rva sub_7FF6E3433420, \
                  rva algn_7FF6E34334D5,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E34334E0, \
                  rva algn_7FF6E343354F,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E3433550, \
                  rva algn_7FF6E3433629,\
                  rva stru_7FF6E3469D30>
RUNTIME_FUNCTION <rva sub_7FF6E3433630, \
                  rva algn_7FF6E3433683,\
                  rva stru_7FF6E3469D44>
RUNTIME_FUNCTION <rva ??0bad_alloc@std@@AEAA@QEBD@Z,\ ; std::bad_alloc::bad_alloc(char const * const)
                  rva algn_7FF6E34336CC,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E34336D0, \
                  rva algn_7FF6E3433706,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3433710, \
                  rva algn_7FF6E3433746,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ??0bad_array_new_length@std@@QEAA@XZ,\ ; std::bad_array_new_length::bad_array_new_length(void)
                  rva algn_7FF6E3433783,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433790, \
                  rva algn_7FF6E34337C6,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E34337D0, \
                  rva algn_7FF6E3433809,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433810, \
                  rva algn_7FF6E3433846,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ??0exception@std@@QEAA@AEBV01@@Z,\ ; std::exception::exception(std::exception const &)
                  rva algn_7FF6E34338D9,\
                  rva stru_7FF6E3469C80>
RUNTIME_FUNCTION <rva ??0exception@std@@QEAA@QEBD@Z,\ ; std::exception::exception(char const * const)
                  rva algn_7FF6E3433944,\
                  rva stru_7FF6E3469C70>
RUNTIME_FUNCTION <rva ??0exception@std@@QEAA@QEBDH@Z,\ ; std::exception::exception(char const * const,int)
                  rva algn_7FF6E3433999,\
                  rva stru_7FF6E3469C78>
RUNTIME_FUNCTION <rva ??0facet@locale@std@@IEAA@_K@Z,\ ; std::locale::facet::facet(unsigned __int64)
                  rva algn_7FF6E34339DD,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E34339E0, \
                  rva algn_7FF6E3433A16,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z,\ ; std::ios_base::failure::failure(char const *,std::error_code const &)
                  rva algn_7FF6E3433A78,\
                  rva stru_7FF6E3469DA8>
RUNTIME_FUNCTION <rva sub_7FF6E3433AA0, \
                  rva algn_7FF6E3433AE3,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3433AF0, \
                  rva algn_7FF6E3433B26,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z,\ ; std::runtime_error::runtime_error(std::string const &)
                  rva algn_7FF6E3433B6E,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3433B70, \
                  rva algn_7FF6E3433C3D,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E3433C40, \
                  rva algn_7FF6E3433C76,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z,\ ; std::system_error::system_error(std::error_code,char const *)
                  rva algn_7FF6E3433D1D,\
                  rva stru_7FF6E3469D50>
RUNTIME_FUNCTION <rva sub_7FF6E3433D20, \
                  rva algn_7FF6E3433D3C,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433D40, \
                  rva algn_7FF6E3433D5C,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433D60, \
                  rva algn_7FF6E3433D87,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433D90, \
                  rva algn_7FF6E3433DA9,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433DB0, \
                  rva algn_7FF6E3433DD7,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433DE0, \
                  rva algn_7FF6E3433E13,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ??1ios_base@std@@UEAA@XZ,\ ; std::ios_base::~ios_base(void)
                  rva algn_7FF6E3433E48,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433E50, \
                  rva algn_7FF6E3433E83,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433E90, \
                  rva algn_7FF6E3433EC7,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433EF0, \
                  rva algn_7FF6E3433F09,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433F10, \
                  rva algn_7FF6E3433F9D,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3433FA0, \
                  rva algn_7FF6E3433FF8,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3434000, \
                  rva algn_7FF6E3434019,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva unknown_libname_63,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3434039,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ??1ios_base@std@@UEAA@XZ_0,\ ; std::ios_base::~ios_base(void)
                  rva algn_7FF6E3434068,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ??1exception@std@@UEAA@XZ,\ ; std::exception::~exception(void)
                  rva algn_7FF6E343409F,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ??1ios_base@std@@UEAA@XZ_1,\ ; std::ios_base::~ios_base(void)
                  rva algn_7FF6E34340C8,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34340D0, \
                  rva algn_7FF6E34340E9,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34340F0, \
                  rva algn_7FF6E3434153,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3434160, \
                  rva algn_7FF6E34341B1,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E34341C0, \
                  rva algn_7FF6E34341D9,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34341F0, \
                  rva algn_7FF6E343426E,\
                  rva stru_7FF6E3469CC0>
RUNTIME_FUNCTION <rva sub_7FF6E3434270, \
                  rva algn_7FF6E34342CB,\
                  rva stru_7FF6E3469F40>
RUNTIME_FUNCTION <rva sub_7FF6E34342D0, \
                  rva algn_7FF6E34344E5,\
                  rva stru_7FF6E3469E14>
RUNTIME_FUNCTION <rva ??8error_category@std@@QEBA_NAEBV01@@Z,\ ; std::error_category::operator==(std::error_category const &)
                  rva algn_7FF6E3434548,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva ??8std@@YA_NAEBVerror_condition@0@0@Z,\ ; std::operator==(std::error_condition const &,std::error_condition const &)
                  rva algn_7FF6E34345CA,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E34345D0, \
                  rva algn_7FF6E34345F5,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3434600, \
                  rva algn_7FF6E3434661,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3434680, \
                  rva algn_7FF6E3434702,\
                  rva stru_7FF6E3469F90>
RUNTIME_FUNCTION <rva sub_7FF6E3434710, \
                  rva algn_7FF6E34347B5,\
                  rva stru_7FF6E3469F90>
RUNTIME_FUNCTION <rva sub_7FF6E34347C0, \
                  rva algn_7FF6E3434843,\
                  rva stru_7FF6E3469F90>
RUNTIME_FUNCTION <rva sub_7FF6E3434850, \
                  rva algn_7FF6E3434899,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E34348A0, \
                  rva algn_7FF6E34348DC,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E34348E0, \
                  rva algn_7FF6E343491C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434920, \
                  rva algn_7FF6E343495C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434960, \
                  rva algn_7FF6E343499C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E34349A0, \
                  rva algn_7FF6E34349DC,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E34349E0, \
                  rva algn_7FF6E3434A1C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434A20, \
                  rva algn_7FF6E3434A5C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434A60, \
                  rva algn_7FF6E3434A9C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434AA0, \
                  rva algn_7FF6E3434ADC,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434AE0, \
                  rva algn_7FF6E3434B1C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434B20, \
                  rva algn_7FF6E3434B5C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434B60, \
                  rva algn_7FF6E3434B9C,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434BA0, \
                  rva algn_7FF6E3434BDC,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3434BE0, \
                  rva algn_7FF6E3434C7A,\
                  rva stru_7FF6E3469CC0>
RUNTIME_FUNCTION <rva sub_7FF6E3434C80, \
                  rva algn_7FF6E3434C98,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva unknown_libname_13,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3434CE7,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3434CF0, \
                  rva algn_7FF6E3434D23,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z,\ ; std::string::_Calculate_growth(unsigned __int64,unsigned __int64,unsigned __int64)
                  rva algn_7FF6E3434DC2,\
                  rva stru_7FF6E3469CE8>
RUNTIME_FUNCTION <rva sub_7FF6E3434DD0, \
                  rva algn_7FF6E3434DF9,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3434E00, \
                  rva algn_7FF6E3434E75,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3434E80, \
                  rva algn_7FF6E3434EB3,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3434EF0, \
                  rva algn_7FF6E3434F36,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva unknown_libname_14,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E34350AF,\
                  rva stru_7FF6E3469F18>
RUNTIME_FUNCTION <rva sub_7FF6E34350B0, \
                  rva algn_7FF6E34350CB,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34350D0, \
                  rva algn_7FF6E3435198,\
                  rva stru_7FF6E3469D8C>
RUNTIME_FUNCTION <rva sub_7FF6E34351A0, \
                  rva algn_7FF6E3435268,\
                  rva stru_7FF6E3469D8C>
RUNTIME_FUNCTION <rva sub_7FF6E3435270, \
                  rva algn_7FF6E343533B,\
                  rva stru_7FF6E3469D8C>
RUNTIME_FUNCTION <rva ?_Getctype@_Locinfo@std@@QEBA?AU_Ctypevec@@XZ,\ ; std::_Locinfo::_Getctype(void)
                  rva algn_7FF6E3435392,\
                  rva stru_7FF6E3469D64>
RUNTIME_FUNCTION <rva ?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ,\ ; std::_Locinfo::_Getcvt(void)
                  rva algn_7FF6E343541A,\
                  rva stru_7FF6E3469D70>
RUNTIME_FUNCTION <rva ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z,\ ; std::locale::_Getfacet(unsigned __int64)
                  rva algn_7FF6E34354C7,\
                  rva stru_7FF6E3469CC0>
RUNTIME_FUNCTION <rva sub_7FF6E34354E0, \
                  rva algn_7FF6E34354F3,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva unknown_libname_15,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3435696,\
                  rva stru_7FF6E3469F18>
RUNTIME_FUNCTION <rva ?_Init@?$ctype@D@std@@IEAAXAEBV_Locinfo@2@@Z,\ ; std::ctype<char>::_Init(std::_Locinfo const &)
                  rva algn_7FF6E34356F9,\
                  rva stru_7FF6E3469D94>
RUNTIME_FUNCTION <rva sub_7FF6E3435700, \
                  rva algn_7FF6E34358D2,\
                  rva stru_7FF6E3469F7C>
RUNTIME_FUNCTION <rva sub_7FF6E34358E0, \
                  rva algn_7FF6E3435F4A,\
                  rva stru_7FF6E3469F20>
RUNTIME_FUNCTION <rva ?_Large_mode_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ,\ ; std::_String_val<std::_Simple_types<char>>::_Large_mode_engaged(void)
                  rva algn_7FF6E3435F7E,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva sub_7FF6E3435F80, \
                  rva algn_7FF6E343601C,\
                  rva stru_7FF6E3469D20>
RUNTIME_FUNCTION <rva unknown_libname_17,\ ; Microsoft VisualC v14 64bit runtime
                  rva sub_7FF6E3436060, \
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3436060, \ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_18,\
                  rva stru_7FF6E3469DD4>
RUNTIME_FUNCTION <rva unknown_libname_18,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3436148,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva ?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ,\ ; std::streambuf::_Pninc(void)
                  rva algn_7FF6E34361A5,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z,\ ; std::num_put<char,std::ostreambuf_iterator<char>>::_Put(std::ostreambuf_iterator<char>,char const *,unsigned __int64)
                  rva algn_7FF6E3436232,\
                  rva stru_7FF6E3469F34>
RUNTIME_FUNCTION <rva sub_7FF6E3436240, \
                  rva algn_7FF6E34362B3,\
                  rva stru_7FF6E3469F34>
RUNTIME_FUNCTION <rva sub_7FF6E34362C0, \
                  rva algn_7FF6E34362E6,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E34362F0, \
                  rva algn_7FF6E343648B,\
                  rva stru_7FF6E3469CF0>
RUNTIME_FUNCTION <rva sub_7FF6E3436490, \
                  rva algn_7FF6E34364B5,\
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva sub_7FF6E34364C0, \
                  rva algn_7FF6E34364E5,\
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva sub_7FF6E34364F0, \
                  rva algn_7FF6E3436523,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3436530, \
                  rva algn_7FF6E343658D,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva unknown_libname_19,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E34365C9,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34365D0, \
                  rva algn_7FF6E343667D,\
                  rva stru_7FF6E3469D10>
RUNTIME_FUNCTION <rva sub_7FF6E3436680, \
                  rva algn_7FF6E3436696,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E34366A0, \
                  rva algn_7FF6E34366B6,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z,\ ; std::allocator<char>::allocate(unsigned __int64)
                  rva algn_7FF6E34366E5,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E34366F0, \
                  rva algn_7FF6E3436726,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3436730, \
                  rva algn_7FF6E3436767,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3436770, \
                  rva algn_7FF6E343686C,\
                  rva stru_7FF6E3469CF8>
RUNTIME_FUNCTION <rva sub_7FF6E3436870, \
                  rva algn_7FF6E343696C,\
                  rva stru_7FF6E3469CF8>
RUNTIME_FUNCTION <rva ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z,\ ; std::_Narrow_char_traits<char,int>::assign(char * const,unsigned __int64,char)
                  rva algn_7FF6E343699E,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E34369C0, \
                  rva algn_7FF6E34369EF,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva unknown_libname_21,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3436A28,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva sub_7FF6E3436A30, \
                  rva algn_7FF6E3436A4B,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3436A60, \
                  rva algn_7FF6E3436AB4,\
                  rva stru_7FF6E3469D18>
RUNTIME_FUNCTION <rva sub_7FF6E3436AC0, \
                  rva algn_7FF6E3436BA6,\
                  rva stru_7FF6E3469DB4>
RUNTIME_FUNCTION <rva unknown_libname_66,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E3436BE1,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3436BF0, \
                  rva algn_7FF6E3436C18,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3436C20, \
                  rva algn_7FF6E3436C3E,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_23,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3436C80, \
                  rva algn_7FF6E3436CAB,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3436CB0, \
                  rva algn_7FF6E3436CDB,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z,\ ; std::ctype<char>::do_narrow(char const *,char const *,char,char *)
                  rva algn_7FF6E3436D53,\
                  rva stru_7FF6E3469D84>
RUNTIME_FUNCTION <rva sub_7FF6E3436D60, \
                  rva algn_7FF6E3436E4A,\
                  rva stru_7FF6E3469EDC>
RUNTIME_FUNCTION <rva sub_7FF6E3436E50, \
                  rva algn_7FF6E3436F3A,\
                  rva stru_7FF6E3469EDC>
RUNTIME_FUNCTION <rva sub_7FF6E3436F40, \
                  rva sub_7FF6E3437200, \
                  rva stru_7FF6E3469EF0>
RUNTIME_FUNCTION <rva sub_7FF6E3437200, \ ; std::num_put<char,std::ostreambuf_iterator<char>>::do_put(std::ostreambuf_iterator<char>,std::ios_base &,char,void const *)
                  rva ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z,\
                  rva stru_7FF6E3469EF0>
RUNTIME_FUNCTION <rva ?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z,\ ; std::num_put<char,std::ostreambuf_iterator<char>>::do_put(std::ostreambuf_iterator<char>,std::ios_base &,char,void const *)
                  rva algn_7FF6E3437585,\
                  rva stru_7FF6E3469F04>
RUNTIME_FUNCTION <rva sub_7FF6E3437590, \
                  rva algn_7FF6E343767A,\
                  rva stru_7FF6E3469EDC>
RUNTIME_FUNCTION <rva sub_7FF6E3437680, \
                  rva algn_7FF6E343776A,\
                  rva stru_7FF6E3469EDC>
RUNTIME_FUNCTION <rva sub_7FF6E3437770, \
                  rva algn_7FF6E3437ABF,\
                  rva stru_7FF6E3469EC8>
RUNTIME_FUNCTION <rva ?do_tolower@?$ctype@D@std@@MEBADD@Z,\ ; std::ctype<char>::do_tolower(char)
                  rva algn_7FF6E3437AF8,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3437B00, \
                  rva algn_7FF6E3437B6A,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva ?do_toupper@?$ctype@D@std@@MEBADD@Z,\ ; std::ctype<char>::do_toupper(char)
                  rva algn_7FF6E3437B98,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva sub_7FF6E3437BA0, \
                  rva algn_7FF6E3437C0A,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3437C10, \
                  rva algn_7FF6E3437C3B,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z,\ ; std::ctype<char>::do_widen(char const *,char const *,char *)
                  rva algn_7FF6E3437CA3,\
                  rva stru_7FF6E3469D84>
RUNTIME_FUNCTION <rva unknown_libname_25,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3437CDE,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NHH@Z,\ ; std::_Narrow_char_traits<char,int>::eq_int_type(int,int)
                  rva algn_7FF6E3437D1F,\
                  rva stru_7FF6E3469CB0>
RUNTIME_FUNCTION <rva ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z,\ ; std::error_category::equivalent(std::error_code const &,int)
                  rva algn_7FF6E3437D7D,\
                  rva stru_7FF6E3469CE8>
RUNTIME_FUNCTION <rva sub_7FF6E3437D80, \
                  rva algn_7FF6E3437DBE,\
                  rva stru_7FF6E3469D18>
RUNTIME_FUNCTION <rva sub_7FF6E3437DD0, \
                  rva algn_7FF6E3437DFD,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3437E20, \
                  rva algn_7FF6E3437ED6,\
                  rva stru_7FF6E3469E54>
RUNTIME_FUNCTION <rva sub_7FF6E3437EE0, \
                  rva algn_7FF6E3437EFA,\
                  rva stru_7FF6E3469C58>
RUNTIME_FUNCTION <rva ?getloc@ios_base@std@@QEBA?AVlocale@2@XZ,\ ; std::ios_base::getloc(void)
                  rva algn_7FF6E3437F2B,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3437F30, \
                  rva algn_7FF6E3437F63,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3437F70, \
                  rva algn_7FF6E3437F9D,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva sub_7FF6E3437FA0, \
                  rva algn_7FF6E34380C5,\
                  rva stru_7FF6E3469D00>
RUNTIME_FUNCTION <rva sub_7FF6E34380D0, \
                  rva algn_7FF6E34380DE,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E34380E0, \
                  rva algn_7FF6E34380F8,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z,\ ; std::make_error_code(std::io_errc)
                  rva algn_7FF6E343812D,\
                  rva stru_7FF6E3469C98>
RUNTIME_FUNCTION <rva ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ,\ ; std::string::max_size(void)
                  rva algn_7FF6E34381AE,\
                  rva stru_7FF6E3469D08>
RUNTIME_FUNCTION <rva sub_7FF6E34381B0, \
                  rva algn_7FF6E3438213,\
                  rva stru_7FF6E3469CE8>
RUNTIME_FUNCTION <rva sub_7FF6E3438220, \
                  rva algn_7FF6E3438273,\
                  rva stru_7FF6E3469CE0>
RUNTIME_FUNCTION <rva sub_7FF6E34382A0, \
                  rva algn_7FF6E34382BE,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34382C0, \ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_28,\
                  rva stru_7FF6E3469EBC>
RUNTIME_FUNCTION <rva sub_7FF6E3438350, \
                  rva algn_7FF6E3438379,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E3438380, \
                  rva algn_7FF6E34383E9,\
                  rva stru_7FF6E3469CE8>
RUNTIME_FUNCTION <rva sub_7FF6E3438400, \
                  rva algn_7FF6E3438438,\
                  rva stru_7FF6E3469DCC>
RUNTIME_FUNCTION <rva sub_7FF6E3438450, \
                  rva sub_7FF6E34384C0, \
                  rva stru_7FF6E3469F40>
RUNTIME_FUNCTION <rva sub_7FF6E34384C0, \
                  rva algn_7FF6E34384F2,\
                  rva stru_7FF6E3469CA8>
RUNTIME_FUNCTION <rva sub_7FF6E3438500, \
                  rva algn_7FF6E343851E,\
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E3438540, \
                  rva algn_7FF6E343856D,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva ?get_unexpected_or_default@@YAP6AXXZQEBU__vcrt_ptd@@@Z,\ ; get_unexpected_or_default(__vcrt_ptd const * const)
                  rva algn_7FF6E34385B8,\
                  rva stru_7FF6E3469C90>
RUNTIME_FUNCTION <rva sub_7FF6E34385C0, \
                  rva algn_7FF6E34385FC,\
                  rva stru_7FF6E3469D84>
RUNTIME_FUNCTION <rva ?width@ios_base@std@@QEAA_J_J@Z,\ ; std::ios_base::width(__int64)
                  rva algn_7FF6E3438632,\
                  rva stru_7FF6E3469DBC>
RUNTIME_FUNCTION <rva _vsprintf_s_l, \
                  rva algn_7FF6E34386CE,\
                  rva stru_7FF6E3469C68>
RUNTIME_FUNCTION <rva sub_7FF6E34386D0, \
                  rva algn_7FF6E34386EA,\
                  rva stru_7FF6E3469C58>
RUNTIME_FUNCTION <rva sub_7FF6E34386F0, \
                  rva algn_7FF6E3438714,\
                  rva stru_7FF6E3469C60>
RUNTIME_FUNCTION <rva sprintf_s, \
                  rva algn_7FF6E3438779,\
                  rva stru_7FF6E3469C68>
RUNTIME_FUNCTION <rva ??0_Init_locks@std@@QEAA@XZ,\ ; std::_Init_locks::_Init_locks(void)
                  rva algn_7FF6E34387BF,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ??0_Lockit@std@@QEAA@H@Z,\ ; std::_Lockit::_Lockit(int)
                  rva algn_7FF6E34387FB,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva unknown_libname_33,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3438837,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ??1_Lockit@std@@QEAA@XZ,\ ; std::_Lockit::~_Lockit(void)
                  rva algn_7FF6E343886A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E343888C, \
                  rva sub_7FF6E34388C8, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E34388C8, \
                  rva algn_7FF6E343890F,\
                  rva stru_7FF6E3469FDC>
RUNTIME_FUNCTION <rva sub_7FF6E3438910, \
                  rva sub_7FF6E343894C, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E343894C, \
                  rva sub_7FF6E3438988, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E3438988, \
                  rva algn_7FF6E34389CF,\
                  rva stru_7FF6E3469FDC>
RUNTIME_FUNCTION <rva sub_7FF6E34389D0, \
                  rva algn_7FF6E3438A17,\
                  rva stru_7FF6E3469FDC>
RUNTIME_FUNCTION <rva unknown_libname_35,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3438A6E,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E3438A70, \
                  rva sub_7FF6E3438A90, \
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva sub_7FF6E3438A90, \
                  rva algn_7FF6E3438AB3,\
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva sub_7FF6E3438AB4, \
                  rva algn_7FF6E3438AD7,\
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva sub_7FF6E3438AD8, \
                  rva algn_7FF6E3438AFB,\
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva ??0_Locimp@locale@std@@AEAA@_N@Z,\ ; std::locale::_Locimp::_Locimp(bool)
                  rva algn_7FF6E3438BB2,\
                  rva stru_7FF6E346A000>
RUNTIME_FUNCTION <rva ??4?$_Yarn@D@std@@QEAAAEAV01@PEBD@Z,\ ; std::_Yarn<char>::operator=(char const *)
                  rva algn_7FF6E3438C2A,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva ??_G_Locimp@locale@std@@MEAAPEAXI@Z,\ ; std::locale::_Locimp::`scalar deleting destructor'(uint)
                  rva ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z,\ ; std::_Facet_Register(std::_Facet_base *)
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z,\ ; std::_Facet_Register(std::_Facet_base *)
                  rva sub_7FF6E3438CC0, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z,\ ; std::locale::_Init(bool)
                  rva algn_7FF6E3438DBA,\
                  rva stru_7FF6E346A010>
RUNTIME_FUNCTION <rva ?_Locimp_dtor@_Locimp@locale@std@@CAXPEAV123@@Z,\ ; std::locale::_Locimp::_Locimp_dtor(std::locale::_Locimp *)
                  rva algn_7FF6E3438E37,\
                  rva stru_7FF6E3469FF4>
RUNTIME_FUNCTION <rva ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z,\ ; std::_Locinfo::_Locinfo_ctor(std::_Locinfo *,char const *)
                  rva algn_7FF6E3438EA1,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z,\ ; std::_Locinfo::_Locinfo_dtor(std::_Locinfo *)
                  rva algn_7FF6E3438EBD,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?_New_Locimp@_Locimp@locale@std@@CAPEAV123@_N@Z,\ ; std::locale::_Locimp::_New_Locimp(bool)
                  rva algn_7FF6E3438EEE,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?_Setgloballocale@locale@std@@CAXPEAX@Z,\ ; std::locale::_Setgloballocale(void *)
                  rva algn_7FF6E3438F22,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _Deletegloballocale,\
                  rva algn_7FF6E3438F5E,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva tidy_global, \
                  rva algn_7FF6E3438F93,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _Getctype, \
                  rva algn_7FF6E3439052,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _Tolower, \
                  rva algn_7FF6E3439185,\
                  rva stru_7FF6E346A044>
RUNTIME_FUNCTION <rva _Getcvt, \
                  rva _Toupper, \
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva _Toupper, \
                  rva algn_7FF6E3439361,\
                  rva stru_7FF6E346A054>
RUNTIME_FUNCTION <rva sub_7FF6E3439364, \
                  rva sub_7FF6E3439540, \
                  rva stru_7FF6E346A1C0>
RUNTIME_FUNCTION <rva sub_7FF6E3439540, \
                  rva algn_7FF6E3439655,\
                  rva stru_7FF6E346A2C8>
RUNTIME_FUNCTION <rva ??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z,\ ; std::ostream::ostream(std::streambuf *,bool)
                  rva algn_7FF6E34396F6,\
                  rva stru_7FF6E346A140>
RUNTIME_FUNCTION <rva sub_7FF6E34396F8, \
                  rva algn_7FF6E34397DD,\
                  rva stru_7FF6E346A18C>
RUNTIME_FUNCTION <rva ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_36,\
                  rva stru_7FF6E346A1DC>
RUNTIME_FUNCTION <rva unknown_libname_36,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E34398A9,\
                  rva stru_7FF6E346A0E8>
RUNTIME_FUNCTION <rva ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_37,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva unknown_libname_37,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E343992B,\
                  rva stru_7FF6E346A0C8>
RUNTIME_FUNCTION <rva sub_7FF6E343992C, \
                  rva algn_7FF6E343998F,\
                  rva stru_7FF6E346A16C>
RUNTIME_FUNCTION <rva sub_7FF6E3439990, \
                  rva algn_7FF6E3439A19,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E3439A1C, \
                  rva algn_7FF6E3439A47,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ??_Gios_base@std@@UEAAPEAXI@Z,\ ; std::ios_base::`scalar deleting destructor'(uint)
                  rva algn_7FF6E3439A87,\
                  rva stru_7FF6E346A0C8>
RUNTIME_FUNCTION <rva ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ,\ ; std::filebuf::_Endwrite(void)
                  rva algn_7FF6E3439B5D,\
                  rva stru_7FF6E346A298>
RUNTIME_FUNCTION <rva ?_Erase_noexcept@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV12@_K_K@Z,\ ; std::string::_Erase_noexcept(unsigned __int64,unsigned __int64)
                  rva algn_7FF6E3439C39,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva ?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z,\ ; std::codecvt<char,char,_Mbstatet>::_Getcat(std::locale::facet const * *,std::locale const *)
                  rva algn_7FF6E3439CF5,\
                  rva stru_7FF6E346A300>
RUNTIME_FUNCTION <rva ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z,\ ; std::filebuf::_Init(_iobuf *,std::filebuf::_Initfl)
                  rva algn_7FF6E3439DCF,\
                  rva stru_7FF6E346A28C>
RUNTIME_FUNCTION <rva ?_Init@ios_base@std@@IEAAXXZ,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_38,\
                  rva stru_7FF6E346A09C>
RUNTIME_FUNCTION <rva unknown_libname_38,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3439EBE,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva unknown_libname_39,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3439EDA,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva unknown_libname_40,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E3439EFA,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?clear@ios_base@std@@QEAAXH@Z,\ ; std::ios_base::clear(int)
                  rva algn_7FF6E3439F67,\
                  rva stru_7FF6E346A094>
RUNTIME_FUNCTION <rva ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ,\ ; std::filebuf::close(void)
                  rva algn_7FF6E3439FF7,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E343A04C, \
                  rva algn_7FF6E343A06D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IEAAXPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z,\ ; std::ios::init(std::streambuf *,bool)
                  rva algn_7FF6E343A12A,\
                  rva stru_7FF6E346A130>
RUNTIME_FUNCTION <rva ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z,\ ; std::filebuf::overflow(int)
                  rva sub_7FF6E343A2B0, \
                  rva stru_7FF6E346A1F4>
RUNTIME_FUNCTION <rva ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z,\ ; std::filebuf::pbackfail(int)
                  rva ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z,\ ; std::string::push_back(char)
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z,\ ; std::string::push_back(char)
                  rva algn_7FF6E343A43A,\
                  rva stru_7FF6E346A080>
RUNTIME_FUNCTION <rva ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_42,\
                  rva stru_7FF6E346A268>
RUNTIME_FUNCTION <rva ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z,\ ; std::filebuf::seekpos(std::fpos<_Mbstatet>,int)
                  rva algn_7FF6E343A5EA,\
                  rva stru_7FF6E346A27C>
RUNTIME_FUNCTION <rva ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z,\ ; std::filebuf::setbuf(char *,__int64)
                  rva sub_7FF6E343A640, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ,\ ; std::filebuf::sync(void)
                  rva sub_7FF6E343A698, \
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E343A698, \ ; std::streambuf::uflow(void)
                  rva ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ,\
                  rva stru_7FF6E346A214>
RUNTIME_FUNCTION <rva ?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ,\ ; std::streambuf::uflow(void)
                  rva ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ,\ ; std::filebuf::underflow(void)
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ,\ ; std::filebuf::underflow(void)
                  rva algn_7FF6E343A95F,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z,\ ; std::ios::widen(char)
                  rva algn_7FF6E343A9E9,\
                  rva stru_7FF6E346A104>
RUNTIME_FUNCTION <rva ?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z,\ ; std::filebuf::xsgetn(char *,__int64)
                  rva algn_7FF6E343AB1B,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z,\ ; std::streambuf::xsgetn(char *,__int64)
                  rva ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z,\ ; std::filebuf::xsputn(char const *,__int64)
                  rva stru_7FF6E346A1C0>
RUNTIME_FUNCTION <rva ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z,\ ; std::filebuf::xsputn(char const *,__int64)
                  rva algn_7FF6E343AC9F,\
                  rva stru_7FF6E346A250>
RUNTIME_FUNCTION <rva ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z,\ ; std::streambuf::xsputn(char const *,__int64)
                  rva DeleteCriticalSection,\
                  rva stru_7FF6E346A1C0>
RUNTIME_FUNCTION <rva ?_Atexit@@YAXP6AXXZ@Z,\ ; _Atexit(void (*)(void))
                  rva algn_7FF6E343ADCB,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __crtLCMapStringA,\
                  rva algn_7FF6E343B0C5,\
                  rva stru_7FF6E346A350>
RUNTIME_FUNCTION <rva ?_Addstd@ios_base@std@@SAXPEAV12@@Z,\ ; std::ios_base::_Addstd(std::ios_base *)
                  rva algn_7FF6E343B139,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E343B13C, \
                  rva algn_7FF6E343B1B1,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?_Tidy@ios_base@std@@AEAAXXZ,\ ; std::ios_base::_Tidy(void)
                  rva algn_7FF6E343B233,\
                  rva stru_7FF6E346A378>
RUNTIME_FUNCTION <rva ??2@YAPEAX_K@Z, \ ; operator new(unsigned __int64)
                  rva j_j_j__free_base, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __GSHandlerCheck, \
                  rva algn_7FF6E343B295,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __GSHandlerCheckCommon,\
                  rva byte_7FF6E343B2F3,\
                  rva stru_7FF6E346A394>
RUNTIME_FUNCTION <rva __security_check_cookie,\
                  rva algn_7FF6E343B32E,\
                  rva stru_7FF6E346A3A0>
RUNTIME_FUNCTION <rva sub_7FF6E343B330, \
                  rva algn_7FF6E343B35B,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?pre_c_initialization@@YAHXZ,\ ; pre_c_initialization(void)
                  rva algn_7FF6E343B412,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?post_pgo_initialization@@YAHXZ,\ ; post_pgo_initialization(void)
                  rva ?pre_cpp_initialization@@YAXXZ,\ ; pre_cpp_initialization(void)
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?pre_cpp_initialization@@YAXXZ,\ ; pre_cpp_initialization(void)
                  rva algn_7FF6E343B43D,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?__scrt_common_main_seh@@YAHXZ,\ ; __scrt_common_main_seh(void)
                  rva start, \
                  rva stru_7FF6E346A3A4>
RUNTIME_FUNCTION <rva start, \
                  rva algn_7FF6E343B5CE,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __scrt_acquire_startup_lock,\
                  rva algn_7FF6E343B609,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __scrt_initialize_crt,\
                  rva algn_7FF6E343B646,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __scrt_initialize_onexit_tables,\
                  rva algn_7FF6E343B6D3,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __scrt_is_nonwritable_in_current_image,\
                  rva __scrt_release_startup_lock,\
                  rva stru_7FF6E346A3DC>
RUNTIME_FUNCTION <rva __scrt_release_startup_lock,\
                  rva __scrt_uninitialize_crt,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __scrt_uninitialize_crt,\
                  rva algn_7FF6E343B7B9,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _onexit, \
                  rva algn_7FF6E343B7F6,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva atexit, \
                  rva algn_7FF6E343B80F,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __GSHandlerCheck_EH4,\
                  rva algn_7FF6E343B88F,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva __alloca_probe, \
                  rva algn_7FF6E343B8EE,\
                  rva stru_7FF6E346A408>
RUNTIME_FUNCTION <rva sub_7FF6E343B8F0, \
                  rva algn_7FF6E343BBBA,\
                  rva stru_7FF6E346A410>
RUNTIME_FUNCTION <rva sub_7FF6E343BBBC, \
                  rva j_j__free_base, \
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva __raise_securityfailure,\
                  rva __report_gsfailure,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __report_gsfailure,\
                  rva algn_7FF6E343BCEB,\
                  rva stru_7FF6E3469CD0>
RUNTIME_FUNCTION <rva sub_7FF6E343BCEC, \
                  rva __report_securityfailure,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __report_securityfailure,\
                  rva algn_7FF6E343BD9D,\
                  rva stru_7FF6E346A424>
RUNTIME_FUNCTION <rva capture_current_context,\
                  rva algn_7FF6E343BE0D,\
                  rva stru_7FF6E346A42C>
RUNTIME_FUNCTION <rva capture_previous_context,\
                  rva algn_7FF6E343BE81,\
                  rva stru_7FF6E346A438>
RUNTIME_FUNCTION <rva __security_init_cookie,\
                  rva _get_startup_file_mode,\
                  rva stru_7FF6E346A444>
RUNTIME_FUNCTION <rva __scrt_initialize_default_local_stdio_options,\
                  rva algn_7FF6E343BF6B,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __scrt_fastfail, \
                  rva sub_7FF6E343C0D8, \
                  rva stru_7FF6E346A450>
RUNTIME_FUNCTION <rva __scrt_is_managed_app,\
                  rva algn_7FF6E343C131,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __scrt_unhandled_exception_filter,\
                  rva algn_7FF6E343C19F,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E343C1A0, \
                  rva sub_7FF6E343C1DC, \
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E343C1DC, \
                  rva __scrt_is_ucrt_dll_in_use,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva _purecall, \
                  rva algn_7FF6E343C256,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __std_exception_copy,\
                  rva algn_7FF6E343C2ED,\
                  rva stru_7FF6E346A494>
RUNTIME_FUNCTION <rva __std_exception_destroy,\
                  rva algn_7FF6E343C315,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _CxxThrowException,\
                  rva algn_7FF6E343C3BF,\
                  rva stru_7FF6E346A4A8>
RUNTIME_FUNCTION <rva unknown_libname_43,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E343C411,\
                  rva stru_7FF6E346A59C>
RUNTIME_FUNCTION <rva unknown_libname_44,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E343C465,\
                  rva stru_7FF6E346A570>
RUNTIME_FUNCTION <rva ?CatchTryBlock@__FrameHandler3@@SAPEBU_s_TryBlockMapEntry@@PEBU_s_FuncInfo@@H@Z,\ ; __FrameHandler3::CatchTryBlock(_s_FuncInfo const *,int)
                  rva algn_7FF6E343C4CA,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva sub_7FF6E343C4CC, \
                  rva algn_7FF6E343C603,\
                  rva stru_7FF6E346A4B8>
RUNTIME_FUNCTION <rva ?ExecutionInCatch@__FrameHandler3@@SA_NPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z,\ ; __FrameHandler3::ExecutionInCatch(_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
                  rva algn_7FF6E343C62E,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?FrameUnwindToEmptyState@__FrameHandler3@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z,\ ; __FrameHandler3::FrameUnwindToEmptyState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
                  rva ?FrameUnwindToEmptyState@__FrameHandler4@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@@Z,\ ; __FrameHandler4::FrameUnwindToEmptyState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *)
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva ?FrameUnwindToEmptyState@__FrameHandler4@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@@Z,\ ; __FrameHandler4::FrameUnwindToEmptyState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *)
                  rva algn_7FF6E343C6CE,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?GetEstablisherFrame@__FrameHandler3@@SAPEA_KPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@0@Z,\ ; __FrameHandler3::GetEstablisherFrame(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,unsigned __int64 *)
                  rva ?GetEstablisherFrame@__FrameHandler4@@SAPEA_KPEA_KPEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@0@Z,\ ; __FrameHandler4::GetEstablisherFrame(unsigned __int64 *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,unsigned __int64 *)
                  rva stru_7FF6E346A4E4>
RUNTIME_FUNCTION <rva ?GetRangeOfTrysToCheck@__FrameHandler3@@SA?AU?$pair@Viterator@TryBlockMap@__FrameHandler3@@V123@@std@@AEAVTryBlockMap@1@HPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@H@Z,\ ; __FrameHandler3::GetRangeOfTrysToCheck(__FrameHandler3::TryBlockMap &,int,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)
                  rva algn_7FF6E343C8F5,\
                  rva stru_7FF6E346A510>
RUNTIME_FUNCTION <rva ?GetRangeOfTrysToCheck@__FrameHandler4@@SA?AU?$pair@Viterator@TryBlockMap4@FH4@@V123@@std@@AEAVTryBlockMap4@FH4@@HPEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@5@H@Z,\ ; __FrameHandler4::GetRangeOfTrysToCheck(FH4::TryBlockMap4 &,int,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int)
                  rva algn_7FF6E343CA61,\
                  rva stru_7FF6E346A52C>
RUNTIME_FUNCTION <rva ?UnwindNestedFrames@__FrameHandler3@@SAXPEA_KPEAUEHExceptionRecord@@PEAU_CONTEXT@@0PEAXPEBU_s_FuncInfo@@HHPEBU_s_HandlerType@@PEAU_xDISPATCHER_CONTEXT@@E@Z,\ ; __FrameHandler3::UnwindNestedFrames(unsigned __int64 *,EHExceptionRecord *,_CONTEXT *,unsigned __int64 *,void *,_s_FuncInfo const *,int,int,_s_HandlerType const *,_xDISPATCHER_CONTEXT *,uchar)
                  rva algn_7FF6E343CB67,\
                  rva stru_7FF6E346A4FC>
RUNTIME_FUNCTION <rva ?UnwindNestedFrames@__FrameHandler4@@SAXPEA_KPEAUEHExceptionRecord@@PEAU_CONTEXT@@0PEAXPEAUFuncInfo4@FH4@@HHPEAUHandlerType4@5@PEAU_xDISPATCHER_CONTEXT@@E@Z,\ ; __FrameHandler4::UnwindNestedFrames(unsigned __int64 *,EHExceptionRecord *,_CONTEXT *,unsigned __int64 *,void *,FH4::FuncInfo4 *,int,int,FH4::HandlerType4 *,_xDISPATCHER_CONTEXT *,uchar)
                  rva algn_7FF6E343CC87,\
                  rva stru_7FF6E346A4FC>
RUNTIME_FUNCTION <rva _CreateFrameInfo, \
                  rva algn_7FF6E343CE86,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _FindAndUnlinkFrame,\
                  rva algn_7FF6E343CEDB,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva _GetImageBase, \
                  rva algn_7FF6E343CEEE,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _GetThrowImageBase,\
                  rva algn_7FF6E343CF02,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _SetImageBase, \
                  rva _SetThrowImageBase,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _SetThrowImageBase,\
                  rva __CxxFrameHandler3,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __CxxFrameHandler3,\
                  rva algn_7FF6E343CFBA,\
                  rva stru_7FF6E346A548>
RUNTIME_FUNCTION <rva __CxxFrameHandler4,\
                  rva algn_7FF6E343D07B,\
                  rva stru_7FF6E346A55C>
RUNTIME_FUNCTION <rva __uncaught_exception,\
                  rva algn_7FF6E343D09A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __DestructExceptionObject,\
                  rva algn_7FF6E343D109,\
                  rva stru_7FF6E346A5BC>
RUNTIME_FUNCTION <rva _IsExceptionObjectToBeDestroyed,\
                  rva algn_7FF6E343D13F,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __FrameUnwindFilter,\
                  rva algn_7FF6E343D1CA,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva __current_exception,\
                  rva algn_7FF6E343D1DE,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __current_exception_context,\
                  rva algn_7FF6E343D1F2,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E343D1F4, \
                  rva algn_7FF6E343D1FE,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __C_specific_handler,\
                  rva algn_7FF6E343D417,\
                  rva stru_7FF6E346A510>
RUNTIME_FUNCTION <rva __vcrt_initialize,\
                  rva __vcrt_uninitialize,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_uninitialize,\
                  rva algn_7FF6E343D459,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_freefls, \
                  rva algn_7FF6E343D4A3,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_getptd, \
                  rva algn_7FF6E343D4BD,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_getptd_noexit,\
                  rva algn_7FF6E343D57F,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva __vcrt_getptd_noinit,\
                  rva algn_7FF6E343D5CD,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva __vcrt_initialize_ptd,\
                  rva algn_7FF6E343D617,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_uninitialize_ptd,\
                  rva algn_7FF6E343D63A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?GetCurrentState@__FrameHandler3@@SAHPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z,\ ; __FrameHandler3::GetCurrentState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
                  rva algn_7FF6E343D663,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?GetUnwindTryBlock@__FrameHandler3@@SAHPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z,\ ; __FrameHandler3::GetUnwindTryBlock(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
                  rva algn_7FF6E343D68D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?SetUnwindTryBlock@__FrameHandler3@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@H@Z,\ ; __FrameHandler3::SetUnwindTryBlock(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)
                  rva algn_7FF6E343D6D7,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?StateFromIp@__FrameHandler3@@SAHPEBU_s_FuncInfo@@PEAU_xDISPATCHER_CONTEXT@@_K@Z,\ ; __FrameHandler3::StateFromIp(_s_FuncInfo const *,_xDISPATCHER_CONTEXT *,unsigned __int64)
                  rva algn_7FF6E343D74E,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?StateFromIp@__FrameHandler4@@SAHPEAUFuncInfo4@FH4@@PEAU_xDISPATCHER_CONTEXT@@_K@Z,\ ; __FrameHandler4::StateFromIp(FH4::FuncInfo4 *,_xDISPATCHER_CONTEXT *,unsigned __int64)
                  rva algn_7FF6E343D83D,\
                  rva stru_7FF6E346A4B8>
RUNTIME_FUNCTION <rva sub_7FF6E343D840, \
                  rva algn_7FF6E343DA3E,\
                  rva stru_7FF6E346A7A0>
RUNTIME_FUNCTION <rva ??$BuildCatchObjectHelperInternal@V__FrameHandler4@@@@YAHPEAUEHExceptionRecord@@PEAXPEAUHandlerType4@FH4@@PEBU_s_CatchableType@@@Z,\ ; BuildCatchObjectHelperInternal<__FrameHandler4>(EHExceptionRecord *,void *,FH4::HandlerType4 *,_s_CatchableType const *)
                  rva algn_7FF6E343DC41,\
                  rva stru_7FF6E346A7E0>
RUNTIME_FUNCTION <rva ??$BuildCatchObjectInternal@V__FrameHandler3@@@@YAXPEAUEHExceptionRecord@@PEAXPEBU_s_HandlerType@@PEBU_s_CatchableType@@@Z,\ ; BuildCatchObjectInternal<__FrameHandler3>(EHExceptionRecord *,void *,_s_HandlerType const *,_s_CatchableType const *)
                  rva ??$BuildCatchObjectInternal@V__FrameHandler4@@@@YAXPEAUEHExceptionRecord@@PEAXPEAUHandlerType4@FH4@@PEBU_s_CatchableType@@@Z,\ ; BuildCatchObjectInternal<__FrameHandler4>(EHExceptionRecord *,void *,FH4::HandlerType4 *,_s_CatchableType const *)
                  rva stru_7FF6E346A820>
RUNTIME_FUNCTION <rva ??$BuildCatchObjectInternal@V__FrameHandler4@@@@YAXPEAUEHExceptionRecord@@PEAXPEAUHandlerType4@FH4@@PEBU_s_CatchableType@@@Z,\ ; BuildCatchObjectInternal<__FrameHandler4>(EHExceptionRecord *,void *,FH4::HandlerType4 *,_s_CatchableType const *)
                  rva algn_7FF6E343DDC5,\
                  rva stru_7FF6E346A84C>
RUNTIME_FUNCTION <rva ??$CatchIt@V__FrameHandler3@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@PEBU_s_HandlerType@@PEBU_s_CatchableType@@PEBU_s_TryBlockMapEntry@@H1EE@Z,\ ; CatchIt<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,unsigned __int64 *,uchar,uchar)
                  rva algn_7FF6E343DE99,\
                  rva stru_7FF6E346A8E8>
RUNTIME_FUNCTION <rva ??$CatchIt@V__FrameHandler4@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@PEAUHandlerType4@4@PEBU_s_CatchableType@@PEAUTryBlockMapEntry4@4@H1EE@Z,\ ; CatchIt<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,FH4::HandlerType4 *,_s_CatchableType const *,FH4::TryBlockMapEntry4 *,int,unsigned __int64 *,uchar,uchar)
                  rva algn_7FF6E343DF6D,\
                  rva stru_7FF6E346A8E8>
RUNTIME_FUNCTION <rva sub_7FF6E343DF70, \
                  rva algn_7FF6E343E43F,\
                  rva stru_7FF6E346A8A8>
RUNTIME_FUNCTION <rva ??$FindHandler@V__FrameHandler4@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@EH1@Z,\ ; FindHandler<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,uchar,int,unsigned __int64 *)
                  rva algn_7FF6E343E941,\
                  rva stru_7FF6E346A8C8>
RUNTIME_FUNCTION <rva ??$FindHandlerForForeignException@V__FrameHandler3@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@HH1@Z,\ ; FindHandlerForForeignException<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int,int,unsigned __int64 *)
                  rva algn_7FF6E343EBB1,\
                  rva stru_7FF6E346A900>
RUNTIME_FUNCTION <rva ??$FindHandlerForForeignException@V__FrameHandler4@@@@YAXPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@HH1@Z,\ ; FindHandlerForForeignException<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,int,unsigned __int64 *)
                  rva ??$TypeMatchHelper@V__FrameHandler3@@@@YAHPEBU_s_HandlerType@@PEBU_s_CatchableType@@PEBU_s_ThrowInfo@@@Z,\ ; TypeMatchHelper<__FrameHandler3>(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)
                  rva stru_7FF6E346A91C>
RUNTIME_FUNCTION <rva ??$TypeMatchHelper@V__FrameHandler3@@@@YAHPEBU_s_HandlerType@@PEBU_s_CatchableType@@PEBU_s_ThrowInfo@@@Z,\ ; TypeMatchHelper<__FrameHandler3>(_s_HandlerType const *,_s_CatchableType const *,_s_ThrowInfo const *)
                  rva algn_7FF6E343EFE5,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva ??$TypeMatchHelper@V__FrameHandler4@@@@YAHPEAUHandlerType4@FH4@@PEBU_s_CatchableType@@PEBU_s_ThrowInfo@@@Z,\ ; TypeMatchHelper<__FrameHandler4>(FH4::HandlerType4 *,_s_CatchableType const *,_s_ThrowInfo const *)
                  rva algn_7FF6E343F133,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva sub_7FF6E343F134, \
                  rva algn_7FF6E343F36B,\
                  rva stru_7FF6E346A878>
RUNTIME_FUNCTION <rva ??$__InternalCxxFrameHandler@V__FrameHandler4@@@@YA?AW4_EXCEPTION_DISPOSITION@@PEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@H1E@Z,\ ; __InternalCxxFrameHandler<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)
                  rva sub_7FF6E343F600, \
                  rva stru_7FF6E346A890>
RUNTIME_FUNCTION <rva ??$__InternalCxxFrameHandlerWrapper@V__FrameHandler4@@@@YA?AW4_EXCEPTION_DISPOSITION@@PEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@H1E@Z,\ ; __InternalCxxFrameHandlerWrapper<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)
                  rva algn_7FF6E343F653,\
                  rva stru_7FF6E346A760>
RUNTIME_FUNCTION <rva ??0HandlerMap4@FH4@@QEAA@PEBUTryBlockMapEntry4@1@_KH@Z,\ ; FH4::HandlerMap4::HandlerMap4(FH4::TryBlockMapEntry4 const *,unsigned __int64,int)
                  rva algn_7FF6E343F6D6,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E343F7BC, \
                  rva sub_7FF6E343F7F8, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva unknown_libname_45,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E343FA02,\
                  rva stru_7FF6E346A65C>
RUNTIME_FUNCTION <rva sub_7FF6E343FA04, \
                  rva algn_7FF6E343FC51,\
                  rva stru_7FF6E346A6E8>
RUNTIME_FUNCTION <rva ?ExFilterRethrow@@YAHPEAU_EXCEPTION_POINTERS@@PEAUEHExceptionRecord@@PEAH@Z,\ ; ExFilterRethrow(_EXCEPTION_POINTERS *,EHExceptionRecord *,int *)
                  rva algn_7FF6E343FE6B,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?ExFilterRethrowFH4@@YAHPEAU_EXCEPTION_POINTERS@@PEAUEHExceptionRecord@@HPEAH@Z,\ ; ExFilterRethrowFH4(_EXCEPTION_POINTERS *,EHExceptionRecord *,int,int *)
                  rva ?FrameUnwindToState@__FrameHandler3@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@H@Z,\ ; __FrameHandler3::FrameUnwindToState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?FrameUnwindToState@__FrameHandler3@@SAXPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@H@Z,\ ; __FrameHandler3::FrameUnwindToState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,int)
                  rva algn_7FF6E3440026,\
                  rva stru_7FF6E346A610>
RUNTIME_FUNCTION <rva sub_7FF6E3440028, \
                  rva algn_7FF6E344032F,\
                  rva stru_7FF6E346A698>
RUNTIME_FUNCTION <rva ?GetHandlerSearchState@__FrameHandler3@@SAHPEA_KPEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@@Z,\ ; __FrameHandler3::GetHandlerSearchState(unsigned __int64 *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *)
                  rva algn_7FF6E34403C6,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva ?IsInExceptionSpec@@YAEPEAUEHExceptionRecord@@PEBU_s_ESTypeList@@@Z,\ ; IsInExceptionSpec(EHExceptionRecord *,_s_ESTypeList const *)
                  rva algn_7FF6E34404B5,\
                  rva stru_7FF6E346A744>
RUNTIME_FUNCTION <rva ?Is_bad_exception_allowed@@YAEPEBU_s_ESTypeList@@@Z,\ ; Is_bad_exception_allowed(_s_ESTypeList const *)
                  rva ?ReadEntry@UWMap4@FH4@@AEAAXPEAPEAE@Z,\ ; FH4::UWMap4::ReadEntry(uchar * *)
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva ?getStartStop@UWMap4@FH4@@QEAAXHHAEAViterator@12@0@Z,\ ; FH4::UWMap4::getStartStop(int,int,FH4::UWMap4::iterator &,FH4::UWMap4::iterator &)
                  rva algn_7FF6E34406C6,\
                  rva stru_7FF6E346A5E8>
RUNTIME_FUNCTION <rva ?getStateFromIterators@UWMap4@FH4@@SAHAEBViterator@12@H0H0@Z,\ ; FH4::UWMap4::getStateFromIterators(FH4::UWMap4::iterator const &,int,FH4::UWMap4::iterator const &,int,FH4::UWMap4::iterator const &)
                  rva byte_7FF6E3440778,\
                  rva stru_7FF6E346A600>
RUNTIME_FUNCTION <rva _NLG_Notify, \
                  rva algn_7FF6E34407CB,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva locret_7FF6E34407D0,\
                  rva algn_7FF6E34407D1,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva nullsub_1, \
                  rva algn_7FF6E34407E1,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva __vcrt_initialize_locks,\
                  rva algn_7FF6E3440862,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __vcrt_uninitialize_locks,\
                  rva algn_7FF6E344089B,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?try_get_function@@YAPEAXW4function_id@?A0x14174aea@@QEBDQEBW4module_id@2@2@Z,\ ; try_get_function(`anonymous namespace'::function_id,char const * const,A0x14174aea::module_id const * const,A0x14174aea::module_id const * const)
                  rva algn_7FF6E34409EB,\
                  rva stru_7FF6E346A940>
RUNTIME_FUNCTION <rva __vcrt_FlsAlloc, \
                  rva algn_7FF6E3440A31,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __vcrt_FlsFree, \
                  rva algn_7FF6E3440A7A,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __vcrt_FlsGetValue,\
                  rva algn_7FF6E3440AC2,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __vcrt_FlsSetValue,\
                  rva algn_7FF6E3440B15,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva __vcrt_InitializeCriticalSectionEx,\
                  rva byte_7FF6E3440B79,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva _CallSettingFrame,\
                  rva _CallSettingFrame_LookupContinuationIndex,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _CallSettingFrame_LookupContinuationIndex,\
                  rva algn_7FF6E3440C2A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _CallSettingFrame_NotifyContinuationAddr,\
                  rva algn_7FF6E3440C56,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _CallSettingFrameEncoded,\
                  rva algn_7FF6E3440CA7,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva unknown_libname_68,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E3440D0F,\
                  rva stru_7FF6E3469FF4>
RUNTIME_FUNCTION <rva ?get_raw_ptd_noexit@__crt_cached_ptd_host@@QEAAPEAU__acrt_ptd@@XZ,\ ; __crt_cached_ptd_host::get_raw_ptd_noexit(void)
                  rva algn_7FF6E3440D7A,\
                  rva stru_7FF6E346A27C>
RUNTIME_FUNCTION <rva ?value@?$dual_state_global@P6AXPEB_W00I_K@Z@__crt_state_management@@QEAAAEAP6AXPEB_W00I_K@ZAEAV__crt_cached_ptd_host@@@Z,\ ; __crt_state_management::dual_state_global<void (*)(wchar_t const *,wchar_t const *,wchar_t const *,uint,unsigned __int64)>::value(__crt_cached_ptd_host &)
                  rva sub_7FF6E3440DC8, \
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E3440DC8, \
                  rva algn_7FF6E3440F35,\
                  rva stru_7FF6E346A968>
RUNTIME_FUNCTION <rva _invalid_parameter,\
                  rva algn_7FF6E3440FDB,\
                  rva stru_7FF6E346A99C>
RUNTIME_FUNCTION <rva sub_7FF6E3440FDC, \
                  rva algn_7FF6E3441093,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva _invalid_parameter_noinfo,\
                  rva algn_7FF6E34410B2,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva _invalid_parameter_noinfo_noreturn,\
                  rva algn_7FF6E34410E3,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva _invoke_watson, \
                  rva algn_7FF6E344112B,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E34412A0, \
                  rva algn_7FF6E3441463,\
                  rva stru_7FF6E346A9A8>
RUNTIME_FUNCTION <rva sub_7FF6E3441488, \
                  rva algn_7FF6E3441637,\
                  rva stru_7FF6E346A9E0>
RUNTIME_FUNCTION <rva ??$ensure_buffer_is_big_enough@D@formatting_buffer@__crt_stdio_output@@QEAA_N_KAEAV__crt_cached_ptd_host@@@Z,\ ; __crt_stdio_output::formatting_buffer::ensure_buffer_is_big_enough<char>(unsigned __int64,__crt_cached_ptd_host &)
                  rva ??$parse_integer@KV?$c_string_character_source@D@__crt_strtox@@$0A@@__crt_strtox@@YAKAEAV__crt_cached_ptd_host@@V?$c_string_character_source@D@0@H_N@Z,\ ; __crt_strtox::parse_integer<ulong,__crt_strtox::c_string_character_source<char>,0>(__crt_cached_ptd_host &,__crt_strtox::c_string_character_source<char>,int,bool)
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva ??$parse_integer@KV?$c_string_character_source@D@__crt_strtox@@$0A@@__crt_strtox@@YAKAEAV__crt_cached_ptd_host@@V?$c_string_character_source@D@0@H_N@Z,\ ; __crt_strtox::parse_integer<ulong,__crt_strtox::c_string_character_source<char>,0>(__crt_cached_ptd_host &,__crt_strtox::c_string_character_source<char>,int,bool)
                  rva sub_7FF6E3441994, \
                  rva stru_7FF6E346AA84>
RUNTIME_FUNCTION <rva sub_7FF6E3441994, \
                  rva algn_7FF6E3441B97,\
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva sub_7FF6E3441B98, \
                  rva algn_7FF6E3441D9B,\
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva sub_7FF6E3441D9C, \
                  rva algn_7FF6E3441F9F,\
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva unknown_libname_70,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E34420BA,\
                  rva stru_7FF6E346AAA0>
RUNTIME_FUNCTION <rva unknown_libname_73,\ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_74,\
                  rva stru_7FF6E346AAA0>
RUNTIME_FUNCTION <rva unknown_libname_75,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E34423DD,\
                  rva stru_7FF6E346AA18>
RUNTIME_FUNCTION <rva sub_7FF6E34423E0, \
                  rva algn_7FF6E3442747,\
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva sub_7FF6E3442748, \
                  rva algn_7FF6E34428CF,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva sub_7FF6E34428D0, \
                  rva algn_7FF6E3442D3D,\
                  rva stru_7FF6E346AA2C>
RUNTIME_FUNCTION <rva sub_7FF6E3442DBC, \
                  rva algn_7FF6E3443015,\
                  rva stru_7FF6E346AA74>
RUNTIME_FUNCTION <rva unknown_libname_77,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E34430EA,\
                  rva stru_7FF6E346AA68>
RUNTIME_FUNCTION <rva unknown_libname_78,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E34431A2,\
                  rva stru_7FF6E346AA68>
RUNTIME_FUNCTION <rva unknown_libname_79,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E344323D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?update_locale_slow@__crt_cached_ptd_host@@AEAAXXZ,\ ; __crt_cached_ptd_host::update_locale_slow(void)
                  rva algn_7FF6E34432B6,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva unknown_libname_80,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E344335B,\
                  rva stru_7FF6E346A9C8>
RUNTIME_FUNCTION <rva __stdio_common_vsprintf_s,\
                  rva algn_7FF6E344346D,\
                  rva stru_7FF6E346A9B4>
RUNTIME_FUNCTION <rva sub_7FF6E3443470, \
                  rva algn_7FF6E34434F6,\
                  rva stru_7FF6E346AADC>
RUNTIME_FUNCTION <rva sub_7FF6E3443500, \
                  rva loc_7FF6E34435CC, \
                  rva stru_7FF6E346AAA8>
RUNTIME_FUNCTION <rva loc_7FF6E34435CC, \
                  rva loc_7FF6E34436D9, \
                  rva stru_7FF6E346AAB8>
RUNTIME_FUNCTION <rva loc_7FF6E34436D9, \
                  rva localeconv, \
                  rva stru_7FF6E346AACC>
RUNTIME_FUNCTION <rva localeconv, \
                  rva algn_7FF6E3443903,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_initialize_locks_0,\
                  rva __vcrt_lock, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __vcrt_uninitialize_locks_0,\
                  rva algn_7FF6E344399F,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _lock_locales, \
                  rva algn_7FF6E34439D7,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ??$?RV_lambda_9bd929c17696992ce54f1d748594fc62_@@AEAV_lambda_082c17da81b0962e08c0587ee0fac50c_@@V_lambda_9c08ac857f4975304d44e9f601d9b878_@@@?$__crt_seh_guarded_call@PEAD@@QEAAPEAD$$QEAV_lambda_9bd929c17696992ce54f1d748594fc62_@@AEAV_lambda_082c17da81b0962e08c0587ee0fac50c_@@$$QEAV_lambda_9c08ac857f4975304d44e9f601d9b878_@@@Z,\ ; __crt_seh_guarded_call<char *>::operator()<_lambda_9bd929c17696992ce54f1d748594fc62_,_lambda_082c17da81b0962e08c0587ee0fac50c_ &,_lambda_9c08ac857f4975304d44e9f601d9b878_>(_lambda_9bd929c17696992ce54f1d748594fc62_ &&,_lambda_082c17da81b0962e08c0587ee0fac50c_ &,_lambda_9c08ac857f4975304d44e9f601d9b878_ &&)
                  rva algn_7FF6E3443A35,\
                  rva stru_7FF6E346AB14>
RUNTIME_FUNCTION <rva sub_7FF6E3443A38, \
                  rva algn_7FF6E3443CD7,\
                  rva stru_7FF6E346AAFC>
RUNTIME_FUNCTION <rva setlocale, \
                  rva __pctype_func, \
                  rva stru_7FF6E346AAF4>
RUNTIME_FUNCTION <rva __pctype_func, \
                  rva algn_7FF6E3443D53,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva islower, \
                  rva algn_7FF6E3443E06,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva isupper, \
                  rva algn_7FF6E3443EB6,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ___lc_codepage_func,\
                  rva algn_7FF6E3443EE7,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ___lc_locale_name_func,\
                  rva algn_7FF6E3443F1A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ___mb_cur_max_func,\
                  rva algn_7FF6E3443F4B,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3443F4C, \
                  rva _wcsdup, \
                  rva stru_7FF6E346AB38>
RUNTIME_FUNCTION <rva _wcsdup, \
                  rva algn_7FF6E3444612,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva sub_7FF6E3444614, \
                  rva algn_7FF6E34446E3,\
                  rva stru_7FF6E346AB60>
RUNTIME_FUNCTION <rva sub_7FF6E34446E4, \
                  rva algn_7FF6E3444709,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __acrt_errno_map_os_error_ptd,\
                  rva algn_7FF6E344472E,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E3444730, \
                  rva algn_7FF6E3444753,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3444754, \
                  rva algn_7FF6E3444777,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3444778, \
                  rva __acrt_iob_func, \
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva __acrt_uninitialize_stdio,\
                  rva algn_7FF6E3444907,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _get_stream_buffer_pointers,\
                  rva algn_7FF6E344494F,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?_fclose_internal@@YAHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z,\ ; _fclose_internal(_iobuf * const,__crt_cached_ptd_host &)
                  rva algn_7FF6E34449E2,\
                  rva stru_7FF6E346AB90>
RUNTIME_FUNCTION <rva ?_fclose_nolock_internal@@YAHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z,\ ; _fclose_nolock_internal(_iobuf * const,__crt_cached_ptd_host &)
                  rva algn_7FF6E3444A89,\
                  rva stru_7FF6E346AB80>
RUNTIME_FUNCTION <rva fclose, \
                  rva sub_7FF6E3444B24, \
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva sub_7FF6E3444B24, \ ; __crt_seh_guarded_call<void>::operator()<_lambda_886d6c58226a84441f68b9f2b8217b83_,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_>(_lambda_886d6c58226a84441f68b9f2b8217b83_ &&,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_ &&)
                  rva ??$?RV_lambda_886d6c58226a84441f68b9f2b8217b83_@@AEAV_lambda_ab61a845afdef5b7c387490eaf3616ee_@@V_lambda_f7f22ab5edc0698d5f6905b0d3f44752_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_886d6c58226a84441f68b9f2b8217b83_@@AEAV_lambda_ab61a845afdef5b7c387490eaf3616ee_@@$$QEAV_lambda_f7f22ab5edc0698d5f6905b0d3f44752_@@@Z,\
                  rva stru_7FF6E346ABBC>
RUNTIME_FUNCTION <rva ??$?RV_lambda_886d6c58226a84441f68b9f2b8217b83_@@AEAV_lambda_ab61a845afdef5b7c387490eaf3616ee_@@V_lambda_f7f22ab5edc0698d5f6905b0d3f44752_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_886d6c58226a84441f68b9f2b8217b83_@@AEAV_lambda_ab61a845afdef5b7c387490eaf3616ee_@@$$QEAV_lambda_f7f22ab5edc0698d5f6905b0d3f44752_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_886d6c58226a84441f68b9f2b8217b83_,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_>(_lambda_886d6c58226a84441f68b9f2b8217b83_ &&,_lambda_ab61a845afdef5b7c387490eaf3616ee_ &,_lambda_f7f22ab5edc0698d5f6905b0d3f44752_ &&)
                  rva algn_7FF6E3444CA1,\
                  rva stru_7FF6E346ABE0>
RUNTIME_FUNCTION <rva ??$?RV_lambda_c376a267cfb53b6959b3b692ec76b120_@@AEAV_lambda_9a32fed5bf61b6b509b2d3f6003082a1_@@V_lambda_572fbb9fa0ab338edf41edfd4b5fcc8d_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_c376a267cfb53b6959b3b692ec76b120_@@AEAV_lambda_9a32fed5bf61b6b509b2d3f6003082a1_@@$$QEAV_lambda_572fbb9fa0ab338edf41edfd4b5fcc8d_@@@Z,\ ; __crt_seh_guarded_call<int>::operator()<_lambda_c376a267cfb53b6959b3b692ec76b120_,_lambda_9a32fed5bf61b6b509b2d3f6003082a1_ &,_lambda_572fbb9fa0ab338edf41edfd4b5fcc8d_>(_lambda_c376a267cfb53b6959b3b692ec76b120_ &&,_lambda_9a32fed5bf61b6b509b2d3f6003082a1_ &,_lambda_572fbb9fa0ab338edf41edfd4b5fcc8d_ &&)
                  rva ?common_flush_all@@YAH_N@Z,\ ; common_flush_all(bool)
                  rva stru_7FF6E346AC08>
RUNTIME_FUNCTION <rva ?common_flush_all@@YAH_N@Z,\ ; common_flush_all(bool)
                  rva algn_7FF6E3444D41,\
                  rva stru_7FF6E346ABB4>
RUNTIME_FUNCTION <rva __acrt_stdio_flush_nolock,\
                  rva _fflush_nolock, \
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva _fflush_nolock, \
                  rva algn_7FF6E3444EA2,\
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva fflush, \
                  rva algn_7FF6E3444F13,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva _fgetc_nolock, \
                  rva algn_7FF6E3444F57,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva fgetc, \
                  rva algn_7FF6E344506B,\
                  rva stru_7FF6E346AC2C>
RUNTIME_FUNCTION <rva fgetpos, \
                  rva algn_7FF6E34450B7,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?_fputc_internal@@YAHHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z,\ ; _fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)
                  rva sub_7FF6E344521C, \
                  rva stru_7FF6E346AC60>
RUNTIME_FUNCTION <rva sub_7FF6E344521C, \
                  rva sub_7FF6E34452B4, \
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva sub_7FF6E34452B4, \
                  rva algn_7FF6E344551E,\
                  rva stru_7FF6E346ACC8>
RUNTIME_FUNCTION <rva fread, \
                  rva algn_7FF6E344553D,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva fread_s, \
                  rva algn_7FF6E34455E5,\
                  rva stru_7FF6E346AC98>
RUNTIME_FUNCTION <rva fsetpos, \
                  rva algn_7FF6E344561D,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ?common_fseek@@YAHV__crt_stdio_stream@@_JHAEAV__crt_cached_ptd_host@@@Z,\ ; common_fseek(__crt_stdio_stream,__int64,int,__crt_cached_ptd_host &)
                  rva algn_7FF6E34456BB,\
                  rva stru_7FF6E346ACE0>
RUNTIME_FUNCTION <rva sub_7FF6E34456BC, \
                  rva algn_7FF6E34457B6,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva ?common_fseek_nolock@@YAHV__crt_stdio_stream@@_JHAEAV__crt_cached_ptd_host@@@Z,\ ; common_fseek_nolock(__crt_stdio_stream,__int64,int,__crt_cached_ptd_host &)
                  rva algn_7FF6E34458A2,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva _fseeki64, \ ; __crt_seh_guarded_call<unsigned __int64>::operator()<_lambda_5d4c3fee44080f75d5d9762853974fe0_,_lambda_532e024f4337e6fc7ad266c2bef9f4ed_ &,_lambda_c87bdc10097eb2402edb8ba9bdf0697b_>(_lambda_5d4c3fee44080f75d5d9762853974fe0_ &&,_lambda_532e024f4337e6fc7ad266c2bef9f4ed_ &,_lambda_c87bdc10097eb2402edb8ba9bdf0697b_ &&)
                  rva ??$?RV_lambda_5d4c3fee44080f75d5d9762853974fe0_@@AEAV_lambda_532e024f4337e6fc7ad266c2bef9f4ed_@@V_lambda_c87bdc10097eb2402edb8ba9bdf0697b_@@@?$__crt_seh_guarded_call@_K@@QEAA_K$$QEAV_lambda_5d4c3fee44080f75d5d9762853974fe0_@@AEAV_lambda_532e024f4337e6fc7ad266c2bef9f4ed_@@$$QEAV_lambda_c87bdc10097eb2402edb8ba9bdf0697b_@@@Z,\
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva ??$?RV_lambda_5d4c3fee44080f75d5d9762853974fe0_@@AEAV_lambda_532e024f4337e6fc7ad266c2bef9f4ed_@@V_lambda_c87bdc10097eb2402edb8ba9bdf0697b_@@@?$__crt_seh_guarded_call@_K@@QEAA_K$$QEAV_lambda_5d4c3fee44080f75d5d9762853974fe0_@@AEAV_lambda_532e024f4337e6fc7ad266c2bef9f4ed_@@$$QEAV_lambda_c87bdc10097eb2402edb8ba9bdf0697b_@@@Z,\ ; __crt_seh_guarded_call<unsigned __int64>::operator()<_lambda_5d4c3fee44080f75d5d9762853974fe0_,_lambda_532e024f4337e6fc7ad266c2bef9f4ed_ &,_lambda_c87bdc10097eb2402edb8ba9bdf0697b_>(_lambda_5d4c3fee44080f75d5d9762853974fe0_ &&,_lambda_532e024f4337e6fc7ad266c2bef9f4ed_ &,_lambda_c87bdc10097eb2402edb8ba9bdf0697b_ &&)
                  rva algn_7FF6E344597B,\
                  rva stru_7FF6E346AD40>
RUNTIME_FUNCTION <rva ??R_lambda_26974eb511f701c600fccfa2a97a8e1b_@@QEBA_KXZ,\ ; _lambda_26974eb511f701c600fccfa2a97a8e1b_::operator()(void)
                  rva algn_7FF6E34459FA,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva _fwrite_internal, \
                  rva _fwrite_nolock_internal,\
                  rva stru_7FF6E346AD38>
RUNTIME_FUNCTION <rva _fwrite_nolock_internal,\
                  rva algn_7FF6E3445CA9,\
                  rva stru_7FF6E346AD1C>
RUNTIME_FUNCTION <rva fwrite, \
                  rva algn_7FF6E3445D4D,\
                  rva stru_7FF6E346AD0C>
RUNTIME_FUNCTION <rva ??$?RV_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_@@AEAV_lambda_9a20e10065b92b5193c3597a66cba9d4_@@V_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_@@AEAV_lambda_9a20e10065b92b5193c3597a66cba9d4_@@$$QEAV_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_@@@Z,\ ; __crt_seh_guarded_call<int>::operator()<_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_,_lambda_9a20e10065b92b5193c3597a66cba9d4_ &,_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_>(_lambda_a81aa23bb2c9577c1e55b9d0b57d9de4_ &&,_lambda_9a20e10065b92b5193c3597a66cba9d4_ &,_lambda_cb3a421ff86d8a5f008440ee6b28fa9c_ &&)
                  rva algn_7FF6E3445D8D,\
                  rva stru_7FF6E346AD74>
RUNTIME_FUNCTION <rva unknown_libname_81,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E3445E77,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva setvbuf, \
                  rva algn_7FF6E3445FAD,\
                  rva stru_7FF6E346AD64>
RUNTIME_FUNCTION <rva _ungetc_nolock, \
                  rva algn_7FF6E34460CE,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ungetc, \
                  rva algn_7FF6E3446128,\
                  rva stru_7FF6E346AD98>
RUNTIME_FUNCTION <rva ??0_LocaleUpdate@@QEAA@QEAU__crt_locale_pointers@@@Z,\ ; _LocaleUpdate::_LocaleUpdate(__crt_locale_pointers * const)
                  rva algn_7FF6E34461D3,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E34461E0, \
                  rva loc_7FF6E3446428, \
                  rva stru_7FF6E346ADBC>
RUNTIME_FUNCTION <rva loc_7FF6E3446428, \
                  rva loc_7FF6E3446618, \
                  rva stru_7FF6E346ADD4>
RUNTIME_FUNCTION <rva loc_7FF6E3446618, \
                  rva memcpy_s, \
                  rva stru_7FF6E346ADE8>
RUNTIME_FUNCTION <rva memcpy_s, \
                  rva algn_7FF6E34466F3,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva abort, \
                  rva algn_7FF6E344674A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ??$__acrt_convert_wcs_mbs_cp@D_WV_lambda_7c9dea7b4ca7285d2cdb541a38da6275_@@U__crt_win32_buffer_internal_dynamic_resizing@@@@YAHQEBDAEAV?$__crt_win32_buffer@_WU__crt_win32_buffer_internal_dynamic_resizing@@@@AEBV_lambda_7c9dea7b4ca7285d2cdb541a38da6275_@@I@Z,\ ; __acrt_convert_wcs_mbs_cp<char,wchar_t,_lambda_7c9dea7b4ca7285d2cdb541a38da6275_,__crt_win32_buffer_internal_dynamic_resizing>(char const * const,__crt_win32_buffer<wchar_t,__crt_win32_buffer_internal_dynamic_resizing> &,_lambda_7c9dea7b4ca7285d2cdb541a38da6275_ const &,uint)
                  rva algn_7FF6E3446901,\
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva ??$__acrt_convert_wcs_mbs_cp@_WDV_lambda_f788ae46380686e8b737efdd8c720d07_@@U__crt_win32_buffer_no_resizing@@@@YAHQEB_WAEAV?$__crt_win32_buffer@DU__crt_win32_buffer_no_resizing@@@@AEBV_lambda_f788ae46380686e8b737efdd8c720d07_@@I@Z,\ ; __acrt_convert_wcs_mbs_cp<wchar_t,char,_lambda_f788ae46380686e8b737efdd8c720d07_,__crt_win32_buffer_no_resizing>(wchar_t const * const,__crt_win32_buffer<char,__crt_win32_buffer_no_resizing> &,_lambda_f788ae46380686e8b737efdd8c720d07_ const &,uint)
                  rva algn_7FF6E3446A1D,\
                  rva stru_7FF6E346ADF8>
RUNTIME_FUNCTION <rva sub_7FF6E3446B8C, \
                  rva sub_7FF6E3446D80, \
                  rva stru_7FF6E346AAA0>
RUNTIME_FUNCTION <rva sub_7FF6E3446D80, \
                  rva algn_7FF6E3446DB3,\
                  rva stru_7FF6E346AE0C>
RUNTIME_FUNCTION <rva _query_new_handler,\
                  rva algn_7FF6E3446E07,\
                  rva stru_7FF6E346AE18>
RUNTIME_FUNCTION <rva _set_new_handler, \
                  rva algn_7FF6E3446E69,\
                  rva stru_7FF6E346AE40>
RUNTIME_FUNCTION <rva sub_7FF6E3446E7C, \
                  rva algn_7FF6E3446FE7,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva sub_7FF6E3447084, \
                  rva algn_7FF6E3447241,\
                  rva stru_7FF6E346A1C0>
RUNTIME_FUNCTION <rva __acrt_allocate_buffer_for_argv,\
                  rva algn_7FF6E34472A1,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E34472A4, \
                  rva algn_7FF6E3447421,\
                  rva stru_7FF6E346AE6C>
RUNTIME_FUNCTION <rva ??$common_initialize_environment_nolock@D@@YAHXZ,\ ; common_initialize_environment_nolock<char>(void)
                  rva algn_7FF6E3447497,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ??$create_environment@D@@YAQEAPEADQEAD@Z,\ ; create_environment<char>(char * const)
                  rva algn_7FF6E34475AA,\
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva unknown_libname_82,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E34475ED,\
                  rva stru_7FF6E346AE90>
RUNTIME_FUNCTION <rva ??$initialize_environment_by_cloning_nolock@D@@YAHXZ,\ ; initialize_environment_by_cloning_nolock<char>(void)
                  rva algn_7FF6E34476CE,\
                  rva stru_7FF6E346AE9C>
RUNTIME_FUNCTION <rva sub_7FF6E34476D0, \
                  rva algn_7FF6E34476EA,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E34476EC, \
                  rva algn_7FF6E3447706,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva unknown_libname_83,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E3447743,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __dcrt_uninitialize_environments_nolock,\
                  rva algn_7FF6E3447787,\
                  rva stru_7FF6E346AE80>
RUNTIME_FUNCTION <rva unknown_libname_84,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E34477D6,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E34477E0, \
                  rva algn_7FF6E3447816,\
                  rva stru_7FF6E346AE90>
RUNTIME_FUNCTION <rva sub_7FF6E3447818, \ ; __crt_seh_guarded_call<void>::operator()<_lambda_99476a1ad63dd22509b5d3e65b0ffc95_,_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_ &,_lambda_f7424dd8d45958661754dc4f2697e9c3_>(_lambda_99476a1ad63dd22509b5d3e65b0ffc95_ &&,_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_ &,_lambda_f7424dd8d45958661754dc4f2697e9c3_ &&)
                  rva ??$?RV_lambda_99476a1ad63dd22509b5d3e65b0ffc95_@@AEAV_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_@@V_lambda_f7424dd8d45958661754dc4f2697e9c3_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_99476a1ad63dd22509b5d3e65b0ffc95_@@AEAV_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_@@$$QEAV_lambda_f7424dd8d45958661754dc4f2697e9c3_@@@Z,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ??$?RV_lambda_99476a1ad63dd22509b5d3e65b0ffc95_@@AEAV_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_@@V_lambda_f7424dd8d45958661754dc4f2697e9c3_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_99476a1ad63dd22509b5d3e65b0ffc95_@@AEAV_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_@@$$QEAV_lambda_f7424dd8d45958661754dc4f2697e9c3_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_99476a1ad63dd22509b5d3e65b0ffc95_,_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_ &,_lambda_f7424dd8d45958661754dc4f2697e9c3_>(_lambda_99476a1ad63dd22509b5d3e65b0ffc95_ &&,_lambda_ad1ced32f4ac17aa236e5ef05d6b3b7c_ &,_lambda_f7424dd8d45958661754dc4f2697e9c3_ &&)
                  rva sub_7FF6E344788C, \
                  rva stru_7FF6E346AF08>
RUNTIME_FUNCTION <rva sub_7FF6E344788C, \ ; common_exit(int,_crt_exit_cleanup_mode,_crt_exit_return_mode)
                  rva ?common_exit@@YAXHW4_crt_exit_cleanup_mode@@W4_crt_exit_return_mode@@@Z,\
                  rva stru_7FF6E346AEE8>
RUNTIME_FUNCTION <rva ?common_exit@@YAXHW4_crt_exit_cleanup_mode@@W4_crt_exit_return_mode@@@Z,\ ; common_exit(int,_crt_exit_cleanup_mode,_crt_exit_return_mode)
                  rva algn_7FF6E3447A2F,\
                  rva stru_7FF6E346AEC8>
RUNTIME_FUNCTION <rva sub_7FF6E3447A30, \
                  rva algn_7FF6E3447A5D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?try_cor_exit_process@@YAXI@Z,\ ; try_cor_exit_process(uint)
                  rva sub_7FF6E3447AC4, \
                  rva stru_7FF6E346AEB0>
RUNTIME_FUNCTION <rva sub_7FF6E3447AF8, \
                  rva exit, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _set_fmode, \
                  rva algn_7FF6E3447B7D,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_initialize_command_line,\
                  rva algn_7FF6E3447BA5,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ??$?RV_lambda_d67e8342c384adda8f857579ab50b2ae_@@AEAV_lambda_30712929f77e709619002f448b6a9510_@@V_lambda_4525336fd7e478d965fb7ca7a337cad8_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_d67e8342c384adda8f857579ab50b2ae_@@AEAV_lambda_30712929f77e709619002f448b6a9510_@@$$QEAV_lambda_4525336fd7e478d965fb7ca7a337cad8_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_d67e8342c384adda8f857579ab50b2ae_,_lambda_30712929f77e709619002f448b6a9510_ &,_lambda_4525336fd7e478d965fb7ca7a337cad8_>(_lambda_d67e8342c384adda8f857579ab50b2ae_ &&,_lambda_30712929f77e709619002f448b6a9510_ &,_lambda_4525336fd7e478d965fb7ca7a337cad8_ &&)
                  rva algn_7FF6E3447CF2,\
                  rva stru_7FF6E346B04C>
RUNTIME_FUNCTION <rva ??$?RV_lambda_9431c60049192bb82166e0947f95a2e9_@@AEAV_lambda_85fa512c59a4d94d4a89f575eefd92a6_@@V_lambda_487febba6ca58d9ce348204d67e1dba3_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_9431c60049192bb82166e0947f95a2e9_@@AEAV_lambda_85fa512c59a4d94d4a89f575eefd92a6_@@$$QEAV_lambda_487febba6ca58d9ce348204d67e1dba3_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_9431c60049192bb82166e0947f95a2e9_,_lambda_85fa512c59a4d94d4a89f575eefd92a6_ &,_lambda_487febba6ca58d9ce348204d67e1dba3_>(_lambda_9431c60049192bb82166e0947f95a2e9_ &&,_lambda_85fa512c59a4d94d4a89f575eefd92a6_ &,_lambda_487febba6ca58d9ce348204d67e1dba3_ &&)
                  rva algn_7FF6E3447D62,\
                  rva stru_7FF6E346B024>
RUNTIME_FUNCTION <rva ??$?RV_lambda_5df02c53a8f32f81fd64e5bbb78039f1_@@AEAV_lambda_2af78c5f5901b1372d98f9ab3177dfa6_@@AEAV_lambda_f51fe5fd7c79a33db34fc9310f277369_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_5df02c53a8f32f81fd64e5bbb78039f1_@@AEAV_lambda_2af78c5f5901b1372d98f9ab3177dfa6_@@AEAV_lambda_f51fe5fd7c79a33db34fc9310f277369_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_5df02c53a8f32f81fd64e5bbb78039f1_,_lambda_2af78c5f5901b1372d98f9ab3177dfa6_ &,_lambda_f51fe5fd7c79a33db34fc9310f277369_ &>(_lambda_5df02c53a8f32f81fd64e5bbb78039f1_ &&,_lambda_2af78c5f5901b1372d98f9ab3177dfa6_ &,_lambda_f51fe5fd7c79a33db34fc9310f277369_ &)
                  rva algn_7FF6E3447D8D,\
                  rva stru_7FF6E346B070>
RUNTIME_FUNCTION <rva ??R_lambda_2a444430fde8c29194d880d93eed5e8f_@@QEBA@XZ,\ ; _lambda_2a444430fde8c29194d880d93eed5e8f_::operator()(void)
                  rva algn_7FF6E3447E1E,\
                  rva stru_7FF6E346AFCC>
RUNTIME_FUNCTION <rva ?commit_locale_name@_expandlocale_locale_name_cache@@QEAAXQEB_W_K@Z,\ ; _expandlocale_locale_name_cache::commit_locale_name(wchar_t const * const,unsigned __int64)
                  rva algn_7FF6E3447E97,\
                  rva stru_7FF6E346A600>
RUNTIME_FUNCTION <rva __acrt_copy_locale_name,\
                  rva algn_7FF6E3447F1A,\
                  rva stru_7FF6E346A600>
RUNTIME_FUNCTION <rva __acrt_uninitialize_locale,\
                  rva algn_7FF6E3447F56,\
                  rva stru_7FF6E346AFC4>
RUNTIME_FUNCTION <rva __lc_lctowcs, \
                  rva algn_7FF6E3447FFA,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva __lc_wcstolc, \
                  rva sub_7FF6E3448160, \
                  rva stru_7FF6E346AF64>
RUNTIME_FUNCTION <rva sub_7FF6E3448160, \
                  rva algn_7FF6E34481C9,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _copytlocinfo_nolock,\
                  rva algn_7FF6E344828A,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _expandlocale, \
                  rva algn_7FF6E344870D,\
                  rva stru_7FF6E346AF34>
RUNTIME_FUNCTION <rva sub_7FF6E3448710, \
                  rva _wsetlocale, \
                  rva stru_7FF6E346AF54>
RUNTIME_FUNCTION <rva _wsetlocale, \
                  rva algn_7FF6E3448819,\
                  rva stru_7FF6E346AF2C>
RUNTIME_FUNCTION <rva _wsetlocale_get_all,\
                  rva algn_7FF6E3448A06,\
                  rva stru_7FF6E346AA84>
RUNTIME_FUNCTION <rva _wsetlocale_nolock,\
                  rva algn_7FF6E3448C9D,\
                  rva stru_7FF6E346AFA0>
RUNTIME_FUNCTION <rva sub_7FF6E3448CA0, \
                  rva algn_7FF6E3449006,\
                  rva stru_7FF6E346AF7C>
RUNTIME_FUNCTION <rva parse_bcp47, \
                  rva algn_7FF6E3449203,\
                  rva stru_7FF6E346B000>
RUNTIME_FUNCTION <rva parse_bcp47_code_page,\
                  rva algn_7FF6E344924B,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva parse_bcp47_language,\
                  rva algn_7FF6E34492D5,\
                  rva stru_7FF6E346AA68>
RUNTIME_FUNCTION <rva parse_bcp47_region,\
                  rva algn_7FF6E34493CB,\
                  rva stru_7FF6E346AFEC>
RUNTIME_FUNCTION <rva parse_bcp47_script,\
                  rva algn_7FF6E344945B,\
                  rva stru_7FF6E346AA68>
RUNTIME_FUNCTION <rva string_is_alpha, \
                  rva algn_7FF6E34494C5,\
                  rva stru_7FF6E346AFD8>
RUNTIME_FUNCTION <rva _set_new_mode, \
                  rva algn_7FF6E344950B,\
                  rva stru_7FF6E346B090>
RUNTIME_FUNCTION <rva ??$?RV_lambda_b8c45f8f788dd370798f47cfe8ac3a86_@@AEAV_lambda_4e60a939b0d047cfe11ddc22648dfba9_@@V_lambda_332c3edc96d0294ec56c57d38c1cdfd5_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_b8c45f8f788dd370798f47cfe8ac3a86_@@AEAV_lambda_4e60a939b0d047cfe11ddc22648dfba9_@@$$QEAV_lambda_332c3edc96d0294ec56c57d38c1cdfd5_@@@Z,\ ; __crt_seh_guarded_call<int>::operator()<_lambda_b8c45f8f788dd370798f47cfe8ac3a86_,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_>(_lambda_b8c45f8f788dd370798f47cfe8ac3a86_ &&,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_ &&)
                  rva algn_7FF6E344954F,\
                  rva stru_7FF6E346B0B8>
RUNTIME_FUNCTION <rva ??$?RV_lambda_b8c45f8f788dd370798f47cfe8ac3a86_@@AEAV_lambda_4e60a939b0d047cfe11ddc22648dfba9_@@V_lambda_332c3edc96d0294ec56c57d38c1cdfd5_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_b8c45f8f788dd370798f47cfe8ac3a86_@@AEAV_lambda_4e60a939b0d047cfe11ddc22648dfba9_@@$$QEAV_lambda_332c3edc96d0294ec56c57d38c1cdfd5_@@@Z_0,\ ; __crt_seh_guarded_call<int>::operator()<_lambda_b8c45f8f788dd370798f47cfe8ac3a86_,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_>(_lambda_b8c45f8f788dd370798f47cfe8ac3a86_ &&,_lambda_4e60a939b0d047cfe11ddc22648dfba9_ &,_lambda_332c3edc96d0294ec56c57d38c1cdfd5_ &&)
                  rva algn_7FF6E344958B,\
                  rva stru_7FF6E346B0DC>
RUNTIME_FUNCTION <rva sub_7FF6E344958C, \
                  rva algn_7FF6E344973A,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva sub_7FF6E344973C, \
                  rva algn_7FF6E3449851,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva _execute_onexit_table,\
                  rva algn_7FF6E34498A7,\
                  rva stru_7FF6E346B0A0>
RUNTIME_FUNCTION <rva _register_onexit_function,\
                  rva initialize_global_variables,\
                  rva stru_7FF6E346B098>
RUNTIME_FUNCTION <rva initialize_c, \
                  rva algn_7FF6E344994F,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva uninitialize_environment,\
                  rva initialize_pointers,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva initialize_pointers,\
                  rva algn_7FF6E344999D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva uninitialize_allocated_memory,\
                  rva uninitialize_allocated_io_buffers,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva uninitialize_allocated_io_buffers,\
                  rva algn_7FF6E3449A43,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_uninitialize,\
                  rva algn_7FF6E3449A8D,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3449A90, \
                  rva algn_7FF6E3449AAF,\
                  rva stru_7FF6E346B100>
RUNTIME_FUNCTION <rva strcpy_s, \
                  rva algn_7FF6E3449B0F,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ??$parse_integer@_KV?$c_string_character_source@_W@__crt_strtox@@$00@__crt_strtox@@YA_KAEAV__crt_cached_ptd_host@@V?$c_string_character_source@_W@0@H_N@Z,\ ; __crt_strtox::parse_integer<unsigned __int64,__crt_strtox::c_string_character_source<wchar_t>,1>(__crt_cached_ptd_host &,__crt_strtox::c_string_character_source<wchar_t>,int,bool)
                  rva algn_7FF6E344A2AA,\
                  rva stru_7FF6E346B120>
RUNTIME_FUNCTION <rva unknown_libname_85,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E344A35C,\
                  rva stru_7FF6E346AD0C>
RUNTIME_FUNCTION <rva ??$?RV_lambda_72d1df2b273a38828b1ce30cbf4cdab5_@@AEAV_lambda_876a65b173b8412d3a47c70a915b0cf4_@@V_lambda_41932305e351933ebe8f8be3ed8bb5dc_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_72d1df2b273a38828b1ce30cbf4cdab5_@@AEAV_lambda_876a65b173b8412d3a47c70a915b0cf4_@@$$QEAV_lambda_41932305e351933ebe8f8be3ed8bb5dc_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_72d1df2b273a38828b1ce30cbf4cdab5_,_lambda_876a65b173b8412d3a47c70a915b0cf4_ &,_lambda_41932305e351933ebe8f8be3ed8bb5dc_>(_lambda_72d1df2b273a38828b1ce30cbf4cdab5_ &&,_lambda_876a65b173b8412d3a47c70a915b0cf4_ &,_lambda_41932305e351933ebe8f8be3ed8bb5dc_ &&)
                  rva algn_7FF6E344A3CB,\
                  rva stru_7FF6E346B170>
RUNTIME_FUNCTION <rva ??$?RV_lambda_fb3a7dec4e47f37f22dae91bb15c9095_@@AEAV_lambda_698284760c8add0bfb0756c19673e34b_@@V_lambda_dfb8eca1e75fef3034a8fb18dd509707_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_fb3a7dec4e47f37f22dae91bb15c9095_@@AEAV_lambda_698284760c8add0bfb0756c19673e34b_@@$$QEAV_lambda_dfb8eca1e75fef3034a8fb18dd509707_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_fb3a7dec4e47f37f22dae91bb15c9095_,_lambda_698284760c8add0bfb0756c19673e34b_ &,_lambda_dfb8eca1e75fef3034a8fb18dd509707_>(_lambda_fb3a7dec4e47f37f22dae91bb15c9095_ &&,_lambda_698284760c8add0bfb0756c19673e34b_ &,_lambda_dfb8eca1e75fef3034a8fb18dd509707_ &&)
                  rva algn_7FF6E344A409,\
                  rva stru_7FF6E346B1DC>
RUNTIME_FUNCTION <rva ??$?RV_lambda_5e887d1dcbef67a5eb4283622ba103bf_@@AEAV_lambda_4466841279450cc726390878d4a41900_@@V_lambda_341c25c0346d94847f1f3c463c57e077_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_5e887d1dcbef67a5eb4283622ba103bf_@@AEAV_lambda_4466841279450cc726390878d4a41900_@@$$QEAV_lambda_341c25c0346d94847f1f3c463c57e077_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_5e887d1dcbef67a5eb4283622ba103bf_,_lambda_4466841279450cc726390878d4a41900_ &,_lambda_341c25c0346d94847f1f3c463c57e077_>(_lambda_5e887d1dcbef67a5eb4283622ba103bf_ &&,_lambda_4466841279450cc726390878d4a41900_ &,_lambda_341c25c0346d94847f1f3c463c57e077_ &&)
                  rva algn_7FF6E344A451,\
                  rva stru_7FF6E346B194>
RUNTIME_FUNCTION <rva ??$?RV_lambda_46352004c1216016012b18bd6f87e700_@@AEAV_lambda_3bd07e1a1191394380780325891bf33f_@@V_lambda_334532d3f185bcaa59b5be82d7d22bff_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_46352004c1216016012b18bd6f87e700_@@AEAV_lambda_3bd07e1a1191394380780325891bf33f_@@$$QEAV_lambda_334532d3f185bcaa59b5be82d7d22bff_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_46352004c1216016012b18bd6f87e700_,_lambda_3bd07e1a1191394380780325891bf33f_ &,_lambda_334532d3f185bcaa59b5be82d7d22bff_>(_lambda_46352004c1216016012b18bd6f87e700_ &&,_lambda_3bd07e1a1191394380780325891bf33f_ &,_lambda_334532d3f185bcaa59b5be82d7d22bff_ &&)
                  rva algn_7FF6E344A4B3,\
                  rva stru_7FF6E346B1B8>
RUNTIME_FUNCTION <rva ?construct_ptd_array@@YAXQEAU__acrt_ptd@@@Z,\ ; construct_ptd_array(__acrt_ptd * const)
                  rva algn_7FF6E344A581,\
                  rva stru_7FF6E346B160>
RUNTIME_FUNCTION <rva ?destroy_fls@@YAXPEAX@Z,\ ; destroy_fls(void *)
                  rva ?destroy_ptd_array@@YAXQEAU__acrt_ptd@@@Z,\ ; destroy_ptd_array(__acrt_ptd * const)
                  rva stru_7FF6E346B158>
RUNTIME_FUNCTION <rva ?destroy_ptd_array@@YAXQEAU__acrt_ptd@@@Z,\ ; destroy_ptd_array(__acrt_ptd * const)
                  rva algn_7FF6E344A699,\
                  rva stru_7FF6E346B168>
RUNTIME_FUNCTION <rva sub_7FF6E344A69C, \
                  rva algn_7FF6E344A751,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva ?replace_current_thread_locale_nolock@@YAXQEAU__acrt_ptd@@QEAU__crt_locale_data@@@Z,\ ; replace_current_thread_locale_nolock(__acrt_ptd * const,__crt_locale_data * const)
                  rva algn_7FF6E344A7BB,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E344A7BC, \
                  rva algn_7FF6E344A7D5,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344A7D8, \
                  rva algn_7FF6E344A81A,\
                  rva stru_7FF6E346AE80>
RUNTIME_FUNCTION <rva sub_7FF6E344A81C, \
                  rva sub_7FF6E344A8AC, \
                  rva stru_7FF6E346B144>
RUNTIME_FUNCTION <rva sub_7FF6E344A8AC, \
                  rva algn_7FF6E344A907,\
                  rva stru_7FF6E346B144>
RUNTIME_FUNCTION <rva sub_7FF6E344A908, \
                  rva __vcrt_uninitialize_ptd_0,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __vcrt_uninitialize_ptd_0,\
                  rva algn_7FF6E344A96E,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344A970, \
                  rva algn_7FF6E344AAEA,\
                  rva stru_7FF6E346B200>
RUNTIME_FUNCTION <rva sub_7FF6E344AAF0, \
                  rva loc_7FF6E344AAF6, \
                  rva stru_7FF6E346B21C>
RUNTIME_FUNCTION <rva loc_7FF6E344AAF6, \
                  rva loc_7FF6E344AC6F, \
                  rva stru_7FF6E346B224>
RUNTIME_FUNCTION <rva loc_7FF6E344AC6F, \
                  rva loc_7FF6E344ACA2, \
                  rva stru_7FF6E346B244>
RUNTIME_FUNCTION <rva loc_7FF6E344ACA2, \
                  rva loc_7FF6E344ACEE, \
                  rva stru_7FF6E346B25C>
RUNTIME_FUNCTION <rva loc_7FF6E344ACEE, \
                  rva loc_7FF6E344ADFF, \
                  rva stru_7FF6E346B270>
RUNTIME_FUNCTION <rva loc_7FF6E344ADFF, \
                  rva loc_7FF6E344AE08, \
                  rva stru_7FF6E346B288>
RUNTIME_FUNCTION <rva loc_7FF6E344AE08, \
                  rva loc_7FF6E344AE20, \
                  rva stru_7FF6E346B298>
RUNTIME_FUNCTION <rva loc_7FF6E344AE20, \
                  rva loc_7FF6E344AE35, \
                  rva stru_7FF6E346B2A8>
RUNTIME_FUNCTION <rva loc_7FF6E344AE35, \
                  rva loc_7FF6E344AE4D, \
                  rva stru_7FF6E346B2B8>
RUNTIME_FUNCTION <rva loc_7FF6E344AE4D, \
                  rva algn_7FF6E344AE62,\
                  rva stru_7FF6E346B2CC>
RUNTIME_FUNCTION <rva sub_7FF6E344AE70, \
                  rva algn_7FF6E344AE9A,\
                  rva stru_7FF6E3469CB8>
RUNTIME_FUNCTION <rva sub_7FF6E344AEA0, \
                  rva algn_7FF6E344B1AA,\
                  rva stru_7FF6E346B2E4>
RUNTIME_FUNCTION <rva sub_7FF6E344B1B0, \
                  rva algn_7FF6E344B1E3,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344B1F0, \
                  rva algn_7FF6E344B349,\
                  rva stru_7FF6E346B2DC>
RUNTIME_FUNCTION <rva sub_7FF6E344B36C, \
                  rva algn_7FF6E344B3DE,\
                  rva stru_7FF6E346B2F8>
RUNTIME_FUNCTION <rva _calloc_base, \
                  rva algn_7FF6E344B4A5,\
                  rva stru_7FF6E346B318>
RUNTIME_FUNCTION <rva _free_base, \
                  rva algn_7FF6E344B4EC,\
                  rva stru_7FF6E346B320>
RUNTIME_FUNCTION <rva _malloc_base, \
                  rva algn_7FF6E344B56E,\
                  rva stru_7FF6E346B328>
RUNTIME_FUNCTION <rva sub_7FF6E344B570, \
                  rva algn_7FF6E344B5A1,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E344B5A4, \
                  rva algn_7FF6E344B5D9,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E344B5DC, \
                  rva algn_7FF6E344B60D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E344B610, \
                  rva algn_7FF6E344B645,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?fp_format_a@@YAHQEBNPEAD_KQEAD2H_NIW4__acrt_rounding_mode@@AEAV__crt_cached_ptd_host@@@Z,\ ; fp_format_a(double const * const,char *,unsigned __int64,char * const,unsigned __int64,int,bool,uint,__acrt_rounding_mode,__crt_cached_ptd_host &)
                  rva algn_7FF6E344B9DB,\
                  rva stru_7FF6E346B374>
RUNTIME_FUNCTION <rva sub_7FF6E344B9DC, \ ; fp_format_e_internal(char * const,unsigned __int64,int,bool,uint,_strflt * const,bool,__crt_cached_ptd_host &)
                  rva ?fp_format_e_internal@@YAHQEAD_KH_NIQEAU_strflt@@2AEAV__crt_cached_ptd_host@@@Z,\
                  rva stru_7FF6E346B35C>
RUNTIME_FUNCTION <rva ?fp_format_e_internal@@YAHQEAD_KH_NIQEAU_strflt@@2AEAV__crt_cached_ptd_host@@@Z,\ ; fp_format_e_internal(char * const,unsigned __int64,int,bool,uint,_strflt * const,bool,__crt_cached_ptd_host &)
                  rva algn_7FF6E344BCC1,\
                  rva stru_7FF6E346B340>
RUNTIME_FUNCTION <rva ?fp_format_f@@YAHQEBNQEAD_K12HW4__acrt_rounding_mode@@AEAV__crt_cached_ptd_host@@@Z,\ ; fp_format_f(double const * const,char * const,unsigned __int64,char * const,unsigned __int64,int,__acrt_rounding_mode,__crt_cached_ptd_host &)
                  rva algn_7FF6E344BD99,\
                  rva stru_7FF6E346B390>
RUNTIME_FUNCTION <rva sub_7FF6E344BD9C, \
                  rva algn_7FF6E344BEE9,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva ?fp_format_g@@YAHQEBNQEAD_K12H_NIW4__acrt_rounding_mode@@AEAV__crt_cached_ptd_host@@@Z,\ ; fp_format_g(double const * const,char * const,unsigned __int64,char * const,unsigned __int64,int,bool,uint,__acrt_rounding_mode,__crt_cached_ptd_host &)
                  rva algn_7FF6E344C03E,\
                  rva stru_7FF6E346B3A4>
RUNTIME_FUNCTION <rva ?should_round_up@@YA_NQEBN_KFW4__acrt_rounding_mode@@@Z,\ ; should_round_up(double const * const,unsigned __int64,short,__acrt_rounding_mode)
                  rva algn_7FF6E344C156,\
                  rva stru_7FF6E346A1C0>
RUNTIME_FUNCTION <rva __acrt_fp_format, \
                  rva algn_7FF6E344C43D,\
                  rva stru_7FF6E346B330>
RUNTIME_FUNCTION <rva _wctomb_internal, \
                  rva _mbtowc_internal, \
                  rva stru_7FF6E346B3BC>
RUNTIME_FUNCTION <rva _mbtowc_internal, \
                  rva sub_7FF6E344C768, \
                  rva stru_7FF6E346AA00>
RUNTIME_FUNCTION <rva sub_7FF6E344C7A0, \
                  rva algn_7FF6E344C95D,\
                  rva stru_7FF6E346B3D0>
RUNTIME_FUNCTION <rva ?__c16rtomb_utf8@__crt_mbstring@@YA_KPEAD_SPEAU_Mbstatet@@AEAV__crt_cached_ptd_host@@@Z,\ ; __crt_mbstring::__c16rtomb_utf8(char *,char16_t,_Mbstatet *,__crt_cached_ptd_host &)
                  rva algn_7FF6E344CA03,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E344CA04, \
                  rva algn_7FF6E344CA4B,\
                  rva stru_7FF6E346B3EC>
RUNTIME_FUNCTION <rva sub_7FF6E344CA4C, \
                  rva algn_7FF6E344CC01,\
                  rva stru_7FF6E346B3F4>
RUNTIME_FUNCTION <rva _fileno, \
                  rva algn_7FF6E344CC2B,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_should_use_temporary_buffer,\
                  rva algn_7FF6E344CC8D,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __acrt_stdio_begin_temporary_buffering_nolock,\
                  rva algn_7FF6E344CD57,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva __acrt_stdio_end_temporary_buffering_nolock,\
                  rva algn_7FF6E344CD95,\
                  rva stru_7FF6E346B410>
RUNTIME_FUNCTION <rva sub_7FF6E344CD98, \
                  rva algn_7FF6E344CE95,\
                  rva stru_7FF6E346B438>
RUNTIME_FUNCTION <rva ?initialize_stdio_handles_nolock@@YAXXZ,\ ; initialize_stdio_handles_nolock(void)
                  rva __acrt_initialize_lowio,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva __acrt_initialize_lowio,\
                  rva algn_7FF6E344CFDB,\
                  rva stru_7FF6E346B418>
RUNTIME_FUNCTION <rva __acrt_uninitialize_lowio,\
                  rva LocaleEnumProc, \
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E344D030, \
                  rva algn_7FF6E344D08A,\
                  rva stru_7FF6E346B480>
RUNTIME_FUNCTION <rva sub_7FF6E344D0C4, \
                  rva algn_7FF6E344D276,\
                  rva stru_7FF6E346B464>
RUNTIME_FUNCTION <rva sub_7FF6E344D278, \
                  rva sub_7FF6E344D2D4, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E344D2D4, \
                  rva algn_7FF6E344D31E,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344D320, \
                  rva algn_7FF6E344D3E1,\
                  rva stru_7FF6E346B390>
RUNTIME_FUNCTION <rva sub_7FF6E344D3E4, \
                  rva FlsAlloc, \
                  rva stru_7FF6E346B454>
RUNTIME_FUNCTION <rva sub_7FF6E344D4B4, \
                  rva sub_7FF6E344D548, \
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva sub_7FF6E344D548, \
                  rva InitializeCriticalSectionEx,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E344D5C0, \
                  rva algn_7FF6E344D627,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva sub_7FF6E344D628, \
                  rva algn_7FF6E344D6AF,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva sub_7FF6E344D6B0, \
                  rva algn_7FF6E344D7A2,\
                  rva stru_7FF6E346B390>
RUNTIME_FUNCTION <rva sub_7FF6E344D7A4, \
                  rva algn_7FF6E344D806,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva __vcrt_thread_attach,\
                  rva sub_7FF6E344D81C, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344D81C, \
                  rva algn_7FF6E344D9C3,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344D9C4, \
                  rva sub_7FF6E344D9F4, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E344D9F4, \
                  rva algn_7FF6E344DA36,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_uninitialize_winapi_thunks,\
                  rva algn_7FF6E344DA79,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ?_mbstowcs_internal@@YAHPEA_KPEA_W_KPEBD2AEAV__crt_cached_ptd_host@@@Z,\ ; _mbstowcs_internal(unsigned __int64 *,wchar_t *,unsigned __int64,char const *,unsigned __int64,__crt_cached_ptd_host &)
                  rva algn_7FF6E344DB9B,\
                  rva stru_7FF6E346B4C8>
RUNTIME_FUNCTION <rva sub_7FF6E344DB9C, \
                  rva mbstowcs_s, \
                  rva stru_7FF6E346B4A4>
RUNTIME_FUNCTION <rva mbstowcs_s, \ ; _wcstombs_internal(unsigned __int64 *,char *,unsigned __int64,wchar_t const *,unsigned __int64,__crt_cached_ptd_host &)
                  rva ?_wcstombs_internal@@YAHPEA_KPEAD_KPEB_W2AEAV__crt_cached_ptd_host@@@Z,\
                  rva stru_7FF6E346AD0C>
RUNTIME_FUNCTION <rva ?_wcstombs_internal@@YAHPEA_KPEAD_KPEB_W2AEAV__crt_cached_ptd_host@@@Z,\ ; _wcstombs_internal(unsigned __int64 *,char *,unsigned __int64,wchar_t const *,unsigned __int64,__crt_cached_ptd_host &)
                  rva algn_7FF6E344DF4F,\
                  rva stru_7FF6E346B4C8>
RUNTIME_FUNCTION <rva ?_wcstombs_l_helper@@YA_KPEADPEB_W_KAEAV__crt_cached_ptd_host@@@Z,\ ; _wcstombs_l_helper(char *,wchar_t const *,unsigned __int64,__crt_cached_ptd_host &)
                  rva algn_7FF6E344E28F,\
                  rva stru_7FF6E346B4E0>
RUNTIME_FUNCTION <rva _wcstombs_s_l, \
                  rva algn_7FF6E344E346,\
                  rva stru_7FF6E346AD0C>
RUNTIME_FUNCTION <rva _isctype_l, \ ; InternalGetLocaleInfoA(__crt_locale_pointers * const,wchar_t const * const,ulong,char * const,int)
                  rva ?InternalGetLocaleInfoA@@YAHQEAU__crt_locale_pointers@@QEB_WKQEADH@Z,\
                  rva stru_7FF6E346B500>
RUNTIME_FUNCTION <rva ?InternalGetLocaleInfoA@@YAHQEAU__crt_locale_pointers@@QEB_WKQEADH@Z,\ ; InternalGetLocaleInfoA(__crt_locale_pointers * const,wchar_t const * const,ulong,char * const,int)
                  rva algn_7FF6E344E5CB,\
                  rva stru_7FF6E346B53C>
RUNTIME_FUNCTION <rva __acrt_GetLocaleInfoA,\
                  rva __acrt_GetStringTypeA,\
                  rva stru_7FF6E346B51C>
RUNTIME_FUNCTION <rva __acrt_GetStringTypeA,\
                  rva algn_7FF6E344E923,\
                  rva stru_7FF6E346B564>
RUNTIME_FUNCTION <rva ?__acrt_LCMapStringA_stat@@YAHPEAU__crt_locale_pointers@@PEB_WKPEBDHPEADHHH@Z,\ ; __acrt_LCMapStringA_stat(__crt_locale_pointers *,wchar_t const *,ulong,char const *,int,char *,int,int,int)
                  rva algn_7FF6E344EC55,\
                  rva stru_7FF6E346B59C>
RUNTIME_FUNCTION <rva __acrt_LCMapStringA,\
                  rva algn_7FF6E344ECEE,\
                  rva stru_7FF6E346B58C>
RUNTIME_FUNCTION <rva wcscpy_s, \
                  rva algn_7FF6E344ED55,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva _fcloseall, \
                  rva algn_7FF6E344EE0A,\
                  rva stru_7FF6E346B5C4>
RUNTIME_FUNCTION <rva __acrt_stdio_free_buffer_nolock,\
                  rva algn_7FF6E344EE4E,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ??$?RV_lambda_ad8af0d99a0adf03d037d7dffe354bb5_@@AEAV_lambda_c9ba49e555ba839a7b07aa3fbecb7617_@@V_lambda_2f1ebd5d68526518146ae959c9e734c8_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_ad8af0d99a0adf03d037d7dffe354bb5_@@AEAV_lambda_c9ba49e555ba839a7b07aa3fbecb7617_@@$$QEAV_lambda_2f1ebd5d68526518146ae959c9e734c8_@@@Z,\ ; __crt_seh_guarded_call<int>::operator()<_lambda_ad8af0d99a0adf03d037d7dffe354bb5_,_lambda_c9ba49e555ba839a7b07aa3fbecb7617_ &,_lambda_2f1ebd5d68526518146ae959c9e734c8_>(_lambda_ad8af0d99a0adf03d037d7dffe354bb5_ &&,_lambda_c9ba49e555ba839a7b07aa3fbecb7617_ &,_lambda_2f1ebd5d68526518146ae959c9e734c8_ &&)
                  rva algn_7FF6E344EEC7,\
                  rva stru_7FF6E346B5F0>
RUNTIME_FUNCTION <rva sub_7FF6E344EEC8, \
                  rva algn_7FF6E344EF89,\
                  rva stru_7FF6E346B5E8>
RUNTIME_FUNCTION <rva _close_nolock_internal,\
                  rva algn_7FF6E344F059,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva ??$?RV_lambda_a37b2b86f63e897a80ea819b0eb08c01_@@AEAV_lambda_38ce7e780aa69e748d6df282ebc68efe_@@V_lambda_99fb1378e971ab6e7edea83e3a7a83a2_@@@?$__crt_seh_guarded_call@H@@QEAAH$$QEAV_lambda_a37b2b86f63e897a80ea819b0eb08c01_@@AEAV_lambda_38ce7e780aa69e748d6df282ebc68efe_@@$$QEAV_lambda_99fb1378e971ab6e7edea83e3a7a83a2_@@@Z,\ ; __crt_seh_guarded_call<int>::operator()<_lambda_a37b2b86f63e897a80ea819b0eb08c01_,_lambda_38ce7e780aa69e748d6df282ebc68efe_ &,_lambda_99fb1378e971ab6e7edea83e3a7a83a2_>(_lambda_a37b2b86f63e897a80ea819b0eb08c01_ &&,_lambda_38ce7e780aa69e748d6df282ebc68efe_ &,_lambda_99fb1378e971ab6e7edea83e3a7a83a2_ &&)
                  rva algn_7FF6E344F103,\
                  rva stru_7FF6E346B61C>
RUNTIME_FUNCTION <rva _commit, \
                  rva algn_7FF6E344F195,\
                  rva stru_7FF6E346B614>
RUNTIME_FUNCTION <rva ?write_double_translated_ansi_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDIAEAV__crt_cached_ptd_host@@@Z,\ ; write_double_translated_ansi_nolock(int,char const * const,uint,__crt_cached_ptd_host &)
                  rva algn_7FF6E344F62B,\
                  rva stru_7FF6E346B684>
RUNTIME_FUNCTION <rva ?write_text_ansi_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDI@Z,\ ; write_text_ansi_nolock(int,char const * const,uint)
                  rva algn_7FF6E344F733,\
                  rva stru_7FF6E346B6B8>
RUNTIME_FUNCTION <rva ?write_text_utf16le_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDI@Z,\ ; write_text_utf16le_nolock(int,char const * const,uint)
                  rva algn_7FF6E344F84F,\
                  rva stru_7FF6E346B6B8>
RUNTIME_FUNCTION <rva ?write_text_utf8_nolock@@YA?AUwrite_result@?A0x17268360@@HQEBDI@Z,\ ; write_text_utf8_nolock(int,char const * const,uint)
                  rva _write_internal, \
                  rva stru_7FF6E346B6D8>
RUNTIME_FUNCTION <rva _write_internal, \
                  rva algn_7FF6E344FAE1,\
                  rva stru_7FF6E346B658>
RUNTIME_FUNCTION <rva sub_7FF6E344FAE4, \
                  rva algn_7FF6E344FE13,\
                  rva stru_7FF6E346B640>
RUNTIME_FUNCTION <rva __acrt_stdio_refill_and_read_narrow_nolock,\
                  rva algn_7FF6E344FF7E,\
                  rva stru_7FF6E346A494>
RUNTIME_FUNCTION <rva ??$common_ftell@_J@@YA_JV__crt_stdio_stream@@AEAV__crt_cached_ptd_host@@@Z,\ ; common_ftell<__int64>(__crt_stdio_stream,__crt_cached_ptd_host &)
                  rva algn_7FF6E344FFEB,\
                  rva stru_7FF6E346B738>
RUNTIME_FUNCTION <rva ??$common_ftell_nolock@_J@@YA_JV__crt_stdio_stream@@AEAV__crt_cached_ptd_host@@@Z,\ ; common_ftell_nolock<__int64>(__crt_stdio_stream,__crt_cached_ptd_host &)
                  rva ?common_ftell_read_mode_nolock@@YA_JV__crt_stdio_stream@@_J1AEAV__crt_cached_ptd_host@@@Z,\ ; common_ftell_read_mode_nolock(__crt_stdio_stream,__int64,__int64,__crt_cached_ptd_host &)
                  rva stru_7FF6E346AB80>
RUNTIME_FUNCTION <rva ?common_ftell_read_mode_nolock@@YA_JV__crt_stdio_stream@@_J1AEAV__crt_cached_ptd_host@@@Z,\ ; common_ftell_read_mode_nolock(__crt_stdio_stream,__int64,__int64,__crt_cached_ptd_host &)
                  rva algn_7FF6E3450297,\
                  rva stru_7FF6E346B720>
RUNTIME_FUNCTION <rva ?common_ftell_translated_utf8_nolock@@YA_JV__crt_stdio_stream@@_JAEAV__crt_cached_ptd_host@@@Z,\ ; common_ftell_translated_utf8_nolock(__crt_stdio_stream,__int64,__crt_cached_ptd_host &)
                  rva algn_7FF6E345041E,\
                  rva stru_7FF6E346B6FC>
RUNTIME_FUNCTION <rva _ftelli64, \
                  rva algn_7FF6E3450512,\
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva ??$write_buffer_nolock@D@@YA_NDV__crt_stdio_stream@@AEAV__crt_cached_ptd_host@@@Z,\ ; write_buffer_nolock<char>(char,__crt_stdio_stream,__crt_cached_ptd_host &)
                  rva algn_7FF6E3450613,\
                  rva stru_7FF6E346B75C>
RUNTIME_FUNCTION <rva sub_7FF6E3450614, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_86,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva unknown_libname_86,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E3450767,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E3450768, \
                  rva algn_7FF6E3450963,\
                  rva stru_7FF6E346B7D0>
RUNTIME_FUNCTION <rva sub_7FF6E3450964, \
                  rva algn_7FF6E3450C93,\
                  rva stru_7FF6E346B7B8>
RUNTIME_FUNCTION <rva _read, \
                  rva algn_7FF6E3450DB2,\
                  rva stru_7FF6E346B770>
RUNTIME_FUNCTION <rva sub_7FF6E3450DB4, \
                  rva algn_7FF6E3451213,\
                  rva stru_7FF6E346B7A0>
RUNTIME_FUNCTION <rva ??$common_lseek@_J@@YA_JH_JHAEAV__crt_cached_ptd_host@@@Z,\ ; common_lseek<__int64>(int,__int64,int,__crt_cached_ptd_host &)
                  rva algn_7FF6E3451332,\
                  rva stru_7FF6E346B7E8>
RUNTIME_FUNCTION <rva ??$common_lseek_nolock@_J@@YA_JH_JHAEAV__crt_cached_ptd_host@@@Z,\ ; common_lseek_nolock<__int64>(int,__int64,int,__crt_cached_ptd_host &)
                  rva algn_7FF6E34513E3,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva _lseeki64, \
                  rva algn_7FF6E345147E,\
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva _lseeki64_nolock, \
                  rva algn_7FF6E3451522,\
                  rva stru_7FF6E346AB70>
RUNTIME_FUNCTION <rva __acrt_stdio_allocate_buffer_nolock,\
                  rva algn_7FF6E3451597,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva _realloc_base, \
                  rva algn_7FF6E345161A,\
                  rva stru_7FF6E346B814>
RUNTIME_FUNCTION <rva iswctype, \
                  rva algn_7FF6E3451688,\
                  rva stru_7FF6E3469FF4>
RUNTIME_FUNCTION <rva fegetround, \ ; __crt_seh_guarded_call<void (*)(int)>::operator()<_lambda_450d765d439847d4c735a33c368b5fc0_,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_>(_lambda_450d765d439847d4c735a33c368b5fc0_ &&,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_ &&)
                  rva ??$?RV_lambda_450d765d439847d4c735a33c368b5fc0_@@AEAV_lambda_44731a7d0e6d81c3e6aa82d741081786_@@V_lambda_601a2a7da3b7a96e9554ac7215c4b07c_@@@?$__crt_seh_guarded_call@P6AXH@Z@@QEAAP6AXH@Z$$QEAV_lambda_450d765d439847d4c735a33c368b5fc0_@@AEAV_lambda_44731a7d0e6d81c3e6aa82d741081786_@@$$QEAV_lambda_601a2a7da3b7a96e9554ac7215c4b07c_@@@Z,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva ??$?RV_lambda_450d765d439847d4c735a33c368b5fc0_@@AEAV_lambda_44731a7d0e6d81c3e6aa82d741081786_@@V_lambda_601a2a7da3b7a96e9554ac7215c4b07c_@@@?$__crt_seh_guarded_call@P6AXH@Z@@QEAAP6AXH@Z$$QEAV_lambda_450d765d439847d4c735a33c368b5fc0_@@AEAV_lambda_44731a7d0e6d81c3e6aa82d741081786_@@$$QEAV_lambda_601a2a7da3b7a96e9554ac7215c4b07c_@@@Z,\ ; __crt_seh_guarded_call<void (*)(int)>::operator()<_lambda_450d765d439847d4c735a33c368b5fc0_,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_>(_lambda_450d765d439847d4c735a33c368b5fc0_ &&,_lambda_44731a7d0e6d81c3e6aa82d741081786_ &,_lambda_601a2a7da3b7a96e9554ac7215c4b07c_ &&)
                  rva __acrt_get_sigabrt_handler,\
                  rva stru_7FF6E346B860>
RUNTIME_FUNCTION <rva __acrt_get_sigabrt_handler,\
                  rva algn_7FF6E345171A,\
                  rva stru_7FF6E346AFC4>
RUNTIME_FUNCTION <rva raise, \
                  rva sub_7FF6E3451998, \
                  rva stru_7FF6E346B820>
RUNTIME_FUNCTION <rva __acrt_WideCharToMultiByte,\
                  rva algn_7FF6E3451B06,\
                  rva stru_7FF6E346B884>
RUNTIME_FUNCTION <rva sub_7FF6E3451B50, \
                  rva algn_7FF6E3451B96,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3451B98, \
                  rva algn_7FF6E3451CD3,\
                  rva stru_7FF6E346B890>
RUNTIME_FUNCTION <rva wcscat_s, \
                  rva algn_7FF6E3451D99,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva wcsncpy_s, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_87,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva ??$__acrt_convert_wcs_mbs_cp@_WDV_lambda_d8593a27d1aa8c02be35c86a17d324c4_@@U__crt_win32_buffer_internal_dynamic_resizing@@@@YAHQEB_WAEAV?$__crt_win32_buffer@DU__crt_win32_buffer_internal_dynamic_resizing@@@@AEBV_lambda_d8593a27d1aa8c02be35c86a17d324c4_@@I@Z,\ ; __acrt_convert_wcs_mbs_cp<wchar_t,char,_lambda_d8593a27d1aa8c02be35c86a17d324c4_,__crt_win32_buffer_internal_dynamic_resizing>(wchar_t const * const,__crt_win32_buffer<char,__crt_win32_buffer_internal_dynamic_resizing> &,_lambda_d8593a27d1aa8c02be35c86a17d324c4_ const &,uint)
                  rva ??$common_expand_argv_wildcards@D@@YAHQEAPEADQEAPEAPEAD@Z,\ ; common_expand_argv_wildcards<char>(char * * const,char * * * const)
                  rva stru_7FF6E346B8C0>
RUNTIME_FUNCTION <rva ??$common_expand_argv_wildcards@D@@YAHQEAPEADQEAPEAPEAD@Z,\ ; common_expand_argv_wildcards<char>(char * * const,char * * * const)
                  rva algn_7FF6E3452292,\
                  rva stru_7FF6E346B8A8>
RUNTIME_FUNCTION <rva sub_7FF6E3452294, \ ; expand_argument_wildcards<char>(char * const,char * const,`anonymous namespace'::argument_list<char> &)
                  rva ??$expand_argument_wildcards@D@@YAHQEAD0AEAV?$argument_list@D@?A0x5f5c8891@@@Z,\
                  rva stru_7FF6E346AA84>
RUNTIME_FUNCTION <rva ??$expand_argument_wildcards@D@@YAHQEAD0AEAV?$argument_list@D@?A0x5f5c8891@@@Z,\ ; expand_argument_wildcards<char>(char * const,char * const,`anonymous namespace'::argument_list<char> &)
                  rva algn_7FF6E3452776,\
                  rva stru_7FF6E346B8D8>
RUNTIME_FUNCTION <rva __acrt_GetModuleFileNameA,\
                  rva algn_7FF6E34528A1,\
                  rva stru_7FF6E346B8F8>
RUNTIME_FUNCTION <rva ??$?RV_lambda_efdfa57d1f175319df784efa44bb7b81_@@AEAV_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_@@V_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_efdfa57d1f175319df784efa44bb7b81_@@AEAV_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_@@$$QEAV_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_@@@Z,\ ; __crt_seh_guarded_call<void>::operator()<_lambda_efdfa57d1f175319df784efa44bb7b81_,_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_ &,_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_>(_lambda_efdfa57d1f175319df784efa44bb7b81_ &&,_lambda_5f0a4c1567f8adc6734073e5d1e1b35c_ &,_lambda_2e8a7d3640ea6ccb4c2413664c2db6fd_ &&)
                  rva algn_7FF6E3452A72,\
                  rva stru_7FF6E346B990>
RUNTIME_FUNCTION <rva ?getSystemCP@@YAHH@Z,\ ; getSystemCP(int)
                  rva algn_7FF6E3452AF1,\
                  rva stru_7FF6E346B3EC>
RUNTIME_FUNCTION <rva ?setSBCS@@YAXPEAU__crt_multibyte_data@@@Z,\ ; setSBCS(__crt_multibyte_data *)
                  rva ?setSBUpLow@@YAXPEAU__crt_multibyte_data@@@Z,\ ; setSBUpLow(__crt_multibyte_data *)
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?setSBUpLow@@YAXPEAU__crt_multibyte_data@@@Z,\ ; setSBUpLow(__crt_multibyte_data *)
                  rva algn_7FF6E3452D81,\
                  rva stru_7FF6E346B974>
RUNTIME_FUNCTION <rva ?setmbcp_internal@@YAHH_NQEAU__acrt_ptd@@QEAPEAU__crt_multibyte_data@@@Z,\ ; setmbcp_internal(int,bool,__acrt_ptd * const,__crt_multibyte_data * * const)
                  rva algn_7FF6E3452FF3,\
                  rva stru_7FF6E346B95C>
RUNTIME_FUNCTION <rva ?update_thread_multibyte_data_internal@@YAPEAU__crt_multibyte_data@@QEAU__acrt_ptd@@QEAPEAU1@@Z,\ ; update_thread_multibyte_data_internal(__acrt_ptd * const,__crt_multibyte_data * * const)
                  rva __acrt_initialize_multibyte,\
                  rva stru_7FF6E346B934>
RUNTIME_FUNCTION <rva __acrt_initialize_multibyte,\
                  rva __acrt_update_thread_multibyte_data,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_update_thread_multibyte_data,\
                  rva sub_7FF6E3453128, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E3453128, \ ; x_ismbbtype_l(__crt_locale_pointers *,uint,int,int)
                  rva ?x_ismbbtype_l@@YAHPEAU__crt_locale_pointers@@IHH@Z,\
                  rva stru_7FF6E346B914>
RUNTIME_FUNCTION <rva ?x_ismbbtype_l@@YAHPEAU__crt_locale_pointers@@IHH@Z,\ ; x_ismbbtype_l(__crt_locale_pointers *,uint,int,int)
                  rva algn_7FF6E3453463,\
                  rva stru_7FF6E346B9B4>
RUNTIME_FUNCTION <rva __dcrt_get_narrow_environment_from_os,\
                  rva algn_7FF6E3453586,\
                  rva stru_7FF6E346B8C0>
RUNTIME_FUNCTION <rva ??$common_set_variable_in_environment_nolock@D@@YAHQEADH@Z,\ ; common_set_variable_in_environment_nolock<char>(char * const,int)
                  rva ??$copy_environment@D@@YAPEAPEADQEAPEAD@Z,\ ; copy_environment<char>(char * * const)
                  rva stru_7FF6E346B9C4>
RUNTIME_FUNCTION <rva ??$copy_environment@D@@YAPEAPEADQEAPEAD@Z,\ ; copy_environment<char>(char * * const)
                  rva algn_7FF6E34539C5,\
                  rva stru_7FF6E346B9DC>
RUNTIME_FUNCTION <rva __acrt_get_process_end_policy,\
                  rva algn_7FF6E3453A33,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva __acrt_lowio_create_handle_array,\
                  rva algn_7FF6E3453AD9,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva __acrt_lowio_destroy_handle_array,\
                  rva __acrt_lowio_ensure_fh_exists,\
                  rva stru_7FF6E346B9F0>
RUNTIME_FUNCTION <rva __acrt_lowio_ensure_fh_exists,\
                  rva __acrt_lowio_lock_fh,\
                  rva stru_7FF6E346BA00>
RUNTIME_FUNCTION <rva _free_osfhnd, \
                  rva algn_7FF6E3453CDE,\
                  rva stru_7FF6E346A494>
RUNTIME_FUNCTION <rva _get_osfhandle, \
                  rva algn_7FF6E3453D55,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_locale_free_monetary,\
                  rva algn_7FF6E3453E7A,\
                  rva stru_7FF6E346BA48>
RUNTIME_FUNCTION <rva __acrt_locale_initialize_monetary,\
                  rva algn_7FF6E3454397,\
                  rva stru_7FF6E346BA2C>
RUNTIME_FUNCTION <rva __acrt_locale_free_numeric,\
                  rva __acrt_locale_initialize_numeric,\
                  rva stru_7FF6E346B158>
RUNTIME_FUNCTION <rva __acrt_locale_initialize_numeric,\
                  rva algn_7FF6E34546EB,\
                  rva stru_7FF6E346A510>
RUNTIME_FUNCTION <rva ?free_crt_array_internal@@YAXQEAPEBX_K@Z,\ ; free_crt_array_internal(void const * * const,unsigned __int64)
                  rva algn_7FF6E345471E,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva ?initialize_lc_time@@YA_NQEAU__crt_lc_time_data@@QEAU__crt_locale_data@@@Z,\ ; initialize_lc_time(__crt_lc_time_data * const,__crt_locale_data * const)
                  rva algn_7FF6E3454A5E,\
                  rva stru_7FF6E346BA2C>
RUNTIME_FUNCTION <rva __acrt_locale_free_time,\
                  rva __acrt_locale_initialize_time,\
                  rva stru_7FF6E346BA50>
RUNTIME_FUNCTION <rva __acrt_locale_initialize_time,\
                  rva wcsncat_s, \
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva wcsncat_s, \
                  rva sub_7FF6E3454CFC, \
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E3454CFC, \
                  rva algn_7FF6E3454D5A,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva sub_7FF6E3454D5C, \
                  rva algn_7FF6E3454DA9,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva __acrt_free_locale,\
                  rva algn_7FF6E3454FAE,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva __acrt_locale_free_lc_time_if_unreferenced,\
                  rva algn_7FF6E345500F,\
                  rva stru_7FF6E346B158>
RUNTIME_FUNCTION <rva __acrt_release_locale_ref,\
                  rva __acrt_update_thread_locale_data,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_update_thread_locale_data,\
                  rva algn_7FF6E345514E,\
                  rva stru_7FF6E346BA60>
RUNTIME_FUNCTION <rva _updatetlocinfoEx_nolock,\
                  rva algn_7FF6E34551B5,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva GetLocaleNameFromDefault,\
                  rva algn_7FF6E345525D,\
                  rva stru_7FF6E346BAC0>
RUNTIME_FUNCTION <rva GetLocaleNameFromLangCountry,\
                  rva algn_7FF6E345532F,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva GetLocaleNameFromLanguage,\
                  rva sub_7FF6E34553C8, \
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E34553C8, \
                  rva algn_7FF6E34556BA,\
                  rva stru_7FF6E346BA84>
RUNTIME_FUNCTION <rva LanguageEnumProcEx,\
                  rva algn_7FF6E34557A6,\
                  rva stru_7FF6E346BAA4>
RUNTIME_FUNCTION <rva sub_7FF6E34557A8, \
                  rva algn_7FF6E3455867,\
                  rva stru_7FF6E346A27C>
RUNTIME_FUNCTION <rva TestDefaultCountry,\
                  rva algn_7FF6E34558D2,\
                  rva stru_7FF6E346BAD8>
RUNTIME_FUNCTION <rva TranslateName, \
                  rva algn_7FF6E345596D,\
                  rva stru_7FF6E346A1C0>
RUNTIME_FUNCTION <rva sub_7FF6E3455970, \
                  rva algn_7FF6E3455BE9,\
                  rva stru_7FF6E346AA84>
RUNTIME_FUNCTION <rva CountryEnumProc, \
                  rva GetLcidFromLangCountry,\
                  rva stru_7FF6E346BB44>
RUNTIME_FUNCTION <rva GetLcidFromLangCountry,\
                  rva algn_7FF6E3455DA1,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva GetLcidFromLanguage,\
                  rva algn_7FF6E3455E3A,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E3455E3C, \
                  rva algn_7FF6E345607F,\
                  rva stru_7FF6E346BB08>
RUNTIME_FUNCTION <rva LanguageEnumProc, \
                  rva LcidFromHexString,\
                  rva stru_7FF6E346BB28>
RUNTIME_FUNCTION <rva sub_7FF6E34561D8, \
                  rva algn_7FF6E345628A,\
                  rva stru_7FF6E346A27C>
RUNTIME_FUNCTION <rva sub_7FF6E345628C, \
                  rva algn_7FF6E3456346,\
                  rva stru_7FF6E346A080>
RUNTIME_FUNCTION <rva sub_7FF6E3456348, \
                  rva algn_7FF6E34563CD,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva sub_7FF6E34563D0, \
                  rva _recalloc_base, \
                  rva stru_7FF6E346BAEC>
RUNTIME_FUNCTION <rva _recalloc_base, \
                  rva algn_7FF6E34566E5,\
                  rva stru_7FF6E346BB64>
RUNTIME_FUNCTION <rva __acrt_initialize_heap,\
                  rva algn_7FF6E345672C,\
                  rva stru_7FF6E346BB78>
RUNTIME_FUNCTION <rva sub_7FF6E3456768, \
                  rva algn_7FF6E34567E6,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E34567E8, \
                  rva algn_7FF6E3456823,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E3456980, \
                  rva loc_7FF6E3456988, \
                  rva stru_7FF6E346BB80>
RUNTIME_FUNCTION <rva loc_7FF6E3456988, \
                  rva loc_7FF6E3456A54, \
                  rva stru_7FF6E346BB8C>
RUNTIME_FUNCTION <rva loc_7FF6E3456A54, \
                  rva sub_7FF6E3456AB0, \
                  rva stru_7FF6E346BBA0>
RUNTIME_FUNCTION <rva ?should_round_up@@YA_NQEBD0HW4__acrt_has_trailing_digits@@W4__acrt_rounding_mode@@@Z,\ ; should_round_up(char const * const,char const * const,int,__acrt_has_trailing_digits,__acrt_rounding_mode)
                  rva __acrt_fp_strflt_to_string,\
                  rva stru_7FF6E346A4D0>
RUNTIME_FUNCTION <rva __acrt_fp_strflt_to_string,\
                  rva sub_7FF6E3456D04, \
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva sub_7FF6E3456D04, \
                  rva algn_7FF6E3457F83,\
                  rva stru_7FF6E346BBB0>
RUNTIME_FUNCTION <rva _isatty, \
                  rva algn_7FF6E34580A3,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva __acrt_DownlevelLCIDToLocaleName,\
                  rva algn_7FF6E3458189,\
                  rva stru_7FF6E346A988>
RUNTIME_FUNCTION <rva sub_7FF6E345818C, \
                  rva algn_7FF6E3458233,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva sub_7FF6E3458234, \
                  rva algn_7FF6E3458387,\
                  rva stru_7FF6E346BBD4>
RUNTIME_FUNCTION <rva strncpy_s, \
                  rva algn_7FF6E3458477,\
                  rva stru_7FF6E3469FE4>
RUNTIME_FUNCTION <rva sub_7FF6E3458478, \
                  rva GetStringTypeW, \
                  rva stru_7FF6E3469C88>
RUNTIME_FUNCTION <rva sub_7FF6E34584C0, \
                  rva algn_7FF6E34585BA,\
                  rva stru_7FF6E346BBF4>
RUNTIME_FUNCTION <rva sub_7FF6E34585C0, \
                  rva loc_7FF6E3458652, \
                  rva stru_7FF6E346BC00>
RUNTIME_FUNCTION <rva loc_7FF6E3458652, \
                  rva loc_7FF6E3458938, \
                  rva stru_7FF6E346BC18>
RUNTIME_FUNCTION <rva loc_7FF6E3458938, \
                  rva sub_7FF6E3458958, \
                  rva stru_7FF6E346BC38>
RUNTIME_FUNCTION <rva sub_7FF6E3458958, \
                  rva algn_7FF6E34589C8,\
                  rva stru_7FF6E346AADC>
RUNTIME_FUNCTION <rva sub_7FF6E34589D0, \
                  rva _mbsdec, \
                  rva stru_7FF6E346BC48>
RUNTIME_FUNCTION <rva _mbsdec_l, \
                  rva sub_7FF6E3458E24, \
                  rva stru_7FF6E346BC58>
RUNTIME_FUNCTION <rva sub_7FF6E3458E24, \
                  rva _strnicoll, \
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _strnicoll_l, \
                  rva __acrt_SetEnvironmentVariableA,\
                  rva stru_7FF6E346BC64>
RUNTIME_FUNCTION <rva __acrt_SetEnvironmentVariableA,\
                  rva algn_7FF6E34590EF,\
                  rva stru_7FF6E346BC78>
RUNTIME_FUNCTION <rva sub_7FF6E34590F0, \
                  rva algn_7FF6E34591C3,\
                  rva stru_7FF6E346A788>
RUNTIME_FUNCTION <rva ??$common_xtox_s@K_W@@YAHKQEA_W_KI_N@Z,\ ; common_xtox_s<ulong,wchar_t>(ulong,wchar_t * const,unsigned __int64,uint,bool)
                  rva algn_7FF6E345922D,\
                  rva stru_7FF6E3469FDC>
RUNTIME_FUNCTION <rva _itow_s, \
                  rva __ascii_wcsnicmp, \
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva _wcsnicmp, \
                  rva algn_7FF6E34592E2,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _wcsnicmp_l, \
                  rva algn_7FF6E3459435,\
                  rva stru_7FF6E346BC94>
RUNTIME_FUNCTION <rva _msize, \
                  rva algn_7FF6E34594A9,\
                  rva stru_7FF6E346BCB0>
RUNTIME_FUNCTION <rva sub_7FF6E34594C0, \
                  rva algn_7FF6E345952F,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva fegetenv, \
                  rva fesetenv, \
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva fesetenv, \
                  rva algn_7FF6E34595B1,\
                  rva stru_7FF6E3469FF4>
RUNTIME_FUNCTION <rva sub_7FF6E34595C0, \
                  rva algn_7FF6E3459611,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva log10, \
                  rva algn_7FF6E3459C9B,\
                  rva stru_7FF6E346BCB8>
RUNTIME_FUNCTION <rva __dcrt_lowio_ensure_console_output_initialized,\
                  rva algn_7FF6E3459CEE,\
                  rva stru_7FF6E346B3EC>
RUNTIME_FUNCTION <rva sub_7FF6E3459CF0, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_88,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva unknown_libname_88,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E3459DCA,\
                  rva stru_7FF6E346ADF8>
RUNTIME_FUNCTION <rva __crtLCMapStringW,\
                  rva algn_7FF6E3459E53,\
                  rva stru_7FF6E346B390>
RUNTIME_FUNCTION <rva sub_7FF6E3459E54, \
                  rva algn_7FF6E3459E6A,\
                  rva stru_7FF6E346BCC4>
RUNTIME_FUNCTION <rva _strnicmp, \
                  rva algn_7FF6E3459F07,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva _strnicmp_l, \
                  rva algn_7FF6E3459FB5,\
                  rva stru_7FF6E346B9B4>
RUNTIME_FUNCTION <rva sub_7FF6E3459FB8, \
                  rva algn_7FF6E345A347,\
                  rva stru_7FF6E346BCD0>
RUNTIME_FUNCTION <rva __acrt_CompareStringA,\
                  rva algn_7FF6E345A3D1,\
                  rva stru_7FF6E346A130>
RUNTIME_FUNCTION <rva sub_7FF6E345A3D4, \
                  rva algn_7FF6E345A42D,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva common_control87, \
                  rva algn_7FF6E345A6D2,\
                  rva stru_7FF6E346BCF4>
RUNTIME_FUNCTION <rva sub_7FF6E345A6E0, \
                  rva loc_7FF6E345A70C, \
                  rva stru_7FF6E346BD20>
RUNTIME_FUNCTION <rva loc_7FF6E345A70C, \
                  rva loc_7FF6E345A7CB, \
                  rva stru_7FF6E346BD34>
RUNTIME_FUNCTION <rva loc_7FF6E345A7CB, \
                  rva algn_7FF6E345A7E1,\
                  rva stru_7FF6E346BD48>
RUNTIME_FUNCTION <rva sub_7FF6E345A7F0, \
                  rva algn_7FF6E345A923,\
                  rva stru_7FF6E346BD58>
RUNTIME_FUNCTION <rva sub_7FF6E345A960, \
                  rva algn_7FF6E345AA12,\
                  rva stru_7FF6E346BD74>
RUNTIME_FUNCTION <rva _log10_special, \
                  rva _log_special_common,\
                  rva stru_7FF6E346A960>
RUNTIME_FUNCTION <rva _log_special_common,\
                  rva algn_7FF6E345AACA,\
                  rva stru_7FF6E346BD7C>
RUNTIME_FUNCTION <rva _IsNonwritableInCurrentImage,\
                  rva algn_7FF6E345AB6D,\
                  rva stru_7FF6E346BD88>
RUNTIME_FUNCTION <rva __GSHandlerCheck_SEH,\
                  rva algn_7FF6E345AC21,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva __GSHandlerCheck_EH,\
                  rva algn_7FF6E345ACA3,\
                  rva stru_7FF6E346A068>
RUNTIME_FUNCTION <rva _local_unwind, \
                  rva algn_7FF6E345ACCE,\
                  rva stru_7FF6E3469CA0>
RUNTIME_FUNCTION <rva __C_specific_handler_noexcept,\
                  rva algn_7FF6E345AD1B,\
                  rva stru_7FF6E3469FD0>
RUNTIME_FUNCTION <rva sub_7FF6E345AD1C, \
                  rva strchr, \
                  rva stru_7FF6E346AAA0>
RUNTIME_FUNCTION <rva _guard_dispatch_icall_nop,\
                  rva algn_7FF6E345AF62,\
                  rva stru_7FF6E346A460>
RUNTIME_FUNCTION <rva _guard_xfg_dispatch_icall_nop,\
                  rva algn_7FF6E345AF86,\
                  rva stru_7FF6E346A468>
RUNTIME_FUNCTION <rva j__guard_dispatch_icall_nop,\
                  rva byte_7FF6E345AFA6,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva unknown_libname_48,\ ; Microsoft VisualC v14 64bit runtime
                  rva memcpy, \
                  rva stru_7FF6E346A470>
RUNTIME_FUNCTION <rva memcpy, \
                  rva byte_7FF6E345B64D,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva memset_repstos, \
                  rva memset, \
                  rva stru_7FF6E346A488>
RUNTIME_FUNCTION <rva memset, \
                  rva byte_7FF6E345BA08,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva memcmp, \
                  rva byte_7FF6E345BAF7,\
                  rva stru_7FF6E346A480>
RUNTIME_FUNCTION <rva strlen, \
                  rva byte_7FF6E345BBB8,\
                  rva stru_7FF6E346AAF0>
RUNTIME_FUNCTION <rva strncmp, \
                  rva algn_7FF6E345BC4D,\
                  rva stru_7FF6E346B140>
RUNTIME_FUNCTION <rva sub_7FF6E345BC50, \
                  rva algn_7FF6E345BC91,\
                  rva stru_7FF6E3469E0C>
RUNTIME_FUNCTION <rva sub_7FF6E345BCA0, \
                  rva algn_7FF6E345BCE7,\
                  rva stru_7FF6E3469E4C>
RUNTIME_FUNCTION <rva unknown_libname_49,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E345BD0B,\
                  rva stru_7FF6E3469E0C>
RUNTIME_FUNCTION <rva sub_7FF6E345BD10, \ ; int `std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::do_put(num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::std,num_put<wchar_t,std::ostreambuf_iterator<wchar_t>>::ios_base &,wchar_t,bool)'::`1'::dtor$0
                  rva ?dtor$0@?0??do_put@?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@2@V32@AEAVios_base@2@_W_N@Z@4HA,\
                  rva stru_7FF6E3469E0C>
RUNTIME_FUNCTION <rva sub_7FF6E345BD75, \ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_51,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_51,\ ; Microsoft VisualC v14 64bit runtime
                  rva sub_7FF6E345BDBF, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva ?filt$0@?0??__scrt_common_main_seh@@YAHXZ@4HA,\ ; int `__scrt_common_main_seh(void)'::`1'::filt$0
                  rva __scrt_is_nonwritable_in_current_image$filt$0,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva __scrt_is_nonwritable_in_current_image$filt$0,\
                  rva ?filt$0@?0???$_CallSETranslator@V__FrameHandler3@@@@YAHPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@K1H@Z@4HA,\ ; int `_CallSETranslator<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,ulong,unsigned __int64 *,int)'::`1'::filt$0
                  rva stru_7FF6E346A3FC>
RUNTIME_FUNCTION <rva ?filt$0@?0???$_CallSETranslator@V__FrameHandler3@@@@YAHPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEBU_s_FuncInfo@@K1H@Z@4HA,\ ; int `_CallSETranslator<__FrameHandler3>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,_s_FuncInfo const *,ulong,unsigned __int64 *,int)'::`1'::filt$0
                  rva ?filt$0@?0???$_CallSETranslator@V__FrameHandler4@@@@YAHPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@K1H@Z@4HA,\ ; int `_CallSETranslator<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,ulong,unsigned __int64 *,int)'::`1'::filt$0
                  rva stru_7FF6E346A590>
RUNTIME_FUNCTION <rva ?filt$0@?0???$_CallSETranslator@V__FrameHandler4@@@@YAHPEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@K1H@Z@4HA,\ ; int `_CallSETranslator<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,ulong,unsigned __int64 *,int)'::`1'::filt$0
                  rva __DestructExceptionObject$filt$0,\
                  rva stru_7FF6E346A590>
RUNTIME_FUNCTION <rva __DestructExceptionObject$filt$0,\
                  rva ?fin$0@?0???$__InternalCxxFrameHandlerWrapper@V__FrameHandler4@@@@YA?AW4_EXCEPTION_DISPOSITION@@PEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@H1E@Z@4HA,\ ; int `__InternalCxxFrameHandlerWrapper<__FrameHandler4>(EHExceptionRecord *,unsigned __int64 *,_CONTEXT *,_xDISPATCHER_CONTEXT *,FH4::FuncInfo4 *,int,unsigned __int64 *,uchar)'::`1'::fin$0
                  rva stru_7FF6E346A5DC>
RUNTIME_FUNCTION <rva ?fin$0@?0???$__InternalCxxFrameHandlerWrapper@V__FrameHandler4@@@@YA?AW4_EXCEPTION_DISPOSITION@@PEAUEHExceptionRecord@@PEA_KPEAU_CONTEXT@@PEAU_xDISPATCHER_CONTEXT@@PEAUFuncInfo4@FH4@@H1E@Z@4HA,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_52,\
                  rva stru_7FF6E346A780>
RUNTIME_FUNCTION <rva unknown_libname_52,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_53,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_53,\ ; Microsoft VisualC v14 64bit runtime
                  rva loc_7FF6E345C0C8, \
                  rva stru_7FF6E346A5DC>
RUNTIME_FUNCTION <rva loc_7FF6E345C0C8, \
                  rva loc_7FF6E345C0F7, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva loc_7FF6E345C0F7, \ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_54,\
                  rva stru_7FF6E346A5DC>
RUNTIME_FUNCTION <rva unknown_libname_54,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_55,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_55,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_56,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_56,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_57,\
                  rva stru_7FF6E346A6E0>
RUNTIME_FUNCTION <rva unknown_libname_57,\ ; Microsoft VisualC v14 64bit runtime
                  rva loc_7FF6E345C1FA, \
                  rva stru_7FF6E346A6E0>
RUNTIME_FUNCTION <rva loc_7FF6E345C1FA, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_89,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_89,\ ; Microsoft VisualC 64bit universal runtime
                  rva ?fin$0@?0???$?RV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@V_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@$$QEAV_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@Z@4HA,\ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0
                  rva stru_7FF6E346A6E0>
RUNTIME_FUNCTION <rva ?fin$0@?0???$?RV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@V_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_842d9ff0dc9ef11c61343bbaebe7f885_@@AEAV_lambda_c5860995281e5c4ce005b3de8f5874ee_@@$$QEAV_lambda_d90129c13df834fdcbf8d2b88dafcf2d_@@@Z@4HA,\ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_842d9ff0dc9ef11c61343bbaebe7f885_,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_>(_lambda_842d9ff0dc9ef11c61343bbaebe7f885_ &&,_lambda_c5860995281e5c4ce005b3de8f5874ee_ &,_lambda_d90129c13df834fdcbf8d2b88dafcf2d_ &&)'::`1'::fin$0
                  rva loc_7FF6E345C247, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva loc_7FF6E345C247, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_90,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_90,\ ; Microsoft VisualC 64bit universal runtime
                  rva ?fin$0@?0??_fputc_internal@@YAHHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z@4HA,\ ; int `_fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)'::`1'::fin$0
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva ?fin$0@?0??_fputc_internal@@YAHHQEAU_iobuf@@AEAV__crt_cached_ptd_host@@@Z@4HA,\ ; int `_fputc_internal(int,_iobuf * const,__crt_cached_ptd_host &)'::`1'::fin$0
                  rva fread_s$fin$0, \
                  rva stru_7FF6E346A6E0>
RUNTIME_FUNCTION <rva fread_s$fin$0, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_91,\
                  rva stru_7FF6E346A6E0>
RUNTIME_FUNCTION <rva unknown_libname_91,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E345C2C8,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_92,\ ; Microsoft VisualC v14 64bit runtime
                  rva unknown_libname_93,\ ; Microsoft VisualC 64bit universal runtime
                  rva stru_7FF6E346AE38>
RUNTIME_FUNCTION <rva unknown_libname_93,\ ; Microsoft VisualC v14 64bit runtime
                  rva ?filt$0@?0???R_lambda_6e4b09c48022b2350581041d5f6b0c4c_@@QEBA@XZ@4HA,\ ; Microsoft VisualC 64bit universal runtime
                  rva stru_7FF6E346AE64>
RUNTIME_FUNCTION <rva ?filt$0@?0???R_lambda_6e4b09c48022b2350581041d5f6b0c4c_@@QEBA@XZ@4HA,\ ; int `_lambda_6e4b09c48022b2350581041d5f6b0c4c_::operator()(void)'::`1'::filt$0
                  rva loc_7FF6E345C329, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva loc_7FF6E345C329, \ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_e9338f07fe435327d97d4ef86149e64d_,_lambda_2a444430fde8c29194d880d93eed5e8f_ &,_lambda_02db5278e8aef8b5e4976579d73f5304_ &>(_lambda_e9338f07fe435327d97d4ef86149e64d_ &&,_lambda_2a444430fde8c29194d880d93eed5e8f_ &,_lambda_02db5278e8aef8b5e4976579d73f5304_ &)'::`1'::fin$0
                  rva ?fin$0@?0???$?RV_lambda_e9338f07fe435327d97d4ef86149e64d_@@AEAV_lambda_2a444430fde8c29194d880d93eed5e8f_@@AEAV_lambda_02db5278e8aef8b5e4976579d73f5304_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_e9338f07fe435327d97d4ef86149e64d_@@AEAV_lambda_2a444430fde8c29194d880d93eed5e8f_@@AEAV_lambda_02db5278e8aef8b5e4976579d73f5304_@@@Z@4HA,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva ?fin$0@?0???$?RV_lambda_e9338f07fe435327d97d4ef86149e64d_@@AEAV_lambda_2a444430fde8c29194d880d93eed5e8f_@@AEAV_lambda_02db5278e8aef8b5e4976579d73f5304_@@@?$__crt_seh_guarded_call@X@@QEAAX$$QEAV_lambda_e9338f07fe435327d97d4ef86149e64d_@@AEAV_lambda_2a444430fde8c29194d880d93eed5e8f_@@AEAV_lambda_02db5278e8aef8b5e4976579d73f5304_@@@Z@4HA,\ ; int `__crt_seh_guarded_call<void>::operator()<_lambda_e9338f07fe435327d97d4ef86149e64d_,_lambda_2a444430fde8c29194d880d93eed5e8f_ &,_lambda_02db5278e8aef8b5e4976579d73f5304_ &>(_lambda_e9338f07fe435327d97d4ef86149e64d_ &&,_lambda_2a444430fde8c29194d880d93eed5e8f_ &,_lambda_02db5278e8aef8b5e4976579d73f5304_ &)'::`1'::fin$0
                  rva loc_7FF6E345C364, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva loc_7FF6E345C364, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_94,\
                  rva stru_7FF6E346A3FC>
RUNTIME_FUNCTION <rva unknown_libname_94,\ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_95,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_95,\ ; Microsoft VisualC 64bit universal runtime
                  rva loc_7FF6E345C3C3, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva loc_7FF6E345C3C3, \ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_96,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_96,\ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_97,\
                  rva stru_7FF6E346A6E0>
RUNTIME_FUNCTION <rva unknown_libname_97,\ ; Microsoft VisualC 64bit universal runtime
                  rva raise$fin$0, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva raise$fin$0, \
                  rva loc_7FF6E345C42C, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva loc_7FF6E345C42C, \
                  rva _free_locale$fin$1,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva _free_locale$fin$1,\
                  rva _free_locale$fin$0,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva _free_locale$fin$0,\ ; Microsoft VisualC 64bit universal runtime
                  rva unknown_libname_98,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_98,\ ; Microsoft VisualC 64bit universal runtime
                  rva algn_7FF6E345C4A4,\
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva ?filt$0@?0??try_walk@@YAHQEAU_PROCESS_HEAP_ENTRY@@@Z@4HA,\ ; Microsoft VisualC v14 64bit runtime
                  rva sub_7FF6E345C4D0, \
                  rva stru_7FF6E346A164>
RUNTIME_FUNCTION <rva unknown_libname_61,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E345C537,\
                  rva stru_7FF6E3469FC8>
RUNTIME_FUNCTION <rva ??__Fclassic_locale@std@@YAXXZ,\ ; std::`dynamic atexit destructor for 'classic_locale''(void)
                  rva algn_7FF6E345C576,\
                  rva stru_7FF6E3469CC8>
RUNTIME_FUNCTION <rva sub_7FF6E345C578, \
                  rva sub_7FF6E345C5CC, \
                  rva stru_7FF6E346A2AC>
RUNTIME_FUNCTION <rva unknown_libname_62,\ ; Microsoft VisualC v14 64bit runtime
                  rva algn_7FF6E345C622,\
                  rva stru_7FF6E346A334>
align 800h
_pdata ends

; Section 5. (virtual address 00043000)
; Virtual size                  : 00000100 (    256.)
; Section size in file          : 00000200 (    512.)
; Offset to raw data for section: 0003F600
; Flags C0000040: Data Readable Writable
; Alignment     : default

; Segment type: Pure data
; Segment permissions: Read/Write
_fptable segment para public 'DATA' use64
assume cs:_fptable
;org 7FF6E3473000h
qword_7FF6E3473000 dq 0
qword_7FF6E3473008 dq 0
qword_7FF6E3473010 dq 0
qword_7FF6E3473018 dq 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E3473028 dq 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E3473050 dq 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E3473068 dq 0
qword_7FF6E3473070 dq 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E3473088 dq 0
qword_7FF6E3473090 dq 0
qword_7FF6E3473098 dq 0
qword_7FF6E34730A0 dq 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
qword_7FF6E34730D0 dq 0
align 1000h
_fptable ends


end start
